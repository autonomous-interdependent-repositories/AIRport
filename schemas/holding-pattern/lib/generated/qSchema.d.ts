import { QSchema as AirportQSchema } from '@airport/air-control';
import { DbSchema } from '@airport/ground-control';
import { QActor } from './infrastructure/qactor';
import { QActorApplication } from './infrastructure/qactorapplication';
import { QApplication } from './infrastructure/qapplication';
import { QChildRepoRow } from './traditional/qchildreporow';
import { QChildRow } from './traditional/qchildrow';
import { QImmutableRepoRow } from './traditional/qimmutablereporow';
import { QImmutableRow } from './traditional/qimmutablerow';
import { QMutableRepoRow } from './traditional/qmutablereporow';
import { QMutableRow } from './traditional/qmutablerow';
import { QOperationHistory } from './history/qoperationhistory';
import { QRecordHistory } from './history/qrecordhistory';
import { QRecordHistoryNewValue } from './history/qrecordhistorynewvalue';
import { QRecordHistoryOldValue } from './history/qrecordhistoryoldvalue';
import { QReferenceRow } from './traditional/qreferencerow';
import { QRepoTransHistoryChangedRepositoryActor } from './history/qrepotranshistorychangedrepositoryactor';
import { QRepository } from './repository/qrepository';
import { QRepositoryActor } from './repository/qrepositoryactor';
import { QRepositoryApplication } from './repository/qrepositoryapplication';
import { QRepositoryEntity } from './repository/qrepositoryentity';
import { QRepositorySchema } from './repository/qrepositoryschema';
import { QRepositoryTransactionHistory } from './history/qrepositorytransactionhistory';
import { QStageable } from './infrastructure/qstageable';
import { QTransactionHistory } from './history/qtransactionhistory';
import { IBaseActorDuo, IBaseActorApplicationDuo, IBaseApplicationDuo, IBaseChildRepoRowDuo, IBaseChildRowDuo, IBaseImmutableRepoRowDuo, IBaseImmutableRowDuo, IBaseMutableRepoRowDuo, IBaseMutableRowDuo, IBaseOperationHistoryDuo, IBaseRecordHistoryDuo, IBaseRecordHistoryNewValueDuo, IBaseRecordHistoryOldValueDuo, IBaseReferenceRowDuo, IBaseRepoTransHistoryChangedRepositoryActorDuo, IBaseRepositoryDuo, IBaseRepositoryActorDuo, IBaseRepositoryApplicationDuo, IBaseRepositoryEntityDuo, IBaseRepositorySchemaDuo, IBaseRepositoryTransactionHistoryDuo, IBaseStageableDuo, IBaseTransactionHistoryDuo } from './baseDuos';
import { IBaseActorDao, IBaseActorApplicationDao, IBaseApplicationDao, IBaseChildRepoRowDao, IBaseChildRowDao, IBaseImmutableRepoRowDao, IBaseImmutableRowDao, IBaseMutableRepoRowDao, IBaseMutableRowDao, IBaseOperationHistoryDao, IBaseRecordHistoryDao, IBaseRecordHistoryNewValueDao, IBaseRecordHistoryOldValueDao, IBaseReferenceRowDao, IBaseRepoTransHistoryChangedRepositoryActorDao, IBaseRepositoryDao, IBaseRepositoryActorDao, IBaseRepositoryApplicationDao, IBaseRepositoryEntityDao, IBaseRepositorySchemaDao, IBaseRepositoryTransactionHistoryDao, IBaseStageableDao, IBaseTransactionHistoryDao } from './baseDaos';
export interface LocalQSchema extends AirportQSchema {
    db: DbSchema;
    duo: {
        Actor: IBaseActorDuo;
        ActorApplication: IBaseActorApplicationDuo;
        Application: IBaseApplicationDuo;
        ChildRepoRow: IBaseChildRepoRowDuo;
        ChildRow: IBaseChildRowDuo;
        ImmutableRepoRow: IBaseImmutableRepoRowDuo;
        ImmutableRow: IBaseImmutableRowDuo;
        MutableRepoRow: IBaseMutableRepoRowDuo;
        MutableRow: IBaseMutableRowDuo;
        OperationHistory: IBaseOperationHistoryDuo;
        RecordHistory: IBaseRecordHistoryDuo;
        RecordHistoryNewValue: IBaseRecordHistoryNewValueDuo;
        RecordHistoryOldValue: IBaseRecordHistoryOldValueDuo;
        ReferenceRow: IBaseReferenceRowDuo;
        RepoTransHistoryChangedRepositoryActor: IBaseRepoTransHistoryChangedRepositoryActorDuo;
        Repository: IBaseRepositoryDuo;
        RepositoryActor: IBaseRepositoryActorDuo;
        RepositoryApplication: IBaseRepositoryApplicationDuo;
        RepositoryEntity: IBaseRepositoryEntityDuo;
        RepositorySchema: IBaseRepositorySchemaDuo;
        RepositoryTransactionHistory: IBaseRepositoryTransactionHistoryDuo;
        Stageable: IBaseStageableDuo;
        TransactionHistory: IBaseTransactionHistoryDuo;
    };
    dao: {
        Actor: IBaseActorDao;
        ActorApplication: IBaseActorApplicationDao;
        Application: IBaseApplicationDao;
        ChildRepoRow: IBaseChildRepoRowDao;
        ChildRow: IBaseChildRowDao;
        ImmutableRepoRow: IBaseImmutableRepoRowDao;
        ImmutableRow: IBaseImmutableRowDao;
        MutableRepoRow: IBaseMutableRepoRowDao;
        MutableRow: IBaseMutableRowDao;
        OperationHistory: IBaseOperationHistoryDao;
        RecordHistory: IBaseRecordHistoryDao;
        RecordHistoryNewValue: IBaseRecordHistoryNewValueDao;
        RecordHistoryOldValue: IBaseRecordHistoryOldValueDao;
        ReferenceRow: IBaseReferenceRowDao;
        RepoTransHistoryChangedRepositoryActor: IBaseRepoTransHistoryChangedRepositoryActorDao;
        Repository: IBaseRepositoryDao;
        RepositoryActor: IBaseRepositoryActorDao;
        RepositoryApplication: IBaseRepositoryApplicationDao;
        RepositoryEntity: IBaseRepositoryEntityDao;
        RepositorySchema: IBaseRepositorySchemaDao;
        RepositoryTransactionHistory: IBaseRepositoryTransactionHistoryDao;
        Stageable: IBaseStageableDao;
        TransactionHistory: IBaseTransactionHistoryDao;
    };
    Actor: QActor;
    ActorApplication: QActorApplication;
    Application: QApplication;
    ChildRepoRow: QChildRepoRow;
    ChildRow: QChildRow;
    ImmutableRepoRow: QImmutableRepoRow;
    ImmutableRow: QImmutableRow;
    MutableRepoRow: QMutableRepoRow;
    MutableRow: QMutableRow;
    OperationHistory: QOperationHistory;
    RecordHistory: QRecordHistory;
    RecordHistoryNewValue: QRecordHistoryNewValue;
    RecordHistoryOldValue: QRecordHistoryOldValue;
    ReferenceRow: QReferenceRow;
    RepoTransHistoryChangedRepositoryActor: QRepoTransHistoryChangedRepositoryActor;
    Repository: QRepository;
    RepositoryActor: QRepositoryActor;
    RepositoryApplication: QRepositoryApplication;
    RepositoryEntity: QRepositoryEntity;
    RepositorySchema: QRepositorySchema;
    RepositoryTransactionHistory: QRepositoryTransactionHistory;
    Stageable: QStageable;
    TransactionHistory: QTransactionHistory;
}
export declare const Q_SCHEMA: LocalQSchema;
export declare const Q: LocalQSchema;
