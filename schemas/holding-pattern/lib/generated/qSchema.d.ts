import { QSchema as AirportQSchema } from '@airport/air-control';
import { DbSchema } from '@airport/ground-control';
import { QAbstractRepositoryEntity } from './repository/qabstractrepositoryentity';
import { QActor } from './infrastructure/qactor';
import { QActorApplication } from './infrastructure/qactorapplication';
import { QApplication } from './infrastructure/qapplication';
import { QOperationHistory } from './history/qoperationhistory';
import { QRecordHistory } from './history/qrecordhistory';
import { QRecordHistoryNewValue } from './history/qrecordhistorynewvalue';
import { QRecordHistoryOldValue } from './history/qrecordhistoryoldvalue';
import { QRepoTransHistoryChangedRepositoryActor } from './history/qrepotranshistorychangedrepositoryactor';
import { QRepository } from './repository/qrepository';
import { QRepositoryActor } from './repository/qrepositoryactor';
import { QRepositoryApplication } from './repository/qrepositoryapplication';
import { QRepositorySchema } from './repository/qrepositoryschema';
import { QRepositoryTransactionHistory } from './history/qrepositorytransactionhistory';
import { QTerminal } from './infrastructure/qterminal';
import { QTransactionHistory } from './history/qtransactionhistory';
import { QUser } from './infrastructure/quser';
import { IBaseAbstractRepositoryEntityDmo, IBaseActorDmo, IBaseActorApplicationDmo, IBaseApplicationDmo, IBaseOperationHistoryDmo, IBaseRecordHistoryDmo, IBaseRecordHistoryNewValueDmo, IBaseRecordHistoryOldValueDmo, IBaseRepoTransHistoryChangedRepositoryActorDmo, IBaseRepositoryDmo, IBaseRepositoryActorDmo, IBaseRepositoryApplicationDmo, IBaseRepositorySchemaDmo, IBaseRepositoryTransactionHistoryDmo, IBaseTerminalDmo, IBaseTransactionHistoryDmo, IBaseUserDmo } from './baseDmos';
import { IBaseAbstractRepositoryEntityDao, IBaseActorDao, IBaseActorApplicationDao, IBaseApplicationDao, IBaseOperationHistoryDao, IBaseRecordHistoryDao, IBaseRecordHistoryNewValueDao, IBaseRecordHistoryOldValueDao, IBaseRepoTransHistoryChangedRepositoryActorDao, IBaseRepositoryDao, IBaseRepositoryActorDao, IBaseRepositoryApplicationDao, IBaseRepositorySchemaDao, IBaseRepositoryTransactionHistoryDao, IBaseTerminalDao, IBaseTransactionHistoryDao, IBaseUserDao } from './baseDaos';
export interface LocalQSchema extends AirportQSchema {
    db: DbSchema;
    dmo: {
        AbstractRepositoryEntity: IBaseAbstractRepositoryEntityDmo;
        Actor: IBaseActorDmo;
        ActorApplication: IBaseActorApplicationDmo;
        Application: IBaseApplicationDmo;
        OperationHistory: IBaseOperationHistoryDmo;
        RecordHistory: IBaseRecordHistoryDmo;
        RecordHistoryNewValue: IBaseRecordHistoryNewValueDmo;
        RecordHistoryOldValue: IBaseRecordHistoryOldValueDmo;
        RepoTransHistoryChangedRepositoryActor: IBaseRepoTransHistoryChangedRepositoryActorDmo;
        Repository: IBaseRepositoryDmo;
        RepositoryActor: IBaseRepositoryActorDmo;
        RepositoryApplication: IBaseRepositoryApplicationDmo;
        RepositorySchema: IBaseRepositorySchemaDmo;
        RepositoryTransactionHistory: IBaseRepositoryTransactionHistoryDmo;
        Terminal: IBaseTerminalDmo;
        TransactionHistory: IBaseTransactionHistoryDmo;
        User: IBaseUserDmo;
    };
    dao: {
        AbstractRepositoryEntity: IBaseAbstractRepositoryEntityDao;
        Actor: IBaseActorDao;
        ActorApplication: IBaseActorApplicationDao;
        Application: IBaseApplicationDao;
        OperationHistory: IBaseOperationHistoryDao;
        RecordHistory: IBaseRecordHistoryDao;
        RecordHistoryNewValue: IBaseRecordHistoryNewValueDao;
        RecordHistoryOldValue: IBaseRecordHistoryOldValueDao;
        RepoTransHistoryChangedRepositoryActor: IBaseRepoTransHistoryChangedRepositoryActorDao;
        Repository: IBaseRepositoryDao;
        RepositoryActor: IBaseRepositoryActorDao;
        RepositoryApplication: IBaseRepositoryApplicationDao;
        RepositorySchema: IBaseRepositorySchemaDao;
        RepositoryTransactionHistory: IBaseRepositoryTransactionHistoryDao;
        Terminal: IBaseTerminalDao;
        TransactionHistory: IBaseTransactionHistoryDao;
        User: IBaseUserDao;
    };
    AbstractRepositoryEntity: QAbstractRepositoryEntity;
    Actor: QActor;
    ActorApplication: QActorApplication;
    Application: QApplication;
    OperationHistory: QOperationHistory;
    RecordHistory: QRecordHistory;
    RecordHistoryNewValue: QRecordHistoryNewValue;
    RecordHistoryOldValue: QRecordHistoryOldValue;
    RepoTransHistoryChangedRepositoryActor: QRepoTransHistoryChangedRepositoryActor;
    Repository: QRepository;
    RepositoryActor: QRepositoryActor;
    RepositoryApplication: QRepositoryApplication;
    RepositorySchema: QRepositorySchema;
    RepositoryTransactionHistory: QRepositoryTransactionHistory;
    Terminal: QTerminal;
    TransactionHistory: QTransactionHistory;
    User: QUser;
}
export declare const Q_SCHEMA: LocalQSchema;
export declare const Q: LocalQSchema;
