{"version":3,"file":"index.js","sources":["../../../../libs/direction-indicator/lib/dependencyInjection/InjectionDomain.js","../../../../libs/direction-indicator/lib/dependencyInjection/Token.js","../../../../libs/direction-indicator/lib/dependencyInjection/InjectionApplication.js","../../../../libs/direction-indicator/lib/Context.js","../../../../libs/direction-indicator/lib/dependencyInjection/Container.js","../../../../libs/direction-indicator/lib/dependencyInjection/ContainerAccessor.js","../../../../libs/direction-indicator/lib/dependencyInjection/decorators.js","../../../../libs/direction-indicator/lib/tokens.js","../../../../libs/direction-indicator/lib/dependencyInjection/ChildContainer.js","../../../../libs/direction-indicator/lib/dependencyInjection/RootContainer.js","../../../../libs/direction-indicator/lib/extend.js","../../../../libs/direction-indicator/lib/index.js","../../../../libs/direction-indicator/lib/dependencyInjection/InversionOfControl.js","../../../../apis/aviation-communication/lib/qApplicatonStubs.js","../../../../apis/aviation-communication/lib/AirEntityUtils.js","../../../../apis/aviation-communication/lib/tokens.js","../../../../ORMs/tarmaq/entity/lib/definition/ColumnDecorators.js","../../../../schemas/airspace/lib/ddl/application/Domain.js","../../../../ORMs/tarmaq/entity/lib/implementation/ColumnDecorators.js","../../../../ORMs/tarmaq/entity/lib/implementation/EntityDecorators.js","../../../../schemas/airspace/lib/ddl/application/Application.js","../../../../schemas/airspace/lib/ddl/application/VersionedApplicationObject.js","../../../../schemas/airspace/lib/ddl/application/ApplicationColumn.js","../../../../schemas/airspace/lib/ddl/application/ApplicationCurrentVersion.js","../../../../schemas/airspace/lib/ddl/application/ApplicationEntity.js","../../../../schemas/airspace/lib/ddl/application/ApplicationOperation.js","../../../../schemas/airspace/lib/ddl/application/ApplicationProperty.js","../../../../schemas/airspace/lib/ddl/application/ApplicationPropertyColumn.js","../../../../schemas/airspace/lib/ddl/application/ApplicationReference.js","../../../../schemas/airspace/lib/ddl/application/ApplicationRelation.js","../../../../schemas/airspace/lib/ddl/application/ApplicationRelationColumn.js","../../../../schemas/airspace/lib/ddl/application/ApplicationVersion.js","../../../../schemas/airspace/lib/generated/qApplication.js","../../../../apis/ground-control/lib/definition/core/entity/Dictionary.js","../../../../apis/ground-control/lib/definition/core/entity/Relation.js","../../../../apis/ground-control/lib/definition/core/field/FieldInOrderBy.js","../../../../apis/ground-control/lib/definition/core/field/Functions.js","../../../../apis/ground-control/lib/definition/core/field/JSONClause.js","../../../../apis/ground-control/lib/definition/core/operation/EntityStateManager.js","../../../../apis/ground-control/lib/definition/core/operation/Operation.js","../../../../apis/ground-control/lib/definition/data/sync/TransactionType.js","../../../../apis/ground-control/lib/definition/data/ChangeType.js","../../../../apis/ground-control/lib/definition/data/DistributionStrategy.js","../../../../apis/ground-control/lib/definition/data/IStoreOperator.js","../../../../apis/ground-control/lib/definition/data/PatformType.js","../../../../apis/ground-control/lib/definition/data/storeInfo.js","../../../../apis/ground-control/lib/definition/query/facade/Query.js","../../../../apis/ground-control/lib/definition/query/QueryResultType.js","../../../../apis/ground-control/lib/definition/application/Operation.js","../../../../apis/ground-control/lib/definition/application/ApplicationStatus.js","../../../../apis/ground-control/lib/implementation/query/TableMap.js","../../../../apis/ground-control/lib/implementation/query/ColumnMap.js","../../../../apis/ground-control/lib/implementation/query/DbApplicationUtils.js","../../../../apis/ground-control/lib/implementation/query/ApplicationMap.js","../../../../apis/ground-control/lib/implementation/sync/SyncColumnMap.js","../../../../apis/ground-control/lib/implementation/sync/SyncTableMap.js","../../../../apis/ground-control/lib/implementation/sync/SyncApplicationMap.js","../../../../apis/ground-control/lib/implementation/sync/SyncStatus.js","../../../../apis/ground-control/lib/implementation/SequenceGenerator.js","../../../../apis/ground-control/lib/implementation/utils/DatastructureUtils.js","../../../../apis/ground-control/lib/tokens.js","../../../../ORMs/tarmaq/query/lib/definition/query/facade/Query.js","../../../../ORMs/tarmaq/query/lib/implementation/core/entity/Aliases.js","../../../../ORMs/tarmaq/query/lib/library.js","../../../../ORMs/tarmaq/query/lib/tokens.js","../../../../ORMs/tarmaq/query/lib/implementation/core/Joins.js","../../../../ORMs/tarmaq/query/lib/implementation/core/entity/Entity.js","../../../../ORMs/tarmaq/query/lib/implementation/core/entity/JoinTreeNode.js","../../../../ORMs/tarmaq/query/lib/implementation/core/operation/Operation.js","../../../../ORMs/tarmaq/query/lib/implementation/core/operation/LogicalOperation.js","../../../../ORMs/tarmaq/query/lib/implementation/core/entity/Relation.js","../../../../ORMs/tarmaq/query/lib/implementation/core/entity/OneToManyRelation.js","../../../../ORMs/tarmaq/query/lib/implementation/core/entity/Tree.js","../../../../ORMs/tarmaq/query/lib/implementation/core/operation/BooleanOperation.js","../../../../ORMs/tarmaq/query/lib/implementation/core/field/FieldInOrderBy.js","../../../../ORMs/tarmaq/query/lib/implementation/core/field/Field.js","../../../../ORMs/tarmaq/query/lib/implementation/core/field/OperableField.js","../../../../ORMs/tarmaq/query/lib/implementation/core/field/BooleanField.js","../../../../ORMs/tarmaq/query/lib/implementation/core/operation/DateOperation.js","../../../../ORMs/tarmaq/query/lib/implementation/core/field/DateField.js","../../../../ORMs/tarmaq/query/lib/implementation/core/operation/NumberOperation.js","../../../../ORMs/tarmaq/query/lib/implementation/core/field/NumberField.js","../../../../ORMs/tarmaq/query/lib/implementation/core/operation/StringOperation.js","../../../../ORMs/tarmaq/query/lib/implementation/core/field/StringField.js","../../../../ORMs/tarmaq/query/lib/implementation/core/field/NullFunction.js","../../../../ORMs/tarmaq/query/lib/implementation/core/field/WrapperFunctions.js","../../../../ORMs/tarmaq/query/lib/implementation/core/field/Functions.js","../../../../ORMs/tarmaq/query/lib/implementation/core/operation/UntypedOperation.js","../../../../ORMs/tarmaq/query/lib/implementation/core/field/UntypedField.js","../../../../ORMs/tarmaq/query/lib/implementation/query/facade/AbstractQuery.js","../../../../ORMs/tarmaq/query/lib/implementation/query/facade/AbstractInsertValues.js","../../../../ORMs/tarmaq/query/lib/implementation/query/facade/AbstractUpdate.js","../../../../ORMs/tarmaq/query/lib/implementation/query/facade/Delete.js","../../../../ORMs/tarmaq/query/lib/implementation/query/facade/NonEntityQuery.js","../../../../ORMs/tarmaq/query/lib/implementation/query/facade/MappableQuery.js","../../../../ORMs/tarmaq/query/lib/implementation/query/facade/EntityQuery.js","../../../../ORMs/tarmaq/query/lib/implementation/query/facade/FieldQuery.js","../../../../ORMs/tarmaq/query/lib/implementation/query/facade/InsertColumnValues.js","../../../../ORMs/tarmaq/query/lib/implementation/query/facade/InsertValues.js","../../../../ORMs/tarmaq/query/lib/implementation/query/facade/SheetQuery.js","../../../../ORMs/tarmaq/query/lib/implementation/query/facade/TreeQuery.js","../../../../ORMs/tarmaq/query/lib/implementation/query/facade/UpdateColumns.js","../../../../ORMs/tarmaq/query/lib/implementation/query/facade/UpdateProperties.js","../../../../ORMs/tarmaq/dao/lib/implementation/query/Lookup.js","../../../../ORMs/tarmaq/dao/lib/implementation/query/EntityLookup.js","../../../../ORMs/tarmaq/dao/lib/implementation/query/EntityFind.js","../../../../ORMs/tarmaq/dao/lib/implementation/query/EntityFindOne.js","../../../../common/temp/node_modules/.pnpm/tslib@2.1.0/node_modules/tslib/tslib.es6.js","../../../../common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/util/isFunction.js","../../../../common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/util/createErrorClass.js","../../../../common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/util/UnsubscriptionError.js","../../../../common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/util/arrRemove.js","../../../../common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/Subscription.js","../../../../common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/config.js","../../../../common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/scheduler/timeoutProvider.js","../../../../common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/util/reportUnhandledError.js","../../../../common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/util/noop.js","../../../../common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/util/errorContext.js","../../../../common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/Subscriber.js","../../../../common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/symbol/observable.js","../../../../common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/util/identity.js","../../../../common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/util/pipe.js","../../../../common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/Observable.js","../../../../common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/util/lift.js","../../../../common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js","../../../../common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/util/ObjectUnsubscribedError.js","../../../../common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/Subject.js","../../../../common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/BehaviorSubject.js","../../../../common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/util/isArrayLike.js","../../../../common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/util/isPromise.js","../../../../common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/util/isInteropObservable.js","../../../../common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/util/isAsyncIterable.js","../../../../common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/util/throwUnobservableError.js","../../../../common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/symbol/iterator.js","../../../../common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/util/isIterable.js","../../../../common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/util/isReadableStreamLike.js","../../../../common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js","../../../../common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/util/executeSchedule.js","../../../../common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/operators/observeOn.js","../../../../common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/operators/subscribeOn.js","../../../../common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/scheduled/scheduleAsyncIterable.js","../../../../common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/scheduled/scheduled.js","../../../../common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/scheduled/scheduleObservable.js","../../../../common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/scheduled/scheduleArray.js","../../../../common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/scheduled/schedulePromise.js","../../../../common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/scheduled/scheduleIterable.js","../../../../common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/scheduled/scheduleReadableStreamLike.js","../../../../common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/observable/from.js","../../../../common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/operators/map.js","../../../../common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js","../../../../ORMs/tarmaq/dao/lib/implementation/query/NonEntityFind.js","../../../../ORMs/tarmaq/dao/lib/implementation/query/NonEntityFindOne.js","../../../../ORMs/tarmaq/dao/lib/implementation/query/NonEntitySearch.js","../../../../ORMs/tarmaq/dao/lib/implementation/query/NonEntitySearchOne.js","../../../../ORMs/tarmaq/dao/lib/implementation/EntityDatabaseFacade.js","../../../../ORMs/tarmaq/dao/lib/implementation/FieldsSelect.js","../../../../ORMs/tarmaq/dao/lib/implementation/Dao.js","../../../../ORMs/tarmaq/dao/lib/implementation/DaoQueryDecorators.js","../../../../ORMs/tarmaq/dao/lib/library.js","../../../../ORMs/tarmaq/dao/lib/tokens.js","../../../../ORMs/tarmaq/dao/lib/index.js","../../../../schemas/airspace/lib/generated/baseDaos.js","../../../../schemas/airspace/lib/dao/DomainDao.js","../../../../schemas/airspace/lib/dao/ApplicationColumnDao.js","../../../../schemas/airspace/lib/dao/ApplicationDao.js","../../../../schemas/airspace/lib/dao/ApplicationEntityDao.js","../../../../schemas/airspace/lib/dao/ApplicationPropertyColumnDao.js","../../../../schemas/airspace/lib/dao/ApplicationPropertyDao.js","../../../../schemas/airspace/lib/dao/ApplicationReferenceDao.js","../../../../schemas/airspace/lib/dao/ApplicationRelationColumnDao.js","../../../../schemas/airspace/lib/dao/ApplicationRelationDao.js","../../../../schemas/airspace/lib/dao/ApplicationVersionDao.js","../../../../apis/air-traffic-control/lib/implementation/utils/ApplicationUtils.js","../../../../apis/air-traffic-control/lib/implementation/utils/EntityUtils.js","../../../../apis/air-traffic-control/lib/definition/AirportDatabase.js","../../../../apis/air-traffic-control/lib/implementation/utils/FieldUtils.js","../../../../apis/air-traffic-control/lib/implementation/utils/QMetadataUtils.js","../../../../apis/air-traffic-control/lib/implementation/utils/qApplicationBuilderUtils.js","../../../../apis/air-traffic-control/lib/implementation/utils/QueryUtils.js","../../../../apis/air-traffic-control/lib/implementation/databaseState.js","../../../../apis/air-traffic-control/lib/implementation/DatabaseStore.js","../../../../apis/air-traffic-control/lib/implementation/RelationManager.js","../../../../apis/air-traffic-control/lib/implementation/SystemWideOperationIds.js","../../../../apis/air-traffic-control/lib/implementation/Utils.js","../../../../apis/air-traffic-control/lib/library.js","../../../../apis/air-traffic-control/lib/core-tokens.js","../../../../apis/air-traffic-control/lib/tokens.js","../../../../apis/air-traffic-control/lib/index.js","../../../../schemas/airspace/lib/to_be_generated/common-tokens.js","../../../../schemas/airspace/lib/to_be_generated/runtime-tokens.js","../../../../schemas/holding-pattern/lib/to_be_generated/common-tokens.js","../../../../schemas/holding-pattern/lib/core/core-tokens.js","../../../../schemas/holding-pattern/lib/core/UpdateState.js","../../../../schemas/holding-pattern/lib/ddl/history/OperationHistory.js","../../../../schemas/holding-pattern/lib/ddl/history/RecordHistory.js","../../../../schemas/holding-pattern/lib/ddl/history/RecordHistoryNewValue.js","../../../../schemas/holding-pattern/lib/ddl/history/RecordHistoryOldValue.js","../../../../schemas/holding-pattern/lib/ddl/history/RepositoryTransactionType.js","../../../../schemas/holding-pattern/lib/ddl/history/RepositoryTransactionHistory.js","../../../../schemas/holding-pattern/lib/ddl/history/TransactionHistory.js","../../../../schemas/holding-pattern/lib/ddl/infrastructure/Actor.js","../../../../schemas/holding-pattern/lib/ddl/repository/AirEntity.js","../../../../schemas/holding-pattern/lib/ddl/repository/Repository.js","../../../../schemas/holding-pattern/lib/ddl/repository/RepositoryApplication.js","../../../../schemas/holding-pattern/lib/ddl/repository/RepositoryClient.js","../../../../schemas/holding-pattern/lib/ddl/repository/RepositoryDatabase.js","../../../../schemas/holding-pattern/lib/ddl/repository/RepositoryTerminal.js","../../../../schemas/holding-pattern/lib/ddl/repository/RepositoryType.js","../../../../schemas/holding-pattern/lib/generated/qApplication.js","../../../../schemas/holding-pattern/lib/generated/baseDaos.js","../../../../schemas/holding-pattern/lib/dao/history/RecordHistoryNewValueDao.js","../../../../schemas/holding-pattern/lib/dao/history/RecordHistoryOldValueDao.js","../../../../schemas/holding-pattern/lib/dao/history/RepositoryTransactionHistoryDao.js","../../../../schemas/holding-pattern/lib/dao/infrastructure/ActorDao.js","../../../../schemas/holding-pattern/lib/dao/repository/RepositoryDao.js","../../../../schemas/holding-pattern/lib/duo/history/OperationHistoryDuo.js","../../../../schemas/holding-pattern/lib/duo/history/RecordHistoryDuo.js","../../../../schemas/holding-pattern/lib/duo/history/RecordHistoryNewValueDuo.js","../../../../schemas/holding-pattern/lib/duo/history/RecordHistoryOldValueDuo.js","../../../../common/temp/node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/rng.js","../../../../common/temp/node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/regex.js","../../../../common/temp/node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/validate.js","../../../../common/temp/node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/stringify.js","../../../../common/temp/node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/v4.js","../../../../schemas/holding-pattern/lib/duo/history/RepositoryTransactionHistoryDuo.js","../../../../schemas/holding-pattern/lib/duo/history/TransactionHistoryDuo.js","../../../../apis/check-in/lib/api/ApiOperation.js","../../../../apis/check-in/lib/tokens.js","../../../../schemas/holding-pattern/lib/api/repository/RepositoryApi.js","../../../../apis/check-in/lib/api/Api.js","../../../../schemas/holding-pattern/lib/to_be_generated/runtime-tokens.js","../../../../apis/terminal-map/lib/metadata/AirEntityType.js","../../../../apis/terminal-map/lib/store/theState.js","../../../../apis/ground-control/lib/definition/ITransactionalConnector.js","../../../../apis/terminal-map/lib/store/TerminalState.js","../../../../apis/terminal-map/lib/store/TerminalStore.js","../../../../apis/terminal-map/lib/store/user/theUserState.js","../../../../apis/terminal-map/lib/store/user/UserState.js","../../../../apis/terminal-map/lib/store/user/UserStore.js","../../../../apis/apron/lib/isolate/IsolateMessage.js","../../../../apis/apron/lib/state/ApplicationState.js","../../../../apis/apron/lib/state/theApplicationState.js","../../../../apis/apron/lib/state/ApplicationStore.js","../../../../apis/apron/lib/state/Selector.js","../../../../apis/apron/lib/tokens.js","../../../../apis/terminal-map/lib/tokens.js","../../../../engines/terminal/lib/core/repository/RepositoryLoader.js","../../../../engines/terminal/lib/core/repository/RepositoryManager.js","../../../../schemas/travel-document-checkpoint/lib/to_be_generated/common-tokens.js","../../../../schemas/travel-document-checkpoint/lib/generated/api/UserAccountApi.js","../../../../libs/autopilot/lib/LocalAPIClient.js","../../../../libs/autopilot/lib/api/AutopilotApiLoader.js","../../../../libs/pressurization/lib/OperationSerializer.js","../../../../libs/pressurization/lib/SerializationStateManager.js","../../../../libs/pressurization/lib/QueryResultsDeserializer.js","../../../../libs/pressurization/lib/tokens.js","../../../../libs/autopilot/lib/UiStateManager.js","../../../../libs/autopilot/lib/tokens.js","../../../../libs/autopilot/lib/index.js","../../../../schemas/travel-document-checkpoint/lib/generated/api/api.js","../../../../schemas/travel-document-checkpoint/lib/ddl/client/Client.js","../../../../schemas/travel-document-checkpoint/lib/ddl/client/ClientType.js","../../../../schemas/travel-document-checkpoint/lib/ddl/database/Database.js","../../../../schemas/travel-document-checkpoint/lib/ddl/database/DatabaseType.js","../../../../schemas/travel-document-checkpoint/lib/ddl/locality/Continent.js","../../../../schemas/travel-document-checkpoint/lib/ddl/locality/Country.js","../../../../schemas/travel-document-checkpoint/lib/ddl/locality/MetroArea.js","../../../../schemas/travel-document-checkpoint/lib/ddl/locality/MetroAreaState.js","../../../../schemas/travel-document-checkpoint/lib/ddl/locality/State.js","../../../../schemas/travel-document-checkpoint/lib/ddl/terminal/Terminal.js","../../../../schemas/travel-document-checkpoint/lib/ddl/terminal/TerminalType.js","../../../../schemas/travel-document-checkpoint/lib/ddl/type/Classification.js","../../../../schemas/travel-document-checkpoint/lib/ddl/type/Type.js","../../../../schemas/travel-document-checkpoint/lib/ddl/type/TypeClassification.js","../../../../schemas/travel-document-checkpoint/lib/ddl/UserAccount.js","../../../../schemas/travel-document-checkpoint/lib/generated/qApplication.js","../../../../schemas/travel-document-checkpoint/lib/to_be_generated/api-tokens.js","../../../../engines/terminal/lib/data/InternalRecordManager.js","../../../../engines/terminal/lib/net/InternalTransactionalConnector.js","../../../../engines/terminal/lib/net/OnlineManager.js","../../../../engines/terminal/lib/net/TransactionalReceiver.js","../../../../engines/terminal/lib/net/TransactionalServer.js","../../../../engines/terminal/lib/orchestration/AbstractMutationManager.js","../../../../schemas/holding-pattern/lib/generated/api/RepositoryApi.js","../../../../schemas/holding-pattern/lib/generated/api/api.js","../../../../schemas/holding-pattern/lib/to_be_generated/api-tokens.js","../../../../schemas/airport-code/lib/generated/application.js","../../../../libs/blueprint/lib/index.js","../../../../schemas/travel-document-checkpoint/lib/generated/application.js","../../../../schemas/airspace/lib/generated/application.js","../../../../schemas/holding-pattern/lib/generated/application.js","../../../../schemas/layover/lib/generated/application.js","../../../../engines/terminal/lib/orchestration/DatabaseManager.js","../../../../engines/terminal/lib/orchestration/DeleteManager.js","../../../../engines/terminal/lib/orchestration/HistoryManager.js","../../../../engines/terminal/lib/orchestration/InsertManager.js","../../../../engines/terminal/lib/orchestration/QueryManager.js","../../../../engines/terminal/lib/orchestration/TransactionManager.js","../../../../engines/terminal/lib/orchestration/UpdateManager.js","../../../../engines/terminal/lib/processing/CascadeGraphVerifier.js","../../../../engines/terminal/lib/processing/DependencyGraphResolver.js","../../../../engines/terminal/lib/processing/EntityGraphReconstructor.js","../../../../engines/terminal/lib/processing/OperationManager.js","../../../../engines/terminal/lib/processing/StructuralEntityValidator.js","../../../../engines/terminal/lib/serialize/QueryParameterDeserializer.js","../../../../engines/terminal/lib/serialize/QueryResultsSerializer.js","../../../../engines/terminal/lib/shared/PlatformUtils.js","../../../../apis/arrivals-n-departures/lib/tokens.js","../../../../libs/flight-number/lib/ActiveQueries.js","../../../../libs/flight-number/lib/ObservableQueryAdapter.js","../../../../libs/flight-number/lib/tokens.js","../../../../libs/fuel-hydrant-system/lib/orderBy/EntityOrderByParser.js","../../../../libs/fuel-hydrant-system/lib/orderBy/AbstractEntityOrderByParser.js","../../../../libs/fuel-hydrant-system/lib/orderBy/ExactOrderByParser.js","../../../../libs/fuel-hydrant-system/lib/orderBy/MappedOrderByParser.js","../../../../libs/fuel-hydrant-system/lib/result/entity/GraphMtoMapper.js","../../../../libs/fuel-hydrant-system/lib/result/entity/GraphOtmMapper.js","../../../../libs/fuel-hydrant-system/lib/result/entity/IEntityResultParser.js","../../../../libs/fuel-hydrant-system/lib/result/entity/EntityGraphResultParser.js","../../../../libs/fuel-hydrant-system/lib/result/TreeResultParser.js","../../../../libs/fuel-hydrant-system/lib/result/entity/EntityTreeResultParser.js","../../../../libs/fuel-hydrant-system/lib/result/entity/ObjectResultParserFactory.js","../../../../libs/fuel-hydrant-system/lib/result/TreeQueryResultParser.js","../../../../libs/fuel-hydrant-system/lib/sql/core/SQLWhereBase.js","../../../../libs/fuel-hydrant-system/lib/sql/core/SQLNoJoinQuery.js","../../../../libs/fuel-hydrant-system/lib/sql/core/SQLDelete.js","../../../../libs/fuel-hydrant-system/lib/sql/core/SQLInsertValues.js","../../../../libs/fuel-hydrant-system/lib/sql/core/SQLQuery.js","../../../../libs/fuel-hydrant-system/lib/sql/core/SQLUpdate.js","../../../../libs/fuel-hydrant-system/lib/sql/SqlFunctionField.js","../../../../libs/fuel-hydrant-system/lib/sql/NonEntitySQLQuery.js","../../../../libs/fuel-hydrant-system/lib/sql/FieldSQLQuery.js","../../../../libs/fuel-hydrant-system/lib/sql/TreeSQLQuery.js","../../../../libs/fuel-hydrant-system/lib/sql/core/SubStatementSqlGenerator.js","../../../../libs/fuel-hydrant-system/lib/sql/EntitySQLQuery.js","../../../../libs/fuel-hydrant-system/lib/sql/SheetSQLQuery.js","../../../../libs/fuel-hydrant-system/lib/store/IdGenerator.js","../../../../libs/fuel-hydrant-system/lib/store/RecordState.js","../../../../libs/fuel-hydrant-system/lib/store/SqlDriver.js","../../../../libs/fuel-hydrant-system/lib/validation/Validator.js","../../../../libs/fuel-hydrant-system/lib/tokens.js","../../../../libs/ground-transport/lib/adapters/DebugSynchronizationAdapter.js","../../../../libs/ground-transport/lib/adapters/SynchronizationAdapterLoader.js","../../../../libs/ground-transport/lib/synchronization/in/checker/SyncInActorChecker.js","../../../../libs/ground-transport/lib/synchronization/in/checker/SyncInApplicationChecker.js","../../../../libs/ground-transport/lib/synchronization/in/checker/SyncInApplicationVersionChecker.js","../../../../libs/ground-transport/lib/synchronization/in/checker/SyncInChecker.js","../../../../libs/ground-transport/lib/synchronization/in/checker/SyncInDataChecker.js","../../../../libs/ground-transport/lib/synchronization/in/checker/SyncInRepositoryChecker.js","../../../../libs/ground-transport/lib/synchronization/in/checker/SyncInTerminalChecker.js","../../../../libs/ground-transport/lib/synchronization/in/checker/SyncInUserAccountChecker.js","../../../../schemas/layover/lib/ddl/conflict/SynchronizationConflict.js","../../../../schemas/layover/lib/ddl/conflict/SynchronizationConflictType.js","../../../../schemas/layover/lib/ddl/conflict/SynchronizationConflictValues.js","../../../../schemas/layover/lib/ddl/values/DataOrigin.js","../../../../schemas/layover/lib/ddl/values/ApplicationChangeStatus.js","../../../../schemas/layover/lib/ddl/RecordUpdateStage.js","../../../../schemas/layover/lib/generated/qApplication.js","../../../../schemas/layover/lib/generated/baseDaos.js","../../../../schemas/layover/lib/dao/conflict/SynchronizationConflictDao.js","../../../../schemas/layover/lib/dao/conflict/SynchronizationConflictValuesDao.js","../../../../common/temp/node_modules/.pnpm/typedi@0.8.0/node_modules/typedi/error/MissingProvidedServiceTypeError.js","../../../../common/temp/node_modules/.pnpm/typedi@0.8.0/node_modules/typedi/Token.js","../../../../common/temp/node_modules/.pnpm/typedi@0.8.0/node_modules/typedi/error/ServiceNotFoundError.js","../../../../common/temp/node_modules/.pnpm/typedi@0.8.0/node_modules/typedi/ContainerInstance.js","../../../../common/temp/node_modules/.pnpm/typedi@0.8.0/node_modules/typedi/Container.js","../../../../common/temp/node_modules/.pnpm/typedi@0.8.0/node_modules/typedi/decorators/Service.js","../../../../common/temp/node_modules/.pnpm/typedi@0.8.0/node_modules/typedi/error/CannotInjectError.js","../../../../common/temp/node_modules/.pnpm/typedi@0.8.0/node_modules/typedi/decorators/Inject.js","../../../../common/temp/node_modules/.pnpm/typedi@0.8.0/node_modules/typedi/decorators/InjectMany.js","../../../../common/temp/node_modules/.pnpm/typedi@0.8.0/node_modules/typedi/index.js","../../../../schemas/layover/lib/dao/RecordUpdateStageDao.js","../../../../schemas/layover/lib/tokens.js","../../../../libs/ground-transport/lib/synchronization/in/Stage1SyncedInDataProcessor.js","../../../../libs/ground-transport/lib/synchronization/in/Stage2SyncedInDataProcessor.js","../../../../libs/ground-transport/lib/synchronization/in/SynchronizationInManager.js","../../../../libs/ground-transport/lib/synchronization/in/SyncInUtils.js","../../../../libs/ground-transport/lib/synchronization/in/TwoStageSyncedInDataProcessor.js","../../../../libs/ground-transport/lib/synchronization/out/converter/SyncOutDataSerializer.js","../../../../libs/ground-transport/lib/synchronization/out/SynchronizationOutManager.js","../../../../schemas/travel-document-checkpoint/lib/api/UserAccountApi.js","../../../../schemas/travel-document-checkpoint/lib/generated/baseDaos.js","../../../../schemas/travel-document-checkpoint/lib/dao/TerminalDao.js","../../../../schemas/travel-document-checkpoint/lib/dao/UserAccountDao.js","../../../../schemas/travel-document-checkpoint/lib/to_be_generated/runtime-tokens.js","../../../../schemas/travel-document-checkpoint/lib/core/UserAccountManager.js","../../../../schemas/travel-document-checkpoint/lib/core/core-tokens.js","../../../../../AIRway/client/lib/Client.js","../../../../../AIRway/client/lib/tokens.js","../../../../libs/ground-transport/lib/tokens.js","../../../../engines/terminal/lib/core/TerminalSessionManager.js","../../../../engines/terminal/lib/tokens.js","../../../../engines/terminal/lib/index.js","../../../../engines/tower/lib/core/api/ApiRegistry.js","../../../../engines/tower/lib/core/api/ApiValidator.js","../../../../engines/tower/lib/core/api/LocalApiServer.js","../../../../engines/tower/lib/core/api/OperationDeserializer.js","../../../../engines/tower/lib/core/data/EntityCopier.js","../../../../engines/tower/lib/core/data/UpdateCacheManager.js","../../../../engines/tower/lib/core/EntityStateManager.js","../../../../engines/tower/lib/facade/DatabaseFacade.js","../../../../engines/tower/lib/facade/QueryFacade.js","../../../../engines/tower/lib/AirportDatabase.js","../../../../engines/tower/lib/tokens.js","../../../../common/temp/node_modules/.pnpm/broadcast-channel@4.9.0/node_modules/broadcast-channel/dist/lib/util.js","../../../../common/temp/node_modules/.pnpm/@babel/runtime@7.16.7/node_modules/@babel/runtime/helpers/interopRequireDefault.js","../../../../common/temp/node_modules/.pnpm/@babel/runtime@7.16.7/node_modules/@babel/runtime/helpers/typeof.js","../../../../common/temp/node_modules/.pnpm/broadcast-channel@4.9.0/node_modules/broadcast-channel/dist/lib/methods/native.js","../../../../common/temp/node_modules/.pnpm/oblivious-set@1.0.0/node_modules/oblivious-set/dist/es/index.js","../../../../common/temp/node_modules/.pnpm/broadcast-channel@4.9.0/node_modules/broadcast-channel/dist/lib/options.js","../../../../common/temp/node_modules/.pnpm/broadcast-channel@4.9.0/node_modules/broadcast-channel/dist/lib/methods/indexed-db.js","../../../../common/temp/node_modules/.pnpm/broadcast-channel@4.9.0/node_modules/broadcast-channel/dist/lib/methods/localstorage.js","../../../../common/temp/node_modules/.pnpm/broadcast-channel@4.9.0/node_modules/broadcast-channel/dist/lib/methods/simulate.js","../../../../common/temp/node_modules/.pnpm/broadcast-channel@4.9.0/node_modules/broadcast-channel/dist/lib/method-chooser.js","../../../../common/temp/node_modules/.pnpm/broadcast-channel@4.9.0/node_modules/broadcast-channel/dist/lib/broadcast-channel.js","../../../../common/temp/node_modules/.pnpm/unload@2.3.1/node_modules/unload/dist/es/node.js","../../../../common/temp/node_modules/.pnpm/unload@2.3.1/node_modules/unload/dist/es/index.js","../../../../common/temp/node_modules/.pnpm/detect-node@2.1.0/node_modules/detect-node/index.esm.js","../../../../common/temp/node_modules/.pnpm/unload@2.3.1/node_modules/unload/dist/es/browser.js","../../../../common/temp/node_modules/.pnpm/broadcast-channel@4.9.0/node_modules/broadcast-channel/dist/lib/leader-election.js","../../../../common/temp/node_modules/.pnpm/broadcast-channel@4.9.0/node_modules/broadcast-channel/dist/lib/index.js","../../../../common/temp/node_modules/.pnpm/broadcast-channel@4.9.0/node_modules/broadcast-channel/dist/lib/index.es5.js","../../../web-terminal/lib/WebMessageReceiver.js","../../../web-terminal/lib/DomainRetriever.js","../../../../generators/landing/lib/builder/SqlSchemaBuilder.js","../../../../generators/landing/lib/checker/ApplicationChecker.js","../../../../generators/landing/lib/locator/ApplicationLocator.js","../../../../generators/landing/lib/recorder/ApplicationComposer.js","../../../../generators/landing/lib/recorder/ApplicationRecorder.js","../../../../schemas/airport-code/lib/ddl/Sequence.js","../../../../schemas/airport-code/lib/ddl/SystemWideOperationId.js","../../../../schemas/airport-code/lib/ddl/TerminalRun.js","../../../../schemas/airport-code/lib/generated/qApplication.js","../../../../schemas/airport-code/lib/generated/baseDaos.js","../../../../schemas/airport-code/lib/dao/TerminalRunDao.js","../../../../schemas/airport-code/lib/dao/SequenceDao.js","../../../../schemas/airport-code/lib/tokens.js","../../../../generators/takeoff/lib/AirportDatabasePopulator.js","../../../../generators/takeoff/lib/DdlObjectLinker.js","../../../../generators/takeoff/lib/DdlObjectRetriever.js","../../../../generators/takeoff/lib/QueryEntityClassCreator.js","../../../../generators/takeoff/lib/QueryObjectInitializer.js","../../../../generators/takeoff/lib/tokens.js","../../../../generators/landing/lib/ApplicationInitializer.js","../../../../generators/landing/lib/tokens.js","../../../web-terminal/lib/WebApplicationInitializer.js","../../../web-terminal/lib/WebTransactionalReceiver.js","../../../web-terminal/lib/tokens.js","../../../../databases/sequence/lib/SequenceGenerator.js","../../../../databases/sequence/lib/tokens.js","../../../../databases/sqlite/lib/SqLiteDriver.js","../../../../databases/sqlite/lib/SqLiteQueryAdaptor.js","../../../../libs/fuel-hydrant-system/lib/adaptor/SQLQueryAdaptor.js","../../../../databases/sqlite/lib/SqLiteApplicationBuilder.js","../../../../databases/sqlite/lib/tokens.js","../../../../databases/sqljs/lib/SqlJsTransaction.js","../../../../libs/fuel-hydrant-system/lib/store/SqlTransaction.js","../../../../databases/sqljs/lib/SqlJsDriver.js","../../../../databases/sqljs/lib/SqlJsQueryAdaptor.js","../../../../databases/sqljs/lib/tokens.js","../../../web-terminal/lib/index.js","../../src/index.ts","../../src/AIRportApi.ts","../../src/framework.ts","../../../../databases/sqljs/lib/index.js"],"sourcesContent":["import { InjectionApplication } from './InjectionApplication';\nexport class InjectionDomain {\n    constructor(name) {\n        this.name = name;\n        this.applicationMap = {};\n    }\n    app(applicationName) {\n        if (this.applicationMap[applicationName]) {\n            throw new Error(`\r\n\t\t\tApplication already defined.\r\n\t\t\tDomain:      ${this.name}\r\n\t\t\tApplication: ${applicationName}\r\n\t\t\t`);\n        }\n        const application = new InjectionApplication(applicationName, this);\n        this.applicationMap[applicationName] = application;\n        return application;\n    }\n    getApp(applicationName) {\n        return this.applicationMap[applicationName];\n    }\n}\nconst DOMAIN_MAP = {};\nexport function domain(domainName) {\n    if (DOMAIN_MAP[domainName]) {\n        return DOMAIN_MAP[domainName];\n    }\n    const domain = new InjectionDomain(domainName);\n    DOMAIN_MAP[domainName] = domain;\n    return domain;\n}\nexport const AIRPORT_DOMAIN = domain('turbase.app');\n//# sourceMappingURL=InjectionDomain.js.map","export class DependencyInjectionToken {\n    constructor(application, descriptor) {\n        this.application = application;\n        this.descriptor = descriptor;\n    }\n    get dependencyConfiguration() {\n        return this.getInheritedDependencyConfiguration(this.descriptor.class);\n    }\n    getPath() {\n        return this.application.domain.name + ':' + this.application.name + ':'\n            + this.descriptor.token;\n    }\n    setDependencies(dependencyConfiguration) {\n        if (this._dependencyConfiguration) {\n            this._dependencyConfiguration = {\n                ...this._dependencyConfiguration,\n                ...dependencyConfiguration\n            };\n        }\n        else {\n            this._dependencyConfiguration = dependencyConfiguration;\n        }\n        if (!this.descriptor.class) {\n            return;\n        }\n        if (this.descriptor.class.dependencyConfiguration) {\n            this.descriptor.class.dependencyConfiguration = {\n                ...this.descriptor.class.dependencyConfiguration,\n                ...dependencyConfiguration\n            };\n        }\n        else {\n            this.descriptor.class.dependencyConfiguration = dependencyConfiguration;\n        }\n    }\n    setClass(aClass) {\n        this.descriptor.class = aClass;\n        aClass.dependencyConfiguration = this._dependencyConfiguration;\n    }\n    getInheritedDependencyConfiguration(aClass) {\n        const parentClass = Object.getPrototypeOf(aClass);\n        let returnedDependencyConfiguration = {};\n        if (parentClass) {\n            returnedDependencyConfiguration = this.getInheritedDependencyConfiguration(parentClass);\n        }\n        const dependencyConfiguration = aClass.dependencyConfiguration;\n        if (dependencyConfiguration) {\n            returnedDependencyConfiguration = {\n                ...returnedDependencyConfiguration,\n                ...dependencyConfiguration\n            };\n        }\n        return returnedDependencyConfiguration;\n    }\n    getClass() {\n        return this.descriptor.class;\n    }\n}\n//# sourceMappingURL=Token.js.map","import { AIRPORT_DOMAIN } from './InjectionDomain';\nimport { DependencyInjectionToken } from './Token';\nexport class InjectionApplication {\n    constructor(name, domain) {\n        this.name = name;\n        this.domain = domain;\n        this.tokenMap = new Map();\n        this.autopilot = false;\n    }\n    getFullName() {\n        return `${this.domain.name}/${this.name}`;\n    }\n    token(descriptor) {\n        const existingToken = this.tokenMap.get(descriptor.interface);\n        if (existingToken) {\n            throw new Error(`Token with name '${descriptor.interface}' has already been created`);\n        }\n        const diToken = new DependencyInjectionToken(this, descriptor);\n        this.tokenMap.set(descriptor.interface, diToken);\n        return diToken;\n    }\n}\nexport function lib(libraryName) {\n    return AIRPORT_DOMAIN.app(libraryName);\n}\n//# sourceMappingURL=InjectionApplication.js.map","export var ContextType;\n(function (ContextType) {\n    ContextType[\"DB\"] = \"DB\";\n    ContextType[\"UI\"] = \"UI\";\n})(ContextType || (ContextType = {}));\nexport class Context {\n    constructor(id, type) {\n        this.id = id;\n        this.type = type;\n    }\n}\n//# sourceMappingURL=Context.js.map","export class Container {\n}\n//# sourceMappingURL=Container.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Container } from \"./Container\";\nimport { Injected } from \"./decorators\";\nlet ContainerAccessor = class ContainerAccessor {\n    getContainer(injectedObject) {\n        const iocContainer = injectedObject.__container__;\n        if (!iocContainer) {\n            throw new Error('\"container\" is not set on injectable object.');\n        }\n        if (!(iocContainer instanceof Container)) {\n            throw new Error('\"container\" property of injectable is not an' +\n                'instance of @airport/direction-indicator Container');\n        }\n        return iocContainer;\n    }\n};\nContainerAccessor = __decorate([\n    Injected()\n], ContainerAccessor);\nexport { ContainerAccessor };\n//# sourceMappingURL=ContainerAccessor.js.map","export const Injected = function () {\n    return function (constructor) {\n        // No runtime logic required.\n    };\n};\nexport const Inject = function () {\n    return function (targetObject, propertyKey) {\n        // No runtime logic required.\n    };\n};\n//# sourceMappingURL=decorators.js.map","import { ContainerAccessor } from \"./dependencyInjection/ContainerAccessor\";\nimport { lib } from \"./dependencyInjection/InjectionApplication\";\nconst directionIndicator = lib('direction-indicator');\nexport const AUTOPILOT_API_LOADER = directionIndicator.token({\n    class: null,\n    interface: 'IAutopilotApiLoader',\n    token: 'AUTOPILOT_API_LOADER'\n});\nexport const CONTAINER_ACCESSOR = directionIndicator.token({\n    class: ContainerAccessor,\n    interface: 'IContainerAccessor',\n    token: 'CONTAINER_ACCESSOR'\n});\nexport const INTER_APP_API_CLIENT = directionIndicator.token({\n    class: null,\n    interface: 'IInterAppAPIClient',\n    token: 'INTER_APP_API_CLIENT'\n});\n//# sourceMappingURL=tokens.js.map","import { AUTOPILOT_API_LOADER } from \"../tokens\";\nimport { Container } from \"./Container\";\nimport { domain } from \"./InjectionDomain\";\nexport class ChildContainer extends Container {\n    constructor(rootContainer, context) {\n        super();\n        this.rootContainer = rootContainer;\n        this.context = context;\n        // TODO: implement continuous upgrading\n        // classes: any[]  = []\n        // numPendingInits = 0\n        // theObjects: any[]  = []\n        this.objectMap = new Map();\n    }\n    doEventuallyGet(tokens, successCallback, errorCallback) {\n        let { firstDiNotSetClass, firstMissingClassToken, objects } = this.doGetCore(tokens);\n        if (firstMissingClassToken || firstDiNotSetClass) {\n            setTimeout(() => {\n                this.doEventuallyGet(tokens, successCallback, errorCallback);\n            }, 100);\n        }\n        else {\n            if (objects.length > 1) {\n                successCallback(objects);\n            }\n            else {\n                successCallback(objects[0]);\n            }\n        }\n    }\n    doGet(tokens, successCallback, errorCallback) {\n        const { firstDiNotSetClass, firstMissingClassToken, objects } = this.doGetCore(tokens);\n        if (firstDiNotSetClass) {\n            console.log(`Dependency Injection is not ready for token ${firstMissingClassToken.getPath()}\r\n\t\t\t, class: ${firstDiNotSetClass.name}. Delaying injection by 100ms`);\n            setTimeout(() => {\n                this.doGet(tokens, successCallback, errorCallback);\n            }, 100);\n            return;\n        }\n        else if (objects.filter(object => object && !object.__initialized__).length) {\n            const notInitializedObjectIndexes = objects.map((object, index) => object.__initialized__ ? -1 : index)\n                .filter(index => index !== -1);\n            const objectPaths = [];\n            for (const index of notInitializedObjectIndexes) {\n                objectPaths.push(tokens[index].getPath());\n            }\n            console.log(`Dependency Injection is not ready for tokens:\r\n\t\t\t\t ${objectPaths.join('\\n')}\r\n\t\t\t, these classes are not yet initialized, delaying injection by 100ms`);\n            setTimeout(() => {\n                this.doGet(tokens, successCallback, errorCallback);\n            }, 100);\n            return;\n        }\n        if (firstMissingClassToken) {\n            const message = 'Dependency Injection could not find class for token: '\n                + firstMissingClassToken.getPath();\n            console.log(message);\n            errorCallback(message);\n        }\n        else {\n            if (objects.length > 1) {\n                successCallback(objects);\n            }\n            else {\n                successCallback(objects[0]);\n            }\n        }\n    }\n    doGetCore(tokens) {\n        let firstMissingClassToken;\n        let firstDiNotSetClass;\n        const objects = tokens.map(token => {\n            if (firstMissingClassToken || firstDiNotSetClass) {\n                return;\n            }\n            let object = this.objectMap.get(token.descriptor.token);\n            if (!object) {\n                if (!this.rootContainer.isFramework && token.application.autopilot) {\n                    object = this.getSync(AUTOPILOT_API_LOADER)\n                        .loadApiAutopilot(token);\n                }\n                else {\n                    // NOTE: object pooling is not supported, see RootContainer for why\n                    // const rootObjectPool = this.rootContainer.objectPoolMap.get(token.descriptor.token);\n                    // if (rootObjectPool && rootObjectPool.length) {\n                    //     object = rootObjectPool.pop()\n                    // } else {\n                    const aClass = token.descriptor.class;\n                    if (!aClass) {\n                        firstMissingClassToken = token;\n                        return;\n                    }\n                    if (aClass.diSet && !aClass.diSet()) {\n                        firstMissingClassToken = token;\n                        firstDiNotSetClass = aClass;\n                        return;\n                    }\n                    object = new aClass();\n                    this.setDependencyGetters(object, token);\n                    // }\n                }\n                object.__container__ = this;\n                this.objectMap.set(token.descriptor.token, object);\n                if (!token.application.autopilot && object.init) {\n                    const result = object.init();\n                    if (result instanceof Promise) {\n                        result.then(_ => {\n                            object.__initialized__ = true;\n                            console.log(`${token.getPath()} initialized.`);\n                        });\n                    }\n                    else {\n                        object.__initialized__ = true;\n                        console.log(`${token.getPath()} initialized.`);\n                    }\n                }\n                else {\n                    object.__initialized__ = true;\n                }\n            }\n            return object;\n        });\n        return {\n            firstDiNotSetClass,\n            firstMissingClassToken,\n            objects\n        };\n    }\n    manualInject(object, token) {\n        object.__container__ = this;\n        this.setDependencyGetters(object, token);\n    }\n    setDependencyGetters(object, token) {\n        if (!token.dependencyConfiguration) {\n            return;\n        }\n        const dependencyConfiguration = token.dependencyConfiguration;\n        for (let propertyName in dependencyConfiguration) {\n            delete object[propertyName];\n            const dependencyToken = dependencyConfiguration[propertyName];\n            Object.defineProperty(object, propertyName, {\n                get() {\n                    return this.__container__.getSync(dependencyToken);\n                }\n            });\n            object['get' + propertyName + 'Async'] = async function () {\n                return await this.__container__.get(dependencyToken);\n            };\n        }\n    }\n    async getByNames(domainName, applicationName, tokenInterface) {\n        const injectionDomain = domain(domainName);\n        if (!injectionDomain) {\n            throw new Error(`Could nof find\r\n\tDomain:\r\n\t\t${domainName}\r\n\t\t`);\n        }\n        const application = domain(domainName).getApp(applicationName);\n        if (!application) {\n            throw new Error(`Could not find\r\n\tDomain:\r\n\t\t${domainName}\r\n\tApplication:\r\n\t\t${applicationName}\r\n\t\t`);\n        }\n        const token = application.tokenMap.get(tokenInterface);\n        if (!token) {\n            throw new Error(`Could not find token: ${tokenInterface}\r\n\tin Domain:\r\n\t\t${domainName}\r\n \tApplication:\r\n\t\t\t${applicationName}\r\n\t\t`);\n        }\n        return await this.get(token);\n    }\n    get(...tokens) {\n        return new Promise((resolve, reject) => {\n            this.doGet(tokens, resolve, reject);\n        });\n    }\n    eventuallyGet(...tokens) {\n        return new Promise((resolve, reject) => {\n            this.doEventuallyGet(tokens, resolve, reject);\n        });\n    }\n    getSync(...tokens) {\n        const { firstDiNotSetClass, firstMissingClassToken, objects } = this.doGetCore(tokens);\n        if (firstMissingClassToken) {\n            throw new Error('Dependency Injection could not find class for token: '\n                + firstMissingClassToken.getPath());\n        }\n        else if (firstDiNotSetClass) {\n            throw new Error('Dependency Injection is not ready for class: '\n                + firstDiNotSetClass.name);\n        }\n        if (objects.length > 1) {\n            return objects;\n        }\n        else {\n            return objects[0];\n        }\n    }\n}\n//# sourceMappingURL=ChildContainer.js.map","import { Context, ContextType } from \"../Context\";\nimport { ChildContainer } from \"./ChildContainer\";\nimport { Container } from \"./Container\";\nexport class RootContainer extends Container {\n    constructor() {\n        super(...arguments);\n        this.isFramework = false;\n        this.dbContainerMap = new Map();\n        this.uiContainers = new Set();\n    }\n    // NOTE: Object pooling is not supported because of possible callbacks\n    // that are out of synchronous flow of a transaction.  Thus objects are\n    // retained in the container even after the container is removed\n    // in order to allow for transactionId reference\n    // objectPoolMap: Map<string, any[]> = new Map();\n    db(id = null) {\n        let dbContainer = this.dbContainerMap.get(id);\n        if (!dbContainer) {\n            dbContainer = new ChildContainer(this, new Context(id, ContextType.DB));\n            this.dbContainerMap.set(id, dbContainer);\n        }\n        return dbContainer;\n    }\n    remove(container) {\n        if (!container) {\n            return;\n        }\n        const dbContainer = this.dbContainerMap.get(container.context.id);\n        if (dbContainer) {\n            this.dbContainerMap.delete(container.context.id);\n            // NOTE: objectPooling is not supported, see above\n            // const objectTokens = dbContainer.objectMap.keys()\n            // for (const objectToken of objectTokens) {\n            // const object = dbContainer.objectMap.get(objectToken)\n            // let objectPool = this.objectPoolMap.get(objectToken)\n            // if (!objectPool) {\n            //     objectPool = []\n            //     this.objectPoolMap.set(objectToken, objectPool)\n            // }\n            // objectPool.push(object)\n            // }\n        }\n        else {\n            this.uiContainers.delete(container);\n        }\n    }\n    ui(componentName) {\n        const context = new Context(componentName, ContextType.UI);\n        const childContainer = new ChildContainer(this, context);\n        this.uiContainers.add(childContainer);\n        return childContainer;\n    }\n}\nexport const DEPENDENCY_INJECTION = new RootContainer();\n//# sourceMappingURL=RootContainer.js.map","/**\n * From:\n * http://js-bits.blogspot.com/2010/08/javascript-inheritance-done-right.html\n * Via:\n * https://stackoverflow.com/questions/6617780/how-to-call-parent-constructor\n */\nexport function extend(base, sub, methods) {\n    sub.prototype = Object.create(base.prototype);\n    sub.prototype.constructor = sub;\n    sub.base = base.prototype;\n    // Copy the methods passed in to the prototype\n    for (const name in methods) {\n        sub.prototype[name] = methods[name];\n    }\n    // so we can define the constructor inline\n    return sub;\n}\n//# sourceMappingURL=extend.js.map","import { lib } from './dependencyInjection/InjectionApplication';\nimport { domain } from './dependencyInjection/InjectionDomain';\nimport { InversionOfControl } from './dependencyInjection/InversionOfControl';\nimport { DEPENDENCY_INJECTION } from './dependencyInjection/RootContainer';\nexport * from './autopilot/IAutopilotApiLoader';\nexport * from './autopilot/IApiAutopilot';\nexport * from './dependencyInjection/interfaces/IChildContainer';\nexport * from './dependencyInjection/interfaces/IContainer';\nexport * from './dependencyInjection/interfaces/IContainerAccessor';\nexport * from './dependencyInjection/interfaces/IRootContainer';\nexport * from './dependencyInjection/ChildContainer';\nexport * from './dependencyInjection/Container';\nexport * from './dependencyInjection/ContainerAccessor';\nexport * from './dependencyInjection/decorators';\nexport * from './dependencyInjection/Injected';\nexport * from './dependencyInjection/InjectionApplication';\nexport * from './dependencyInjection/InjectionDomain';\nexport * from './dependencyInjection/InterAppAPIClient';\nexport * from './dependencyInjection/InversionOfControl';\nexport * from './dependencyInjection/RootContainer';\nexport * from './dependencyInjection/Token';\nexport * from './Context';\nexport * from './extend';\nexport * from './tokens';\nif (typeof window !== 'undefined') {\n    window.DEPENDENCY_INJECTION = DEPENDENCY_INJECTION;\n    window.lib = lib;\n    window.domain = domain;\n}\nexport const IOC = new InversionOfControl();\n//# sourceMappingURL=index.js.map","import { DEPENDENCY_INJECTION } from \"./RootContainer\";\nexport class InversionOfControl {\n    async get(...tokens) {\n        return await DEPENDENCY_INJECTION.db().get(...tokens);\n    }\n    async eventuallyGet(...tokens) {\n        return await DEPENDENCY_INJECTION.db().eventuallyGet(...tokens);\n    }\n    getSync(...tokens) {\n        return DEPENDENCY_INJECTION.db().getSync(...tokens);\n    }\n}\n//# sourceMappingURL=InversionOfControl.js.map","export const airApi = {\n    setQApplication: function (qApplication) { },\n    dS: function (__dbApplication__, dbEntityId) { return true; },\n    ddS: function (__dbApplication__, dbEntityId) { return true; }\n};\n//# sourceMappingURL=qApplicatonStubs.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nlet AirEntityUtils = class AirEntityUtils {\n    getCreatedBy(airEntity) {\n        return airEntity.actor.userAccount;\n    }\n    encodeId(idObject) {\n        if (!idObject.repository\n            || !idObject.repository.GUID\n            || !idObject.actor\n            || !idObject.actor.GUID\n            || !idObject._actorRecordId) {\n            return null;\n        }\n        if (typeof idObject.repository.GUID !== 'string') {\n            throw Error(`Type of \"repository.GUID\" property is not a string.`);\n        }\n        if (typeof idObject.actor.GUID !== 'string') {\n            throw Error(`Type of \"actor.GUID\" property is not a string.`);\n        }\n        if (typeof idObject._actorRecordId !== 'number') {\n            throw Error(`Type of \"_actorRecordId\" property is not a number.`);\n        }\n        return idObject.repository.GUID + '-' + idObject.actor.GUID + '-' + idObject._actorRecordId;\n    }\n    parseEGUID(idString) {\n        const idStringFragments = idString.split('-');\n        if (idStringFragments.length !== 11) {\n            throw new Error('Invalid Entity Id, expecting ${repository.GUID}-${actor.GUID}-${_actorRecordId}');\n        }\n        const repositoryGUIDFragments = [];\n        for (let i = 0; i < 5; i++) {\n            repositoryGUIDFragments.push(idStringFragments[i]);\n        }\n        const actorGUIDFragments = [];\n        for (let i = 5; i < 10; i++) {\n            actorGUIDFragments.push(idStringFragments[i]);\n        }\n        return {\n            repository: {\n                GUID: repositoryGUIDFragments.join('-')\n            },\n            actor: {\n                GUID: actorGUIDFragments.join('-')\n            },\n            _actorRecordId: parseInt(idStringFragments[11])\n        };\n    }\n    setId(idString, airEntity) {\n        if (!idString) {\n            return;\n        }\n        let airEntityId = this.parseEGUID(idString);\n        if (!airEntity.repository) {\n            airEntity.repository = {\n                GUID: airEntityId.repository.GUID\n            };\n        }\n        else {\n            airEntity.repository.GUID = airEntityId.repository.GUID;\n        }\n        if (!airEntity.actor) {\n            airEntity.actor = {\n                GUID: airEntityId.repository.GUID\n            };\n        }\n        else {\n            airEntity.actor.GUID = airEntityId.actor.GUID;\n        }\n        airEntity._actorRecordId = airEntityId._actorRecordId;\n    }\n};\nAirEntityUtils = __decorate([\n    Injected()\n], AirEntityUtils);\nexport { AirEntityUtils };\n//# sourceMappingURL=AirEntityUtils.js.map","import { lib } from \"@airport/direction-indicator\";\nimport { AirEntityUtils } from \"./AirEntityUtils\";\nconst aviationCommunication = lib('aviation-communication');\nexport const AIR_ENTITY_UTILS = aviationCommunication.token({\n    class: AirEntityUtils,\n    interface: 'IAirEntityUtils',\n    token: 'AIR_ENTITY_UTILS'\n});\n//# sourceMappingURL=tokens.js.map","export var ConstraintMode;\n(function (ConstraintMode) {\n    ConstraintMode[\"CONSTRAINT\"] = \"CONSTRAINT\";\n    ConstraintMode[\"NO_CONSTRAINT\"] = \"NO_CONSTRAINT\";\n    ConstraintMode[\"PROVIDER_DEFAULT\"] = \"PROVIDER_DEFAULT\";\n})(ConstraintMode || (ConstraintMode = {}));\n//# sourceMappingURL=ColumnDecorators.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbNumber, DbString, Entity, Id, OneToMany, Table, } from '@airport/tarmaq-entity';\nlet Domain = class Domain {\n};\n__decorate([\n    Id(),\n    DbNumber(),\n    Column({ name: 'DOMAIN_LID' })\n], Domain.prototype, \"_localId\", void 0);\n__decorate([\n    DbString()\n], Domain.prototype, \"name\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'domain' })\n], Domain.prototype, \"applications\", void 0);\nDomain = __decorate([\n    Entity(),\n    Table({ name: 'DOMAINS' })\n], Domain);\nexport { Domain };\n//# sourceMappingURL=Domain.js.map","/**\n * Created by Papa on 8/20/2016.\n */\nexport const Id = function () {\n    return function (targetObject, propertyKey) {\n        // No runtime logic required.\n    };\n};\nexport const Column = function (columnConfiguration) {\n    return function (targetObject, propertyKey) {\n        // No runtime logic required.\n    };\n};\nexport const JoinColumn = function (joinColumnConfiguration) {\n    return function (targetObject, propertyKey) {\n        // No runtime logic required.\n    };\n};\nexport const JoinColumns = function (joinColumnConfigurations) {\n    return function (targetObject, propertyKey) {\n        // No runtime logic required.\n    };\n};\nexport const RJoinColumn = function (rJoinColumnConfiguration) {\n    return function (targetObject, propertyKey) {\n        // No runtime logic required.\n    };\n};\nexport const RJoinColumns = function (joinColumnConfigurations) {\n    return function (targetObject, propertyKey) {\n        // No runtime logic required.\n    };\n};\nexport const Json = function () {\n    return function (targetObject, propertyKey) {\n        // No runtime logic required.\n    };\n};\nexport const DbAny = function () {\n    return function (targetObject, propertyKey) {\n        // No runtime logic required.\n    };\n};\nexport const DbBoolean = function () {\n    return function (targetObject, propertyKey) {\n        // No runtime logic required.\n    };\n};\nexport const DbDate = function () {\n    return function (targetObject, propertyKey) {\n        // No runtime logic required.\n    };\n};\nexport const DbNumber = function () {\n    return function (targetObject, propertyKey) {\n        // No runtime logic required.\n    };\n};\nexport const DbString = function () {\n    return function (targetObject, propertyKey) {\n        // No runtime logic required.\n    };\n};\nexport const Transient = function () {\n    return function (targetObject, propertyKey) {\n        // No runtime logic required.\n    };\n};\nexport const ManyToOne = function (elements) {\n    return function (targetObject, propertyKey) {\n        // No runtime logic required.\n    };\n};\nexport const OneToMany = function (elements) {\n    return function (targetObject, propertyKey) {\n        // No runtime logic required.\n    };\n};\nexport const GeneratedValue = function () {\n    return function (targetObject, propertyKey) {\n        // No runtime logic required.\n    };\n};\nexport const SequenceGenerator = function () {\n    return function (targetObject, propertyKey) {\n        // No runtime logic required.\n    };\n};\nexport const TraditionalServerSeq = function () {\n    return function (targetObject, propertyKey) {\n        // No runtime logic required.\n    };\n};\n//# sourceMappingURL=ColumnDecorators.js.map","/**\n * Created by Papa on 8/20/2016.\n */\nexport const Entity = function () {\n    return function (constructor) {\n        // No runtime logic required.\n    };\n};\nexport const Table = function (tableConfiguration) {\n    return function (constructor) {\n        // No runtime logic required.\n    };\n};\nexport const MappedSuperclass = function () {\n    return function (constructor) {\n    };\n};\n//# sourceMappingURL=EntityDecorators.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbNumber, DbString, Entity, Id, JoinColumn, ManyToOne, OneToMany, Table } from '@airport/tarmaq-entity';\nlet Application = class Application {\n    constructor() {\n        this.versions = [];\n        this.currentVersion = [];\n    }\n};\n__decorate([\n    Id(),\n    DbNumber(),\n    Column({ name: 'APPLICATION_INDEX', nullable: false })\n], Application.prototype, \"index\", void 0);\n__decorate([\n    Column({ name: 'SCOPE', nullable: false }),\n    DbString()\n], Application.prototype, \"scope\", void 0);\n__decorate([\n    Column({ name: 'APPLICATION_NAME', nullable: false }),\n    DbString()\n], Application.prototype, \"name\", void 0);\n__decorate([\n    Column({ name: 'FULL_APPLICATION_NAME', nullable: false }),\n    DbString()\n], Application.prototype, \"fullName\", void 0);\n__decorate([\n    Column({ name: 'STATUS', nullable: false }),\n    DbString()\n], Application.prototype, \"status\", void 0);\n__decorate([\n    Column({ name: 'SIGNATURE', nullable: false }),\n    DbString()\n], Application.prototype, \"signature\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({ name: 'DOMAIN_LID', referencedColumnName: 'DOMAIN_LID', nullable: false })\n], Application.prototype, \"domain\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'application' })\n], Application.prototype, \"versions\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'application' })\n], Application.prototype, \"currentVersion\", void 0);\nApplication = __decorate([\n    Entity(),\n    Table({\n        name: 'APPLICATIONS'\n    })\n], Application);\nexport { Application };\n//# sourceMappingURL=Application.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { JoinColumn, ManyToOne, MappedSuperclass } from '@airport/tarmaq-entity';\nlet VersionedApplicationObject = class VersionedApplicationObject {\n};\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'DEPRECATED_SINCE_APPLICATION_VERSION_LID',\n        referencedColumnName: 'APPLICATION_VERSION_LID'\n    })\n], VersionedApplicationObject.prototype, \"deprecatedSinceVersion\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'REMOVED_IN_APPLICATION_VERSION_LID',\n        referencedColumnName: 'APPLICATION_VERSION_LID'\n    })\n], VersionedApplicationObject.prototype, \"removedInVersion\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'SINCE_APPLICATION_VERSION_LID',\n        referencedColumnName: 'APPLICATION_VERSION_LID', nullable: false\n    })\n], VersionedApplicationObject.prototype, \"sinceVersion\", void 0);\nVersionedApplicationObject = __decorate([\n    MappedSuperclass()\n], VersionedApplicationObject);\nexport { VersionedApplicationObject };\n//# sourceMappingURL=VersionedApplicationObject.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbBoolean, DbNumber, DbString, Entity, Id, JoinColumn, ManyToOne, OneToMany, Table } from '@airport/tarmaq-entity';\nimport { VersionedApplicationObject } from './VersionedApplicationObject';\nlet ApplicationColumn = class ApplicationColumn extends VersionedApplicationObject {\n    constructor() {\n        super(...arguments);\n        this.propertyColumns = [];\n        this.manyRelationColumns = [];\n        this.oneRelationColumns = [];\n    }\n};\n__decorate([\n    DbNumber(),\n    Id(),\n    Column({ name: 'APPLICATION_COLUMN_LID' })\n], ApplicationColumn.prototype, \"_localId\", void 0);\n__decorate([\n    Column({ name: 'COLUMN_INDEX', nullable: false }),\n    DbNumber()\n], ApplicationColumn.prototype, \"index\", void 0);\n__decorate([\n    Column({ name: 'ID_INDEX' }),\n    DbNumber()\n], ApplicationColumn.prototype, \"idIndex\", void 0);\n__decorate([\n    Column({ name: 'IS_GENERATED', nullable: false }),\n    DbBoolean()\n], ApplicationColumn.prototype, \"isGenerated\", void 0);\n__decorate([\n    Column({ name: 'ALLOCATION_SIZE' }),\n    DbNumber()\n], ApplicationColumn.prototype, \"allocationSize\", void 0);\n__decorate([\n    Column({ name: 'NAME', nullable: false }),\n    DbString()\n], ApplicationColumn.prototype, \"name\", void 0);\n__decorate([\n    Column({ name: 'NOT_NULL', nullable: false }),\n    DbBoolean()\n], ApplicationColumn.prototype, \"notNull\", void 0);\n__decorate([\n    Column({ name: 'PRECISION' }),\n    DbNumber()\n], ApplicationColumn.prototype, \"precision\", void 0);\n__decorate([\n    Column({ name: 'SCALE' }),\n    DbNumber()\n], ApplicationColumn.prototype, \"scale\", void 0);\n__decorate([\n    Column({ name: 'TYPE', nullable: false }),\n    DbString()\n], ApplicationColumn.prototype, \"type\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'APPLICATION_ENTITY_LID',\n        referencedColumnName: 'APPLICATION_ENTITY_LID', nullable: false\n    })\n], ApplicationColumn.prototype, \"entity\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'column' })\n], ApplicationColumn.prototype, \"propertyColumns\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'manyColumn' })\n], ApplicationColumn.prototype, \"manyRelationColumns\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'oneColumn' })\n], ApplicationColumn.prototype, \"oneRelationColumns\", void 0);\nApplicationColumn = __decorate([\n    Entity(),\n    Table({\n        name: 'APPLICATION_COLUMNS'\n    })\n], ApplicationColumn);\nexport { ApplicationColumn };\n//# sourceMappingURL=ApplicationColumn.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Entity, Id, JoinColumn, ManyToOne, Table } from \"@airport/tarmaq-entity\";\nlet ApplicationCurrentVersion = class ApplicationCurrentVersion {\n};\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({ name: 'APPLICATION_INDEX', referencedColumnName: 'APPLICATION_INDEX', nullable: false })\n], ApplicationCurrentVersion.prototype, \"application\", void 0);\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({\n        name: 'APPLICATION_VERSION_LID',\n        referencedColumnName: 'APPLICATION_VERSION_LID', nullable: false\n    })\n], ApplicationCurrentVersion.prototype, \"applicationVersion\", void 0);\nApplicationCurrentVersion = __decorate([\n    Entity(),\n    Table({\n        name: 'APPLICATION_CURRENT_VERSIONS'\n    })\n], ApplicationCurrentVersion);\nexport { ApplicationCurrentVersion };\n//# sourceMappingURL=ApplicationCurrentVersion.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbBoolean, DbNumber, DbString, Entity, Id, JoinColumn, Json, ManyToOne, OneToMany, Table, Transient } from '@airport/tarmaq-entity';\nimport { VersionedApplicationObject } from './VersionedApplicationObject';\nlet ApplicationEntity = class ApplicationEntity extends VersionedApplicationObject {\n    constructor() {\n        super(...arguments);\n        //\n        // One-to-Many's\n        //\n        this.columns = [];\n        // TODO: implement if needed\n        // @OneToMany()\n        // @JoinColumns([\n        // \t{name: \"APPLICATION_VERSION_LID\"},\n        // \t{name: \"TABLE_INDEX\", referencedColumnName: \"INDEX\"}\n        // ])\n        // @WhereJoinTable((\n        // \totm: QApplicationEntity,\n        // \tmto: QApplicationColumn\n        // ) => mto.idIndex.IS_NOT_NULL())\n        // idColumns: IApplicationColumn[];\n        this.operations = [];\n        this.properties = [];\n        this.relations = [];\n        this.relationReferences = [];\n        this.columnMap = {};\n        this.idColumns = [];\n        this.idColumnMap = {};\n        this.propertyMap = {};\n    }\n};\n__decorate([\n    DbNumber(),\n    Id(),\n    Column({ name: 'APPLICATION_ENTITY_LID' })\n], ApplicationEntity.prototype, \"_localId\", void 0);\n__decorate([\n    Column({ name: 'TABLE_INDEX', nullable: false }),\n    DbNumber()\n], ApplicationEntity.prototype, \"index\", void 0);\n__decorate([\n    Column({ name: 'IS_LOCAL', nullable: false }),\n    DbBoolean()\n], ApplicationEntity.prototype, \"isLocal\", void 0);\n__decorate([\n    Column({ name: 'IS_AIR_ENTITY', nullable: false }),\n    DbBoolean()\n], ApplicationEntity.prototype, \"isAirEntity\", void 0);\n__decorate([\n    Column({ name: 'NAME', nullable: false }),\n    DbString()\n], ApplicationEntity.prototype, \"name\", void 0);\n__decorate([\n    Column({ name: 'TABLE_CONFIGURATION', nullable: false }),\n    Json()\n], ApplicationEntity.prototype, \"tableConfig\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'APPLICATION_VERSION_LID',\n        referencedColumnName: 'APPLICATION_VERSION_LID', nullable: false\n    })\n], ApplicationEntity.prototype, \"applicationVersion\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'entity' })\n], ApplicationEntity.prototype, \"columns\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'entity' })\n], ApplicationEntity.prototype, \"operations\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'entity' })\n], ApplicationEntity.prototype, \"properties\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'entity' })\n], ApplicationEntity.prototype, \"relations\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'relationEntity' })\n], ApplicationEntity.prototype, \"relationReferences\", void 0);\n__decorate([\n    Transient()\n], ApplicationEntity.prototype, \"columnMap\", void 0);\n__decorate([\n    Transient()\n], ApplicationEntity.prototype, \"idColumns\", void 0);\n__decorate([\n    Transient()\n], ApplicationEntity.prototype, \"idColumnMap\", void 0);\n__decorate([\n    Transient()\n], ApplicationEntity.prototype, \"propertyMap\", void 0);\nApplicationEntity = __decorate([\n    Entity(),\n    Table({\n        name: 'APPLICATION_ENTITIES',\n        // indexes: (se: ApplicationEntity) => [{\n        // \tproperty: se.applicationVersion\n        // }]\n    })\n], ApplicationEntity);\nexport { ApplicationEntity };\n//# sourceMappingURL=ApplicationEntity.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbNumber, DbString, Entity, GeneratedValue, Id, JoinColumn, Json, ManyToOne, Table } from '@airport/tarmaq-entity';\nimport { VersionedApplicationObject } from './VersionedApplicationObject';\nlet ApplicationOperation = class ApplicationOperation extends VersionedApplicationObject {\n};\n__decorate([\n    Id(),\n    GeneratedValue(),\n    DbNumber(),\n    Column({ name: 'APPLICATION_OPERATION_LID' })\n], ApplicationOperation.prototype, \"_localId\", void 0);\n__decorate([\n    Column({\n        name: 'TYPE',\n        nullable: false\n    }),\n    DbNumber()\n], ApplicationOperation.prototype, \"type\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'APPLICATION_ENTITY_LID',\n        referencedColumnName: 'APPLICATION_ENTITY_LID',\n        nullable: false\n    })\n], ApplicationOperation.prototype, \"entity\", void 0);\n__decorate([\n    Column({ name: 'NAME', nullable: false }),\n    DbString()\n], ApplicationOperation.prototype, \"name\", void 0);\n__decorate([\n    Column({ name: 'RULE', nullable: false }),\n    Json()\n], ApplicationOperation.prototype, \"rule\", void 0);\nApplicationOperation = __decorate([\n    Entity(),\n    Table({\n        name: 'APPLICATION_OPERATIONS'\n    })\n], ApplicationOperation);\nexport { ApplicationOperation };\n//# sourceMappingURL=ApplicationOperation.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbBoolean, DbNumber, DbString, Entity, Id, JoinColumn, ManyToOne, OneToMany, Table } from '@airport/tarmaq-entity';\nimport { VersionedApplicationObject } from './VersionedApplicationObject';\nlet ApplicationProperty = class ApplicationProperty extends VersionedApplicationObject {\n    constructor() {\n        super(...arguments);\n        this.propertyColumns = [];\n        this.relation = [];\n    }\n};\n__decorate([\n    DbNumber(),\n    Id(),\n    Column({ name: 'APPLICATION_PROPERTY_LID' })\n], ApplicationProperty.prototype, \"_localId\", void 0);\n__decorate([\n    DbNumber(),\n    Column({ name: 'PROPERTY_INDEX', nullable: false })\n], ApplicationProperty.prototype, \"index\", void 0);\n__decorate([\n    DbString(),\n    Column({ name: 'NAME', nullable: false })\n], ApplicationProperty.prototype, \"name\", void 0);\n__decorate([\n    DbBoolean(),\n    Column({ name: 'IS_LID', nullable: false })\n], ApplicationProperty.prototype, \"isId\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'APPLICATION_ENTITY_LID',\n        referencedColumnName: 'APPLICATION_ENTITY_LID', nullable: false\n    })\n], ApplicationProperty.prototype, \"entity\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'property' })\n], ApplicationProperty.prototype, \"propertyColumns\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'property' })\n], ApplicationProperty.prototype, \"relation\", void 0);\nApplicationProperty = __decorate([\n    Entity(),\n    Table({\n        name: 'APPLICATION_PROPERTIES'\n    })\n], ApplicationProperty);\nexport { ApplicationProperty };\n//# sourceMappingURL=ApplicationProperty.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Entity, Id, JoinColumn, ManyToOne, Table } from '@airport/tarmaq-entity';\nimport { VersionedApplicationObject } from './VersionedApplicationObject';\n/**\n * Many-to-Many between Columns and properties\n */\nlet ApplicationPropertyColumn = class ApplicationPropertyColumn extends VersionedApplicationObject {\n};\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({\n        name: 'APPLICATION_COLUMN_LID',\n        referencedColumnName: 'APPLICATION_COLUMN_LID', nullable: false\n    })\n], ApplicationPropertyColumn.prototype, \"column\", void 0);\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({\n        name: 'APPLICATION_PROPERTY_LID',\n        referencedColumnName: 'APPLICATION_PROPERTY_LID', nullable: false\n    })\n], ApplicationPropertyColumn.prototype, \"property\", void 0);\nApplicationPropertyColumn = __decorate([\n    Entity()\n    // TODO: rename table name to APPLICATION_PROPERTY_COLUMNS\n    ,\n    Table({\n        name: 'APPLICATION_PROPERTY_COLUMNS'\n    })\n], ApplicationPropertyColumn);\nexport { ApplicationPropertyColumn };\n//# sourceMappingURL=ApplicationPropertyColumn.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbNumber, Entity, Id, JoinColumn, ManyToOne, Table } from '@airport/tarmaq-entity';\nimport { VersionedApplicationObject } from './VersionedApplicationObject';\nlet ApplicationReference = class ApplicationReference extends VersionedApplicationObject {\n};\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({\n        name: 'OWN_APPLICATION_VERSION_LID',\n        referencedColumnName: 'APPLICATION_VERSION_LID', nullable: false\n    })\n], ApplicationReference.prototype, \"ownApplicationVersion\", void 0);\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({\n        name: 'REFERENCED_APPLICATION_VERSION_LID',\n        referencedColumnName: 'APPLICATION_VERSION_LID', nullable: false\n    })\n], ApplicationReference.prototype, \"referencedApplicationVersion\", void 0);\n__decorate([\n    Column({ name: 'APPLICATION_REFERENCE_INDEX', nullable: false }),\n    DbNumber()\n], ApplicationReference.prototype, \"index\", void 0);\nApplicationReference = __decorate([\n    Entity(),\n    Table({\n        name: 'APPLICATION_REFERENCES'\n    })\n], ApplicationReference);\nexport { ApplicationReference };\n//# sourceMappingURL=ApplicationReference.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbNumber, DbString, Entity, Id, JoinColumn, Json, ManyToOne, OneToMany, Table } from '@airport/tarmaq-entity';\nimport { VersionedApplicationObject } from './VersionedApplicationObject';\nlet ApplicationRelation = class ApplicationRelation extends VersionedApplicationObject {\n    constructor() {\n        super(...arguments);\n        this.manyRelationColumns = [];\n        this.oneRelationColumns = [];\n    }\n};\n__decorate([\n    DbNumber(),\n    Id(),\n    Column({ name: 'APPLICATION_RELATION_LID' })\n], ApplicationRelation.prototype, \"_localId\", void 0);\n__decorate([\n    DbNumber(),\n    Column({ name: 'RELATION_INDEX', nullable: false })\n], ApplicationRelation.prototype, \"index\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'APPLICATION_PROPERTY_LID',\n        referencedColumnName: 'APPLICATION_PROPERTY_LID', nullable: false\n    })\n], ApplicationRelation.prototype, \"property\", void 0);\n__decorate([\n    Json(),\n    Column({ name: 'FOREIGN_KEY' })\n], ApplicationRelation.prototype, \"foreignKey\", void 0);\n__decorate([\n    Json(),\n    Column({ name: 'MANY_TO_ONE_ELEMENTS' })\n], ApplicationRelation.prototype, \"manyToOneElems\", void 0);\n__decorate([\n    Json(),\n    Column({ name: 'ONE_TO_MANY_ELEMENTS' })\n], ApplicationRelation.prototype, \"oneToManyElems\", void 0);\n__decorate([\n    DbString(),\n    Column({ name: 'RELATION_TYPE', nullable: false })\n], ApplicationRelation.prototype, \"relationType\", void 0);\n__decorate([\n    Column({ name: 'IS_LID', nullable: false })\n], ApplicationRelation.prototype, \"isId\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'APPLICATION_ENTITY_LID',\n        referencedColumnName: 'APPLICATION_ENTITY_LID', nullable: false\n    })\n], ApplicationRelation.prototype, \"entity\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'RELATION_APPLICATION_ENTITY_LID',\n        referencedColumnName: 'APPLICATION_ENTITY_LID', nullable: false\n    })\n], ApplicationRelation.prototype, \"relationEntity\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'manyRelation' })\n], ApplicationRelation.prototype, \"manyRelationColumns\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'oneRelation' })\n], ApplicationRelation.prototype, \"oneRelationColumns\", void 0);\nApplicationRelation = __decorate([\n    Entity(),\n    Table({\n        name: 'APPLICATION_RELATIONS'\n    })\n], ApplicationRelation);\nexport { ApplicationRelation };\n//# sourceMappingURL=ApplicationRelation.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, Entity, Id, JoinColumn, ManyToOne, Table } from '@airport/tarmaq-entity';\nimport { VersionedApplicationObject } from './VersionedApplicationObject';\nlet ApplicationRelationColumn = class ApplicationRelationColumn extends VersionedApplicationObject {\n};\n__decorate([\n    Id(),\n    Column({ name: 'APPLICATION_RELATION_COLUMN_LID' })\n], ApplicationRelationColumn.prototype, \"_localId\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'MANY_APPLICATION_COLUMN_LID',\n        referencedColumnName: 'APPLICATION_COLUMN_LID',\n        nullable: false\n    })\n], ApplicationRelationColumn.prototype, \"manyColumn\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'ONE_APPLICATION_COLUMN_LID',\n        referencedColumnName: 'APPLICATION_COLUMN_LID', nullable: false\n    })\n], ApplicationRelationColumn.prototype, \"oneColumn\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'MANY_APPLICATION_RELATION_LID',\n        referencedColumnName: 'APPLICATION_RELATION_LID'\n    })\n], ApplicationRelationColumn.prototype, \"manyRelation\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'ONE_APPLICATION_RELATION_LID',\n        referencedColumnName: 'APPLICATION_RELATION_LID'\n    })\n], ApplicationRelationColumn.prototype, \"oneRelation\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'PARENT_RELATION_LID',\n        referencedColumnName: 'APPLICATION_RELATION_LID'\n    })\n], ApplicationRelationColumn.prototype, \"parentRelation\", void 0);\nApplicationRelationColumn = __decorate([\n    Entity(),\n    Table({\n        name: 'APPLICATION_RELATION_COLUMNS'\n    })\n], ApplicationRelationColumn);\nexport { ApplicationRelationColumn };\n//# sourceMappingURL=ApplicationRelationColumn.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbNumber, DbString, Entity, Id, JoinColumn, Json, ManyToOne, OneToMany, SequenceGenerator, Table, Transient } from '@airport/tarmaq-entity';\nlet ApplicationVersion = class ApplicationVersion {\n    constructor() {\n        this.entities = [];\n        this.references = [];\n        this.referencedBy = [];\n        this.entityMapByName = {};\n        this.referencesMapByName = {};\n        this.referencedByMapByName = {};\n    }\n};\n__decorate([\n    DbNumber(),\n    Id(),\n    SequenceGenerator({ allocationSize: 100 }),\n    Column({ name: 'APPLICATION_VERSION_LID' })\n], ApplicationVersion.prototype, \"_localId\", void 0);\n__decorate([\n    Column({ name: 'INTEGER_VERSION', nullable: false }),\n    DbNumber()\n], ApplicationVersion.prototype, \"integerVersion\", void 0);\n__decorate([\n    Column({ name: 'VERSION_STRING', nullable: false }),\n    DbString()\n], ApplicationVersion.prototype, \"versionString\", void 0);\n__decorate([\n    Column({ name: 'MAJOR_VERSION', nullable: false }),\n    DbNumber()\n], ApplicationVersion.prototype, \"majorVersion\", void 0);\n__decorate([\n    Column({ name: 'MINOR_VERSION', nullable: false }),\n    DbNumber()\n], ApplicationVersion.prototype, \"minorVersion\", void 0);\n__decorate([\n    Column({ name: 'PATCH_VERSION', nullable: false }),\n    DbNumber()\n], ApplicationVersion.prototype, \"patchVersion\", void 0);\n__decorate([\n    Column({ name: 'JSON_APPLICATION', nullable: false }),\n    Json()\n], ApplicationVersion.prototype, \"jsonApplication\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({ name: 'APPLICATION_INDEX', nullable: false })\n], ApplicationVersion.prototype, \"application\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'applicationVersion' })\n], ApplicationVersion.prototype, \"entities\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'ownApplicationVersion' })\n], ApplicationVersion.prototype, \"references\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'referencedApplicationVersion' })\n], ApplicationVersion.prototype, \"referencedBy\", void 0);\n__decorate([\n    Transient()\n], ApplicationVersion.prototype, \"entityMapByName\", void 0);\n__decorate([\n    Transient()\n], ApplicationVersion.prototype, \"referencesMapByName\", void 0);\n__decorate([\n    Transient()\n], ApplicationVersion.prototype, \"referencedByMapByName\", void 0);\nApplicationVersion = __decorate([\n    Entity(),\n    Table({ name: 'APPLICATION_VERSIONS' })\n], ApplicationVersion);\nexport { ApplicationVersion };\n//# sourceMappingURL=ApplicationVersion.js.map","import { airApi } from '@airport/aviation-communication';\nimport { Application, ApplicationColumn, ApplicationCurrentVersion, ApplicationEntity, ApplicationOperation, ApplicationProperty, ApplicationPropertyColumn, ApplicationReference, ApplicationRelation, ApplicationRelationColumn, ApplicationVersion, Domain, VersionedApplicationObject } from '../ddl/ddl';\nconst __constructors__ = {\n    Application: Application,\n    ApplicationColumn: ApplicationColumn,\n    ApplicationCurrentVersion: ApplicationCurrentVersion,\n    ApplicationEntity: ApplicationEntity,\n    ApplicationOperation: ApplicationOperation,\n    ApplicationProperty: ApplicationProperty,\n    ApplicationPropertyColumn: ApplicationPropertyColumn,\n    ApplicationReference: ApplicationReference,\n    ApplicationRelation: ApplicationRelation,\n    ApplicationRelationColumn: ApplicationRelationColumn,\n    ApplicationVersion: ApplicationVersion,\n    Domain: Domain,\n    VersionedApplicationObject: VersionedApplicationObject\n};\nexport const Q_APPLICATION = {\n    __constructors__,\n    domain: 'air',\n    name: '@airport/airspace'\n};\nexport const Q = Q_APPLICATION;\nexport function diSet(dbEntityId) {\n    return airApi.dS(Q.__dbApplication__, dbEntityId);\n}\nexport function duoDiSet(dbEntityId) {\n    return airApi.ddS(Q.__dbApplication__, dbEntityId);\n}\nairApi.setQApplication(Q_APPLICATION);\n//# sourceMappingURL=qApplication.js.map","/**\n * Column keys.\n */\nexport var column;\n(function (column) {\n    /**\n     * Name property of the column.\n     * @type {string}\n     */\n    column.NAME = 'name';\n    /**\n     * Column data types.\n     */\n    let type;\n    (function (type) {\n        type.ANY = 'any';\n        type.BOOLEAN = 'boolean';\n        type.DATE = 'Date';\n        type.NUMBER = 'number';\n        type.STRING = 'string';\n    })(type = column.type || (column.type = {}));\n})(column || (column = {}));\n/**\n * File level keys.\n */\nexport var file;\n(function (file) {\n    file.ENTITY = 'Entity';\n    file.TABLE = 'Table';\n})(file || (file = {}));\n/**\n * Entity configuration keys.\n */\nexport var entity;\n(function (entity) {\n    entity.DATABASES = 'databases';\n})(entity || (entity = {}));\n/**\n * Foreign Key configuration keys.\n */\nexport var foreignkey;\n(function (foreignkey) {\n    foreignkey.DEFINITION = 'foreignKeyDefinition';\n    foreignkey.NAME = 'name';\n    foreignkey.VALUE = 'value';\n})(foreignkey || (foreignkey = {}));\n/**\n * Index configuration keys.\n */\nexport var index;\n(function (index) {\n    index.COLUMN_LIST = 'columnList';\n    index.NAME = 'name';\n    index.UNIQUE = 'unique';\n})(index || (index = {}));\n/**\n * JoinColumn configuration keys.\n */\nexport var joincolumn;\n(function (joincolumn) {\n    joincolumn.FOREIGN_KEY = 'foreignKey';\n    joincolumn.REFERENCED_COLUMN_NAME = 'referencedColumnName';\n    joincolumn.VALUE = 'value';\n})(joincolumn || (joincolumn = {}));\n/**\n * Property annotation keys.\n */\nexport var property;\n(function (property) {\n    property.COLUMN = 'Column';\n    property.ENUM_TYPE = 'Enum';\n    property.ID = 'Id';\n    property.JOIN_COLUMN = 'JoinColumn';\n    property.JOIN_COLUMNS = 'JoinColumns';\n    property.JSON_TYPE = 'Json';\n    property.MANY_TO_ONE = 'ManyToOne';\n    property.ONE_TO_MANY = 'OneToMany';\n    // R_JOIN_COLUMN(s) are not needed since Repository relations are now\n    // standardized - simple (@ManyToOne) and (@OneToMany) suffice.\n    // export const R_JOIN_COLUMN    = 'RJoinColumn';\n    // export const R_JOIN_COLUMNS   = 'RJoinColumns';\n    property.SUB_QUERY = 'SubQuery';\n    // export const WHERE_JOIN_TABLE = 'WhereJoinTable';\n})(property || (property = {}));\n/**\n * OneToMany configuration keys.\n */\nexport var onetomany;\n(function (onetomany) {\n    onetomany.MAPPED_BY = 'mappedBy';\n})(onetomany || (onetomany = {}));\n/**\n * Table configuration keys.\n */\nexport var table;\n(function (table) {\n    table.INDEXES = 'indexes';\n    table.NAME = 'name';\n    table.PRIMARY_KEY = 'primaryKey';\n    table.APPLICATION = 'application';\n})(table || (table = {}));\n/**\n * Name of the RepositoryId column\n * @type {string}\n */\nexport var airEntity;\n(function (airEntity) {\n    airEntity.ACTOR_LID = 'ACTOR_LID';\n    airEntity.ACTOR_RECORD_ID = 'ACTOR_RECORD_ID';\n    airEntity.ENTITY_NAME = 'AirEntity';\n    airEntity.FOREIGN_KEY = 'REPOSITORY_LID';\n    airEntity.LOCAL_ENTITY_NAME = 'LocalAirEntity';\n    airEntity.REPOSITORY_LID = 'REPOSITORY_LID';\n    airEntity.ORIGINAL_ACTOR_ID = 'ORIGINAL_ACTOR_LID';\n    airEntity.ORIGINAL_ACTOR_RECORD_ID = 'ORIGINAL_ACTOR_RECORD_ID';\n    airEntity.ORIGINAL_REPOSITORY_ID = 'ORIGINAL_REPOSITORY_LID';\n    airEntity.SYS_WIDE_OP_ID_APPLICATION = 'air____at_airport_slash_airport_dash_code';\n    airEntity.SYS_WIDE_OP_ID_ENTITY = 'SystemWideOperationId';\n    airEntity.systemWideOperationId = 'systemWideOperationId';\n    airEntity.SYSTEM_WIDE_OPERATION_ID = 'SYSTEM_WIDE_OPERATION_LID';\n})(airEntity || (airEntity = {}));\n//# sourceMappingURL=Dictionary.js.map","/**\n * SQL Join contentType.\n */\nexport var JoinType;\n(function (JoinType) {\n    JoinType[\"FULL_JOIN\"] = \"FULL_JOIN\";\n    JoinType[\"INNER_JOIN\"] = \"INNER_JOIN\";\n    JoinType[\"LEFT_JOIN\"] = \"LEFT_JOIN\";\n    JoinType[\"RIGHT_JOIN\"] = \"RIGHT_JOIN\";\n})(JoinType || (JoinType = {}));\n/**\n * Type of Entity Relation\n */\nexport var EntityRelationType;\n(function (EntityRelationType) {\n    EntityRelationType[\"ONE_TO_MANY\"] = \"ONE_TO_MANY\";\n    EntityRelationType[\"MANY_TO_ONE\"] = \"MANY_TO_ONE\";\n})(EntityRelationType || (EntityRelationType = {}));\n/**\n * Serialized relation contentType.\n */\nexport var JSONRelationType;\n(function (JSONRelationType) {\n    // Join of an entity with the ON clause\n    JSONRelationType[\"ENTITY_JOIN_ON\"] = \"ENTITY_JOIN_ON\";\n    // Join of an entity via a application relation\n    JSONRelationType[\"ENTITY_APPLICATION_RELATION\"] = \"ENTITY_APPLICATION_RELATION\";\n    // The root entity in a join\n    JSONRelationType[\"ENTITY_ROOT\"] = \"ENTITY_ROOT\";\n    // Join of a sub-query (with the ON clause)\n    JSONRelationType[\"SUB_QUERY_JOIN_ON\"] = \"SUB_QUERY_JOIN_ON\";\n    // The root sub-query in a join\n    JSONRelationType[\"SUB_QUERY_ROOT\"] = \"SUB_QUERY_ROOT\";\n})(JSONRelationType || (JSONRelationType = {}));\n//# sourceMappingURL=Relation.js.map","/**\n * Order of a sorted field, as specified in the ORDER BY clause.\n */\nexport var SortOrder;\n(function (SortOrder) {\n    SortOrder[\"ASCENDING\"] = \"ASCENDING\";\n    SortOrder[\"DESCENDING\"] = \"DESCENDING\";\n})(SortOrder || (SortOrder = {}));\n//# sourceMappingURL=FieldInOrderBy.js.map","/**\n * Extracted from http://www.w3schools.com/sql/sql_functions.asp\n */\nexport var SqlFunction;\n(function (SqlFunction) {\n    // SQL Aggregate Functions\n    // SQL aggregate functions return a single value, calculated from values in a column.\n    // Useful Aggregate functions:\n    SqlFunction[\"ABS\"] = \"ABS\";\n    SqlFunction[\"AVG\"] = \"AVG\";\n    SqlFunction[\"COUNT\"] = \"COUNT\";\n    //FIRST, // not in SqLite: Returns the first value\n    //LAST, // not in SqLite: Returns the last value\n    SqlFunction[\"MAX\"] = \"MAX\";\n    SqlFunction[\"MIN\"] = \"MIN\";\n    SqlFunction[\"SUM\"] = \"SUM\";\n    //SQL Scalar functions\n    //SQL scalar functions return a single value, based on the input value.\n    // Useful scalar functions:\n    SqlFunction[\"UCASE\"] = \"UCASE\";\n    SqlFunction[\"LCASE\"] = \"LCASE\";\n    SqlFunction[\"MID\"] = \"MID\";\n    SqlFunction[\"LEN\"] = \"LEN\";\n    SqlFunction[\"ROUND\"] = \"ROUND\";\n    SqlFunction[\"NOW\"] = \"NOW\";\n    SqlFunction[\"FORMAT\"] = \"FORMAT\";\n    // Added\n    SqlFunction[\"REPLACE\"] = \"REPLACE\";\n    SqlFunction[\"TRIM\"] = \"TRIM\";\n    // Other\n    SqlFunction[\"DISTINCT\"] = \"DISTINCT\";\n    SqlFunction[\"EXISTS\"] = \"EXISTS\";\n    // Algebra Operators\n    SqlFunction[\"DIVIDE\"] = \"DIVIDE\";\n    SqlFunction[\"MINUS\"] = \"MINUS\";\n    SqlFunction[\"MODULUS\"] = \"MODULUS\";\n    SqlFunction[\"MULTIPLY\"] = \"MULTIPLY\";\n    SqlFunction[\"PLUS\"] = \"PLUS\";\n    // Concatenate '||' functions\n    SqlFunction[\"CONCATENATE\"] = \"CONCATENATE\";\n    // Other functions\n    SqlFunction[\"COALESCE\"] = \"COALESCE\";\n})(SqlFunction || (SqlFunction = {}));\n//# sourceMappingURL=Functions.js.map","/**\n * All possible types of serialized JSON clauses.\n */\nexport var JSONClauseObjectType;\n(function (JSONClauseObjectType) {\n    JSONClauseObjectType[\"FIELD\"] = \"FIELD\";\n    JSONClauseObjectType[\"FIELD_FUNCTION\"] = \"FIELD_FUNCTION\";\n    JSONClauseObjectType[\"FIELD_QUERY\"] = \"FIELD_QUERY\";\n    JSONClauseObjectType[\"DISTINCT_FUNCTION\"] = \"DISTINCT_FUNCTION\";\n    JSONClauseObjectType[\"EXISTS_FUNCTION\"] = \"EXISTS_FUNCTION\";\n    JSONClauseObjectType[\"MANY_TO_ONE_RELATION\"] = \"MANY_TO_ONE_RELATION\"; // A many-to-one relation (used in a query)\n})(JSONClauseObjectType || (JSONClauseObjectType = {}));\n/**\n * Types of data\n */\nexport var SQLDataType;\n(function (SQLDataType) {\n    // Allowing ANY allows developers to de-type their data\n    SQLDataType[\"ANY\"] = \"ANY\";\n    SQLDataType[\"BOOLEAN\"] = \"BOOLEAN\";\n    SQLDataType[\"DATE\"] = \"DATE\";\n    // Allowing JSON allows developers to de-normalize their data\n    SQLDataType[\"JSON\"] = \"JSON\";\n    SQLDataType[\"NUMBER\"] = \"NUMBER\";\n    SQLDataType[\"STRING\"] = \"STRING\";\n})(SQLDataType || (SQLDataType = {}));\nexport function getSqlDataType(type) {\n    switch (type) {\n        case 'any':\n            return SQLDataType.ANY;\n        case 'boolean':\n            return SQLDataType.BOOLEAN;\n        case 'Date':\n            return SQLDataType.DATE;\n        case 'Json':\n            return SQLDataType.JSON;\n        case 'number':\n            return SQLDataType.NUMBER;\n        case 'string':\n            return SQLDataType.STRING;\n        default:\n            throw new Error(`Uknown type: ${type}`);\n    }\n}\n//# sourceMappingURL=JSONClause.js.map","export var EntityState;\n(function (EntityState) {\n    EntityState[\"CREATE\"] = \"CREATE\";\n    EntityState[\"DATE\"] = \"DATE\";\n    EntityState[\"DELETE\"] = \"DELETE\";\n    // Originally it was PARENT_SCHEMA_ID and was meant for @ManyToOne() references\n    // when nothing is returned except for the id fields of the relation, however\n    // this schenario was sufficiently covered by STUB - id's only stub.  Now it's\n    // PARENT_SCHEMA_ID and currently used only for save operations\n    // when the entity referenced via the relation belongs to another application.\n    // This is because save does not allow to peristance of records across application\n    // boundaries (that should be done via an @Api() which will run validation and\n    // other logic).\n    // In that case we want to keep the ID of the record from another application\n    // so that it can be saved in the record of the current application that is\n    // referencing it.\n    EntityState[\"PARENT_SCHEMA_ID\"] = \"PARENT_SCHEMA_LID\";\n    // A \"Pass through object\" is an existing that is present in the object graph\n    // but no operations are performed on it\n    EntityState[\"PASS_THROUGH\"] = \"PASS_THROUGH\";\n    // An \"Id's only\" stub\n    EntityState[\"STUB\"] = \"STUB\";\n    EntityState[\"UPDATE\"] = \"UPDATE\";\n    // Json fields promote application de-normalization and a currently not implemented\n    // except for internal APIs\n    // RESULT_JSON = 'RESULT_JSON',\n    // RESULT_JSON_ARRAY = 'RESULT_JSON_ARRAY'\n})(EntityState || (EntityState = {}));\n//# sourceMappingURL=EntityStateManager.js.map","/**\n * Category of a SQL contentType\n */\nexport var OperationCategory;\n(function (OperationCategory) {\n    OperationCategory[\"BOOLEAN\"] = \"BOOLEAN\";\n    OperationCategory[\"DATE\"] = \"DATE\";\n    OperationCategory[\"FUNCTION\"] = \"FUNCTION\";\n    OperationCategory[\"LOGICAL\"] = \"LOGICAL\";\n    OperationCategory[\"NUMBER\"] = \"NUMBER\";\n    OperationCategory[\"STRING\"] = \"STRING\";\n    OperationCategory[\"UNTYPED\"] = \"UNTYPED\"; // Operation on an untyped field\n})(OperationCategory || (OperationCategory = {}));\nexport var SqlOperator;\n(function (SqlOperator) {\n    SqlOperator[\"AND\"] = \"AND\";\n    SqlOperator[\"EQUALS\"] = \"EQUALS\";\n    SqlOperator[\"EXISTS\"] = \"EXISTS\";\n    SqlOperator[\"GREATER_THAN\"] = \"GREATER_THAN\";\n    SqlOperator[\"GREATER_THAN_OR_EQUALS\"] = \"GREATER_THAN_OR_EQUALS\";\n    SqlOperator[\"IN\"] = \"IN\";\n    SqlOperator[\"IS_NOT_NULL\"] = \"IS_NOT_NULL\";\n    SqlOperator[\"IS_NULL\"] = \"IS_NULL\";\n    SqlOperator[\"LESS_THAN\"] = \"LESS_THAN\";\n    SqlOperator[\"LESS_THAN_OR_EQUALS\"] = \"LESS_THAN_OR_EQUALS\";\n    SqlOperator[\"LIKE\"] = \"LIKE\";\n    SqlOperator[\"OR\"] = \"OR\";\n    SqlOperator[\"NOT\"] = \"NOT\";\n    SqlOperator[\"NOT_EQUALS\"] = \"NOT_EQUALS\";\n    SqlOperator[\"NOT_IN\"] = \"NOT_IN\";\n})(SqlOperator || (SqlOperator = {}));\nexport var CRUDOperation;\n(function (CRUDOperation) {\n    CRUDOperation[\"CREATE\"] = \"CREATE\";\n    CRUDOperation[\"READ\"] = \"READ\";\n    CRUDOperation[\"UPDATE\"] = \"UPDATE\";\n    CRUDOperation[\"DELETE\"] = \"DELETE\";\n})(CRUDOperation || (CRUDOperation = {}));\n//# sourceMappingURL=Operation.js.map","export var TransactionType;\n(function (TransactionType) {\n    TransactionType[\"LOCAL\"] = \"LOCAL\";\n    TransactionType[\"REMOTE_SYNC\"] = \"REMOTE_SYNC\";\n})(TransactionType || (TransactionType = {}));\n//# sourceMappingURL=TransactionType.js.map","export var ChangeType;\n(function (ChangeType) {\n    ChangeType[\"DELETE_ROWS\"] = \"DELETE_ROWS\";\n    ChangeType[\"INSERT_VALUES\"] = \"INSERT_VALUES\";\n    ChangeType[\"UPDATE_ROWS\"] = \"UPDATE_ROWS\";\n})(ChangeType || (ChangeType = {}));\n//# sourceMappingURL=ChangeType.js.map","/**\n * Possible distribution strategies for Change List Federations.\n *\n * A common (and only currently supported) basic setup:\n *\n * There is always a Single Shared Store (S3).\n * There are always at least one or more 'Personal' Stores.\n *\n * The stores communicate via servers that propagate data from\n * personal stores to the shared store.\n *\n * What differs is how this propagation is accomplished.\n *\n * In the future, we'll add a truly distributed setup, without any S3s.\n */\nexport var DistributionStrategy;\n(function (DistributionStrategy) {\n    /**\n     *  The server is aware of all Personal Stores and it\n     *  subscribes to any possible changes in any of these stores.\n     *  It is the server's responsibility to update the S3.\n     */\n    DistributionStrategy[\"S3_SECURE_POLL\"] = \"S3_SECURE_POLL\";\n    /**\n     * There is no need for a server, all clients are aware of S3\n     * and are responsible for pushing their changes to it.\n     */\n    DistributionStrategy[\"S3_DISTIBUTED_PUSH\"] = \"S3_DISTIBUTED_PUSH\";\n})(DistributionStrategy || (DistributionStrategy = {}));\n//# sourceMappingURL=DistributionStrategy.js.map","export var QueryType;\n(function (QueryType) {\n    QueryType[\"DDL\"] = \"DDL\";\n    QueryType[\"SELECT\"] = \"SELECT\";\n    QueryType[\"MUTATE\"] = \"MUTATE\";\n})(QueryType || (QueryType = {}));\n//# sourceMappingURL=IStoreOperator.js.map","export var PlatformType;\n(function (PlatformType) {\n    PlatformType[\"GOOGLE_DOCS\"] = \"GOOGLE_DOCS\";\n    PlatformType[\"IN_MEMORY\"] = \"IN_MEMORY\";\n    PlatformType[\"OFFLINE\"] = \"OFFLINE\";\n    PlatformType[\"STUB\"] = \"STUB\";\n})(PlatformType || (PlatformType = {}));\n//# sourceMappingURL=PatformType.js.map","export var StoreType;\n(function (StoreType) {\n    StoreType[\"COCKROACHDB\"] = \"COCKROACHDB\";\n    StoreType[\"MYSQL\"] = \"MYSQL\";\n    StoreType[\"POSTGRESQL\"] = \"POSTGRESQL\";\n    StoreType[\"REMOTE\"] = \"REMOTE\";\n    StoreType[\"SQLITE\"] = \"SQLITE\";\n    StoreType[\"SQLJS\"] = \"SQLJS\";\n    StoreType[\"WEB_SQL\"] = \"WEB_SQL\";\n})(StoreType || (StoreType = {}));\nexport var IdGeneration;\n(function (IdGeneration) {\n    IdGeneration[\"ENTITY_CHANGE_ID\"] = \"ENTITY_CHANGE_LID\";\n})(IdGeneration || (IdGeneration = {}));\n//# sourceMappingURL=storeInfo.js.map","export var JsonStatementType;\n(function (JsonStatementType) {\n    JsonStatementType[\"ENTITY_QUERY\"] = \"ENTITY_QUERY\";\n    JsonStatementType[\"NON_ENTITY_QUERY\"] = \"NON_ENTITY_QUERY\";\n})(JsonStatementType || (JsonStatementType = {}));\n//# sourceMappingURL=Query.js.map","export var QueryResultType;\n(function (QueryResultType) {\n    // Ordered query result with bridging for all MtOs and OtM\n    QueryResultType[\"ENTITY_GRAPH\"] = \"ENTITY_GRAPH\";\n    // Ordered query result, with objects grouped hierarchically by entity\n    QueryResultType[\"ENTITY_TREE\"] = \"ENTITY_TREE\";\n    // Ordered query result, with objects grouped hierarchically by mapping\n    QueryResultType[\"TREE\"] = \"TREE\";\n    // Flat array query result, with no forced ordering or grouping\n    QueryResultType[\"SHEET\"] = \"SHEET\";\n    // A single field query result, with no forced ordering or grouping\n    QueryResultType[\"FIELD\"] = \"FIELD\";\n    // Raw result, returned by a SQL string query\n    QueryResultType[\"RAW\"] = \"RAW\";\n})(QueryResultType || (QueryResultType = {}));\n//# sourceMappingURL=QueryResultType.js.map","export var OperationType;\n(function (OperationType) {\n    OperationType[\"DELETE\"] = \"DELETE\";\n    OperationType[\"FIND_ONE_GRAPH\"] = \"FIND_ONE_GRAPH\";\n    OperationType[\"FIND_ONE_TREE\"] = \"FIND_ONE_TREE\";\n    OperationType[\"FIND_GRAPH\"] = \"FIND_GRAPH\";\n    OperationType[\"FIND_TREE\"] = \"FIND_TREE\";\n    OperationType[\"SAVE\"] = \"SAVE\";\n    OperationType[\"SEARCH_ONE_GRAPH\"] = \"SEARCH_ONE_GRAPH\";\n    OperationType[\"SEARCH_ONE_TREE\"] = \"SEARCH_ONE_TREE\";\n    OperationType[\"SEARCH_GRAPH\"] = \"SEARCH_GRAPH\";\n    OperationType[\"SEARCH_TREE\"] = \"SEARCH_TREE\";\n})(OperationType || (OperationType = {}));\nexport var QueryInputKind;\n(function (QueryInputKind) {\n    QueryInputKind[\"PARAMETER\"] = \"PARAMETER\";\n    QueryInputKind[\"Q\"] = \"Q\";\n    QueryInputKind[\"QENTITY\"] = \"QENTITY\";\n})(QueryInputKind || (QueryInputKind = {}));\nexport var QueryParameterType;\n(function (QueryParameterType) {\n    QueryParameterType[\"BOOLEAN\"] = \"BOOLEAN\";\n    QueryParameterType[\"DATE\"] = \"DATE\";\n    QueryParameterType[\"NUMBER\"] = \"NUMBER\";\n    QueryParameterType[\"STRING\"] = \"STRING\";\n})(QueryParameterType || (QueryParameterType = {}));\n//# sourceMappingURL=Operation.js.map","export var ApplicationStatus;\n(function (ApplicationStatus) {\n    ApplicationStatus[\"CURRENT\"] = \"CURRENT\";\n    ApplicationStatus[\"MISSING\"] = \"MISSING\";\n    ApplicationStatus[\"NEEDS_UPGRADES\"] = \"NEEDS_UPGRADES\";\n    ApplicationStatus[\"STUB\"] = \"STUB\";\n})(ApplicationStatus || (ApplicationStatus = {}));\n//# sourceMappingURL=ApplicationStatus.js.map","import { ColumnMap } from \"./ColumnMap\";\n/**\n * Created by Papa on 9/10/2016.\n */\nexport const ALL_TABLE_COLUMNS = 'A';\nexport class TableMap {\n    constructor(applicationVersionId, tableMap = {}) {\n        this.applicationVersionId = applicationVersionId;\n        this.tableMap = tableMap;\n    }\n    ensure(tableIndex, allColumns = false, ColumnMapConstructor = ColumnMap) {\n        let tableColumnMap = this.tableMap[tableIndex];\n        if (!tableColumnMap) {\n            tableColumnMap = new ColumnMapConstructor(tableIndex, allColumns);\n            this.tableMap[tableIndex] = tableColumnMap;\n        }\n        return tableColumnMap;\n    }\n    existsByStructure(tableIndex, columnIndex) {\n        let tableColumnMap = this.tableMap[tableIndex];\n        if (!tableColumnMap) {\n            return false;\n        }\n        return !!tableColumnMap.columnMap[columnIndex];\n    }\n}\n//# sourceMappingURL=TableMap.js.map","import { ALL_TABLE_COLUMNS } from \"./TableMap\";\nexport class ColumnMap {\n    constructor(tableIndex, allColumns = false) {\n        this.tableIndex = tableIndex;\n        this.columnMap = {};\n        if (allColumns) {\n            this.columnMap[ALL_TABLE_COLUMNS] = true;\n        }\n    }\n    ensure(columnIndex) {\n        this.columnMap[columnIndex] = true;\n    }\n}\n//# sourceMappingURL=ColumnMap.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nlet DbApplicationUtils = class DbApplicationUtils {\n    getFullApplication_Name({ domain, name, }) {\n        if (domain.name) {\n            domain = domain.name;\n        }\n        return this.getFullApplication_NameFromDomainAndName(domain, name);\n    }\n    getFullApplication_NameFromDomainAndName(domainName, applicationName) {\n        if (domainName.indexOf('___') > -1) {\n            throw new Error('Domain Name cannot contain \"___\" (3 consecutive underscores) in it.');\n        }\n        if (domainName.endsWith('.')\n            || domainName.endsWith('-')\n            || domainName.endsWith(':')\n            || domainName.endsWith('__')) {\n            throw new Error('Domain Name cannot end with \".\", \"-\", \":\" or \"__\"');\n        }\n        const domainPrefix = domainName\n            .replace(/\\./g, '_dot_')\n            .replace(/-/g, '_dash_')\n            .replace(/:/g, '_colon_');\n        if (domainPrefix.indexOf('___') > -1) {\n            throw new Error('Domain Name cannot have with \".\", \"-\", \":\", or \"_\" right next to each other.');\n        }\n        if (applicationName.indexOf('_') > -1) {\n            throw new Error('Application Name cannot contain \"_\" in it.');\n        }\n        if (applicationName.indexOf('@') !== applicationName.lastIndexOf('@')) {\n            throw new Error('Application Name cannot have more than one \"@\" in it.');\n        }\n        if (applicationName.indexOf('@') > 0) {\n            throw new Error('Application Name cannot contain \"@\" after the first character in it.');\n        }\n        if (applicationName.indexOf('/') !== applicationName.lastIndexOf('/')) {\n            throw new Error('Application Name cannot have more than one \"/\" in it.');\n        }\n        const applicationPrefix = applicationName\n            .replace(/@/g, '_at_')\n            .replace(/\\//g, '_slash_')\n            .replace(/-/g, '_dash_');\n        if (applicationPrefix.endsWith('_')) {\n            throw new Error('Application Name cannot end with \"@\", \"/\" or \".\"');\n        }\n        if (applicationPrefix.indexOf('___') > -1) {\n            throw new Error('Application Name cannot have with \"@\", \"/\", \".\" or \"_\" right next to each other.');\n        }\n        let fullApplication_Name = `${domainPrefix}___${applicationPrefix}`;\n        if (fullApplication_Name.endsWith('_dash_runtime')) {\n            fullApplication_Name = fullApplication_Name.substring(0, fullApplication_Name.length - 13);\n        }\n        return fullApplication_Name;\n    }\n    getSequenceName(prefixedTableName, columnName) {\n        return `${prefixedTableName}_${columnName}__SEQUENCE`;\n    }\n};\nDbApplicationUtils = __decorate([\n    Injected()\n], DbApplicationUtils);\nexport { DbApplicationUtils };\n//# sourceMappingURL=DbApplicationUtils.js.map","import { TableMap } from \"./TableMap\";\nexport class ApplicationMap {\n    constructor(applicationMap = {}) {\n        this.applicationMap = applicationMap;\n    }\n    ensureEntity(entity, allColumns = false, TableMapConstructor = TableMap) {\n        return this.ensure(entity.applicationVersion._localId, entity.index, allColumns, TableMapConstructor);\n    }\n    ensure(applicationVersionLocalId, tableIndex, allColumns = false, TableMapConstructor = TableMap) {\n        let tableMap = this.applicationMap[applicationVersionLocalId];\n        if (!tableMap) {\n            tableMap = new TableMapConstructor(applicationVersionLocalId);\n            this.applicationMap[applicationVersionLocalId] = tableMap;\n        }\n        return tableMap.ensure(tableIndex, allColumns);\n    }\n    existsByStructure(applicationVersionLocalId, tableIndex, columnIndex) {\n        let tableMap = this.applicationMap[applicationVersionLocalId];\n        if (!tableMap) {\n            return false;\n        }\n        return tableMap.existsByStructure(tableIndex, columnIndex);\n    }\n}\n//# sourceMappingURL=ApplicationMap.js.map","import { ColumnMap } from \"../query/ColumnMap\";\nexport class SyncColumnMap extends ColumnMap {\n    constructor(tableIndex, allColumns = false) {\n        super(tableIndex, allColumns);\n    }\n}\n//# sourceMappingURL=SyncColumnMap.js.map","import { ALL_TABLE_COLUMNS, TableMap } from \"../query/TableMap\";\nimport { SyncColumnMap } from \"./SyncColumnMap\";\n/**\n * Created by Papa on 10/7/2016.\n */\nexport class SyncTableMap extends TableMap {\n    constructor(applicationIndex, tableMap) {\n        super(applicationIndex, tableMap);\n    }\n    ensureEntity(tableIndex, allColumns = false) {\n        return super.ensure(tableIndex, allColumns, SyncColumnMap);\n    }\n    intersects(columnMap) {\n        for (let tableIndex in this.tableMap) {\n            if (columnMap.tableMap[tableIndex]) {\n                let tableColumnMap = this.tableMap[tableIndex];\n                let otherTableColumnMap = columnMap.tableMap[tableIndex];\n                if (tableColumnMap[ALL_TABLE_COLUMNS] || tableColumnMap[ALL_TABLE_COLUMNS]) {\n                    return true;\n                }\n                for (let columnIndex in tableColumnMap.columnMap) {\n                    if (otherTableColumnMap.columnMap[columnIndex]) {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=SyncTableMap.js.map","import { ApplicationMap } from \"../query/ApplicationMap\";\nimport { SyncTableMap } from \"./SyncTableMap\";\nexport class SyncApplicationMap extends ApplicationMap {\n    constructor(applicationMap) {\n        super(applicationMap);\n    }\n    ensureEntity(entity, allColumns = false) {\n        return super.ensureEntity(entity, allColumns, SyncTableMap);\n    }\n    intersects(applicationMap) {\n        for (const applicationIndex in this.applicationMap) {\n            if (applicationMap.applicationMap[applicationIndex]) {\n                const syncTableMap = new SyncTableMap(parseInt(applicationIndex), this.applicationMap[applicationIndex].tableMap);\n                if (syncTableMap.intersects(applicationMap.applicationMap[applicationIndex])) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=SyncApplicationMap.js.map","export var BlockSyncStatus;\n(function (BlockSyncStatus) {\n    // Sync request has been sent but no reply has come yet\n    BlockSyncStatus[\"SYNCHRONIZING\"] = \"SYNCHRONIZING\";\n    // Sync has been acknowledged by the AGT\n    BlockSyncStatus[\"SYNCHRONIZED\"] = \"SYNCHRONIZED\";\n    // Sync has not been acked by AGT so, requesting sync status from AGT\n    BlockSyncStatus[\"REQUESTING_SYNC_STATUS\"] = \"REQUESTING_SYNC_STATUS\";\n    /*\n       Do not re-sync until AGT starts responds with a request for more data.\n       NOTE: no need of a separate status, state is maintained on SharingNode level.\n     */\n    // RESYNC_SUSPENDED = 'RESYNC_SUSPENDED',\n    // AGT requested re-sync for this block, send it again\n    BlockSyncStatus[\"RESYNC_REQUESTED\"] = \"RESYNC_REQUESTED\";\n})(BlockSyncStatus || (BlockSyncStatus = {}));\nexport var RepositorySyncStatus;\n(function (RepositorySyncStatus) {\n    // Actively syncing this repository\n    RepositorySyncStatus[\"ACTIVE\"] = \"ACTIVE\";\n    // AGT is not responding, temporarily pending AGT responses\n    RepositorySyncStatus[\"PENDING\"] = \"PENDING\";\n    // AGT (or TM) delayed sync of this repository (for a period of time)\n    RepositorySyncStatus[\"DELAYED\"] = \"DELAYED\";\n    // AGT (or TM) suspended sync of this repository\n    RepositorySyncStatus[\"SUSPENDED\"] = \"SUSPENDED\";\n    // AGT (or TM) temporarily rerouted syncing of this repository to a different AGT\n    RepositorySyncStatus[\"TEMPORARILY_REROUTED\"] = \"TEMPORARILY_REROUTED\";\n    // AGT (or TM) permanently rerouted syncing of this repository to a different AGT\n    RepositorySyncStatus[\"PERMANENTLY_REROUTED\"] = \"PERMANENTLY_REROUTED\";\n})(RepositorySyncStatus || (RepositorySyncStatus = {}));\nexport var TerminalSyncStatus;\n(function (TerminalSyncStatus) {\n    // Terminal is actively syncing\n    TerminalSyncStatus[\"ACTIVE\"] = \"ACTIVE\";\n    // Terminal syncing has been suspended\n    TerminalSyncStatus[\"SUSPENDED\"] = \"SUSPENDED\";\n})(TerminalSyncStatus || (TerminalSyncStatus = {}));\n//# sourceMappingURL=SyncStatus.js.map","export function setSeqGen(sequenceGenerator) {\n    SEQ_GEN = sequenceGenerator;\n}\nexport var SEQ_GEN;\n//# sourceMappingURL=SequenceGenerator.js.map","export function ensureChildArray(parentContainer, index) {\n    let childArray;\n    if (parentContainer instanceof Map) {\n        childArray = parentContainer.get(index);\n    }\n    else {\n        childArray = parentContainer[index];\n    }\n    if (!childArray) {\n        childArray = [];\n        if (parentContainer instanceof Map) {\n            parentContainer.set(index, childArray);\n        }\n        else {\n            parentContainer[index] = childArray;\n        }\n    }\n    return childArray;\n}\nexport function ensureChildMap(parentContainer, index) {\n    let childObject;\n    if (parentContainer instanceof Map) {\n        childObject = parentContainer.get(index);\n        if (!childObject) {\n            childObject = {};\n            parentContainer.set(index, childObject);\n        }\n    }\n    else {\n        childObject = parentContainer[index];\n        if (!childObject) {\n            childObject = {};\n            parentContainer[index] = childObject;\n        }\n    }\n    return childObject;\n}\nexport function ensureChildJsMap(parentContainer, index) {\n    let childMap = parentContainer.get(index);\n    if (!childMap) {\n        childMap = new Map();\n        parentContainer.set(index, childMap);\n    }\n    return childMap;\n}\nexport function ensureChildJsSet(parentContainer, index) {\n    let childSet = parentContainer.get(index);\n    if (!childSet) {\n        childSet = new Set();\n        parentContainer.set(index, childSet);\n    }\n    return childSet;\n}\nexport function undefinedToNull(value) {\n    return value === undefined ? null : value;\n}\n//# sourceMappingURL=DatastructureUtils.js.map","import { lib } from '@airport/direction-indicator';\nimport { DbApplicationUtils } from './implementation/query/DbApplicationUtils';\nconst groundControl = lib('ground-control');\nexport const DB_APPLICATION_UTILS = groundControl.token({\n    class: DbApplicationUtils,\n    interface: 'IDbApplicationUtils',\n    token: 'DB_APPLICATION_UTILS'\n});\nexport const ENTITY_STATE_MANAGER = groundControl.token({\n    class: null,\n    interface: 'IEntityStateManager',\n    token: 'ENTITY_STATE_MANAGER'\n});\nexport const SEQUENCE_GENERATOR = groundControl.token({\n    class: null,\n    interface: 'ISequenceGenerator',\n    token: 'SEQUENCE_GENERATOR'\n});\nexport const TRANSACTIONAL_CONNECTOR = groundControl.token({\n    class: null,\n    interface: 'ITransactionalConnector',\n    token: 'TRANSACTIONAL_CONNECTOR'\n});\nexport const UPDATE_CACHE_MANAGER = groundControl.token({\n    class: null,\n    interface: 'IUpdateCacheManager',\n    token: 'UPDATE_CACHE_MANAGER'\n});\nTRANSACTIONAL_CONNECTOR.setDependencies({\n    dbApplicationUtils: DB_APPLICATION_UTILS,\n});\n//# sourceMappingURL=tokens.js.map","export const NEW_RECORD_FIELDS = {\n    actor: null,\n    _actorRecordId: null,\n    ageSuitability: 0,\n    originalActor: null,\n    originalActorRecordId: null,\n    originalRepository: null,\n    systemWideOperationId: null,\n};\nexport function ANOTHER(a, b) {\n}\n;\nexport const Y = {\n    airportSelectField: true,\n    insert: true,\n    update: false\n};\nexport const ALL_FIELDS = {\n    __allFields__: true\n};\nexport const YES = Y;\nexport function convertToY(object) {\n    object.airportSelectField = true;\n}\nexport function isY(object) {\n    return object && object.airportSelectField === true;\n}\nexport const N = {\n    airportSelectField: false,\n};\nexport const NO = N;\nexport function isN(object) {\n    return object && object.airportSelectField === false;\n}\nexport const I = {\n    insert: true,\n    null: false\n};\nexport const INSERT = I;\nexport function isInsert(object) {\n    return object && object.insert === true;\n}\nexport const IN = {\n    insert: true,\n    null: true\n};\nexport const INSERT_OR_NULL = IN;\nexport function isInsertOrNull(object) {\n    return object && object.insert === true && object.null === true;\n}\nexport const U = {\n    update: true\n};\nexport const UPDATE = U;\nexport function isUpdate(object) {\n    return object && object.update === true;\n}\nexport const IU = {\n    insert: true,\n    update: true,\n};\nexport const INSERT_OR_UPDATE = IU;\nexport function isInsertOrUpdate(object) {\n    return object && object.insert === true && object.update === true;\n}\nexport const UN = {\n    update: true,\n    null: true\n};\nexport const UPDATE_OR_NULL = UN;\nexport function isUpdateOrNull(object) {\n    return object && object.update === true && object.null === true;\n}\nexport const IUN = {\n    insertOrOther: true,\n};\nexport const INSERT_OR_UPDATE_OR_NULL = UN;\nexport function isInsertOrUpdateOrNull(object) {\n    return object && object.insertOrOther === true;\n}\nexport const A = IUN;\nexport const ALL = IUN;\nexport const UPSERT = IUN;\nexport const isUpsert = isInsertOrUpdateOrNull;\nexport const ID = {\n    airportSelectField: 'ID'\n};\nexport function convertToID(object) {\n    object.airportSelectField = 'ID';\n}\nexport function isID(object) {\n    return object && object.airportSelectField === 'ID';\n}\nfunction cleanErrorMessageSelectStatement(errorMessageSelectStatement) {\n    for (let propertyName in errorMessageSelectStatement) {\n        let property = errorMessageSelectStatement[propertyName];\n        if (!(property instanceof Object)) {\n            continue;\n        }\n        if (property.hasOwnProperty(\"airportSelectField\")) {\n            switch (property.airportSelectField) {\n                case \"LID\":\n                    errorMessageSelectStatement[propertyName] = \"LID\";\n                    break;\n                case true:\n                    errorMessageSelectStatement[propertyName] = \"Y\";\n                    break;\n                case false:\n                    errorMessageSelectStatement[propertyName] = \"N\";\n                    break;\n            }\n        }\n        else {\n            cleanErrorMessageSelectStatement(property);\n        }\n    }\n}\nexport function getErrorMessageSelectStatement(jsonSelectClause) {\n    const errorMessageSelectStatement = JSON.parse(JSON.stringify(jsonSelectClause));\n    cleanErrorMessageSelectStatement(errorMessageSelectStatement);\n    return JSON.stringify(errorMessageSelectStatement, null, 4);\n}\n//# sourceMappingURL=Query.js.map","/**\n * Created by Papa on 10/18/2016.\n */\nconst ALIASES = ['a', 'b', 'c', 'd', 'e',\n    'f', 'g', 'h', 'i', 'j',\n    'k', 'l', 'm', 'n', 'o',\n    'p', 'q', 'r', 's', 't',\n    'u', 'v', 'w', 'x', 'y', 'z'];\nexport class AliasCache {\n    constructor(aliasPrefix = '') {\n        this.aliasPrefix = aliasPrefix;\n        this.reset();\n    }\n    getFollowingAlias() {\n        let currentAlias = this.lastAlias;\n        for (var i = 2; i >= 0; i--) {\n            let currentIndex = currentAlias[i];\n            currentIndex = (currentIndex + 1) % 26;\n            currentAlias[i] = currentIndex;\n            if (currentIndex !== 0) {\n                break;\n            }\n        }\n        let aliasString = this.aliasPrefix;\n        for (var i = 0; i < 3; i++) {\n            aliasString += ALIASES[currentAlias[i]];\n        }\n        if (aliasString === 'add') {\n            aliasString = this.getFollowingAlias();\n        }\n        return aliasString;\n    }\n    reset() {\n        this.lastAlias = [-1, -1, -1];\n    }\n}\nexport class AliasMap {\n    constructor(aliasCache) {\n        this.aliasCache = aliasCache;\n        this.aliasMap = new Map();\n    }\n    getNextAlias(object) {\n        if (this.hasAliasFor(object)) {\n            return this.getExistingAlias(object);\n        }\n        let aliasString = this.aliasCache.getFollowingAlias();\n        this.aliasMap.set(object, aliasString);\n        return aliasString;\n    }\n    hasAliasFor(object) {\n        return this.aliasMap.has(object);\n    }\n}\nexport class EntityAliases extends AliasMap {\n    constructor(entityAliasCache = new AliasCache('E'), columnAliasCache = new AliasCache('C'), parameterAliasCache = new AliasCache('P')) {\n        super(entityAliasCache);\n        this.columnAliasCache = columnAliasCache;\n        this.parameterAliases = new ParameterAliases(parameterAliasCache);\n    }\n    getParams( //\n    ) {\n        return this.parameterAliases;\n    }\n    getNewFieldColumnAliases() {\n        return new FieldColumnAliases(this, this.columnAliasCache);\n    }\n    getExistingAlias(entity) {\n        if (!this.hasAliasFor(entity)) {\n            throw new Error(`No alias found for entity ${entity.__driver__.dbEntity.name}`);\n        }\n        return this.aliasMap.get(entity);\n    }\n    getOnlyAlias( //\n    ) {\n        if (this.aliasMap.size !== 1) {\n            return `Expecting only 1 entry in Field's alias map`;\n        }\n        return this.aliasMap.get(this.aliasMap.keys().next().value);\n    }\n}\nexport class ParameterAliases extends AliasMap {\n    constructor(aliasCache) {\n        super(aliasCache);\n    }\n    getNextAlias(object) {\n        if (this.hasAliasFor(object)) {\n            return this.getExistingAlias(object).alias;\n        }\n        let aliasString = this.aliasCache.getFollowingAlias();\n        let parameter = {\n            alias: aliasString,\n            value: object.value\n        };\n        this.aliasMap.set(object, parameter);\n        return aliasString;\n    }\n    getExistingAlias(field) {\n        if (!this.hasAliasFor(field)) {\n            throw new Error(`No alias found for a parameter`);\n        }\n        return this.aliasMap.get(field);\n    }\n    getParameters( //\n    ) {\n        let parameters = {};\n        this.aliasMap.forEach((value, key) => {\n            parameters[value.alias] = value;\n        });\n        return parameters;\n    }\n}\nexport class FieldColumnAliases extends AliasMap {\n    constructor(_entityAliases, aliasCache) {\n        super(aliasCache);\n        this._entityAliases = _entityAliases;\n    }\n    get entityAliases( //\n    ) {\n        return this._entityAliases;\n    }\n    getExistingAlias(field) {\n        if (!this.hasAliasFor(field)) {\n            const qField = field;\n            throw new Error(`No alias found for property ${qField.dbProperty.entity.name}.${qField.dbProperty.name}`);\n        }\n        return this.aliasMap.get(field);\n    }\n}\n//# sourceMappingURL=Aliases.js.map","import { lib } from \"@airport/direction-indicator\";\nexport const tarmaqQuery = lib('tarmaq-query');\n//# sourceMappingURL=library.js.map","import { tarmaqQuery } from \"./library\";\n// Separating core-tokens from tokens removes circular dependencies\n// at code initialization time\nexport const ENTITY_UTILS = tarmaqQuery.token({\n    class: null,\n    interface: 'IEntityUtils',\n    token: 'ENTITY_UTILS'\n});\nexport const QUERY_UTILS = tarmaqQuery.token({\n    class: null,\n    interface: 'IQueryUtils',\n    token: 'QUERY_UTILS'\n});\n//# sourceMappingURL=tokens.js.map","import { IOC } from '@airport/direction-indicator';\r\nimport { ENTITY_UTILS } from '../../tokens';\r\n/**\r\n * Created by Papa on 10/25/2016.\r\n */\r\nexport function tree(query) {\r\n    let queryDefinition;\r\n    if (query instanceof Function) {\r\n        queryDefinition = query();\r\n    }\r\n    else {\r\n        queryDefinition = query;\r\n    }\r\n    let view = IOC.getSync(ENTITY_UTILS).getQTree([], queryDefinition);\r\n    let customEntity = queryDefinition.SELECT;\r\n    view = convertMappedEntitySelect(customEntity, queryDefinition, view, view, 'f');\r\n    return view;\r\n}\r\nfunction convertMappedEntitySelect(customEntity, queryDefinition, view, selectProxy, fieldPrefix) {\r\n    let fieldIndex = 0;\r\n    for (let property in customEntity) {\r\n        let alias = `${fieldPrefix}${++fieldIndex}`;\r\n        let value = customEntity[property];\r\n        if (IOC.getSync(ENTITY_UTILS).isQField(value)) {\r\n            let field = value.getInstance(view);\r\n            field.alias = alias;\r\n            field.q = view;\r\n            selectProxy[property] = field;\r\n        }\r\n        else {\r\n            if (value instanceof Object && !(value instanceof Date)) {\r\n                selectProxy[value] = convertMappedEntitySelect(value, queryDefinition, view, {}, `${alias}_`);\r\n            }\r\n            else {\r\n                throw new Error(`All SELECT clause entries of a Mapped query must be Fields or Functions`);\r\n            }\r\n        }\r\n    }\r\n    return view;\r\n}\r\n/**\r\n * Sub-queries in SELECT clause\r\n * @param query\r\n * @returns {IQF}\r\n */\r\nexport function field(query) {\r\n    let queryDefinition;\r\n    if (query instanceof Function) {\r\n        queryDefinition = query();\r\n    }\r\n    else {\r\n        queryDefinition = query;\r\n    }\r\n    let customField = queryDefinition.SELECT;\r\n    customField = customField.addSubQuery(queryDefinition);\r\n    // Field query cannot be joined to any other query so don't have set the positional fields\r\n    return customField;\r\n}\r\nexport class JoinFields {\r\n    constructor(joinFrom, joinTo) {\r\n        this.joinFrom = joinFrom;\r\n        this.joinTo = joinTo;\r\n        if (!(IOC.getSync(ENTITY_UTILS).isQEntity(this.joinTo))) {\r\n            throw new Error(`Right value in join must be a View or an Entity`);\r\n        }\r\n    }\r\n    ON(joinOperation) {\r\n        let joinChild = this.joinFrom;\r\n        joinChild.__driver__.joinWhereClause = joinOperation(this.joinFrom, this.joinTo);\r\n        return this.joinFrom;\r\n    }\r\n}\r\n//# sourceMappingURL=Joins.js.map","import { IOC } from '@airport/direction-indicator';\r\nimport { JoinType, JSONRelationType, } from '@airport/ground-control';\r\nimport { JoinFields } from '../Joins';\r\nimport { ENTITY_UTILS, QUERY_UTILS } from '../../../tokens';\r\nexport function QEntity(dbEntity, applicationUtils, relationManager, fromClausePosition = [], dbRelation = null, joinType = null, QDriver = QEntityDriver) {\r\n    this.__driver__ = new QDriver(dbEntity, applicationUtils, relationManager, fromClausePosition, dbRelation, joinType, this);\r\n}\r\nQEntity.prototype.FULL_JOIN = function (right) {\r\n    return this.__driver__.join(right, JoinType.FULL_JOIN);\r\n};\r\nQEntity.prototype.INNER_JOIN = function (right) {\r\n    return this.__driver__.join(right, JoinType.INNER_JOIN);\r\n};\r\nQEntity.prototype.LEFT_JOIN = function (right) {\r\n    return this.__driver__.join(right, JoinType.LEFT_JOIN);\r\n};\r\nQEntity.prototype.RIGHT_JOIN = function (right) {\r\n    return this.__driver__.join(right, JoinType.RIGHT_JOIN);\r\n};\r\nQEntity.prototype.equals = function (entity) {\r\n    return IOC.getSync(QUERY_UTILS).equals(entity, this);\r\n};\r\nQEntity.prototype.in = function (entities) {\r\n    return IOC.getSync(QUERY_UTILS).in(entities, this);\r\n};\r\nexport class QEntityDriver {\r\n    constructor(dbEntity, applicationUtils, relationManager, fromClausePosition = [], dbRelation = null, joinType = null, qEntity) {\r\n        this.dbEntity = dbEntity;\r\n        this.applicationUtils = applicationUtils;\r\n        this.relationManager = relationManager;\r\n        this.fromClausePosition = fromClausePosition;\r\n        this.dbRelation = dbRelation;\r\n        this.joinType = joinType;\r\n        this.qEntity = qEntity;\r\n        this.childQEntities = [];\r\n        this.entityFieldMap = {};\r\n        this.entityRelations = [];\r\n        this.idColumns = [];\r\n        this.allColumns = [];\r\n        this.relations = [];\r\n        this.currentChildIndex = -1;\r\n    }\r\n    getInstance() {\r\n        const qEntityConstructor = this.applicationUtils\r\n            .getQEntityConstructor(this.dbEntity);\r\n        let instance = new qEntityConstructor(this.dbEntity, this.applicationUtils, this.relationManager, this.fromClausePosition, this.dbRelation, this.joinType);\r\n        instance.__driver__.currentChildIndex = this.currentChildIndex;\r\n        instance.__driver__.joinWhereClause = this.joinWhereClause;\r\n        instance.__driver__.entityFieldMap = this.entityFieldMap;\r\n        instance.__driver__.entityRelations = this.entityRelations;\r\n        return instance;\r\n    }\r\n    /*\r\n    addEntityRelation<R extends IQEntityInternal>(\r\n        relation: IQInternalRelation<R>\r\n    ): void {\r\n        this.entityRelations[relation.parentRelationIndex] = relation;\r\n    }\r\n\r\n    addEntityField<T, IQF extends IQOperableFieldInternal<T, JSONBaseOperation, any, any>>(\r\n        field: IQF\r\n    ): void {\r\n        this.entityFieldMap[field.fieldName] = field;\r\n    }\r\n    */\r\n    /*\r\n    getRelationPropertyName(): string {\r\n        return QMetadataUtils.getRelationPropertyName(QMetadataUtils.getRelationByIndex(this.qEntity, this.relationIndex));\r\n    }\r\n*/\r\n    getRelationJson(columnAliases, queryUtils, fieldUtils, relationManager) {\r\n        // FIXME: this does not work for non-entity tree queries, as there is not dbEntity\r\n        // see ApplicationDao.findMaxVersionedMapByApplicationAndDomain_Names for an example\r\n        let jsonRelation = {\r\n            currentChildIndex: this.currentChildIndex,\r\n            ti: this.dbEntity.index,\r\n            fromClausePosition: this.fromClausePosition,\r\n            jt: this.joinType,\r\n            rt: null,\r\n            rep: columnAliases.entityAliases.getNextAlias(this.getRootJoinEntity()),\r\n            si: this.dbEntity.applicationVersion.application.index\r\n        };\r\n        if (this.joinWhereClause) {\r\n            this.getJoinRelationJson(jsonRelation, columnAliases, queryUtils, fieldUtils, relationManager);\r\n        }\r\n        else if (this.dbRelation) {\r\n            this.getEntityRelationJson(jsonRelation);\r\n        }\r\n        else {\r\n            this.getRootRelationJson(jsonRelation, columnAliases, queryUtils, fieldUtils, relationManager);\r\n        }\r\n        return jsonRelation;\r\n    }\r\n    getJoinRelationJson(jsonRelation, columnAliases, queryUtils, fieldUtils, relationManager) {\r\n        jsonRelation.rt = JSONRelationType.ENTITY_JOIN_ON;\r\n        jsonRelation.joinWhereClause = queryUtils.whereClauseToJSON(this.joinWhereClause, columnAliases);\r\n        return jsonRelation;\r\n    }\r\n    getEntityRelationJson(jsonRelation) {\r\n        jsonRelation.rt = JSONRelationType.ENTITY_APPLICATION_RELATION;\r\n        jsonRelation.ri = this.dbRelation.index;\r\n        // if (!this.dbRelation.whereJoinTable) {\r\n        return jsonRelation;\r\n        // }\r\n        // let otmQEntity;\r\n        // let mtoQEntity;\r\n        // switch (this.dbRelation.relationType) {\r\n        // \tcase EntityRelationType.ONE_TO_MANY:\r\n        // \t\tmtoQEntity = this.qEntity;\r\n        // \t\totmQEntity = this.parentJoinEntity;\r\n        // \t\tbreak;\r\n        // \tcase EntityRelationType.MANY_TO_ONE:\r\n        // \t\totmQEntity = this.qEntity;\r\n        // \t\tmtoQEntity = this.parentJoinEntity;\r\n        // \t\tbreak;\r\n        // \tdefault:\r\n        // \t\tthrow new Error(`Unknown EntityRelationType: ${this.dbRelation.relationType}`);\r\n        // }\r\n        //\r\n        // let joinWhereClause = this.dbRelation.whereJoinTable.addToJoinFunction(otmQEntity,\r\n        // mtoQEntity, this.airportDb, this.airportDb.F); jsonRelation.joinWhereClause    =\r\n        // this.utils.Query.whereClauseToJSON(joinWhereClause, columnAliases);\r\n        // jsonRelation.joinWhereClauseOperator   = this.dbRelation.joinFunctionWithOperator;  return\r\n        // jsonRelation;\r\n    }\r\n    getRootRelationJson(jsonRelation, columnAliases, queryUtils, fieldUtils, relationManager) {\r\n        jsonRelation.rt = IOC.getSync(ENTITY_UTILS)\r\n            // Removes circular dependency at code initialization time \r\n            .isQTree(this) ? JSONRelationType.SUB_QUERY_ROOT : JSONRelationType.ENTITY_ROOT;\r\n        return jsonRelation;\r\n    }\r\n    getQ() {\r\n        return this.qEntity;\r\n    }\r\n    join(right, joinType) {\r\n        let joinChild = right\r\n            .__driver__.getInstance();\r\n        joinChild.__driver__.currentChildIndex = 0;\r\n        let nextChildPosition = this.relationManager.getNextChildJoinPosition(this);\r\n        joinChild.__driver__.fromClausePosition = nextChildPosition;\r\n        joinChild.__driver__.joinType = joinType;\r\n        joinChild.__driver__.parentJoinEntity = this.qEntity;\r\n        this.qEntity.__driver__.childQEntities.push(joinChild);\r\n        return new JoinFields(this.qEntity, joinChild);\r\n    }\r\n    isRootEntity() {\r\n        return !this.parentJoinEntity;\r\n    }\r\n    getRootJoinEntity() {\r\n        let rootEntity = this.qEntity;\r\n        while (rootEntity.__driver__.parentJoinEntity) {\r\n            rootEntity = rootEntity.__driver__.parentJoinEntity;\r\n        }\r\n        return rootEntity;\r\n    }\r\n}\r\n//# sourceMappingURL=Entity.js.map","import { JoinType, JSONRelationType } from \"@airport/ground-control\";\n/**\n * Created by Papa on 10/18/2016.\n */\nexport class JoinTreeNode {\n    constructor(jsonRelation, childNodes, parentNode) {\n        this.jsonRelation = jsonRelation;\n        this.childNodes = childNodes;\n        this.parentNode = parentNode;\n    }\n    addChildNode(joinTreeNode) {\n        let childFromClausePositionArray = joinTreeNode.jsonRelation.fromClausePosition;\n        let childPosition = childFromClausePositionArray[childFromClausePositionArray.length - 1];\n        this.childNodes[childPosition] = joinTreeNode;\n    }\n    getEntityRelationChildNode(dbRelation) {\n        return this.getEntityRelationChildNodeByIndexes(dbRelation.property.entity.applicationVersion._localId, dbRelation.property.entity.index, dbRelation.index);\n    }\n    getEntityRelationChildNodeByIndexes(applicationIndex, tableIndex, relationIndex) {\n        let matchingNodes = this.childNodes.filter((childNode) => {\n            return childNode.jsonRelation.ri === relationIndex;\n        });\n        switch (matchingNodes.length) {\n            case 0:\n                break;\n            case 1:\n                return matchingNodes[0];\n            default:\n                throw new Error(`More than one child node matched relation property index '${relationIndex}'`);\n        }\n        // No node matched, this must be reference to a sub-entity in SELECT clause (in a Entity\n        // query)\n        let childPosition = this.jsonRelation.fromClausePosition.slice();\n        childPosition.push(this.childNodes.length);\n        let rootEntityPrefix;\n        if (this.parentNode) {\n            rootEntityPrefix = this.parentNode.jsonRelation.rep;\n        }\n        else {\n            rootEntityPrefix = this.jsonRelation.rep;\n        }\n        let jsonEntityRelation = {\n            currentChildIndex: 0,\n            fromClausePosition: childPosition,\n            ti: tableIndex,\n            jt: JoinType.LEFT_JOIN,\n            rt: JSONRelationType.ENTITY_APPLICATION_RELATION,\n            rep: rootEntityPrefix,\n            ri: relationIndex,\n            si: applicationIndex\n        };\n        let childTreeNode = new JoinTreeNode(jsonEntityRelation, [], this);\n        this.addChildNode(childTreeNode);\n        return childTreeNode;\n    }\n}\n//# sourceMappingURL=JoinTreeNode.js.map","import { SqlOperator } from \"@airport/ground-control\";\n/**\n * Created by Papa on 4/21/2016.\n */\nexport class Operation {\n    constructor(category) {\n        this.category = category;\n    }\n}\nexport class ValueOperation extends Operation {\n    constructor(category) {\n        super(category);\n        this.category = category;\n    }\n    equals(lValue, rValue) {\n        return {\n            c: this.category,\n            l: lValue,\n            o: SqlOperator.EQUALS,\n            r: rValue\n        };\n    }\n    greaterThan(lValue, rValue) {\n        return {\n            c: this.category,\n            l: lValue,\n            o: SqlOperator.GREATER_THAN,\n            r: rValue\n        };\n    }\n    greaterThanOrEquals(lValue, rValue) {\n        return {\n            c: this.category,\n            l: lValue,\n            o: SqlOperator.GREATER_THAN_OR_EQUALS,\n            r: rValue\n        };\n    }\n    IS_NOT_NULL(lValue) {\n        return {\n            c: this.category,\n            l: lValue,\n            o: SqlOperator.IS_NOT_NULL\n        };\n    }\n    IS_NULL(lValue) {\n        return {\n            c: this.category,\n            l: lValue,\n            o: SqlOperator.IS_NULL\n        };\n    }\n    IN(lValue, rValue) {\n        return {\n            c: this.category,\n            l: lValue,\n            o: SqlOperator.IN,\n            r: rValue\n        };\n    }\n    lessThan(lValue, rValue) {\n        return {\n            c: this.category,\n            l: lValue,\n            o: SqlOperator.LESS_THAN,\n            r: rValue\n        };\n    }\n    lessThanOrEquals(lValue, rValue) {\n        return {\n            c: this.category,\n            l: lValue,\n            o: SqlOperator.LESS_THAN_OR_EQUALS,\n            r: rValue\n        };\n    }\n    notEquals(lValue, rValue) {\n        return {\n            c: this.category,\n            l: lValue,\n            o: SqlOperator.NOT_EQUALS,\n            r: lValue\n        };\n    }\n    NOT_IN(lValue, rValue) {\n        return {\n            c: this.category,\n            l: lValue,\n            o: SqlOperator.NOT_IN,\n            r: rValue\n        };\n    }\n}\n//# sourceMappingURL=Operation.js.map","import { OperationCategory, SqlOperator } from \"@airport/ground-control\";\nimport { Operation } from \"./Operation\";\n/**\n * Created by Papa on 4/21/2016.\n */\nexport const AND = function (...ops) {\n    return new LogicalOperation().AND(ops);\n};\nexport const OR = function (...ops) {\n    return new LogicalOperation().OR(ops);\n};\nexport const NOT = function (op) {\n    return new LogicalOperation().NOT(op);\n};\nexport class LogicalOperation extends Operation {\n    constructor() {\n        super(null);\n    }\n    static verifyChildOps(ops) {\n        if (!ops || !ops.length) {\n            throw new Error(`No child operations provided`);\n        }\n    }\n    AND(ops) {\n        return {\n            c: OperationCategory.LOGICAL,\n            o: SqlOperator.AND,\n            v: ops\n        };\n    }\n    OR(ops) {\n        return {\n            c: OperationCategory.LOGICAL,\n            o: SqlOperator.OR,\n            v: ops\n        };\n    }\n    NOT(op) {\n        return {\n            c: OperationCategory.LOGICAL,\n            o: SqlOperator.NOT,\n            v: op\n        };\n    }\n}\n//# sourceMappingURL=LogicalOperation.js.map","import { extend } from '@airport/direction-indicator';\nimport { JoinType, } from '@airport/ground-control';\nimport { AND, OR } from '../operation/LogicalOperation';\n/**\n * Created by Papa on 4/26/2016.\n */\n/*\n * Cannot use 'class' syntax because it brakes dynamic creation of subclasses.\n * With 'class' browser reports:\n *   Class constructor QRelation cannot be invoked without 'new'\n * When calling:\n *   Q...Relation.base.constructor.call(this, relation, qEntity)\n */\nexport function QRelation(dbRelation, parentQ, applicationUtils, relationManager) {\n    this.dbRelation = dbRelation;\n    this.parentQ = parentQ;\n    this.applicationUtils = applicationUtils;\n    this.relationManager = relationManager;\n}\nQRelation.prototype.INNER_JOIN = function () {\n    const newQEntity = this.getNewQEntity(JoinType.INNER_JOIN);\n    this.parentQ.__driver__.childQEntities.push(newQEntity);\n    return newQEntity;\n};\nQRelation.prototype.LEFT_JOIN = function () {\n    const newQEntity = this.getNewQEntity(JoinType.LEFT_JOIN);\n    this.parentQ.__driver__.childQEntities.push(newQEntity);\n    return newQEntity;\n};\nQRelation.prototype.getNewQEntity = function (joinType) {\n    const dbEntity = this.dbRelation.relationEntity;\n    const qEntityConstructor = this.applicationUtils.getQEntityConstructor(this.dbRelation.relationEntity);\n    let newQEntity = new qEntityConstructor(dbEntity, this.applicationUtils, this.relationManager, this.relationManager.getNextChildJoinPosition(this.parentQ.__driver__), this.dbRelation, joinType, this.applicationUtils, this.relationManager);\n    newQEntity.__driver__.parentJoinEntity = this.parentQ;\n    return newQEntity;\n};\nexport function QAirEntityRelation(dbRelation, parentQ, applicationUtils, relationManager) {\n    QAirEntityRelation.base.constructor.call(this, dbRelation, parentQ, applicationUtils, relationManager);\n}\nexport const qAirEntityRelationMethods = {\n    // equals: function <Entity extends IAirEntity, IQ extends IQEntityInternal>(\n    // \tentity: Entity | IQAirEntity |\n    // \t\tIQAirEntityRelation<Entity, IQ> | AirEntityId | string\n    // ): JSONLogicalOperation {\n    // \treturn IOC.getSync(QUERY_UTILS).equals(entity, this)\n    // }\n    IS_NULL() {\n        return OR(this.actor._localId.IS_NULL(), this.repository._localId.IS_NULL(), this._actorRecordId.IS_NULL());\n    },\n    IS_NOT_NULL() {\n        return AND(this.actor._localId.IS_NOT_NULL(), this.repository._localId.IS_NOT_NULL(), this._actorRecordId.IS_NOT_NULL());\n    }\n};\nextend(QRelation, QAirEntityRelation, qAirEntityRelationMethods);\n//# sourceMappingURL=Relation.js.map","import { extend } from '@airport/direction-indicator';\nimport { QRelation, QAirEntityRelation } from './Relation';\n/**\n * Created by Papa on 10/25/2016.\n */\n/*\n * Cannot use 'class' syntax because it brakes dynamic creation of subclasses.\n * With 'class' browser reports:\n *   Class constructor QRelation cannot be invoked without 'new'\n * When calling:\n *   Q...Relation.base.constructor.call(this, relation, qEntity)\n */\nexport function QOneToManyRelation(dbRelation, parentQ, applicationUtils, repationManager) {\n    QOneToManyRelation.base.constructor.call(this, dbRelation, parentQ, applicationUtils, repationManager);\n}\nconst qOneToManyRelationMethods = {\n/*\nyourMethodName: function() {},\n*/\n};\nextend(QRelation, QOneToManyRelation, qOneToManyRelationMethods);\nexport function QAirEntityOneToManyRelation(dbRelation, parentQ, applicationUtils, repationManager) {\n    QAirEntityOneToManyRelation.base.constructor.call(this, dbRelation, parentQ, applicationUtils, repationManager);\n}\nconst qAirEntityOneToManyRelationMethods = {\n/*\nyourMethodName: function() {},\n*/\n};\nextend(QAirEntityRelation, QAirEntityOneToManyRelation, qAirEntityOneToManyRelationMethods);\n//# sourceMappingURL=OneToManyRelation.js.map","import { extend, IOC } from \"@airport/direction-indicator\";\nimport { JSONRelationType } from \"@airport/ground-control\";\nimport { ENTITY_UTILS } from \"../../../tokens\";\nimport { QEntity, QEntityDriver } from \"./Entity\";\nexport function QTree(fromClausePosition = [], subQuery) {\n    QTree.base.constructor.call(this, null, fromClausePosition, null, null, QTreeDriver);\n    this.__driver__.subQuery = subQuery;\n}\nconst qTreeMethods = {\n/*\nyourMethodName: function() {},\n*/\n};\nextend(QEntity, QTree, qTreeMethods);\nexport class QTreeDriver extends QEntityDriver {\n    getInstance() {\n        let instance = super.getInstance();\n        instance.__driver__\n            .subQuery = this.subQuery;\n        return instance;\n    }\n    // getRelationPropertyName(): string {\n    // \tthrow new Error(`not implemented`);\n    // }\n    getJoinRelationJson(jsonRelation, columnAliases, queryUtils, fieldUtils, relationManager) {\n        jsonRelation = super.getJoinRelationJson(jsonRelation, columnAliases, queryUtils, fieldUtils, relationManager);\n        jsonRelation.rt = JSONRelationType.SUB_QUERY_JOIN_ON;\n        jsonRelation.subQuery =\n            // Removes circular dependency at code initialization time \n            IOC.getSync(ENTITY_UTILS).getTreeQuery(this.subQuery, columnAliases.entityAliases)\n                .toJSON(queryUtils, fieldUtils, relationManager);\n        return jsonRelation;\n    }\n    getRootRelationJson(jsonRelation, columnAliases, queryUtils, fieldUtils, relationManager) {\n        jsonRelation = super.getJoinRelationJson(jsonRelation, columnAliases, queryUtils, fieldUtils, relationManager);\n        jsonRelation.rt = JSONRelationType.SUB_QUERY_ROOT;\n        jsonRelation.subQuery =\n            // Removes circular dependency at code initialization time \n            IOC.getSync(ENTITY_UTILS).getTreeQuery(this.subQuery, columnAliases.entityAliases)\n                .toJSON(queryUtils, fieldUtils, relationManager);\n        return jsonRelation;\n    }\n}\n//# sourceMappingURL=Tree.js.map","import { OperationCategory, } from \"@airport/ground-control\";\nimport { ValueOperation } from \"./Operation\";\n/**\n * Created by Papa on 6/20/2016.\n */\nexport class BooleanOperation extends ValueOperation {\n    constructor() {\n        super(OperationCategory.BOOLEAN);\n    }\n}\n//# sourceMappingURL=BooleanOperation.js.map","/**\n * Created by Papa on 10/16/2016.\n */\nexport class FieldInOrderBy {\n    constructor(field, sortOrder) {\n        this.field = field;\n        this.sortOrder = sortOrder;\n    }\n    toJSON(columnAliases) {\n        if (!columnAliases.hasAliasFor(this.field)) {\n            throw new Error(`Field used in ORDER_BY clause is not present in SELECT clause`);\n        }\n        return {\n            fa: columnAliases.getExistingAlias(this.field),\n            so: this.sortOrder\n        };\n    }\n    toEntityJSON() {\n        let qField = this.field;\n        return {\n            fa: undefined,\n            ci: qField.dbColumn.index,\n            pi: qField.dbProperty.index,\n            ti: qField.dbProperty.entity.index,\n            si: qField.dbProperty.entity.applicationVersion._localId,\n            so: this.sortOrder\n        };\n    }\n}\n//# sourceMappingURL=FieldInOrderBy.js.map","import { JSONClauseObjectType, SortOrder } from '@airport/ground-control';\nimport { FieldInOrderBy } from './FieldInOrderBy';\n/**\n * Created by Papa on 4/21/2016.\n */\nexport class QField {\n    constructor(dbColumn, dbProperty, q, objectType) {\n        this.dbColumn = dbColumn;\n        this.dbProperty = dbProperty;\n        this.q = q;\n        this.objectType = objectType;\n        this.__appliedFunctions__ = [];\n    }\n    /**\n     protected getFieldKey() {\n        let rootEntityPrefix = columnAliases.entityAliases.getExistingAlias(this.parentQ.getRootJoinEntity());\n        let key = `${relationManager.getPositionAlias(rootEntityPrefix, this.parentQ.fromClausePosition)}.${this.fieldName}`;\n        return key;\n    }\n     */\n    applySqlFunction(sqlFunctionCall) {\n        let appliedField = this.getInstance();\n        appliedField.__appliedFunctions__.push(sqlFunctionCall);\n        return appliedField;\n    }\n    toJSON(columnAliases, forSelectClause, queryUtils, fieldUtils, relationManager) {\n        let alias;\n        if (forSelectClause) {\n            alias = columnAliases.getNextAlias(this);\n        }\n        let rootEntityPrefix;\n        if (this.__fieldSubQuery__) {\n            rootEntityPrefix = columnAliases.entityAliases.getOnlyAlias();\n        }\n        else {\n            rootEntityPrefix = columnAliases.entityAliases.getExistingAlias(this.q.__driver__.getRootJoinEntity());\n        }\n        let jsonField = {\n            appliedFunctions: this.appliedFunctionsToJson(this.__appliedFunctions__, columnAliases, queryUtils, fieldUtils, relationManager),\n            si: this.dbProperty.entity.applicationVersion._localId,\n            ti: this.dbProperty.entity.index,\n            fa: alias,\n            pi: this.dbProperty.index,\n            ci: this.dbColumn.index,\n            ta: relationManager.getPositionAlias(rootEntityPrefix, this.q.__driver__.fromClausePosition),\n            ot: this.objectType,\n            dt: this.dbColumn.type\n        };\n        if (this.__fieldSubQuery__) {\n            jsonField.fieldSubQuery = fieldUtils.getFieldQueryJson(this.__fieldSubQuery__, columnAliases.entityAliases, queryUtils);\n            jsonField.ot = JSONClauseObjectType.FIELD_QUERY;\n        }\n        return jsonField;\n    }\n    asc() {\n        return new FieldInOrderBy(this, SortOrder.ASCENDING);\n    }\n    desc() {\n        return new FieldInOrderBy(this, SortOrder.DESCENDING);\n    }\n    addSubQuery(subQuery) {\n        let appliedField = this.getInstance();\n        appliedField.__fieldSubQuery__ = subQuery;\n        return appliedField;\n    }\n    operableFunctionToJson(functionObject, columnAliases, forSelectClause, queryUtils, fieldUtils, relationManager) {\n        let alias;\n        if (forSelectClause) {\n            alias = columnAliases.getNextAlias(this);\n        }\n        return {\n            appliedFunctions: this.appliedFunctionsToJson(this.__appliedFunctions__, columnAliases, queryUtils, fieldUtils, relationManager),\n            fa: alias,\n            ot: this.objectType,\n            dt: this.dbColumn.type,\n            v: this.valueToJSON(functionObject, columnAliases, false, true, queryUtils, fieldUtils, relationManager)\n        };\n    }\n    copyFunctions(field) {\n        field.__appliedFunctions__ = this.__appliedFunctions__.slice();\n        return field;\n    }\n    appliedFunctionsToJson(appliedFunctions, columnAliases, queryUtils, fieldUtils, relationManager) {\n        if (!appliedFunctions) {\n            return appliedFunctions;\n        }\n        return appliedFunctions.map((appliedFunction) => {\n            return this.functionCallToJson(appliedFunction, columnAliases, queryUtils, fieldUtils, relationManager);\n        });\n    }\n    functionCallToJson(functionCall, columnAliases, queryUtils, fieldUtils, relationManager) {\n        let parameters;\n        if (functionCall.p) {\n            parameters = functionCall.p.map((parameter) => {\n                return this.valueToJSON(parameter, columnAliases, false, false, queryUtils, fieldUtils, relationManager);\n            });\n        }\n        return {\n            ft: functionCall.ft,\n            p: parameters\n        };\n    }\n    valueToJSON(functionObject, columnAliases, forSelectClause, fromFunctionObject, queryUtils, fieldUtils, relationManager) {\n        if (!functionObject) {\n            throw new Error(`Function object must be provided to valueToJSON function.`);\n        }\n        if (!fromFunctionObject && functionObject instanceof QField) {\n            return functionObject.toJSON(columnAliases, forSelectClause, queryUtils, fieldUtils, relationManager);\n        }\n        let value = functionObject.value;\n        switch (typeof value) {\n            case 'boolean':\n            case 'number':\n            case 'string':\n                return columnAliases.entityAliases.getParams()\n                    .getNextAlias(functionObject);\n            case 'object':\n                if (value instanceof Date) {\n                    return columnAliases.entityAliases.getParams()\n                        .getNextAlias(functionObject);\n                }\n                else if (value instanceof Array) {\n                    return columnAliases.entityAliases.getParams()\n                        .getNextAlias(functionObject);\n                }\n                else if (value === null) {\n                    return columnAliases.entityAliases.getParams()\n                        .getNextAlias(functionObject);\n                }\n                else {\n                    throw new Error(`Unexpected query parameter type allowed types are:\r\nboolean | Date | Date[] | number | number[] | string | string[]\r\n`);\n                }\n            case 'undefined':\n                throw new Error(`Undefined is not allowed as a query parameter`);\n            default:\n                throw new Error(`Unexpected query parameter type allowed types are:\r\nboolean | Date | Date[] | number | number[] | string | string[]\r\n`);\n        }\n        // TODO: this never gets called, is this needed?\n        /*\n        if (value === null || value instanceof Date) {\n            return columnAliases.entityAliases.getParams()\n                .getNextAlias(functionObject as IQFunction<any>)\n        }\n        if (value instanceof QField) {\n            return value.toJSON(columnAliases, forSelectClause, queryUtils, fieldUtils, relationManager)\n        }\n        // must be a field sub-query\n        let rawFieldQuery: RawFieldQuery<any> = value\n        return fieldUtils.getFieldQueryJson(\n            rawFieldQuery, columnAliases.entityAliases, queryUtils)\n         */\n    }\n}\n//# sourceMappingURL=Field.js.map","import { QField } from \"./Field\";\n/**\n * Created by Papa on 10/25/2016.\n */\nexport class QOperableField extends QField {\n    constructor(dbColumn, dbProperty, q, objectType, operation) {\n        super(dbColumn, dbProperty, q, objectType);\n        this.operation = operation;\n    }\n    equals(value) {\n        if (value instanceof Function) {\n            value = value();\n        }\n        return this.operation.equals(this, value);\n    }\n    greaterThan(value) {\n        if (value instanceof Function) {\n            value = value();\n        }\n        return this.operation.greaterThan(this, value);\n    }\n    greaterThanOrEquals(value) {\n        if (value instanceof Function) {\n            value = value();\n        }\n        return this.operation.greaterThanOrEquals(this, value);\n    }\n    IS_NOT_NULL() {\n        return this.operation.IS_NOT_NULL(this);\n    }\n    IS_NULL() {\n        return this.operation.IS_NULL(this);\n    }\n    IN(value) {\n        if (value instanceof Function) {\n            value = value();\n        }\n        return this.operation.IN(this, value);\n    }\n    lessThan(value) {\n        if (value instanceof Function) {\n            value = value();\n        }\n        return this.operation.lessThan(this, value);\n    }\n    lessThanOrEquals(value) {\n        if (value instanceof Function) {\n            value = value();\n        }\n        return this.operation.lessThanOrEquals(this, value);\n    }\n    notEquals(value) {\n        if (value instanceof Function) {\n            value = value();\n        }\n        return this.operation.notEquals(this, value);\n    }\n    NOT_IN(values) {\n        values = values.map((value) => {\n            if (value instanceof Function) {\n                return value();\n            }\n            return value;\n        });\n        return this.operation.NOT_IN(this, values);\n    }\n}\n//# sourceMappingURL=OperableField.js.map","import { JSONClauseObjectType, SQLDataType } from '@airport/ground-control';\nimport { BooleanOperation } from '../operation/BooleanOperation';\nimport { QOperableField } from './OperableField';\nexport class QBooleanField extends QOperableField {\n    constructor(dbColumn, dbProperty, q, objectType = JSONClauseObjectType.FIELD) {\n        super(dbColumn, dbProperty, q, objectType, new BooleanOperation());\n    }\n    getInstance(qEntity = this.q) {\n        return this.copyFunctions(new QBooleanField(this.dbColumn, this.dbProperty, qEntity, this.objectType));\n    }\n}\nexport class QBooleanFunction extends QBooleanField {\n    constructor(value, isQueryParameter = false) {\n        super({ type: SQLDataType.BOOLEAN }, null, null, JSONClauseObjectType.FIELD_FUNCTION);\n        this.value = value;\n        this.isQueryParameter = isQueryParameter;\n    }\n    getInstance() {\n        return this.copyFunctions(new QBooleanFunction(this.value));\n    }\n    toJSON(columnAliases, forSelectClause, queryUtils, fieldUtils, relationManager) {\n        let json = this.operableFunctionToJson(this, columnAliases, forSelectClause, queryUtils, fieldUtils, relationManager);\n        if (this.isQueryParameter) {\n            this.parameterAlias = json.v;\n        }\n        return json;\n    }\n}\n//# sourceMappingURL=BooleanField.js.map","import { OperationCategory } from \"@airport/ground-control\";\nimport { ValueOperation } from \"./Operation\";\n/**\n * Created by Papa on 6/20/2016.\n */\nexport class DateOperation extends ValueOperation {\n    constructor() {\n        super(OperationCategory.DATE);\n    }\n}\n//# sourceMappingURL=DateOperation.js.map","import { JSONClauseObjectType, SQLDataType } from '@airport/ground-control';\nimport { DateOperation } from '../operation/DateOperation';\nimport { QOperableField } from './OperableField';\nexport class QDateField extends QOperableField {\n    constructor(dbColumn, dbProperty, q, objectType = JSONClauseObjectType.FIELD) {\n        super(dbColumn, dbProperty, q, objectType, new DateOperation());\n    }\n    getInstance(qEntity = this.q) {\n        return this.copyFunctions(new QDateField(this.dbColumn, this.dbProperty, qEntity, this.objectType));\n    }\n}\nexport class QDateFunction extends QDateField {\n    constructor(value, isQueryParameter = false) {\n        super({ type: SQLDataType.DATE }, null, null, JSONClauseObjectType.FIELD_FUNCTION);\n        this.value = value;\n        this.isQueryParameter = isQueryParameter;\n    }\n    getInstance() {\n        return this.copyFunctions(new QDateFunction(this.value, this.isQueryParameter));\n    }\n    toJSON(columnAliases, forSelectClause, queryUtils, fieldUtils, relationManager) {\n        let json = this.operableFunctionToJson(this, columnAliases, forSelectClause, queryUtils, fieldUtils, relationManager);\n        if (this.isQueryParameter) {\n            this.parameterAlias = json.v;\n        }\n        return json;\n    }\n}\nexport class QDateArrayFunction extends QDateFunction {\n    constructor(value, isQueryParameter) {\n        super(value, isQueryParameter);\n        this.value = value;\n    }\n    getInstance() {\n        return this.copyFunctions(new QDateArrayFunction(this.value, this.isQueryParameter));\n    }\n}\n//# sourceMappingURL=DateField.js.map","import { OperationCategory } from \"@airport/ground-control\";\nimport { ValueOperation } from \"./Operation\";\n/**\n * Created by Papa on 6/20/2016.\n */\nexport class NumberOperation extends ValueOperation {\n    constructor() {\n        super(OperationCategory.NUMBER);\n    }\n}\n//# sourceMappingURL=NumberOperation.js.map","import { JSONClauseObjectType, SQLDataType } from '@airport/ground-control';\nimport { NumberOperation } from '../operation/NumberOperation';\nimport { QOperableField } from './OperableField';\nexport class QNumberField extends QOperableField {\n    constructor(dbColumn, dbProperty, q, objectType = JSONClauseObjectType.FIELD) {\n        super(dbColumn, dbProperty, q, objectType, new NumberOperation());\n    }\n    getInstance(qEntity = this.q) {\n        return this.copyFunctions(new QNumberField(this.dbColumn, this.dbProperty, qEntity, this.objectType));\n    }\n}\nexport class QNumberFunction extends QNumberField {\n    constructor(value, isQueryParameter = false) {\n        super({ type: SQLDataType.NUMBER }, null, null, JSONClauseObjectType.FIELD_FUNCTION);\n        this.value = value;\n        this.isQueryParameter = isQueryParameter;\n    }\n    getInstance() {\n        return this.copyFunctions(new QNumberFunction(this.value, this.isQueryParameter));\n    }\n    toJSON(columnAliases, forSelectClause, queryUtils, fieldUtils, relationManager) {\n        let json = this.operableFunctionToJson(this, columnAliases, forSelectClause, queryUtils, fieldUtils, relationManager);\n        if (this.isQueryParameter) {\n            this.parameterAlias = json.v;\n        }\n        return json;\n    }\n}\nexport class QNumberArrayFunction extends QNumberFunction {\n    constructor(value, isQueryParameter) {\n        super(value, isQueryParameter);\n        this.value = value;\n    }\n    getInstance() {\n        return this.copyFunctions(new QNumberArrayFunction(this.value, this.isQueryParameter));\n    }\n}\n//# sourceMappingURL=NumberField.js.map","import { OperationCategory, SqlOperator } from \"@airport/ground-control\";\nimport { ValueOperation } from \"./Operation\";\n/**\n * Created by Papa on 6/20/2016.\n */\nexport class StringOperation extends ValueOperation {\n    constructor() {\n        super(OperationCategory.STRING);\n    }\n    LIKE(lValue, rValue\n    // TODO: implement ReqExp\n    //| RegExp\n    ) {\n        return {\n            c: this.category,\n            l: lValue,\n            o: SqlOperator.LIKE,\n            r: rValue\n        };\n    }\n}\n//# sourceMappingURL=StringOperation.js.map","import { JSONClauseObjectType, SQLDataType } from '@airport/ground-control';\nimport { StringOperation } from '../operation/StringOperation';\nimport { QOperableField } from './OperableField';\nexport class QStringField extends QOperableField {\n    constructor(dbColumn, dbProperty, q, objectType = JSONClauseObjectType.FIELD) {\n        super(dbColumn, dbProperty, q, objectType, new StringOperation());\n    }\n    getInstance(qEntity = this.q) {\n        return this.copyFunctions(new QStringField(this.dbColumn, this.dbProperty, qEntity, this.objectType));\n    }\n    LIKE(value) {\n        if (value instanceof Function) {\n            value = value();\n        }\n        return this.operation.LIKE(this, value);\n    }\n}\nexport class QStringFunction extends QStringField {\n    constructor(value, isQueryParameter = false) {\n        super({ type: SQLDataType.STRING }, null, null, JSONClauseObjectType.FIELD_FUNCTION);\n        this.value = value;\n        this.isQueryParameter = isQueryParameter;\n    }\n    getInstance() {\n        return this.copyFunctions(new QStringFunction(this.value, this.isQueryParameter));\n    }\n    toJSON(columnAliases, forSelectClause, queryUtils, fieldUtils, relationManager) {\n        let json = this.operableFunctionToJson(this, columnAliases, forSelectClause, queryUtils, fieldUtils, relationManager);\n        if (this.isQueryParameter) {\n            this.parameterAlias = json.v;\n        }\n        return json;\n    }\n}\nexport class QStringArrayFunction extends QStringFunction {\n    constructor(value, isQueryParameter) {\n        super(value, isQueryParameter);\n        this.value = value;\n    }\n    getInstance() {\n        return this.copyFunctions(new QStringArrayFunction(this.value, this.isQueryParameter));\n    }\n}\n//# sourceMappingURL=StringField.js.map","import { JSONClauseObjectType } from '@airport/ground-control';\nimport { QField } from './Field';\n/**\n * Created by Papa on 11/29/2016.\n */\nexport class QNullFunction extends QField {\n    constructor() {\n        super(null, null, null, JSONClauseObjectType.FIELD_FUNCTION);\n        this.value = null;\n    }\n    getInstance() {\n        return this.copyFunctions(new QNullFunction());\n    }\n    toJSON(columnAliases, forSelectClause, queryUtils, fieldUtils, relationManager) {\n        return this.operableFunctionToJson(this, columnAliases, forSelectClause, queryUtils, fieldUtils, relationManager);\n    }\n}\n//# sourceMappingURL=NullFunction.js.map","import { SQLDataType } from '@airport/ground-control';\nimport { QBooleanFunction } from './BooleanField';\nimport { QDateFunction } from './DateField';\nimport { QNullFunction } from './NullFunction';\nimport { QNumberFunction } from './NumberField';\nimport { QStringFunction } from './StringField';\n/**\n * Created by Papa on 12/31/2016.\n */\nexport const bool = function (primitive) {\n    if (typeof primitive !== 'boolean') {\n        throw new Error(`bool() accepts booleans only.`);\n    }\n    return new QBooleanFunction(primitive);\n};\nexport const date = function (primitive) {\n    if (!(primitive instanceof Date)) {\n        throw new Error(`date() accepts Dates only.`);\n    }\n    return new QDateFunction(primitive);\n};\nexport const num = function (primitive) {\n    if (typeof primitive !== 'number') {\n        throw new Error(`num() accepts numbers only.`);\n    }\n    return new QNumberFunction(primitive);\n};\nexport const str = function (primitive) {\n    if (typeof primitive !== 'string') {\n        throw new Error(`str() accepts strings only.`);\n    }\n    return new QStringFunction(primitive);\n};\nexport function wrapPrimitive(value) {\n    switch (typeof value) {\n        case 'boolean':\n            return bool(value);\n        case 'number':\n            return num(value);\n        case 'string':\n            return str(value);\n        case 'undefined':\n            throw new Error(`Cannot use an 'undefined' value in an operation.`);\n    }\n    if (value === null) {\n        return new QNullFunction();\n    }\n    if (value instanceof Date) {\n        return date(value);\n    }\n    return value;\n}\nexport function getPrimitiveValue(value, dbColumn, rowIndex, datesToNumbers = true) {\n    switch (dbColumn.type) {\n        case SQLDataType.ANY: {\n            assertDataType([\n                'boolean', 'number', 'object', 'string'\n            ], dbColumn, rowIndex, value);\n            break;\n        }\n        case SQLDataType.BOOLEAN: {\n            assertDataType([\n                'boolean'\n            ], dbColumn, rowIndex, value);\n            break;\n        }\n        case SQLDataType.DATE: {\n            assertDataType([\n                'number', 'object'\n            ], dbColumn, rowIndex, value);\n            break;\n        }\n        case SQLDataType.JSON: {\n            assertDataType([\n                'object'\n            ], dbColumn, rowIndex, value);\n            break;\n        }\n        case SQLDataType.NUMBER: {\n            assertDataType([\n                'number'\n            ], dbColumn, rowIndex, value);\n            break;\n        }\n        case SQLDataType.STRING: {\n            assertDataType([\n                'string'\n            ], dbColumn, rowIndex, value);\n            break;\n        }\n        default:\n            throw new Error('Unexpected SQLDataType: ' + dbColumn.type);\n    }\n    switch (typeof value) {\n        case 'boolean':\n            return value ? 1 : 0;\n        case 'number':\n        case 'string':\n            // FIXME: prevent SQL injection\n            return value;\n        case 'object': {\n            if (value === null) {\n                return value;\n            }\n            if (value instanceof Date) {\n                if (dbColumn.type !== SQLDataType.DATE) {\n                    throw new Error(`Unexpected Date object for row: ${rowIndex + 1}, column: ${getColumnName(dbColumn)}`);\n                }\n                return datesToNumbers ? value.getTime() : value;\n            }\n            else {\n                if (dbColumn.type !== SQLDataType.JSON) {\n                    throw new Error(`Unexpected Json object for row: ${rowIndex + 1}, column: ${getColumnName(dbColumn)}`);\n                }\n                return JSON.stringify(value);\n            }\n        }\n        case 'undefined':\n            throw new Error(`Cannot use an 'undefined' value in an operation.`);\n        default:\n            throw new Error(`Unexpected object in operation.`);\n    }\n}\nfunction assertDataType(typesOfData, dbColumn, rowIndex, value) {\n    if (typesOfData.indexOf(typeof value) < -1) {\n        const expectedDataTypes = typesOfData.join(', ');\n        throw new Error(`Unexpected typeof value for row: ${rowIndex + 1}, column: ${getColumnName(dbColumn)}.  Expecting: ${expectedDataTypes}`);\n    }\n}\nfunction getColumnName(dbColumn) {\n    return dbColumn.name\n        ? dbColumn.name\n        : dbColumn.propertyColumns[0].property.name;\n}\n//# sourceMappingURL=WrapperFunctions.js.map","import { JSONClauseObjectType, OperationCategory, SQLDataType, SqlFunction, SqlOperator } from '@airport/ground-control';\nimport { QBooleanField, QBooleanFunction } from './BooleanField';\nimport { QDateField, QDateFunction } from './DateField';\nimport { QNumberField, QNumberFunction } from './NumberField';\nimport { QOperableField } from './OperableField';\nimport { QStringField, QStringFunction } from './StringField';\nimport { bool, date, num, str } from './WrapperFunctions';\nfunction getSqlFunctionCall(sqlFunction, parameters) {\n    if (parameters) {\n        parameters = parameters.map((parameter) => {\n            switch (typeof parameter) {\n                case 'boolean':\n                    return bool(parameter);\n                case 'number':\n                    return num(parameter);\n                case 'string':\n                    return str(parameter);\n                case 'undefined':\n                    throw new Error(`'undefined' cannot be used as a function parameter`);\n            }\n            if (parameter instanceof Date) {\n                return date(parameter);\n            }\n            return parameter;\n        });\n    }\n    return {\n        ft: sqlFunction,\n        p: parameters\n    };\n}\nexport const ABS = function (numeric) {\n    if (numeric instanceof QNumberField) {\n        return numeric.applySqlFunction(getSqlFunctionCall(SqlFunction.AVG));\n    }\n    else {\n        return new QNumberFunction(numeric).applySqlFunction(getSqlFunctionCall(SqlFunction.ABS));\n    }\n};\nexport const AVG = function (numeric) {\n    if (numeric instanceof QNumberField) {\n        return numeric.applySqlFunction(getSqlFunctionCall(SqlFunction.AVG));\n    }\n    else {\n        return new QNumberFunction(numeric).applySqlFunction(getSqlFunctionCall(SqlFunction.AVG));\n    }\n};\nexport function getFunctionObject(value) {\n    switch (typeof value) {\n        case 'boolean':\n            return new QBooleanFunction(value);\n        case 'number':\n            return new QNumberFunction(value);\n        case 'string':\n            return new QStringFunction(value);\n    }\n    if (value instanceof Date) {\n        return new QDateFunction(value);\n    }\n    let selectClause = value.SELECT;\n    if (selectClause instanceof QDistinctFunction) {\n        selectClause = selectClause.getSelectClause();\n    }\n    if (selectClause instanceof QBooleanField) {\n        return new QBooleanFunction(value);\n    }\n    else if (selectClause instanceof QDateField) {\n        return new QDateFunction(value);\n    }\n    else if (selectClause instanceof QNumberField) {\n        return new QNumberFunction(value);\n    }\n    else if (selectClause instanceof QStringField) {\n        return new QStringFunction(value);\n    }\n    throw new Error(`Function rValue must be a primitive, Date, Field or Field query`);\n}\nexport const COUNT = function (value) {\n    if (value instanceof QOperableField) {\n        return value.applySqlFunction(getSqlFunctionCall(SqlFunction.COUNT));\n    }\n    else {\n        return getFunctionObject(value)\n            .applySqlFunction(getSqlFunctionCall(SqlFunction.COUNT));\n    }\n};\nexport const MAX = function (value) {\n    if (value instanceof QOperableField) {\n        return value.applySqlFunction(getSqlFunctionCall(SqlFunction.MAX));\n    }\n    else {\n        return getFunctionObject(value)\n            .applySqlFunction(getSqlFunctionCall(SqlFunction.MAX));\n    }\n};\nexport const MIN = function (value) {\n    if (value instanceof QOperableField) {\n        return value.applySqlFunction(getSqlFunctionCall(SqlFunction.MIN));\n    }\n    else {\n        return getFunctionObject(value)\n            .applySqlFunction(getSqlFunctionCall(SqlFunction.MIN));\n    }\n};\nexport const SUM = function (numeric) {\n    if (numeric instanceof QNumberField) {\n        return numeric.applySqlFunction(getSqlFunctionCall(SqlFunction.SUM));\n    }\n    else {\n        return new QNumberFunction(numeric)\n            .applySqlFunction(getSqlFunctionCall(SqlFunction.SUM));\n    }\n};\nexport const PLUS = function (numeric1, numeric2) {\n    if (numeric1 instanceof QNumberField) {\n        return numeric1.applySqlFunction(getSqlFunctionCall(SqlFunction.PLUS, [numeric2]));\n    }\n    else {\n        return new QNumberFunction(numeric1)\n            .applySqlFunction(getSqlFunctionCall(SqlFunction.PLUS, [numeric2]));\n    }\n};\nexport function COALESCE(...values) {\n    if (!values || !values.length) {\n        throw new Error(`No arguments provided to the coalesce function`);\n    }\n    let dataType;\n    const firstValue = values[0];\n    // if (firstValue instanceof QUntypedField) {\n    // \tdataType = SQLDataType.ANY\n    // } else \n    if (firstValue instanceof QBooleanField || typeof firstValue === 'boolean') {\n        dataType = SQLDataType.BOOLEAN;\n    }\n    else if (firstValue instanceof QDateField || firstValue instanceof Date) {\n        dataType = SQLDataType.DATE;\n    }\n    else if (firstValue instanceof QNumberField || typeof firstValue === 'number') {\n        dataType = SQLDataType.NUMBER;\n    }\n    else if (firstValue instanceof QStringField || typeof firstValue === 'string') {\n        dataType = SQLDataType.STRING;\n    }\n    else {\n        throw new Error(`Unexpected Field Type: ${firstValue.constructor.name}`);\n        // dataType = SQLDataType.ANY\n    }\n    const otherValues = values.slice(1, values.length);\n    if (firstValue instanceof QOperableField) {\n        return firstValue.applySqlFunction(getSqlFunctionCall(SqlFunction.COALESCE, otherValues));\n    }\n    else {\n        switch (dataType) {\n            // case SQLDataType.ANY:\n            // \treturn new QUntypedFunction(<any>firstValue)\n            // \t\t.applySqlFunction(getSqlFunctionCall(SqlFunction.PLUS, otherValues))\n            case SQLDataType.BOOLEAN:\n                return new QBooleanFunction(firstValue)\n                    .applySqlFunction(getSqlFunctionCall(SqlFunction.PLUS, otherValues));\n            case SQLDataType.DATE:\n                return new QDateFunction(firstValue)\n                    .applySqlFunction(getSqlFunctionCall(SqlFunction.PLUS, otherValues));\n            case SQLDataType.NUMBER:\n                return new QNumberFunction(firstValue)\n                    .applySqlFunction(getSqlFunctionCall(SqlFunction.PLUS, otherValues));\n            case SQLDataType.STRING:\n                return new QStringFunction(firstValue)\n                    .applySqlFunction(getSqlFunctionCall(SqlFunction.PLUS, otherValues));\n            default:\n                throw new Error(`Unexpected SQLDataType: ` + dataType);\n        }\n    }\n}\nexport const UCASE = function (stringValue) {\n    if (stringValue instanceof QStringField) {\n        return stringValue.applySqlFunction(getSqlFunctionCall(SqlFunction.UCASE));\n    }\n    else {\n        return new QStringFunction(stringValue)\n            .applySqlFunction(getSqlFunctionCall(SqlFunction.UCASE));\n    }\n};\nexport const LCASE = function (stringValue) {\n    if (stringValue instanceof QStringField) {\n        return stringValue.applySqlFunction(getSqlFunctionCall(SqlFunction.LCASE));\n    }\n    else {\n        return new QStringFunction(stringValue)\n            .applySqlFunction(getSqlFunctionCall(SqlFunction.LCASE));\n    }\n};\nexport const MID = function (stringValue, start, length) {\n    if (stringValue instanceof QStringField) {\n        return stringValue.applySqlFunction(getSqlFunctionCall(SqlFunction.MID, [start, length]));\n    }\n    else {\n        return new QStringFunction(stringValue)\n            .applySqlFunction(getSqlFunctionCall(SqlFunction.MID, [start, length]));\n    }\n};\nexport const LEN = function (stringValue) {\n    if (stringValue instanceof QStringField) {\n        return stringValue.applySqlFunction(getSqlFunctionCall(SqlFunction.LEN));\n    }\n    else {\n        return new QStringFunction(stringValue)\n            .applySqlFunction(getSqlFunctionCall(SqlFunction.LEN));\n    }\n};\nexport const ROUND = function (numeric, digits = 0) {\n    if (numeric instanceof QNumberField) {\n        return numeric.applySqlFunction(getSqlFunctionCall(SqlFunction.ROUND, [digits]));\n    }\n    else {\n        return new QNumberFunction(numeric)\n            .applySqlFunction(getSqlFunctionCall(SqlFunction.ROUND, [digits]));\n    }\n};\nexport const NOW = function () {\n    return new QDateFunction(null)\n        .applySqlFunction(getSqlFunctionCall(SqlFunction.NOW));\n};\nexport const FORMAT = function (format, ...formatParameters) {\n    if (format instanceof QStringField) {\n        return format.applySqlFunction(getSqlFunctionCall(SqlFunction.FORMAT, formatParameters));\n    }\n    else {\n        return new QStringFunction(format)\n            .applySqlFunction(getSqlFunctionCall(SqlFunction.FORMAT, formatParameters));\n    }\n};\nexport const REPLACE = function (stringValue, toReplace, replaceWith) {\n    if (stringValue instanceof QStringField) {\n        return stringValue.applySqlFunction(getSqlFunctionCall(SqlFunction.REPLACE, [toReplace, replaceWith]));\n    }\n    else {\n        return new QStringFunction(stringValue)\n            .applySqlFunction(getSqlFunctionCall(SqlFunction.REPLACE, [toReplace, replaceWith]));\n    }\n};\nexport const TRIM = function (stringField) {\n    if (stringField instanceof QStringField) {\n        return stringField.applySqlFunction(getSqlFunctionCall(SqlFunction.TRIM));\n    }\n    else {\n        return new QStringFunction(stringField)\n            .applySqlFunction(getSqlFunctionCall(SqlFunction.TRIM));\n    }\n};\nexport class StandAloneFunction {\n}\nexport const DISTINCT = function (selectClause) {\n    let distinctFunction = new QDistinctFunction(selectClause);\n    distinctFunction.applySqlFunction(getSqlFunctionCall(SqlFunction.DISTINCT));\n    return distinctFunction;\n};\nexport class QDistinctFunction extends StandAloneFunction {\n    constructor(selectClause) {\n        super();\n        this.selectClause = selectClause;\n        this.__appliedFunctions__ = [];\n    }\n    static getSelect(distinct) {\n        return distinct.__appliedFunctions__[0].p[0];\n    }\n    applySqlFunction(sqlFunctionCall) {\n        this.__appliedFunctions__.push(sqlFunctionCall);\n        return this;\n    }\n    getSelectClause() {\n        return this.selectClause;\n    }\n    toJSON(parsedSelectClause) {\n        if (this.__appliedFunctions__.length != 1) {\n            throw new Error(`Not expecting and parent or child functions on \"distinct\"`);\n        }\n        if (!this.selectClause) {\n            throw new Error(`SELECT clause is missing in \"distinct\" function.`);\n        }\n        let appliedFunctions = [\n            getSqlFunctionCall(SqlFunction.DISTINCT)\n        ];\n        return {\n            appliedFunctions: appliedFunctions,\n            dt: null,\n            fa: null,\n            ot: JSONClauseObjectType.DISTINCT_FUNCTION,\n            v: parsedSelectClause\n        };\n    }\n}\nexport const EXISTS = function (rawQuery) {\n    let selectClause = rawQuery.SELECT;\n    if (!selectClause) {\n        throw new Error(`Sub-Query must have SELECT clause defined to be used in EXITS function`);\n    }\n    let existsFunction = new QExistsFunction(rawQuery);\n    return existsFunction.applySqlFunction(getSqlFunctionCall(SqlFunction.EXISTS));\n};\nexport class QExistsFunction extends StandAloneFunction {\n    constructor(subQuery) {\n        super();\n        this.subQuery = subQuery;\n        this.__appliedFunctions__ = [];\n        this.operator = SqlOperator.EXISTS;\n        this.o = SqlOperator.EXISTS;\n        this.category = OperationCategory.FUNCTION;\n        this.c = OperationCategory.FUNCTION;\n    }\n    applySqlFunction(sqlFunctionCall) {\n        this.__appliedFunctions__.push(sqlFunctionCall);\n        return this;\n    }\n    getQuery() {\n        return this.subQuery;\n    }\n    toJSON(parsedQuery) {\n        if (this.__appliedFunctions__.length != 1) {\n            throw new Error(`Not expecting and parent or child functions on \"exists\"`);\n        }\n        if (!this.subQuery) {\n            throw new Error(`Subquery is not defined in \"exists\" function.`);\n        }\n        let appliedFunctions = [\n            getSqlFunctionCall(SqlFunction.EXISTS)\n        ];\n        return {\n            c: this.category,\n            ob: {\n                appliedFunctions: appliedFunctions,\n                dt: null,\n                ot: JSONClauseObjectType.EXISTS_FUNCTION,\n                v: parsedQuery\n            },\n            o: this.operator\n        };\n    }\n}\n// Algebra Operators\nexport const DIVIDE = function (numeric1, numeric2) {\n    if (numeric1 instanceof QNumberField) {\n        return numeric1.applySqlFunction(getSqlFunctionCall(SqlFunction.DIVIDE, [numeric2]));\n    }\n    else {\n        return new QNumberFunction(numeric1)\n            .applySqlFunction(getSqlFunctionCall(SqlFunction.DIVIDE, [numeric2]));\n    }\n};\nexport const SUBTRACT = function (numeric1, numeric2) {\n    if (numeric1 instanceof QNumberField) {\n        return numeric1.applySqlFunction(getSqlFunctionCall(SqlFunction.MINUS, [numeric2]));\n    }\n    else {\n        return new QNumberFunction(numeric1)\n            .applySqlFunction(getSqlFunctionCall(SqlFunction.MINUS, [numeric2]));\n    }\n};\nexport const MODULUS = function (numeric1, numeric2) {\n    if (numeric1 instanceof QNumberField) {\n        return numeric1.applySqlFunction(getSqlFunctionCall(SqlFunction.MODULUS, [numeric2]));\n    }\n    else {\n        return new QNumberFunction(numeric1)\n            .applySqlFunction(getSqlFunctionCall(SqlFunction.MODULUS, [numeric2]));\n    }\n};\nexport const MULTIPLY = function (numeric1, numeric2) {\n    if (numeric1 instanceof QNumberField) {\n        return numeric1.applySqlFunction(getSqlFunctionCall(SqlFunction.MULTIPLY, [numeric2]));\n    }\n    else {\n        return new QNumberFunction(numeric1)\n            .applySqlFunction(getSqlFunctionCall(SqlFunction.MULTIPLY, [numeric2]));\n    }\n};\nexport const ADD = function (numeric1, numeric2) {\n    if (numeric1 instanceof QNumberField) {\n        return numeric1.applySqlFunction(getSqlFunctionCall(SqlFunction.PLUS, [numeric2]));\n    }\n    else {\n        return new QNumberFunction(numeric1)\n            .applySqlFunction(getSqlFunctionCall(SqlFunction.PLUS, [numeric2]));\n    }\n};\nexport const CONCAT = function (//\n...fragments) {\n    if (fragments.length > 2) {\n        throw new Error(`Less than two operands passed to 'concat' function.`);\n    }\n    let firstFragment = fragments[0];\n    let restOfFragments = fragments.slice(1);\n    if (firstFragment instanceof QStringField) {\n        return firstFragment.applySqlFunction(getSqlFunctionCall(SqlFunction.CONCATENATE, restOfFragments));\n    }\n    else {\n        return new QStringFunction(firstFragment)\n            .applySqlFunction(getSqlFunctionCall(SqlFunction.CONCATENATE, restOfFragments));\n    }\n};\n/**\n * A\n * UNION\n * B\n */\nexport const UNION = function (...rawQueries) {\n    throw new Error('not implemented');\n};\n/**\n * A\n * UNION ALL\n * B\n */\nexport const UNION_ALL = function (...rawQueries) {\n    throw new Error('not implemented');\n};\n/**\n * A\n * INTERSECT\n * B\n */\nexport const INTERSECT = function (...rawQueries) {\n    throw new Error('not implemented');\n};\n/**\n * A\n * MINUS\n * B\n */\nexport const EXCEPT = function (...rawQueries) {\n    throw new Error('not implemented');\n};\n/**\n * A\n * MINUS\n * B\n */\nexport const MINUS = EXCEPT;\n//# sourceMappingURL=Functions.js.map","import { OperationCategory, SqlOperator } from \"@airport/ground-control\";\nimport { ValueOperation } from \"./Operation\";\n/**\n * Created by papa on 7/13/17.\n */\nexport class UntypedOperation extends ValueOperation {\n    constructor() {\n        super(OperationCategory.UNTYPED);\n    }\n    LIKE(lValue, rValue\n    // TODO: implement ReqExp\n    //| RegExp\n    ) {\n        return {\n            c: this.category,\n            l: lValue,\n            o: SqlOperator.LIKE,\n            r: rValue\n        };\n    }\n}\n//# sourceMappingURL=UntypedOperation.js.map","import { JSONClauseObjectType, } from '@airport/ground-control';\nimport { UntypedOperation } from '../operation/UntypedOperation';\nimport { QOperableField } from './OperableField';\nexport class QUntypedField extends QOperableField {\n    constructor(dbColumn, dbProperty, q, objectType = JSONClauseObjectType.FIELD) {\n        super(dbColumn, dbProperty, q, objectType, new UntypedOperation());\n    }\n    getInstance(qEntity = this.q) {\n        return this.copyFunctions(new QUntypedField(this.dbColumn, this.dbProperty, qEntity, this.objectType));\n    }\n    like(value) {\n        if (value instanceof Function) {\n            value = value();\n        }\n        return this.operation.LIKE(this, value);\n    }\n}\nexport class QUntypedFunction extends QUntypedField {\n    constructor(value, isQueryParameter = false) {\n        // super(<any>{type: SQLDataType.ANY}, null, null, JSONClauseObjectType.FIELD_FUNCTION)\n        super({ type: null }, null, null, JSONClauseObjectType.FIELD_FUNCTION);\n        this.value = value;\n        this.isQueryParameter = isQueryParameter;\n        throw new Error(`Untyped data type is not supported`);\n    }\n    getInstance() {\n        return this.copyFunctions(new QUntypedFunction(this.value));\n    }\n    toJSON(columnAliases, forSelectClause, queryUtils, fieldUtils, relationManager) {\n        let json = this.operableFunctionToJson(this, columnAliases, forSelectClause, queryUtils, fieldUtils, relationManager);\n        if (this.isQueryParameter) {\n            this.parameterAlias = json.v;\n        }\n        return json;\n    }\n}\n//# sourceMappingURL=UntypedField.js.map","import { IOC } from '@airport/direction-indicator';\nimport { EntityAliases, } from '../../core/entity/Aliases';\nimport { ENTITY_UTILS } from '../../../tokens';\n/**\n * Created by Papa on 10/27/2016.\n */\nexport class AbstractQuery {\n    constructor(entityAliases = new EntityAliases(), columnAliases = entityAliases.getNewFieldColumnAliases()) {\n        this.entityAliases = entityAliases;\n        this.columnAliases = columnAliases;\n        this.isEntityQuery = false;\n    }\n    getParameters( //\n    ) {\n        return this.entityAliases.getParams().getParameters();\n    }\n    getNonEntityQuery(rawQuery, jsonQuery, createSelectCallback, queryUtils, fieldUtils, relationManager) {\n        let from = this.fromClauseToJSON(rawQuery.FROM, queryUtils, fieldUtils, relationManager);\n        jsonQuery.F = from;\n        if (createSelectCallback) {\n            createSelectCallback(jsonQuery);\n        }\n        jsonQuery.W = queryUtils.whereClauseToJSON(rawQuery.WHERE, this.columnAliases);\n        jsonQuery.GB = this.groupByClauseToJSON(rawQuery.GROUP_BY);\n        jsonQuery.H = queryUtils.whereClauseToJSON(rawQuery.HAVING, this.columnAliases);\n        jsonQuery.OB = this.orderByClauseToJSON(rawQuery.ORDER_BY);\n        jsonQuery.L = rawQuery.LIMIT;\n        jsonQuery.O = rawQuery.OFFSET;\n        return jsonQuery;\n    }\n    fromClauseToJSON(fromClause, queryUtils, fieldUtils, relationManager) {\n        if (!fromClause) {\n            if (this.isEntityQuery) {\n                return [];\n            }\n            else {\n                throw new Error('From clause must be present in a non-Entity based query.');\n            }\n        }\n        return fromClause.map((fromEntity) => {\n            if (!(IOC.getSync(ENTITY_UTILS).isQEntity(fromEntity))) {\n                throw new Error(`FROM clause can contain only Views or Entities.`);\n            }\n            if (this.isEntityQuery) {\n                if (IOC.getSync(ENTITY_UTILS).isQTree(fromEntity)) {\n                    throw new Error(`Entity FROM clauses can contain only Entities.`);\n                }\n            }\n            return fromEntity.__driver__\n                .getRelationJson(this.columnAliases, queryUtils, fieldUtils, relationManager);\n        });\n    }\n    groupByClauseToJSON(groupBy) {\n        if (!groupBy || !groupBy.length) {\n            return null;\n        }\n        return groupBy.map((field) => {\n            if (!this.columnAliases.hasAliasFor(field)) {\n                throw new Error(`Field used in group by clause is not present in SELECT clause`);\n            }\n            return {\n                fa: this.columnAliases.getExistingAlias(field)\n            };\n        });\n    }\n    orderByClauseToJSON(orderBy) {\n        if (!orderBy || !orderBy.length) {\n            return null;\n        }\n        return orderBy.map((field) => {\n            return field.toJSON(this.columnAliases);\n        });\n    }\n}\n//# sourceMappingURL=AbstractQuery.js.map","import { QField } from '../../core/field/Field';\nimport { getPrimitiveValue } from '../../core/field/WrapperFunctions';\nimport { AbstractQuery } from './AbstractQuery';\n/**\n * Created by Papa on 11/17/2016.\n */\n// FIXME: add support for a full blown INSERT VALUES, with expression support for VALUES\nexport class AbstractInsertValues extends AbstractQuery {\n    constructor(rawInsertValues, columnIndexes) {\n        super();\n        this.rawInsertValues = rawInsertValues;\n        this.columnIndexes = columnIndexes;\n    }\n    validateColumn(dbColumn, dbEntity, columnName) {\n        if (!dbColumn) {\n            throw new Error(`\r\n\t\tCould not find column ${columnName} in entity: ${dbEntity.name}\r\n\t\t\t\t(table: ${dbEntity.tableConfig.name})\r\n\t\t\t\t\t\t`);\n        }\n        if (dbColumn.entity.applicationVersion.application.index !==\n            dbEntity.applicationVersion.application.index\n            || dbColumn.entity.index !== dbEntity.index) {\n            const columnApplication = dbColumn.entity.applicationVersion.application;\n            const entityApplication = dbEntity.applicationVersion.application;\n            throw new Error(`Unexpected entity for column ${dbColumn.name}.\r\n\t\t\tExpecting:\r\n\t\t\t\tDomain: ${entityApplication.domain.name}\r\n\t\t\t\tApplication: ${entityApplication.name}\r\n\t\t\t\tEntity: ${dbEntity.name}\r\n\t\t\tFound:\r\n\t\t\t\tDomain: ${columnApplication.domain.name}\r\n\t\t\t\tApplication: ${columnApplication.name}\r\n\t\t\t\tEntity: ${dbColumn.entity.name}`);\n        }\n    }\n    valuesToJSON(valueSets, dbColumns, queryUtils, fieldUtils, relationManager) {\n        // let currentValueIndex = -1;\n        // this.values           = [];\n        return valueSets.map((valueSet, rowIndex) => {\n            return valueSet.map((value, columnIndex) => {\n                if (value === undefined) {\n                    throw new Error(`Cannot use 'undefined' in VALUES clause.`);\n                }\n                if (!(value instanceof QField)) {\n                    return getPrimitiveValue(value, dbColumns[columnIndex], rowIndex);\n                    // this.values.push(getPrimitiveValue(value));\n                    // return ++currentValueIndex;\n                }\n                else {\n                    return value.toJSON(this.columnAliases, false, queryUtils, fieldUtils, relationManager);\n                }\n            });\n        });\n    }\n}\n//# sourceMappingURL=AbstractInsertValues.js.map","import { AbstractQuery } from './AbstractQuery';\nexport class AbstractUpdate extends AbstractQuery {\n    constructor(rawUpdate) {\n        super();\n        this.rawUpdate = rawUpdate;\n    }\n    toJSON(queryUtils, fieldUtils, relationManager) {\n        return {\n            U: this.rawUpdate.UPDATE\n                .__driver__.getRelationJson(this.columnAliases, queryUtils, fieldUtils, relationManager),\n            S: this.setToJSON(this.rawUpdate.SET, queryUtils, fieldUtils, relationManager),\n            W: queryUtils.whereClauseToJSON(this.rawUpdate.WHERE, this.columnAliases)\n        };\n    }\n}\n//# sourceMappingURL=AbstractUpdate.js.map","import { AbstractQuery } from './AbstractQuery';\n/**\n * Created by Papa on 10/2/2016.\n */\nexport class Delete extends AbstractQuery {\n    constructor(rawDelete) {\n        super();\n        this.rawDelete = rawDelete;\n    }\n    toJSON(queryUtils, fieldUtils, relationManager) {\n        return {\n            DF: this.rawDelete.DELETE_FROM\n                .__driver__.getRelationJson(this.columnAliases, queryUtils, fieldUtils, relationManager),\n            W: queryUtils.whereClauseToJSON(this.rawDelete.WHERE, this.columnAliases)\n        };\n    }\n}\n//# sourceMappingURL=Delete.js.map","import { QDistinctFunction } from '../../core/field/Functions';\nimport { AbstractQuery } from './AbstractQuery';\n/**\n * Created by Papa on 10/24/2016.\n */\nexport const NON_ENTITY_SELECT_ERROR_MESSAGE = `Unsupported entry in Non-Entity SELECT clause, must be a(n): Entity Field | ManyToOne Relation | primitive wrapped by \"bool\",\"date\",\"num\",\"str\" | query wrapped by \"field\"`;\nexport class DistinguishableQuery extends AbstractQuery {\n    constructor(entityAliases) {\n        super(entityAliases);\n        this.isHierarchicalEntityQuery = false;\n    }\n    selectClauseToJSON(rawSelect, queryUtils, fieldUtils, relationManager) {\n        if (rawSelect instanceof QDistinctFunction) {\n            if (this.isHierarchicalEntityQuery) {\n                throw new Error(`Distinct cannot be used in SELECT of Hierarchical/Bridged Entity queries.`);\n            }\n            let rawInnerSelect = rawSelect.getSelectClause();\n            let innerSelect = this.nonDistinctSelectClauseToJSON(rawInnerSelect, queryUtils, fieldUtils, relationManager);\n            return rawSelect.toJSON(innerSelect);\n        }\n        else {\n            return this.nonDistinctSelectClauseToJSON(rawSelect, queryUtils, fieldUtils, relationManager);\n        }\n    }\n}\n//# sourceMappingURL=NonEntityQuery.js.map","import { QOneToManyRelation, QAirEntityOneToManyRelation } from '../../core/entity/OneToManyRelation';\nimport { QField } from '../../core/field/Field';\nimport { DistinguishableQuery, NON_ENTITY_SELECT_ERROR_MESSAGE } from './NonEntityQuery';\n/**\n * Created by Papa on 10/24/2016.\n */\nexport const FIELD_IN_SELECT_CLAUSE_ERROR_MESSAGE = `Entity SELECT clauses can only contain fields assigned: null | undefined | boolean | Date | number | string | Relation SELECT`;\n/**\n * A query whose SELECT facade is a collection of properties.\n */\nexport class MappableQuery extends DistinguishableQuery {\n    nonDistinctSelectClauseToJSON(rawSelect, queryUtils, fieldUtils, relationManager) {\n        let select = {};\n        for (let property in rawSelect) {\n            let value = rawSelect[property];\n            if (value instanceof QField) {\n                if (this.isEntityQuery) {\n                    throw new Error(FIELD_IN_SELECT_CLAUSE_ERROR_MESSAGE);\n                }\n                // The same value may appear in the SELECT clause more than once.\n                // In that case the last one will set the alias for all of them.\n                // Because the alias only matters for GROUP_BY and ORDER_BY\n                // that is OK.\n                select[property] = value.toJSON(this.columnAliases, true, queryUtils, fieldUtils, relationManager);\n            }\n            else if (value instanceof QOneToManyRelation\n                || value instanceof QAirEntityOneToManyRelation) {\n                throw new Error(`@OneToMany relation objects can cannot be used in SELECT clauses`);\n            } // Must be a primitive\n            else {\n                let isChildObject = false;\n                try {\n                    // Must be an entity query here\n                    switch (typeof value) {\n                        case 'boolean':\n                        case 'number':\n                        case 'string':\n                        case 'undefined':\n                            continue;\n                        case 'object':\n                            if (value instanceof Date) {\n                            }\n                            else if (value === null) {\n                            }\n                            else {\n                                isChildObject = true;\n                                select[property] = this.nonDistinctSelectClauseToJSON(value, queryUtils, fieldUtils, relationManager);\n                            }\n                    }\n                }\n                finally {\n                    if (!isChildObject && !this.isEntityQuery) {\n                        throw new Error(NON_ENTITY_SELECT_ERROR_MESSAGE);\n                    }\n                }\n            }\n        }\n        return select;\n    }\n}\n//# sourceMappingURL=MappableQuery.js.map","import { QField } from '../../core/field/Field';\nimport { MappableQuery } from './MappableQuery';\n/**\n * Created by Papa on 10/24/2016.\n */\nexport class EntityQuery extends MappableQuery {\n    constructor(rawQuery) {\n        super();\n        this.rawQuery = rawQuery;\n        this.isEntityQuery = true;\n        this.isHierarchicalEntityQuery = true;\n    }\n    toJSON(queryUtils, fieldUtils, relationManager) {\n        return {\n            S: this.selectClauseToJSON(this.rawQuery.SELECT, queryUtils, fieldUtils, relationManager),\n            F: this.fromClauseToJSON(this.rawQuery.FROM, queryUtils, fieldUtils, relationManager),\n            forUpdate: this.rawQuery.FOR_UPDATE,\n            W: queryUtils.whereClauseToJSON(this.rawQuery.WHERE, this.columnAliases),\n            OB: this.orderByClauseToJSON(this.rawQuery.ORDER_BY)\n        };\n    }\n    nonDistinctSelectClauseToJSON(rawSelect) {\n        for (let field in rawSelect) {\n            let value = rawSelect[field];\n            if (value instanceof QField) {\n                throw new Error(`Field References cannot be used in Entity Queries`);\n            }\n            else if (value instanceof Object && !(value instanceof Date)) {\n                this.nonDistinctSelectClauseToJSON(value);\n            }\n        }\n        return rawSelect;\n    }\n    orderByClauseToJSON(orderBy) {\n        if (!orderBy || !orderBy.length) {\n            return null;\n        }\n        return orderBy.map((field) => {\n            return field.toEntityJSON();\n        });\n    }\n}\nexport class LimitedEntityQuery extends EntityQuery {\n    constructor(rawQuery) {\n        super(rawQuery);\n        this.rawQuery = rawQuery;\n        this.isHierarchicalEntityQuery = false;\n    }\n    toJSON(queryUtils, fieldUtils, relationManager) {\n        let limitedJsonEntity = super.toJSON(queryUtils, fieldUtils, relationManager);\n        limitedJsonEntity.L = this.rawQuery.LIMIT;\n        limitedJsonEntity.O = this.rawQuery.OFFSET;\n        return limitedJsonEntity;\n    }\n}\n//# sourceMappingURL=EntityQuery.js.map","import { JSONClauseObjectType, SQLDataType } from '@airport/ground-control';\nimport { EntityAliases } from '../../core/entity/Aliases';\nimport { QBooleanField } from '../../core/field/BooleanField';\nimport { QDateField } from '../../core/field/DateField';\nimport { QField } from '../../core/field/Field';\nimport { QDistinctFunction } from '../../core/field/Functions';\nimport { QNumberField } from '../../core/field/NumberField';\nimport { QStringField } from '../../core/field/StringField';\nimport { QUntypedField } from '../../core/field/UntypedField';\nimport { DistinguishableQuery, NON_ENTITY_SELECT_ERROR_MESSAGE, } from './NonEntityQuery';\n/**\n * Created by Papa on 10/24/2016.\n */\nexport class FieldQuery extends DistinguishableQuery {\n    // private qEntityMap: {[entityName: string]: QEntity<any>},\n    //\tprivate entitiesRelationPropertyMap: {[entityName: string]: {[propertyName: string]:\n    // EntityRelationRecord}},\n    //\t\tprivate entitiesPropertyTypeMap: {[entityName: string]: {[propertyName: string]:\n    // boolean}}\n    constructor(rawQuery, entityAliases = new EntityAliases()) {\n        super(entityAliases);\n        this.rawQuery = rawQuery;\n    }\n    nonDistinctSelectClauseToJSON(rawSelect, queryUtils, fieldUtils, relationManager) {\n        if (!(this.rawQuery.SELECT instanceof QField)) {\n            throw new Error(NON_ENTITY_SELECT_ERROR_MESSAGE);\n        }\n        this.columnAliases.entityAliases.getNextAlias(this.rawQuery.SELECT.q.__driver__.getRootJoinEntity());\n        return this.rawQuery.SELECT.toJSON(this.columnAliases, true, queryUtils, fieldUtils, relationManager);\n    }\n    toJSON(queryUtils, fieldUtils, relationManager) {\n        let select = this.selectClauseToJSON(this.rawQuery.SELECT, queryUtils, fieldUtils, relationManager);\n        let jsonFieldQuery = {\n            S: select,\n            forUpdate: this.rawQuery.FOR_UPDATE,\n            ot: JSONClauseObjectType.FIELD_QUERY,\n            dt: this.getClauseDataType()\n        };\n        return this.getNonEntityQuery(this.rawQuery, jsonFieldQuery, null, queryUtils, fieldUtils, relationManager);\n    }\n    getClauseDataType() {\n        let selectField = this.rawQuery.SELECT;\n        if (selectField instanceof QDistinctFunction) {\n            selectField = selectField.getSelectClause();\n        }\n        if (selectField instanceof QBooleanField) {\n            return SQLDataType.BOOLEAN;\n        }\n        else if (selectField instanceof QDateField) {\n            return SQLDataType.DATE;\n        }\n        else if (selectField instanceof QNumberField) {\n            return SQLDataType.NUMBER;\n        }\n        else if (selectField instanceof QStringField) {\n            return SQLDataType.STRING;\n        }\n        else if (selectField instanceof QUntypedField) {\n            return SQLDataType.ANY;\n        }\n        else {\n            throw new Error(`Unsupported type of SELECT field in Field Query`);\n        }\n    }\n}\n//# sourceMappingURL=FieldQuery.js.map","import { AbstractInsertValues } from './AbstractInsertValues';\n// FIXME: add support for a full blown INSERT VALUES, with expression support for VALUES\nexport class InsertColumnValues extends AbstractInsertValues {\n    toJSON(queryUtils, fieldUtils, relationManager) {\n        const entityDriver = this.rawInsertValues.INSERT_INTO.__driver__;\n        const insertInto = entityDriver.getRelationJson(this.columnAliases, queryUtils, fieldUtils, relationManager);\n        const columnMap = entityDriver.dbEntity.columnMap;\n        const dbColumns = [];\n        const columnIndexes = this.columnIndexes ? this.columnIndexes : this.rawInsertValues.columns.map((columnName) => {\n            const dbColumn = columnMap[columnName];\n            this.validateColumn(dbColumn, entityDriver.dbEntity, columnName);\n            dbColumns.push(dbColumn);\n            return dbColumn.index;\n        });\n        return {\n            II: insertInto,\n            C: columnIndexes,\n            V: this.valuesToJSON(this.rawInsertValues.VALUES, dbColumns, queryUtils, fieldUtils, relationManager)\n        };\n    }\n}\n//# sourceMappingURL=InsertColumnValues.js.map","import { AbstractInsertValues } from './AbstractInsertValues';\n/**\n * Created by Papa on 11/17/2016.\n */\n// FIXME: add support for a full blown INSERT VALUES, with expression support for VALUES\nexport class InsertValues extends AbstractInsertValues {\n    toJSON(queryUtils, fieldUtils, relationManager) {\n        const driver = this.rawInsertValues.INSERT_INTO\n            .__driver__;\n        const insertInto = driver.getRelationJson(this.columnAliases, queryUtils, fieldUtils, relationManager);\n        const dbColumns = [];\n        let columnIndexes;\n        if (this.columnIndexes) {\n            columnIndexes = this.columnIndexes;\n            for (let i = 0; i < columnIndexes.length; i++) {\n                const dbColumn = driver.dbEntity.columns[columnIndexes[i]];\n                this.validateColumn(dbColumn, driver.dbEntity);\n                dbColumns.push(dbColumn);\n            }\n        }\n        else {\n            columnIndexes = this.rawInsertValues.columns.map(column => {\n                const dbColumn = column.dbColumn;\n                this.validateColumn(dbColumn, driver.dbEntity);\n                dbColumns.push(dbColumn);\n                return dbColumn.index;\n            });\n        }\n        return {\n            II: insertInto,\n            C: columnIndexes,\n            V: this.valuesToJSON(this.rawInsertValues.VALUES, dbColumns, queryUtils, fieldUtils, relationManager)\n        };\n    }\n}\n//# sourceMappingURL=InsertValues.js.map","import { QField } from '../../core/field/Field';\nimport { DistinguishableQuery, NON_ENTITY_SELECT_ERROR_MESSAGE, } from './NonEntityQuery';\n/**\n * Created by Papa on 10/23/2016.\n */\nexport class SheetQuery extends DistinguishableQuery {\n    constructor(rawQuery) {\n        super();\n        this.rawQuery = rawQuery;\n    }\n    nonDistinctSelectClauseToJSON(rawSelect, queryUtils, fieldUtils, relationManager) {\n        if (!(rawSelect instanceof Array)) {\n            throw new Error(`Flat Queries an array of fields in SELECT clause.`);\n        }\n        return rawSelect.map((selectField) => {\n            if (!(selectField instanceof QField)) {\n                throw new Error(NON_ENTITY_SELECT_ERROR_MESSAGE);\n            }\n            this.columnAliases.entityAliases.getNextAlias(selectField.q.__driver__.getRootJoinEntity());\n            return selectField.toJSON(this.columnAliases, true, queryUtils, fieldUtils, relationManager);\n        });\n    }\n    toJSON(queryUtils, fieldUtils, relationManager) {\n        let select = this.selectClauseToJSON(this.rawQuery.SELECT, queryUtils, fieldUtils, relationManager);\n        let jsonFieldQuery = {\n            S: select,\n            forUpdate: this.rawQuery.FOR_UPDATE\n        };\n        return this.getNonEntityQuery(this.rawQuery, jsonFieldQuery, null, queryUtils, fieldUtils, relationManager);\n    }\n}\n//# sourceMappingURL=SheetQuery.js.map","import { EntityAliases } from '../../core/entity/Aliases';\nimport { MappableQuery } from './MappableQuery';\nexport class TreeQuery extends MappableQuery {\n    constructor(rawQuery, entityAliases = new EntityAliases()) {\n        super(entityAliases);\n        this.rawQuery = rawQuery;\n    }\n    toJSON(queryUtils, fieldUtils, relationManager) {\n        let jsonMappedQuery = this.getNonEntityQuery(this.rawQuery, {}, (jsonQuery) => {\n            jsonQuery.S = this.selectClauseToJSON(this.rawQuery.SELECT, queryUtils, fieldUtils, relationManager);\n            jsonQuery.forUpdate = this.rawQuery.FOR_UPDATE;\n        }, queryUtils, fieldUtils, relationManager);\n        return jsonMappedQuery;\n    }\n}\n//# sourceMappingURL=TreeQuery.js.map","import { wrapPrimitive } from '../../core/field/WrapperFunctions';\nimport { AbstractUpdate } from './AbstractUpdate';\nexport class UpdateColumns extends AbstractUpdate {\n    constructor(rawUpdate) {\n        super(rawUpdate);\n    }\n    setToJSON(set, queryUtils, fieldUtils, relationManager) {\n        const setClause = {};\n        const dbEntity = this.rawUpdate.UPDATE\n            .__driver__.dbEntity;\n        const dbColumnMap = dbEntity.columnMap;\n        const idDbColumnMap = dbEntity.idColumnMap;\n        for (const columnName in set) {\n            let value = set[columnName];\n            if (value === undefined) {\n                delete set[columnName];\n                continue;\n            }\n            if (!dbColumnMap[columnName]) {\n                throw new Error(`\r\n\tUnknown column: '${columnName}' for entity: '${dbEntity.name}'\r\n\t\t\t(table: '${dbEntity.tableConfig.name}').\r\n\t\t\t\t`);\n            }\n            if (idDbColumnMap[columnName]) {\n                throw new Error(`\r\n\tCannot update @Id columns:\r\n\tColumn: '${columnName}' for entity: '${dbEntity.name}'\r\n\t\t\t(table: '${dbEntity.tableConfig.name}').\r\n\t\t\t\t`);\n            }\n            value = wrapPrimitive(value);\n            if (!value.toJSON) {\n                throw `Unexpected value ${JSON.stringify(value)} for property ${columnName} of entity ${dbEntity.name}`;\n            }\n            setClause[columnName] = value.toJSON(this.columnAliases, false, queryUtils, fieldUtils, relationManager);\n        }\n        return setClause;\n    }\n}\n//# sourceMappingURL=UpdateColumns.js.map","import { EntityRelationType } from '@airport/ground-control';\nimport { wrapPrimitive } from '../../core/field/WrapperFunctions';\nimport { AbstractUpdate } from './AbstractUpdate';\n/**\n * Created by Papa on 10/2/2016.\n */\n// FIXME: add support for a full blown UPDATE, with expression support for SET\nexport class UpdateProperties extends AbstractUpdate {\n    constructor(rawUpdate) {\n        super(rawUpdate);\n    }\n    toJSON(queryUtils, fieldUtils, relationManager) {\n        return {\n            U: this.rawUpdate.UPDATE\n                .__driver__.getRelationJson(this.columnAliases, queryUtils, fieldUtils, relationManager),\n            S: this.setToJSON(this.rawUpdate.SET, queryUtils, fieldUtils, relationManager),\n            W: queryUtils.whereClauseToJSON(this.rawUpdate.WHERE, this.columnAliases)\n        };\n    }\n    setToJSON(rawSet, queryUtils, fieldUtils, relationManager) {\n        const jsonSetClause = {};\n        const dbEntity = this.rawUpdate.UPDATE.__driver__.dbEntity;\n        const dbPropertyMap = dbEntity.propertyMap;\n        this.setEntityFragmentsToJSON(rawSet, jsonSetClause, [], dbPropertyMap, [], queryUtils, fieldUtils, relationManager);\n        return jsonSetClause;\n    }\n    setEntityFragmentsToJSON(rawSetFragment, jsonSetClause, dbPropertyChain, dbPropertyMap, childDbRelationChain, queryUtils, fieldUtils, relationManager) {\n        const isTopLevelFragment = !dbPropertyMap.length;\n        for (const propertyName in rawSetFragment) {\n            const dbProperty = dbPropertyMap[propertyName];\n            const dbEntity = dbProperty.entity;\n            if (!dbProperty) {\n                throw new Error(`\r\n${this.getPropertyChainDesription(dbPropertyChain)}\r\n\r\n\tUnknown property: '${propertyName}' for entity: '${dbEntity.name}'\r\n\t\t\t(table: '${dbEntity.tableConfig.name}').\r\n\t\t\t\t`);\n            }\n            if (isTopLevelFragment && dbProperty.isId) {\n                throw new Error(`\r\n${this.getPropertyChainDesription(dbPropertyChain)}\r\n\r\n\tCannot update @Id properties:\r\n\tProperty: '${propertyName}' for entity: '${dbEntity.name}'\r\n\t\t\t(table: '${dbEntity.tableConfig.name}').\r\n\t\t\t\t`);\n            }\n            else if (!isTopLevelFragment && !dbProperty.isId) {\n                throw new Error(`\r\n${this.getPropertyChainDesription(dbPropertyChain)}\r\n\r\n\tUpdated properties of nested entities must be @Id properties:\r\n\tProperty: '${propertyName}' for entity: '${dbEntity.name}'\r\n\t\t\t(table: '${dbEntity.tableConfig.name}').\r\n\t\t\t\t`);\n            }\n            const childDbPropertyChain = [...dbPropertyChain];\n            childDbPropertyChain.push(dbProperty);\n            this.setFragmentToJSON(rawSetFragment, jsonSetClause, childDbPropertyChain, propertyName, childDbRelationChain, queryUtils, fieldUtils, relationManager);\n        }\n    }\n    setFragmentToJSON(rawSetFragment, jsonSetClause, dbPropertyChain, propertyName, dbRelationChain, queryUtils, fieldUtils, relationManager) {\n        const dbProperty = dbPropertyChain[dbPropertyChain.length - 1];\n        const dbEntity = dbProperty.entity;\n        let value = rawSetFragment[propertyName];\n        if (value === undefined) {\n            delete rawSetFragment[propertyName];\n            return;\n        }\n        value = wrapPrimitive(value);\n        // If this is not a nested object definition\n        if (value.toJSON) {\n            if (dbProperty.propertyColumns.length !== 1) {\n                throw new Error(`\r\n${this.getPropertyChainDesription(dbPropertyChain)}\r\n\r\n\tCannot update multi-column property to a single value:\r\n\tProperty: '${propertyName}' for entity: '${dbEntity.name}'\r\n\t\t\t(table: '${dbEntity.tableConfig.name}')\r\n\t\t\thas ${dbProperty.propertyColumns.length + 1} columns \r\n\t\t\tbut is being updates to a single value.\r\n\t\t\t\t`);\n            }\n            else {\n                let dbColumn = dbProperty.propertyColumns[0].column;\n                if (dbRelationChain.length) {\n                    for (let i = dbRelationChain.length - 1; i >= 0; i--) {\n                        const currentDbRelation = dbRelationChain[i];\n                        const matchingManyRelationColumn = currentDbRelation.manyRelationColumns.filter((manyRelationColumn) => {\n                            return manyRelationColumn.manyColumn.index ===\n                                dbColumn.index;\n                        })[0];\n                        dbColumn = matchingManyRelationColumn.oneColumn;\n                    }\n                }\n                if (jsonSetClause[dbColumn.name]) {\n                    const firstProperty = dbPropertyChain[0];\n                    throw new Error(`\r\n${this.getPropertyChainDesription(dbPropertyChain)}\r\n\r\n\tCannot update the same column multiple times in the same statement:\r\n\tProperty: '${propertyName}' for entity: '${dbEntity.name}'\r\n\t\t\t(table: '${dbEntity.tableConfig.name}')\r\n\tmaps to table: ${firstProperty.entity.tableConfig.name}, column: ${dbColumn.name}\r\n\t\twhich has already been set in this update statement (above).\r\n\t\t\t\t`);\n                }\n                jsonSetClause[dbColumn.name] = value.toJSON(this.columnAliases, false, queryUtils, fieldUtils, relationManager);\n                return;\n            }\n        }\n        // This should be a nested property definition\n        else {\n            if (typeof value === 'object') {\n                const dbRelation = dbProperty.relation[0];\n                const childDbRelationChain = [...dbRelationChain];\n                childDbRelationChain.push(dbRelation);\n                switch (dbRelation.relationType) {\n                    case EntityRelationType.MANY_TO_ONE: {\n                        this.setEntityFragmentsToJSON(value, jsonSetClause, dbPropertyChain, dbRelation.relationEntity.propertyMap, childDbRelationChain, queryUtils, fieldUtils, relationManager);\n                        break;\n                    }\n                    case EntityRelationType.ONE_TO_MANY:\n                        // Not  nested property definition\n                        throw new Error(`\r\n${this.getPropertyChainDesription(dbPropertyChain)}\r\n\r\n\t\t\t\tCannot update @OneToMany properties:\r\n\t\t\t\t\tProperty: '${propertyName}' of entity: '${this.rawUpdate.UPDATE.__driver__.dbEntity.name}\r\n\t\t\t\t\tis a @OneToMany relation and cannot be updated since it is\r\n\t\t\t\t\tassumed to be based on @Id columns (which cannot be updated).'\r\n\t\t\t\t`);\n                    default:\n                        // Not  nested property definition\n                        throw new Error(`\r\n${this.getPropertyChainDesription(dbPropertyChain)}\r\n\r\n\t\t\t\tUndefined relation type: \r\n\t\t\t\t\tProperty: '${propertyName}' of entity: '${this.rawUpdate.UPDATE.__driver__.dbEntity.name}'\r\n\t\t\t\t\tis defined with an unknown type of a relation.  Expecting either\r\n\t\t\t\t\t@ManyToOne(...)\r\n\t\t\t\t\tor\r\n\t\t\t\t\t@OneToMany(...)\r\n\t\t\t\t`);\n                }\n                return;\n            }\n            else {\n                // Not  nested property definition\n                throw new Error(`\r\n${this.getPropertyChainDesription(dbPropertyChain)}\r\n\r\n\t\t\t\tUnexpected value ${JSON.stringify(value)} \r\n\t\t\t\t\tfor property: '${propertyName}' of entity: '${this.rawUpdate.UPDATE.__driver__.dbEntity.name}'\r\n\t\t\t\tExpecting a nested property definition.\r\n\t\t\t\t`);\n            }\n        }\n    }\n    getPropertyChainDesription(dbPropertyChain) {\n        const rootDbEntity = dbPropertyChain[0].entity;\n        let prefix = '    ';\n        let lastPrefix = '';\n        let ending = `...\r\n}`;\n        let message = `\r\nUpdated Entity: ${rootDbEntity.name}, property chain:\r\n{`;\n        const maxChainDepth = dbPropertyChain.length;\n        for (let i = 0; i < maxChainDepth; i++) {\n            let dbProperty = dbPropertyChain[i];\n            message += `${prefix}${dbProperty.name}: `;\n            if (i + 1 < maxChainDepth) {\n                message += `: {\\n`;\n            }\n            else {\n                message += 'VALUE';\n            }\n            ending = prefix + `...\r\n${lastPrefix}}`;\n            lastPrefix = prefix;\n            prefix += '    ';\n        }\n        return `${message}\r\n${ending}`;\n    }\n}\n//# sourceMappingURL=UpdateProperties.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nexport class LookupProxy {\n    constructor(dao) {\n        this.dao = dao;\n    }\n    ensureContext(context) {\n        return doEnsureContext(context);\n    }\n    async lookup(rawQuery, queryResultType, search, one, QueryClass, context, mapResults) {\n        return await this.dao.lookup.lookup(rawQuery, queryResultType, search, one, QueryClass, context, mapResults);\n    }\n}\nlet Lookup = class Lookup {\n    ensureContext(context) {\n        return doEnsureContext(context);\n    }\n    async lookup(rawQuery, queryResultType, search, one, QueryClass, context) {\n        let query;\n        if (QueryClass) {\n            const rawNonEntityQuery = this.entityUtils.getQuery(rawQuery);\n            query = new QueryClass(rawNonEntityQuery);\n        }\n        else {\n            query = this.entityUtils.getEntityQuery(rawQuery);\n        }\n        let queryMethod;\n        if (search) {\n            if (one) {\n                queryMethod = this.queryFacade.searchOne;\n            }\n            else {\n                queryMethod = this.queryFacade.search;\n            }\n        }\n        else {\n            if (one) {\n                queryMethod = this.queryFacade.findOne;\n            }\n            else {\n                queryMethod = this.queryFacade.find;\n            }\n        }\n        let result = await queryMethod.call(this.queryFacade, query, queryResultType, context);\n        if (!one && !result) {\n            result = [];\n        }\n        return result;\n    }\n};\n__decorate([\n    Inject()\n], Lookup.prototype, \"entityUtils\", void 0);\n__decorate([\n    Inject()\n], Lookup.prototype, \"queryFacade\", void 0);\nLookup = __decorate([\n    Injected()\n], Lookup);\nexport { Lookup };\nexport function doEnsureContext(context) {\n    if (!context) {\n        context = {};\n    }\n    if (!context.startedAt) {\n        context.startedAt = new Date();\n    }\n    return context;\n}\n//# sourceMappingURL=Lookup.js.map","import { IOC } from '@airport/direction-indicator';\nimport { ENTITY_UTILS } from '@airport/tarmaq-query';\nimport { LookupProxy } from './Lookup';\nexport class EntityLookup extends LookupProxy {\n    constructor(dbEntity, dao, mapResults = EntityLookup.mapResults) {\n        super(dao);\n        this.dbEntity = dbEntity;\n        this.mapResults = mapResults;\n    }\n    setNoCache(ChildClass) {\n        return new ChildClass(this.dbEntity, this.dao, this.mapResults);\n    }\n    async entityLookup(rawEntityQuery, queryResultType, search, one, context) {\n        context.dbEntity = this.dbEntity;\n        rawEntityQuery = IOC.getSync(ENTITY_UTILS)\n            .ensureId(rawEntityQuery);\n        const result = await this.lookup(rawEntityQuery, queryResultType, search, one, null, context, this.mapResults);\n        if (search) {\n            throw new Error(`Search operations are not yet supported`);\n        }\n        else {\n            this.dao.updateCacheManager.saveOriginalValues(result, context.dbEntity);\n        }\n        return result;\n    }\n}\nEntityLookup.mapResults = false;\n//# sourceMappingURL=EntityLookup.js.map","import { QueryResultType } from '@airport/ground-control';\nimport { EntityLookup } from './EntityLookup';\n/**\n * Created by Papa on 11/12/2016.\n */\nexport class EntityFind extends EntityLookup {\n    async graph(rawGraphQuery, context) {\n        return await this.find(rawGraphQuery, QueryResultType.ENTITY_GRAPH, context);\n    }\n    async tree(rawTreeQuery, context) {\n        return await this.find(rawTreeQuery, QueryResultType.ENTITY_TREE, context);\n    }\n    async find(rawEntityQuery, queryResultType, context) {\n        return await this.entityLookup(rawEntityQuery, queryResultType, false, false, this.ensureContext(context));\n    }\n    noCache() {\n        return this.setNoCache(EntityFind);\n    }\n}\n//# sourceMappingURL=EntityFind.js.map","import { QueryResultType } from '@airport/ground-control';\nimport { EntityLookup } from './EntityLookup';\n/**\n * Created by Papa on 11/12/2016.\n */\nexport class EntityFindOne extends EntityLookup {\n    async graph(rawGraphQuery, context) {\n        return await this.findOne(rawGraphQuery, QueryResultType.ENTITY_GRAPH, context);\n    }\n    async tree(rawTreeQuery, context) {\n        return await this.findOne(rawTreeQuery, QueryResultType.ENTITY_TREE, context);\n    }\n    // TODO: return Observable from deep within the framework\n    // and detect changes to the underlying data\n    async findOne(rawEntityQuery, queryResultType, context) {\n        return await this.entityLookup(rawEntityQuery, queryResultType, false, true, this.ensureContext(context));\n    }\n    noCache() {\n        return this.setNoCache(EntityFindOne);\n    }\n}\n//# sourceMappingURL=EntityFindOne.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export function isFunction(value) {\n    return typeof value === 'function';\n}\n//# sourceMappingURL=isFunction.js.map","export function createErrorClass(createImpl) {\n    var _super = function (instance) {\n        Error.call(instance);\n        instance.stack = new Error().stack;\n    };\n    var ctorFunc = createImpl(_super);\n    ctorFunc.prototype = Object.create(Error.prototype);\n    ctorFunc.prototype.constructor = ctorFunc;\n    return ctorFunc;\n}\n//# sourceMappingURL=createErrorClass.js.map","import { createErrorClass } from './createErrorClass';\nexport var UnsubscriptionError = createErrorClass(function (_super) {\n    return function UnsubscriptionErrorImpl(errors) {\n        _super(this);\n        this.message = errors\n            ? errors.length + \" errors occurred during unsubscription:\\n\" + errors.map(function (err, i) { return i + 1 + \") \" + err.toString(); }).join('\\n  ')\n            : '';\n        this.name = 'UnsubscriptionError';\n        this.errors = errors;\n    };\n});\n//# sourceMappingURL=UnsubscriptionError.js.map","export function arrRemove(arr, item) {\n    if (arr) {\n        var index = arr.indexOf(item);\n        0 <= index && arr.splice(index, 1);\n    }\n}\n//# sourceMappingURL=arrRemove.js.map","import { __read, __spreadArray, __values } from \"tslib\";\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { arrRemove } from './util/arrRemove';\nvar Subscription = (function () {\n    function Subscription(initialTeardown) {\n        this.initialTeardown = initialTeardown;\n        this.closed = false;\n        this._parentage = null;\n        this._teardowns = null;\n    }\n    Subscription.prototype.unsubscribe = function () {\n        var e_1, _a, e_2, _b;\n        var errors;\n        if (!this.closed) {\n            this.closed = true;\n            var _parentage = this._parentage;\n            if (_parentage) {\n                this._parentage = null;\n                if (Array.isArray(_parentage)) {\n                    try {\n                        for (var _parentage_1 = __values(_parentage), _parentage_1_1 = _parentage_1.next(); !_parentage_1_1.done; _parentage_1_1 = _parentage_1.next()) {\n                            var parent_1 = _parentage_1_1.value;\n                            parent_1.remove(this);\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (_parentage_1_1 && !_parentage_1_1.done && (_a = _parentage_1.return)) _a.call(_parentage_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                else {\n                    _parentage.remove(this);\n                }\n            }\n            var initialTeardown = this.initialTeardown;\n            if (isFunction(initialTeardown)) {\n                try {\n                    initialTeardown();\n                }\n                catch (e) {\n                    errors = e instanceof UnsubscriptionError ? e.errors : [e];\n                }\n            }\n            var _teardowns = this._teardowns;\n            if (_teardowns) {\n                this._teardowns = null;\n                try {\n                    for (var _teardowns_1 = __values(_teardowns), _teardowns_1_1 = _teardowns_1.next(); !_teardowns_1_1.done; _teardowns_1_1 = _teardowns_1.next()) {\n                        var teardown_1 = _teardowns_1_1.value;\n                        try {\n                            execTeardown(teardown_1);\n                        }\n                        catch (err) {\n                            errors = errors !== null && errors !== void 0 ? errors : [];\n                            if (err instanceof UnsubscriptionError) {\n                                errors = __spreadArray(__spreadArray([], __read(errors)), __read(err.errors));\n                            }\n                            else {\n                                errors.push(err);\n                            }\n                        }\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (_teardowns_1_1 && !_teardowns_1_1.done && (_b = _teardowns_1.return)) _b.call(_teardowns_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n            if (errors) {\n                throw new UnsubscriptionError(errors);\n            }\n        }\n    };\n    Subscription.prototype.add = function (teardown) {\n        var _a;\n        if (teardown && teardown !== this) {\n            if (this.closed) {\n                execTeardown(teardown);\n            }\n            else {\n                if (teardown instanceof Subscription) {\n                    if (teardown.closed || teardown._hasParent(this)) {\n                        return;\n                    }\n                    teardown._addParent(this);\n                }\n                (this._teardowns = (_a = this._teardowns) !== null && _a !== void 0 ? _a : []).push(teardown);\n            }\n        }\n    };\n    Subscription.prototype._hasParent = function (parent) {\n        var _parentage = this._parentage;\n        return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _parentage = this._parentage;\n        this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n    };\n    Subscription.prototype._removeParent = function (parent) {\n        var _parentage = this._parentage;\n        if (_parentage === parent) {\n            this._parentage = null;\n        }\n        else if (Array.isArray(_parentage)) {\n            arrRemove(_parentage, parent);\n        }\n    };\n    Subscription.prototype.remove = function (teardown) {\n        var _teardowns = this._teardowns;\n        _teardowns && arrRemove(_teardowns, teardown);\n        if (teardown instanceof Subscription) {\n            teardown._removeParent(this);\n        }\n    };\n    Subscription.EMPTY = (function () {\n        var empty = new Subscription();\n        empty.closed = true;\n        return empty;\n    })();\n    return Subscription;\n}());\nexport { Subscription };\nexport var EMPTY_SUBSCRIPTION = Subscription.EMPTY;\nexport function isSubscription(value) {\n    return (value instanceof Subscription ||\n        (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe)));\n}\nfunction execTeardown(teardown) {\n    if (isFunction(teardown)) {\n        teardown();\n    }\n    else {\n        teardown.unsubscribe();\n    }\n}\n//# sourceMappingURL=Subscription.js.map","export var config = {\n    onUnhandledError: null,\n    onStoppedNotification: null,\n    Promise: undefined,\n    useDeprecatedSynchronousErrorHandling: false,\n    useDeprecatedNextContext: false,\n};\n//# sourceMappingURL=config.js.map","import { __read, __spreadArray } from \"tslib\";\nexport var timeoutProvider = {\n    setTimeout: function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var delegate = timeoutProvider.delegate;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.setTimeout) || setTimeout).apply(void 0, __spreadArray([], __read(args)));\n    },\n    clearTimeout: function (handle) {\n        var delegate = timeoutProvider.delegate;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearTimeout) || clearTimeout)(handle);\n    },\n    delegate: undefined,\n};\n//# sourceMappingURL=timeoutProvider.js.map","import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\nexport function reportUnhandledError(err) {\n    timeoutProvider.setTimeout(function () {\n        var onUnhandledError = config.onUnhandledError;\n        if (onUnhandledError) {\n            onUnhandledError(err);\n        }\n        else {\n            throw err;\n        }\n    });\n}\n//# sourceMappingURL=reportUnhandledError.js.map","export function noop() { }\n//# sourceMappingURL=noop.js.map","import { config } from '../config';\nvar context = null;\nexport function errorContext(cb) {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n        var isRoot = !context;\n        if (isRoot) {\n            context = { errorThrown: false, error: null };\n        }\n        cb();\n        if (isRoot) {\n            var _a = context, errorThrown = _a.errorThrown, error = _a.error;\n            context = null;\n            if (errorThrown) {\n                throw error;\n            }\n        }\n    }\n    else {\n        cb();\n    }\n}\nexport function captureError(err) {\n    if (config.useDeprecatedSynchronousErrorHandling && context) {\n        context.errorThrown = true;\n        context.error = err;\n    }\n}\n//# sourceMappingURL=errorContext.js.map","import { __extends, __read, __spreadArray } from \"tslib\";\nimport { isFunction } from './util/isFunction';\nimport { isSubscription, Subscription } from './Subscription';\nimport { config } from './config';\nimport { reportUnhandledError } from './util/reportUnhandledError';\nimport { noop } from './util/noop';\nimport { nextNotification, errorNotification, COMPLETE_NOTIFICATION } from './NotificationFactories';\nimport { timeoutProvider } from './scheduler/timeoutProvider';\nimport { captureError } from './util/errorContext';\nvar Subscriber = (function (_super) {\n    __extends(Subscriber, _super);\n    function Subscriber(destination) {\n        var _this = _super.call(this) || this;\n        _this.isStopped = false;\n        if (destination) {\n            _this.destination = destination;\n            if (isSubscription(destination)) {\n                destination.add(_this);\n            }\n        }\n        else {\n            _this.destination = EMPTY_OBSERVER;\n        }\n        return _this;\n    }\n    Subscriber.create = function (next, error, complete) {\n        return new SafeSubscriber(next, error, complete);\n    };\n    Subscriber.prototype.next = function (value) {\n        if (this.isStopped) {\n            handleStoppedNotification(nextNotification(value), this);\n        }\n        else {\n            this._next(value);\n        }\n    };\n    Subscriber.prototype.error = function (err) {\n        if (this.isStopped) {\n            handleStoppedNotification(errorNotification(err), this);\n        }\n        else {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    Subscriber.prototype.complete = function () {\n        if (this.isStopped) {\n            handleStoppedNotification(COMPLETE_NOTIFICATION, this);\n        }\n        else {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (!this.closed) {\n            this.isStopped = true;\n            _super.prototype.unsubscribe.call(this);\n            this.destination = null;\n        }\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        try {\n            this.destination.error(err);\n        }\n        finally {\n            this.unsubscribe();\n        }\n    };\n    Subscriber.prototype._complete = function () {\n        try {\n            this.destination.complete();\n        }\n        finally {\n            this.unsubscribe();\n        }\n    };\n    return Subscriber;\n}(Subscription));\nexport { Subscriber };\nvar SafeSubscriber = (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(observerOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        var next;\n        if (isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            (next = observerOrNext.next, error = observerOrNext.error, complete = observerOrNext.complete);\n            var context_1;\n            if (_this && config.useDeprecatedNextContext) {\n                context_1 = Object.create(observerOrNext);\n                context_1.unsubscribe = function () { return _this.unsubscribe(); };\n            }\n            else {\n                context_1 = observerOrNext;\n            }\n            next = next === null || next === void 0 ? void 0 : next.bind(context_1);\n            error = error === null || error === void 0 ? void 0 : error.bind(context_1);\n            complete = complete === null || complete === void 0 ? void 0 : complete.bind(context_1);\n        }\n        _this.destination = {\n            next: next ? wrapForErrorHandling(next, _this) : noop,\n            error: wrapForErrorHandling(error !== null && error !== void 0 ? error : defaultErrorHandler, _this),\n            complete: complete ? wrapForErrorHandling(complete, _this) : noop,\n        };\n        return _this;\n    }\n    return SafeSubscriber;\n}(Subscriber));\nexport { SafeSubscriber };\nfunction wrapForErrorHandling(handler, instance) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        try {\n            handler.apply(void 0, __spreadArray([], __read(args)));\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                captureError(err);\n            }\n            else {\n                reportUnhandledError(err);\n            }\n        }\n    };\n}\nfunction defaultErrorHandler(err) {\n    throw err;\n}\nfunction handleStoppedNotification(notification, subscriber) {\n    var onStoppedNotification = config.onStoppedNotification;\n    onStoppedNotification && timeoutProvider.setTimeout(function () { return onStoppedNotification(notification, subscriber); });\n}\nexport var EMPTY_OBSERVER = {\n    closed: true,\n    next: noop,\n    error: defaultErrorHandler,\n    complete: noop,\n};\n//# sourceMappingURL=Subscriber.js.map","export var observable = (function () { return (typeof Symbol === 'function' && Symbol.observable) || '@@observable'; })();\n//# sourceMappingURL=observable.js.map","export function identity(x) {\n    return x;\n}\n//# sourceMappingURL=identity.js.map","import { identity } from './identity';\nexport function pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\nexport function pipeFromArray(fns) {\n    if (fns.length === 0) {\n        return identity;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\n//# sourceMappingURL=pipe.js.map","import { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription } from './Subscription';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nimport { errorContext } from './util/errorContext';\nvar Observable = (function () {\n    function Observable(subscribe) {\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var _this = this;\n        var subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n        errorContext(function () {\n            var _a = _this, operator = _a.operator, source = _a.source;\n            subscriber.add(operator\n                ?\n                    operator.call(subscriber, source)\n                : source\n                    ?\n                        _this._subscribe(subscriber)\n                    :\n                        _this._trySubscribe(subscriber));\n        });\n        return subscriber;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            sink.error(err);\n        }\n    };\n    Observable.prototype.forEach = function (next, promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                try {\n                    next(value);\n                }\n                catch (err) {\n                    reject(err);\n                    subscription === null || subscription === void 0 ? void 0 : subscription.unsubscribe();\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        var _a;\n        return (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber);\n    };\n    Observable.prototype[Symbol_observable] = function () {\n        return this;\n    };\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i] = arguments[_i];\n        }\n        return pipeFromArray(operations)(this);\n    };\n    Observable.prototype.toPromise = function (promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return (value = x); }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexport { Observable };\nfunction getPromiseCtor(promiseCtor) {\n    var _a;\n    return (_a = promiseCtor !== null && promiseCtor !== void 0 ? promiseCtor : config.Promise) !== null && _a !== void 0 ? _a : Promise;\n}\nfunction isObserver(value) {\n    return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\nfunction isSubscriber(value) {\n    return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\n}\n//# sourceMappingURL=Observable.js.map","import { isFunction } from './isFunction';\nexport function hasLift(source) {\n    return isFunction(source === null || source === void 0 ? void 0 : source.lift);\n}\nexport function operate(init) {\n    return function (source) {\n        if (hasLift(source)) {\n            return source.lift(function (liftedSource) {\n                try {\n                    return init(liftedSource, this);\n                }\n                catch (err) {\n                    this.error(err);\n                }\n            });\n        }\n        throw new TypeError('Unable to lift unknown Observable type');\n    };\n}\n//# sourceMappingURL=lift.js.map","import { __extends } from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nvar OperatorSubscriber = (function (_super) {\n    __extends(OperatorSubscriber, _super);\n    function OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize) {\n        var _this = _super.call(this, destination) || this;\n        _this.onFinalize = onFinalize;\n        _this._next = onNext\n            ? function (value) {\n                try {\n                    onNext(value);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n            }\n            : _super.prototype._next;\n        _this._error = onError\n            ? function (err) {\n                try {\n                    onError(err);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : _super.prototype._error;\n        _this._complete = onComplete\n            ? function () {\n                try {\n                    onComplete();\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : _super.prototype._complete;\n        return _this;\n    }\n    OperatorSubscriber.prototype.unsubscribe = function () {\n        var _a;\n        var closed = this.closed;\n        _super.prototype.unsubscribe.call(this);\n        !closed && ((_a = this.onFinalize) === null || _a === void 0 ? void 0 : _a.call(this));\n    };\n    return OperatorSubscriber;\n}(Subscriber));\nexport { OperatorSubscriber };\n//# sourceMappingURL=OperatorSubscriber.js.map","import { createErrorClass } from './createErrorClass';\nexport var ObjectUnsubscribedError = createErrorClass(function (_super) {\n    return function ObjectUnsubscribedErrorImpl() {\n        _super(this);\n        this.name = 'ObjectUnsubscribedError';\n        this.message = 'object unsubscribed';\n    };\n});\n//# sourceMappingURL=ObjectUnsubscribedError.js.map","import { __extends, __values } from \"tslib\";\nimport { Observable } from './Observable';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\nvar Subject = (function (_super) {\n    __extends(Subject, _super);\n    function Subject() {\n        var _this = _super.call(this) || this;\n        _this.closed = false;\n        _this.observers = [];\n        _this.isStopped = false;\n        _this.hasError = false;\n        _this.thrownError = null;\n        return _this;\n    }\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype._throwIfClosed = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n    };\n    Subject.prototype.next = function (value) {\n        var _this = this;\n        errorContext(function () {\n            var e_1, _a;\n            _this._throwIfClosed();\n            if (!_this.isStopped) {\n                var copy = _this.observers.slice();\n                try {\n                    for (var copy_1 = __values(copy), copy_1_1 = copy_1.next(); !copy_1_1.done; copy_1_1 = copy_1.next()) {\n                        var observer = copy_1_1.value;\n                        observer.next(value);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (copy_1_1 && !copy_1_1.done && (_a = copy_1.return)) _a.call(copy_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n        });\n    };\n    Subject.prototype.error = function (err) {\n        var _this = this;\n        errorContext(function () {\n            _this._throwIfClosed();\n            if (!_this.isStopped) {\n                _this.hasError = _this.isStopped = true;\n                _this.thrownError = err;\n                var observers = _this.observers;\n                while (observers.length) {\n                    observers.shift().error(err);\n                }\n            }\n        });\n    };\n    Subject.prototype.complete = function () {\n        var _this = this;\n        errorContext(function () {\n            _this._throwIfClosed();\n            if (!_this.isStopped) {\n                _this.isStopped = true;\n                var observers = _this.observers;\n                while (observers.length) {\n                    observers.shift().complete();\n                }\n            }\n        });\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = this.closed = true;\n        this.observers = null;\n    };\n    Object.defineProperty(Subject.prototype, \"observed\", {\n        get: function () {\n            var _a;\n            return ((_a = this.observers) === null || _a === void 0 ? void 0 : _a.length) > 0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Subject.prototype._trySubscribe = function (subscriber) {\n        this._throwIfClosed();\n        return _super.prototype._trySubscribe.call(this, subscriber);\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        this._throwIfClosed();\n        this._checkFinalizedStatuses(subscriber);\n        return this._innerSubscribe(subscriber);\n    };\n    Subject.prototype._innerSubscribe = function (subscriber) {\n        var _a = this, hasError = _a.hasError, isStopped = _a.isStopped, observers = _a.observers;\n        return hasError || isStopped\n            ? EMPTY_SUBSCRIPTION\n            : (observers.push(subscriber), new Subscription(function () { return arrRemove(observers, subscriber); }));\n    };\n    Subject.prototype._checkFinalizedStatuses = function (subscriber) {\n        var _a = this, hasError = _a.hasError, thrownError = _a.thrownError, isStopped = _a.isStopped;\n        if (hasError) {\n            subscriber.error(thrownError);\n        }\n        else if (isStopped) {\n            subscriber.complete();\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable));\nexport { Subject };\nvar AnonymousSubject = (function (_super) {\n    __extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        var _this = _super.call(this) || this;\n        _this.destination = destination;\n        _this.source = source;\n        return _this;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.next) === null || _b === void 0 ? void 0 : _b.call(_a, value);\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.error) === null || _b === void 0 ? void 0 : _b.call(_a, err);\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.complete) === null || _b === void 0 ? void 0 : _b.call(_a);\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var _a, _b;\n        return (_b = (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber)) !== null && _b !== void 0 ? _b : EMPTY_SUBSCRIPTION;\n    };\n    return AnonymousSubject;\n}(Subject));\nexport { AnonymousSubject };\n//# sourceMappingURL=Subject.js.map","import { __extends } from \"tslib\";\nimport { Subject } from './Subject';\nvar BehaviorSubject = (function (_super) {\n    __extends(BehaviorSubject, _super);\n    function BehaviorSubject(_value) {\n        var _this = _super.call(this) || this;\n        _this._value = _value;\n        return _this;\n    }\n    Object.defineProperty(BehaviorSubject.prototype, \"value\", {\n        get: function () {\n            return this.getValue();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    BehaviorSubject.prototype._subscribe = function (subscriber) {\n        var subscription = _super.prototype._subscribe.call(this, subscriber);\n        !subscription.closed && subscriber.next(this._value);\n        return subscription;\n    };\n    BehaviorSubject.prototype.getValue = function () {\n        var _a = this, hasError = _a.hasError, thrownError = _a.thrownError, _value = _a._value;\n        if (hasError) {\n            throw thrownError;\n        }\n        this._throwIfClosed();\n        return _value;\n    };\n    BehaviorSubject.prototype.next = function (value) {\n        _super.prototype.next.call(this, (this._value = value));\n    };\n    return BehaviorSubject;\n}(Subject));\nexport { BehaviorSubject };\n//# sourceMappingURL=BehaviorSubject.js.map","export var isArrayLike = (function (x) { return x && typeof x.length === 'number' && typeof x !== 'function'; });\n//# sourceMappingURL=isArrayLike.js.map","import { isFunction } from \"./isFunction\";\nexport function isPromise(value) {\n    return isFunction(value === null || value === void 0 ? void 0 : value.then);\n}\n//# sourceMappingURL=isPromise.js.map","import { observable as Symbol_observable } from '../symbol/observable';\nimport { isFunction } from './isFunction';\nexport function isInteropObservable(input) {\n    return isFunction(input[Symbol_observable]);\n}\n//# sourceMappingURL=isInteropObservable.js.map","import { isFunction } from './isFunction';\nexport function isAsyncIterable(obj) {\n    return Symbol.asyncIterator && isFunction(obj === null || obj === void 0 ? void 0 : obj[Symbol.asyncIterator]);\n}\n//# sourceMappingURL=isAsyncIterable.js.map","export function createInvalidObservableTypeError(input) {\n    return new TypeError(\"You provided \" + (input !== null && typeof input === 'object' ? 'an invalid object' : \"'\" + input + \"'\") + \" where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.\");\n}\n//# sourceMappingURL=throwUnobservableError.js.map","export function getSymbolIterator() {\n    if (typeof Symbol !== 'function' || !Symbol.iterator) {\n        return '@@iterator';\n    }\n    return Symbol.iterator;\n}\nexport var iterator = getSymbolIterator();\n//# sourceMappingURL=iterator.js.map","import { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from './isFunction';\nexport function isIterable(input) {\n    return isFunction(input === null || input === void 0 ? void 0 : input[Symbol_iterator]);\n}\n//# sourceMappingURL=isIterable.js.map","import { __asyncGenerator, __await, __generator } from \"tslib\";\nimport { isFunction } from './isFunction';\nexport function readableStreamLikeToAsyncGenerator(readableStream) {\n    return __asyncGenerator(this, arguments, function readableStreamLikeToAsyncGenerator_1() {\n        var reader, _a, value, done;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    reader = readableStream.getReader();\n                    _b.label = 1;\n                case 1:\n                    _b.trys.push([1, , 9, 10]);\n                    _b.label = 2;\n                case 2:\n                    if (!true) return [3, 8];\n                    return [4, __await(reader.read())];\n                case 3:\n                    _a = _b.sent(), value = _a.value, done = _a.done;\n                    if (!done) return [3, 5];\n                    return [4, __await(void 0)];\n                case 4: return [2, _b.sent()];\n                case 5: return [4, __await(value)];\n                case 6: return [4, _b.sent()];\n                case 7:\n                    _b.sent();\n                    return [3, 2];\n                case 8: return [3, 10];\n                case 9:\n                    reader.releaseLock();\n                    return [7];\n                case 10: return [2];\n            }\n        });\n    });\n}\nexport function isReadableStreamLike(obj) {\n    return isFunction(obj === null || obj === void 0 ? void 0 : obj.getReader);\n}\n//# sourceMappingURL=isReadableStreamLike.js.map","import { __asyncValues, __awaiter, __generator, __values } from \"tslib\";\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { Observable } from '../Observable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isIterable } from '../util/isIterable';\nimport { isReadableStreamLike, readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nimport { isFunction } from '../util/isFunction';\nimport { reportUnhandledError } from '../util/reportUnhandledError';\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport function innerFrom(input) {\n    if (input instanceof Observable) {\n        return input;\n    }\n    if (input != null) {\n        if (isInteropObservable(input)) {\n            return fromInteropObservable(input);\n        }\n        if (isArrayLike(input)) {\n            return fromArrayLike(input);\n        }\n        if (isPromise(input)) {\n            return fromPromise(input);\n        }\n        if (isAsyncIterable(input)) {\n            return fromAsyncIterable(input);\n        }\n        if (isIterable(input)) {\n            return fromIterable(input);\n        }\n        if (isReadableStreamLike(input)) {\n            return fromReadableStreamLike(input);\n        }\n    }\n    throw createInvalidObservableTypeError(input);\n}\nexport function fromInteropObservable(obj) {\n    return new Observable(function (subscriber) {\n        var obs = obj[Symbol_observable]();\n        if (isFunction(obs.subscribe)) {\n            return obs.subscribe(subscriber);\n        }\n        throw new TypeError('Provided object does not correctly implement Symbol.observable');\n    });\n}\nexport function fromArrayLike(array) {\n    return new Observable(function (subscriber) {\n        for (var i = 0; i < array.length && !subscriber.closed; i++) {\n            subscriber.next(array[i]);\n        }\n        subscriber.complete();\n    });\n}\nexport function fromPromise(promise) {\n    return new Observable(function (subscriber) {\n        promise\n            .then(function (value) {\n            if (!subscriber.closed) {\n                subscriber.next(value);\n                subscriber.complete();\n            }\n        }, function (err) { return subscriber.error(err); })\n            .then(null, reportUnhandledError);\n    });\n}\nexport function fromIterable(iterable) {\n    return new Observable(function (subscriber) {\n        var e_1, _a;\n        try {\n            for (var iterable_1 = __values(iterable), iterable_1_1 = iterable_1.next(); !iterable_1_1.done; iterable_1_1 = iterable_1.next()) {\n                var value = iterable_1_1.value;\n                subscriber.next(value);\n                if (subscriber.closed) {\n                    return;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (iterable_1_1 && !iterable_1_1.done && (_a = iterable_1.return)) _a.call(iterable_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        subscriber.complete();\n    });\n}\nexport function fromAsyncIterable(asyncIterable) {\n    return new Observable(function (subscriber) {\n        process(asyncIterable, subscriber).catch(function (err) { return subscriber.error(err); });\n    });\n}\nexport function fromReadableStreamLike(readableStream) {\n    return fromAsyncIterable(readableStreamLikeToAsyncGenerator(readableStream));\n}\nfunction process(asyncIterable, subscriber) {\n    var asyncIterable_1, asyncIterable_1_1;\n    var e_2, _a;\n    return __awaiter(this, void 0, void 0, function () {\n        var value, e_2_1;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    _b.trys.push([0, 5, 6, 11]);\n                    asyncIterable_1 = __asyncValues(asyncIterable);\n                    _b.label = 1;\n                case 1: return [4, asyncIterable_1.next()];\n                case 2:\n                    if (!(asyncIterable_1_1 = _b.sent(), !asyncIterable_1_1.done)) return [3, 4];\n                    value = asyncIterable_1_1.value;\n                    subscriber.next(value);\n                    if (subscriber.closed) {\n                        return [2];\n                    }\n                    _b.label = 3;\n                case 3: return [3, 1];\n                case 4: return [3, 11];\n                case 5:\n                    e_2_1 = _b.sent();\n                    e_2 = { error: e_2_1 };\n                    return [3, 11];\n                case 6:\n                    _b.trys.push([6, , 9, 10]);\n                    if (!(asyncIterable_1_1 && !asyncIterable_1_1.done && (_a = asyncIterable_1.return))) return [3, 8];\n                    return [4, _a.call(asyncIterable_1)];\n                case 7:\n                    _b.sent();\n                    _b.label = 8;\n                case 8: return [3, 10];\n                case 9:\n                    if (e_2) throw e_2.error;\n                    return [7];\n                case 10: return [7];\n                case 11:\n                    subscriber.complete();\n                    return [2];\n            }\n        });\n    });\n}\n//# sourceMappingURL=innerFrom.js.map","export function executeSchedule(parentSubscription, scheduler, work, delay, repeat) {\n    if (delay === void 0) { delay = 0; }\n    if (repeat === void 0) { repeat = false; }\n    var scheduleSubscription = scheduler.schedule(function () {\n        work();\n        if (repeat) {\n            parentSubscription.add(this.schedule(null, delay));\n        }\n        else {\n            this.unsubscribe();\n        }\n    }, delay);\n    parentSubscription.add(scheduleSubscription);\n    if (!repeat) {\n        return scheduleSubscription;\n    }\n}\n//# sourceMappingURL=executeSchedule.js.map","import { executeSchedule } from '../util/executeSchedule';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport function observeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return operate(function (source, subscriber) {\n        source.subscribe(new OperatorSubscriber(subscriber, function (value) { return executeSchedule(subscriber, scheduler, function () { return subscriber.next(value); }, delay); }, function () { return executeSchedule(subscriber, scheduler, function () { return subscriber.complete(); }, delay); }, function (err) { return executeSchedule(subscriber, scheduler, function () { return subscriber.error(err); }, delay); }));\n    });\n}\n//# sourceMappingURL=observeOn.js.map","import { operate } from '../util/lift';\nexport function subscribeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return operate(function (source, subscriber) {\n        subscriber.add(scheduler.schedule(function () { return source.subscribe(subscriber); }, delay));\n    });\n}\n//# sourceMappingURL=subscribeOn.js.map","import { Observable } from '../Observable';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function scheduleAsyncIterable(input, scheduler) {\n    if (!input) {\n        throw new Error('Iterable cannot be null');\n    }\n    return new Observable(function (subscriber) {\n        executeSchedule(subscriber, scheduler, function () {\n            var iterator = input[Symbol.asyncIterator]();\n            executeSchedule(subscriber, scheduler, function () {\n                iterator.next().then(function (result) {\n                    if (result.done) {\n                        subscriber.complete();\n                    }\n                    else {\n                        subscriber.next(result.value);\n                    }\n                });\n            }, 0, true);\n        });\n    });\n}\n//# sourceMappingURL=scheduleAsyncIterable.js.map","import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isReadableStreamLike } from '../util/isReadableStreamLike';\nimport { scheduleReadableStreamLike } from './scheduleReadableStreamLike';\nexport function scheduled(input, scheduler) {\n    if (input != null) {\n        if (isInteropObservable(input)) {\n            return scheduleObservable(input, scheduler);\n        }\n        if (isArrayLike(input)) {\n            return scheduleArray(input, scheduler);\n        }\n        if (isPromise(input)) {\n            return schedulePromise(input, scheduler);\n        }\n        if (isAsyncIterable(input)) {\n            return scheduleAsyncIterable(input, scheduler);\n        }\n        if (isIterable(input)) {\n            return scheduleIterable(input, scheduler);\n        }\n        if (isReadableStreamLike(input)) {\n            return scheduleReadableStreamLike(input, scheduler);\n        }\n    }\n    throw createInvalidObservableTypeError(input);\n}\n//# sourceMappingURL=scheduled.js.map","import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nexport function scheduleObservable(input, scheduler) {\n    return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n//# sourceMappingURL=scheduleObservable.js.map","import { Observable } from '../Observable';\nexport function scheduleArray(input, scheduler) {\n    return new Observable(function (subscriber) {\n        var i = 0;\n        return scheduler.schedule(function () {\n            if (i === input.length) {\n                subscriber.complete();\n            }\n            else {\n                subscriber.next(input[i++]);\n                if (!subscriber.closed) {\n                    this.schedule();\n                }\n            }\n        });\n    });\n}\n//# sourceMappingURL=scheduleArray.js.map","import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nexport function schedulePromise(input, scheduler) {\n    return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n//# sourceMappingURL=schedulePromise.js.map","import { Observable } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from '../util/isFunction';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function scheduleIterable(input, scheduler) {\n    return new Observable(function (subscriber) {\n        var iterator;\n        executeSchedule(subscriber, scheduler, function () {\n            iterator = input[Symbol_iterator]();\n            executeSchedule(subscriber, scheduler, function () {\n                var _a;\n                var value;\n                var done;\n                try {\n                    (_a = iterator.next(), value = _a.value, done = _a.done);\n                }\n                catch (err) {\n                    subscriber.error(err);\n                    return;\n                }\n                if (done) {\n                    subscriber.complete();\n                }\n                else {\n                    subscriber.next(value);\n                }\n            }, 0, true);\n        });\n        return function () { return isFunction(iterator === null || iterator === void 0 ? void 0 : iterator.return) && iterator.return(); };\n    });\n}\n//# sourceMappingURL=scheduleIterable.js.map","import { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nexport function scheduleReadableStreamLike(input, scheduler) {\n    return scheduleAsyncIterable(readableStreamLikeToAsyncGenerator(input), scheduler);\n}\n//# sourceMappingURL=scheduleReadableStreamLike.js.map","import { scheduled } from '../scheduled/scheduled';\nimport { innerFrom } from './innerFrom';\nexport function from(input, scheduler) {\n    return scheduler ? scheduled(input, scheduler) : innerFrom(input);\n}\n//# sourceMappingURL=from.js.map","import { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport function map(project, thisArg) {\n    return operate(function (source, subscriber) {\n        var index = 0;\n        source.subscribe(new OperatorSubscriber(subscriber, function (value) {\n            subscriber.next(project.call(thisArg, value, index++));\n        }));\n    });\n}\n//# sourceMappingURL=map.js.map","import { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport function distinctUntilChanged(comparator, keySelector) {\n    if (keySelector === void 0) { keySelector = identity; }\n    comparator = comparator !== null && comparator !== void 0 ? comparator : defaultCompare;\n    return operate(function (source, subscriber) {\n        var previousKey;\n        var first = true;\n        source.subscribe(new OperatorSubscriber(subscriber, function (value) {\n            var currentKey = keySelector(value);\n            if (first || !comparator(previousKey, currentKey)) {\n                first = false;\n                previousKey = currentKey;\n                subscriber.next(value);\n            }\n        }));\n    });\n}\nfunction defaultCompare(a, b) {\n    return a === b;\n}\n//# sourceMappingURL=distinctUntilChanged.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { QueryResultType } from '@airport/ground-control';\nimport { FieldQuery, SheetQuery, TreeQuery } from '@airport/tarmaq-query';\nimport { Lookup } from './Lookup';\n/**\n * Created by Papa on 11/12/2016.\n */\nlet NonEntityFind = class NonEntityFind extends Lookup {\n    field(rawFieldQuery, context) {\n        return this.find(rawFieldQuery, QueryResultType.FIELD, FieldQuery, context);\n    }\n    sheet(rawSheetQuery, cursorSize, callback, context) {\n        if (cursorSize || callback) {\n            throw new Error(`Implement!`);\n        }\n        return this.find(rawSheetQuery, QueryResultType.SHEET, SheetQuery, context);\n    }\n    tree(rawTreeQuery, context) {\n        return this.find(rawTreeQuery, QueryResultType.TREE, TreeQuery, context);\n    }\n    find(rawNonEntityQuery, queryResultType, QueryClass, context) {\n        return this.lookup(rawNonEntityQuery, queryResultType, false, false, QueryClass, this.ensureContext(context));\n    }\n};\nNonEntityFind = __decorate([\n    Injected()\n], NonEntityFind);\nexport { NonEntityFind };\n//# sourceMappingURL=NonEntityFind.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { QueryResultType } from '@airport/ground-control';\nimport { FieldQuery, SheetQuery, TreeQuery } from '@airport/tarmaq-query';\nimport { Lookup } from './Lookup';\n/**\n * Created by Papa on 11/12/2016.\n */\nlet NonEntityFindOne = class NonEntityFindOne extends Lookup {\n    field(rawFieldQuery, context) {\n        return this.findOne(rawFieldQuery, QueryResultType.FIELD, FieldQuery, context);\n    }\n    sheet(rawSheetQuery, context) {\n        return this.findOne(rawSheetQuery, QueryResultType.SHEET, SheetQuery, context);\n    }\n    tree(rawTreeQuery, context) {\n        return this.findOne(rawTreeQuery, QueryResultType.TREE, TreeQuery, context);\n    }\n    findOne(rawNonEntityQuery, queryResultType, QueryClass, context) {\n        return this.lookup(rawNonEntityQuery, queryResultType, false, true, QueryClass, this.ensureContext(context));\n    }\n};\nNonEntityFindOne = __decorate([\n    Injected()\n], NonEntityFindOne);\nexport { NonEntityFindOne };\n//# sourceMappingURL=NonEntityFindOne.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { QueryResultType } from '@airport/ground-control';\nimport { FieldQuery, SheetQuery, TreeQuery } from '@airport/tarmaq-query';\nimport { from } from 'rxjs';\nimport { Lookup } from './Lookup';\n/**\n * Created by Papa on 11/12/2016.\n */\nlet NonEntitySearch = class NonEntitySearch extends Lookup {\n    field(rawFieldQuery, context) {\n        return from(this.search(rawFieldQuery, QueryResultType.FIELD, FieldQuery, context));\n    }\n    sheet(rawSheetQuery, context) {\n        return from(this.search(rawSheetQuery, QueryResultType.SHEET, SheetQuery, context));\n    }\n    tree(rawTreeQuery, context) {\n        return from(this.search(rawTreeQuery, QueryResultType.TREE, TreeQuery, context));\n    }\n    search(rawNonEntityQuery, queryResultType, QueryClass, context) {\n        return this.lookup(rawNonEntityQuery, queryResultType, true, false, QueryClass, this.ensureContext(context));\n    }\n};\nNonEntitySearch = __decorate([\n    Injected()\n], NonEntitySearch);\nexport { NonEntitySearch };\n//# sourceMappingURL=NonEntitySearch.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { QueryResultType } from '@airport/ground-control';\nimport { FieldQuery, SheetQuery, TreeQuery } from '@airport/tarmaq-query';\nimport { from } from 'rxjs';\nimport { Lookup } from './Lookup';\n/**\n * Created by Papa on 11/12/2016.\n */\nlet NonEntitySearchOne = class NonEntitySearchOne extends Lookup {\n    field(rawFieldQuery, context) {\n        return from(this.searchOne(rawFieldQuery, QueryResultType.FIELD, FieldQuery, context));\n    }\n    sheet(rawSheetQuery, context) {\n        return from(this.searchOne(rawSheetQuery, QueryResultType.SHEET, SheetQuery, context));\n    }\n    tree(rawTreeQuery, context) {\n        return from(this.searchOne(rawTreeQuery, QueryResultType.TREE, TreeQuery, context));\n    }\n    searchOne(rawNonEntityQuery, queryResultType, QueryClass, context) {\n        return this.lookup(rawNonEntityQuery, queryResultType, true, true, QueryClass, this.ensureContext(context));\n    }\n};\nNonEntitySearchOne = __decorate([\n    Injected()\n], NonEntitySearchOne);\nexport { NonEntitySearchOne };\n//# sourceMappingURL=NonEntitySearchOne.js.map","import { EntityFind } from './query/EntityFind';\nimport { EntityFindOne } from './query/EntityFindOne';\n/**\n * Created by Papa on 12/11/2016.\n */\nexport class EntityDatabaseFacade {\n    // search: IEntitySearch<Entity, Array<Entity>, EntitySelect>;\n    // searchOne: IEntitySearchOne<Entity, EntitySelect>;\n    constructor(dbEntity, Q, dao) {\n        this.dbEntity = dbEntity;\n        this.Q = Q;\n        this.dao = dao;\n        this.find = new EntityFind(this.dbEntity, dao);\n        this.findOne = new EntityFindOne(this.dbEntity, dao);\n        // this.search = new EntitySearch<Entity, Array<Entity>, EntitySelect>(\n        //   this.dbEntity, updateCacheManager);\n        // this.searchOne = new EntitySearchOne(this.dbEntity, updateCacheManager);\n    }\n    get FROM() {\n        return this.Q[this.dbEntity.name];\n    }\n    async insertColumnValues(rawInsertColumnValues, ctx) {\n        return await this.withDbEntity(ctx, async (databaseFacade, ctx) => {\n            return await databaseFacade.insertColumnValues(rawInsertColumnValues, ctx);\n        });\n    }\n    async insertValues(rawInsertValues, ctx) {\n        return await this.withDbEntity(ctx, async (databaseFacade, ctx) => {\n            return await databaseFacade.insertValues(rawInsertValues, ctx);\n        });\n    }\n    async insertColumnValuesGenerateIds(rawInsertColumnValues, ctx) {\n        return await this.withDbEntity(ctx, async (databaseFacade, ctx) => {\n            return await databaseFacade.insertColumnValuesGenerateIds(rawInsertColumnValues, ctx);\n        });\n    }\n    async insertValuesGenerateIds(rawInsertValues, ctx) {\n        return await this.withDbEntity(ctx, async (databaseFacade, ctx) => {\n            return await databaseFacade.insertValuesGenerateIds(rawInsertValues, ctx);\n        });\n    }\n    async updateColumnsWhere(rawUpdateColumns, ctx) {\n        return await this.withDbEntity(ctx, async (databaseFacade, ctx) => {\n            return await databaseFacade.updateColumnsWhere(rawUpdateColumns, ctx);\n        });\n    }\n    async updateWhere(rawUpdate, ctx) {\n        return await this.withDbEntity(ctx, async (databaseFacade, ctx) => {\n            return await databaseFacade.updateWhere(rawUpdate, ctx);\n        });\n    }\n    async deleteWhere(rawDelete, ctx) {\n        return await this.withDbEntity(ctx, async (databaseFacade, ctx) => {\n            return await databaseFacade.deleteWhere(rawDelete, ctx);\n        });\n    }\n    async save(entity, ctx) {\n        return await this.withDbEntity(ctx, async (databaseFacade, ctx) => {\n            return await databaseFacade.save(entity, ctx);\n        });\n    }\n    /**\n     * @return ISaveResult object with metadata on saved objects\n     */\n    async saveToDestination(repositoryDestination, entity, ctx) {\n        return await this.withDbEntity(ctx, async (databaseFacade, ctx) => {\n            return await databaseFacade.saveToDestination(repositoryDestination, entity, ctx);\n        });\n    }\n    async withDbEntity(ctx, callback) {\n        if (!ctx) {\n            ctx = {};\n        }\n        if (!ctx.startedAt) {\n            ctx.startedAt = new Date();\n        }\n        const previousEntity = ctx.dbEntity;\n        ctx.dbEntity = this.dbEntity;\n        try {\n            return await callback(this.dao.databaseFacade, ctx);\n        }\n        finally {\n            ctx.dbEntity = previousEntity;\n        }\n    }\n}\n//# sourceMappingURL=EntityDatabaseFacade.js.map","import { EntityRelationType } from \"@airport/ground-control\";\nimport { Y } from \"@airport/tarmaq-query\";\nexport class FieldsSelect {\n    constructor(dbEntity) {\n        this.dbEntity = dbEntity;\n    }\n    get ids() {\n        const propertyNames = this.dbEntity.properties\n            .filter(property => property.isId)\n            .map(property => property.name);\n        return this.getSelect(propertyNames, false);\n    }\n    get fields() {\n        const propertyNames = this.dbEntity.properties\n            .filter(property => !property.relation || !property.relation.length)\n            .map(property => property.name);\n        return this.getSelect(propertyNames, false);\n    }\n    get manyToOnes() {\n        return this.getRelationSelect(EntityRelationType.MANY_TO_ONE);\n    }\n    get oneToManys() {\n        return this.getRelationSelect(EntityRelationType.ONE_TO_MANY);\n    }\n    getRelationSelect(relationType) {\n        const propertyNames = this.dbEntity.properties\n            .filter(property => property.relation\n            && property.relation.length\n            && property.relation[0].relationType === relationType)\n            .map(property => property.name);\n        return this.getSelect(propertyNames, true);\n    }\n    getSelect(propertyNames, forRelations) {\n        const selectFragment = {};\n        for (const propertyName of propertyNames) {\n            selectFragment[propertyName] = forRelations ? {} : Y;\n        }\n        return selectFragment;\n    }\n}\n//# sourceMappingURL=FieldsSelect.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { Y } from '@airport/tarmaq-query';\nimport { EntityDatabaseFacade } from './EntityDatabaseFacade';\nimport { doEnsureContext } from './query/Lookup';\nimport { FieldsSelect } from './FieldsSelect';\n/**\n * Created by Papa on 8/26/2017.\n */\nlet Dao = class Dao {\n    constructor(dbEntityId, Q, internal = false) {\n        this.internal = internal;\n        const dbEntity = Q.__dbApplication__.currentVersion[0]\n            .applicationVersion.entities[dbEntityId];\n        // TODO: figure out how to inject EntityDatabaseFacade and dependencies\n        this.db = new EntityDatabaseFacade(dbEntity, Q, this);\n        this.SELECT = new FieldsSelect(dbEntity);\n    }\n    static BaseSave(config) {\n        return function (target, propertyKey) {\n            // No runtime logic required.\n        };\n    }\n    mapById(entities) {\n        const map = new Map();\n        for (const entity of entities) {\n            map.set(entity.id, entity);\n        }\n        return map;\n    }\n    async count(context) {\n        throw new Error(`Not Implemented`);\n    }\n    exists(entityId, context) {\n        throw new Error(`Not Implemented`);\n    }\n    async findAll(entityIds, context, cacheForUpdate = false) {\n        if (entityIds) {\n            throw new Error(`Not implemented`);\n        }\n        return await this.db.find.graph({\n            SELECT: {},\n            FROM: [this.db.FROM],\n        }, context);\n    }\n    async findAllAsTrees(entityIds, context, cacheForUpdate = false) {\n        if (entityIds) {\n            throw new Error(`Not implemented`);\n        }\n        return await this.db.find.tree({\n            SELECT: {},\n            FROM: [this.db.FROM],\n        }, context);\n    }\n    async findOne(AirEntityId, forUpdate = false, context) {\n        if (!this.db.dbEntity.isAirEntity) {\n            throw new Error(`Dao.findOne can only be called for Repository Entities.`);\n        }\n        const idObject = AirEntityId;\n        let q;\n        return await this.db.findOne.graph({\n            SELECT: {\n                '*': Y\n            },\n            FROM: [\n                q = this.db.FROM\n            ],\n            WHERE: q.equals(idObject),\n            FOR_UPDATE: forUpdate\n        }, context);\n    }\n    async findIn(airEntityIds, forUpdate, context) {\n        if (!this.db.dbEntity.isAirEntity) {\n            throw new Error(`Dao.findIn can only be called for Repository Entities.`);\n        }\n        let q;\n        return await this.db.find.graph({\n            SELECT: {\n                '*': Y\n            },\n            FROM: [\n                q = this.db.FROM\n            ],\n            WHERE: q.in(airEntityIds),\n            FOR_UPDATE: forUpdate\n        }, context);\n    }\n    async save(entity, context) {\n        return await this.db.save(entity, this.ensureContext(context));\n    }\n    markForDeletion(entityIdInfo, context) {\n        if (entityIdInfo instanceof Array) {\n            for (const anEntity of entityIdInfo) {\n                this.entityStateManager.markForDeletion(anEntity);\n            }\n        }\n        else {\n            this.entityStateManager.markForDeletion(entityIdInfo);\n        }\n    }\n    _repositoryId() {\n        return {\n            actor: {\n                _localId: Y\n            },\n            _actorRecordId: Y,\n            ageSuitability: Y,\n            repository: {\n                _localId: Y\n            }\n        };\n    }\n    /**\n     * The Promise based API for all Entity 'find' (find many) queries.\n     */\n    async _find(rawGraphQuery, ctx) {\n        return await this.db.find.graph(rawGraphQuery, ctx);\n    }\n    /**\n     * The Promise based API for all Entity 'findOne' that also\n     * ensures that the record is unique.  If multiple records\n     * are found the ones with older createdAt values are deleted.\n     */\n    async _findUnique(rawGraphQuery, ctx) {\n        const records = await this.db.find.graph(rawGraphQuery, ctx);\n        if (!records.length) {\n            return null;\n        }\n        if (records.length > 1) {\n            // Remove older agreement records\n            records.sort((a, b) => b.createdAt.getTime() - a.createdAt.getTime());\n            for (let i = 1; i < records.length; i++) {\n                this.markForDeletion(records[i]);\n            }\n            await this.save(records);\n        }\n        return records[0];\n    }\n    /**\n     * The Promise based API for all Entity 'findOne' queries.\n     */\n    async _findOne(rawGraphQuery, ctx) {\n        return await this.db.findOne.graph(rawGraphQuery, ctx);\n    }\n    /**\n     * The Observable based API for all Entity 'searchOne' (searchOne many) queries.\n     */\n    _search(rawGraphQuery, ctx) {\n        throw new Error('Not implemented');\n    }\n    /**\n     * The Observable based API for all Entity 'searchOne' queries.\n     */\n    _searchOne(rawGraphQuery, ctx) {\n        throw new Error('Not implemented');\n    }\n    ensureContext(context) {\n        return doEnsureContext(context);\n    }\n};\n__decorate([\n    Inject()\n], Dao.prototype, \"databaseFacade\", void 0);\n__decorate([\n    Inject()\n], Dao.prototype, \"entityStateManager\", void 0);\n__decorate([\n    Inject()\n], Dao.prototype, \"lookup\", void 0);\n__decorate([\n    Inject()\n], Dao.prototype, \"updateCacheManager\", void 0);\nDao = __decorate([\n    Injected()\n], Dao);\nexport { Dao };\n//# sourceMappingURL=Dao.js.map","export class DaoQueryDecorators {\n    Graph(callback) {\n        return function (target, propertyKey) {\n            // No runtime logic required.\n        };\n    }\n    Tree(callback) {\n        return function (target, propertyKey) {\n            // No runtime logic required.\n        };\n    }\n}\n//# sourceMappingURL=DaoQueryDecorators.js.map","import { lib } from \"@airport/direction-indicator\";\nexport const tarmaqDao = lib('tarmaq-dao');\n//# sourceMappingURL=library.js.map","import { ENTITY_STATE_MANAGER, UPDATE_CACHE_MANAGER } from \"@airport/ground-control\";\nimport { Dao } from \"./implementation/Dao\";\nimport { Lookup } from \"./implementation/query/Lookup\";\nimport { NonEntityFind } from \"./implementation/query/NonEntityFind\";\nimport { NonEntityFindOne } from \"./implementation/query/NonEntityFindOne\";\nimport { NonEntitySearch } from \"./implementation/query/NonEntitySearch\";\nimport { NonEntitySearchOne } from \"./implementation/query/NonEntitySearchOne\";\nimport { tarmaqDao } from \"./library\";\nexport const DAO = tarmaqDao.token({\n    class: Dao,\n    interface: 'class Dao',\n    token: 'DAO'\n});\nexport const DATABASE_FACADE = tarmaqDao.token({\n    class: null,\n    interface: 'IDatabaseFacade',\n    token: 'DATABASE_FACADE'\n});\nexport const LOOKUP = tarmaqDao.token({\n    class: Lookup,\n    interface: 'ILookup',\n    token: 'LOOKUP'\n});\nexport const NON_ENTITY_FIND = tarmaqDao.token({\n    class: NonEntityFind,\n    interface: 'INonEntityFind',\n    token: 'NON_ENTITY_FIND'\n});\nexport const NON_ENTITY_FIND_ONE = tarmaqDao.token({\n    class: NonEntityFindOne,\n    interface: 'INonEntityFindOne',\n    token: 'NON_ENTITY_FIND_ONE'\n});\nexport const NON_ENTITY_SEARCH = tarmaqDao.token({\n    class: NonEntitySearch,\n    interface: 'INonEntitySearch',\n    token: 'NON_ENTITY_SEARCH'\n});\nexport const NON_ENTITY_SEARCH_ONE = tarmaqDao.token({\n    class: NonEntitySearchOne,\n    interface: 'INonEntitySearchOne',\n    token: 'NON_ENTITY_SEARCH_ONE'\n});\nexport const QUERY_FACADE = tarmaqDao.token({\n    class: null,\n    interface: 'IQueryFacade',\n    token: 'QUERY_FACADE'\n});\nDAO.setDependencies({\n    databaseFacade: DATABASE_FACADE,\n    entityStateManager: ENTITY_STATE_MANAGER,\n    lookup: LOOKUP,\n    updateCacheManager: UPDATE_CACHE_MANAGER\n});\n//# sourceMappingURL=tokens.js.map","export * from './definition/query/EntityFind';\nexport * from './definition/query/EntityFindOne';\nexport * from './definition/query/EntityLookup';\nexport * from './definition/query/EntitySearch';\nexport * from './definition/query/EntitySearchOne';\nexport * from './definition/query/Lookup';\nexport * from './definition/query/NonEntityFind';\nexport * from './definition/query/NonEntityFindOne';\nexport * from './definition/query/NonEntitySearch';\nexport * from './definition/query/NonEntitySearchOne';\nexport * from './definition/IDao';\nexport * from './definition/IDatabaseFacade';\nexport * from './definition/IFieldsSelect';\nexport * from './definition/IEntityDatabaseFacade';\nexport * from './implementation/query/EntityFind';\nexport * from './implementation/query/EntityFindOne';\nexport * from './implementation/query/EntityLookup';\nexport * from './implementation/query/EntitySearch';\nexport * from './implementation/query/EntitySearchOne';\nexport * from './implementation/query/Lookup';\nexport * from './implementation/query/NonEntityFind';\nexport * from './implementation/query/NonEntityFindOne';\nexport * from './implementation/query/NonEntitySearch';\nexport * from './implementation/query/NonEntitySearchOne';\nexport * from './implementation/Dao';\nexport * from './implementation/DaoQueryDecorators';\nexport * from './implementation/EntityDatabaseFacade';\nexport * from './implementation/FieldsSelect';\nexport * from './tokens';\nimport { airApi } from '@airport/aviation-communication';\nimport { SEQ_GEN } from '@airport/ground-control';\nexport function diSet(dbApplication, dbEntityId // ApplicationEntity_LocalId\n) {\n    if (!SEQ_GEN\n        || !dbApplication) {\n        return false;\n    }\n    const dbEntity = dbApplication.currentVersion[0]\n        .applicationVersion.entities[dbEntityId];\n    return SEQ_GEN.exists(dbEntity);\n}\nexport function duoDiSet(dbApplication, dbEntityId) {\n    return dbApplication && dbApplication.currentVersion[0]\n        .applicationVersion.entities[dbEntityId];\n}\nairApi.dS = diSet;\nairApi.ddS = duoDiSet;\n//# sourceMappingURL=index.js.map","import { Dao, DaoQueryDecorators, } from '@airport/tarmaq-dao';\nimport { Q, duoDiSet, } from './qApplication';\n// Application Q object Dependency Injection readiness detection Dao\nexport class SQDIDao extends Dao {\n    constructor(dbEntityId) {\n        super(dbEntityId, Q);\n    }\n}\nexport class BaseApplicationDao extends SQDIDao {\n    constructor() {\n        super(10);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(10);\n    }\n}\nBaseApplicationDao.Find = new DaoQueryDecorators();\nBaseApplicationDao.FindOne = new DaoQueryDecorators();\nBaseApplicationDao.Search = new DaoQueryDecorators();\nBaseApplicationDao.SearchOne = new DaoQueryDecorators();\nexport class BaseApplicationColumnDao extends SQDIDao {\n    constructor() {\n        super(4);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(4);\n    }\n}\nBaseApplicationColumnDao.Find = new DaoQueryDecorators();\nBaseApplicationColumnDao.FindOne = new DaoQueryDecorators();\nBaseApplicationColumnDao.Search = new DaoQueryDecorators();\nBaseApplicationColumnDao.SearchOne = new DaoQueryDecorators();\nexport class BaseApplicationCurrentVersionDao extends SQDIDao {\n    constructor() {\n        super(9);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(9);\n    }\n}\nBaseApplicationCurrentVersionDao.Find = new DaoQueryDecorators();\nBaseApplicationCurrentVersionDao.FindOne = new DaoQueryDecorators();\nBaseApplicationCurrentVersionDao.Search = new DaoQueryDecorators();\nBaseApplicationCurrentVersionDao.SearchOne = new DaoQueryDecorators();\nexport class BaseApplicationEntityDao extends SQDIDao {\n    constructor() {\n        super(6);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(6);\n    }\n}\nBaseApplicationEntityDao.Find = new DaoQueryDecorators();\nBaseApplicationEntityDao.FindOne = new DaoQueryDecorators();\nBaseApplicationEntityDao.Search = new DaoQueryDecorators();\nBaseApplicationEntityDao.SearchOne = new DaoQueryDecorators();\nexport class BaseApplicationOperationDao extends SQDIDao {\n    constructor() {\n        super(5);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(5);\n    }\n}\nBaseApplicationOperationDao.Find = new DaoQueryDecorators();\nBaseApplicationOperationDao.FindOne = new DaoQueryDecorators();\nBaseApplicationOperationDao.Search = new DaoQueryDecorators();\nBaseApplicationOperationDao.SearchOne = new DaoQueryDecorators();\nexport class BaseApplicationPropertyDao extends SQDIDao {\n    constructor() {\n        super(2);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(2);\n    }\n}\nBaseApplicationPropertyDao.Find = new DaoQueryDecorators();\nBaseApplicationPropertyDao.FindOne = new DaoQueryDecorators();\nBaseApplicationPropertyDao.Search = new DaoQueryDecorators();\nBaseApplicationPropertyDao.SearchOne = new DaoQueryDecorators();\nexport class BaseApplicationPropertyColumnDao extends SQDIDao {\n    constructor() {\n        super(3);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(3);\n    }\n}\nBaseApplicationPropertyColumnDao.Find = new DaoQueryDecorators();\nBaseApplicationPropertyColumnDao.FindOne = new DaoQueryDecorators();\nBaseApplicationPropertyColumnDao.Search = new DaoQueryDecorators();\nBaseApplicationPropertyColumnDao.SearchOne = new DaoQueryDecorators();\nexport class BaseApplicationReferenceDao extends SQDIDao {\n    constructor() {\n        super(7);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(7);\n    }\n}\nBaseApplicationReferenceDao.Find = new DaoQueryDecorators();\nBaseApplicationReferenceDao.FindOne = new DaoQueryDecorators();\nBaseApplicationReferenceDao.Search = new DaoQueryDecorators();\nBaseApplicationReferenceDao.SearchOne = new DaoQueryDecorators();\nexport class BaseApplicationRelationDao extends SQDIDao {\n    constructor() {\n        super(1);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(1);\n    }\n}\nBaseApplicationRelationDao.Find = new DaoQueryDecorators();\nBaseApplicationRelationDao.FindOne = new DaoQueryDecorators();\nBaseApplicationRelationDao.Search = new DaoQueryDecorators();\nBaseApplicationRelationDao.SearchOne = new DaoQueryDecorators();\nexport class BaseApplicationRelationColumnDao extends SQDIDao {\n    constructor() {\n        super(0);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(0);\n    }\n}\nBaseApplicationRelationColumnDao.Find = new DaoQueryDecorators();\nBaseApplicationRelationColumnDao.FindOne = new DaoQueryDecorators();\nBaseApplicationRelationColumnDao.Search = new DaoQueryDecorators();\nBaseApplicationRelationColumnDao.SearchOne = new DaoQueryDecorators();\nexport class BaseApplicationVersionDao extends SQDIDao {\n    constructor() {\n        super(8);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(8);\n    }\n}\nBaseApplicationVersionDao.Find = new DaoQueryDecorators();\nBaseApplicationVersionDao.FindOne = new DaoQueryDecorators();\nBaseApplicationVersionDao.Search = new DaoQueryDecorators();\nBaseApplicationVersionDao.SearchOne = new DaoQueryDecorators();\nexport class BaseDomainDao extends SQDIDao {\n    constructor() {\n        super(11);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(11);\n    }\n}\nBaseDomainDao.Find = new DaoQueryDecorators();\nBaseDomainDao.FindOne = new DaoQueryDecorators();\nBaseDomainDao.Search = new DaoQueryDecorators();\nBaseDomainDao.SearchOne = new DaoQueryDecorators();\n//# sourceMappingURL=baseDaos.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { BaseDomainDao, Q } from '../generated/generated';\nlet DomainDao = class DomainDao extends BaseDomainDao {\n    async findByIdIn(domainIds) {\n        let d;\n        return await this.db.find.tree({\n            SELECT: {},\n            FROM: [\n                d = Q.Domain\n            ],\n            WHERE: d._localId.IN(domainIds)\n        });\n    }\n    async findMapByNameWithNames(domainNames) {\n        let d;\n        const domains = await this.db.find.tree({\n            SELECT: {},\n            FROM: [d = Q.Domain],\n            WHERE: d.name.IN(domainNames)\n        });\n        const domainMapByNameWithNames = new Map();\n        for (const domain of domains) {\n            domainMapByNameWithNames.set(domain.name, domain);\n        }\n        return domainMapByNameWithNames;\n    }\n    async findOneByName(name) {\n        let d;\n        return await this.db.findOne.tree({\n            SELECT: {},\n            FROM: [d = Q.Domain],\n            WHERE: d.name.equals(name)\n        });\n    }\n    async findByNames(names) {\n        let d;\n        return await this.db.find.tree({\n            SELECT: {},\n            FROM: [d = Q.Domain],\n            WHERE: d.name.IN(names)\n        });\n    }\n    async findByName(name) {\n        let d;\n        return await this.db.findOne.tree({\n            SELECT: {},\n            FROM: [d = Q.Domain],\n            WHERE: d.name.equals(name)\n        });\n    }\n    async checkAndInsertIfNeeded(domains, context) {\n        const existingDomains = await this.findByIdIn(domains.map(domain => domain._localId));\n        const existingDomainMap = new Map();\n        for (const existingDomain of existingDomains) {\n            existingDomainMap.set(existingDomain._localId, existingDomain);\n        }\n        const newDomains = [];\n        for (const domain of domains) {\n            if (!existingDomainMap.has(domain._localId)) {\n                newDomains.push(domain);\n            }\n        }\n        if (!newDomains.length) {\n            return;\n        }\n        let d;\n        const VALUES = [];\n        for (const domain of newDomains) {\n            VALUES.push([\n                domain._localId, domain.name\n            ]);\n        }\n        await this.db.insertValuesGenerateIds({\n            INSERT_INTO: d = Q.Domain,\n            columns: [\n                d._localId,\n                d.name,\n            ],\n            VALUES\n        }, context);\n    }\n    async insert(domains) {\n        let d;\n        const VALUES = [];\n        for (const domain of domains) {\n            VALUES.push([\n                domain.name\n            ]);\n        }\n        const ids = await this.db.insertValuesGenerateIds({\n            INSERT_INTO: d = Q.Domain,\n            columns: [\n                d.name\n            ],\n            VALUES\n        });\n        for (let i = 0; i < domains.length; i++) {\n            let domain = domains[i];\n            domain._localId = ids[i][0];\n        }\n    }\n};\nDomainDao = __decorate([\n    Injected()\n], DomainDao);\nexport { DomainDao };\n//# sourceMappingURL=DomainDao.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { undefinedToNull } from '@airport/ground-control';\nimport { BaseApplicationColumnDao, Q } from '../generated/generated';\nlet ApplicationColumnDao = class ApplicationColumnDao extends BaseApplicationColumnDao {\n    async findAllForEntities(entityIds) {\n        let c;\n        return this.db.find.tree({\n            SELECT: {},\n            FROM: [\n                c = Q.ApplicationColumn\n            ],\n            WHERE: c.entity._localId.IN(entityIds)\n        });\n    }\n    async insert(applicationColumns, context) {\n        let sc;\n        const VALUES = [];\n        for (const applicationColumn of applicationColumns) {\n            VALUES.push([\n                applicationColumn._localId, applicationColumn.index,\n                undefinedToNull(applicationColumn.idIndex),\n                applicationColumn.isGenerated,\n                undefinedToNull(applicationColumn.allocationSize),\n                applicationColumn.name,\n                applicationColumn.notNull,\n                undefinedToNull(applicationColumn.precision),\n                undefinedToNull(applicationColumn.scale),\n                applicationColumn.type,\n                applicationColumn.entity._localId,\n                applicationColumn.deprecatedSinceVersion ? applicationColumn.deprecatedSinceVersion._localId : null,\n                applicationColumn.removedInVersion ? applicationColumn.removedInVersion._localId : null,\n                applicationColumn.sinceVersion ? applicationColumn.sinceVersion._localId : null,\n            ]);\n        }\n        await this.db.insertValuesGenerateIds({\n            INSERT_INTO: sc = Q.ApplicationColumn,\n            columns: [\n                sc._localId,\n                sc.index,\n                sc.idIndex,\n                sc.isGenerated,\n                sc.allocationSize,\n                sc.name,\n                sc.notNull,\n                sc.precision,\n                sc.scale,\n                sc.type,\n                sc.entity._localId,\n                sc.deprecatedSinceVersion._localId,\n                sc.removedInVersion._localId,\n                sc.sinceVersion._localId\n            ],\n            VALUES\n        }, context);\n    }\n};\nApplicationColumnDao = __decorate([\n    Injected()\n], ApplicationColumnDao);\nexport { ApplicationColumnDao };\n//# sourceMappingURL=ApplicationColumnDao.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ALL_FIELDS, AND, MAX, tree, Y } from '@airport/tarmaq-query';\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { ensureChildJsMap } from '@airport/ground-control';\nimport { BaseApplicationDao, Q } from '../generated/generated';\nlet ApplicationDao = class ApplicationDao extends BaseApplicationDao {\n    async findAllActive() {\n        let s;\n        return this.db.find.tree({\n            SELECT: {},\n            FROM: [\n                s = Q.Application\n            ]\n        });\n    }\n    async findAllWithJson() {\n        let a;\n        let av;\n        // FIXME: this should be don through currentVersion - verify that it get's populated and switch\n        let cv;\n        return this.db.find.tree({\n            SELECT: {\n                ...ALL_FIELDS,\n                // currentVersion: {\n                // \tapplicationVersion: {\n                // \t\t_localId: Y,\n                // \t\tjsonApplication: Y\n                // \t}\n                // }\n                versions: {\n                    _localId: Y,\n                    jsonApplication: Y\n                }\n            },\n            FROM: [\n                a = Q.Application,\n                // cv = a.currentVersion.INNER_JOIN(),\n                // av = cv.applicationVersion.INNER_JOIN()\n                av = a.versions.INNER_JOIN()\n            ]\n        });\n    }\n    async findMapByVersionIds(applicationVersionIds) {\n        const applicationMapByIndex = new Map();\n        let s, sv;\n        const applications = await this.db.find.tree({\n            SELECT: {\n                index: Y,\n                domain: {\n                    _localId: Y,\n                    name: Y\n                },\n                name: Y,\n                fullName: Y,\n                versions: {\n                    _localId: Y,\n                    majorVersion: Y,\n                    minorVersion: Y,\n                    patchVersion: Y\n                }\n            },\n            FROM: [\n                s = Q.Application,\n                sv = s.versions.INNER_JOIN()\n            ],\n            WHERE: sv._localId.IN(applicationVersionIds)\n        });\n        for (const application of applications) {\n            for (const applicationVersion of application.versions) {\n                applicationMapByIndex.set(applicationVersion._localId, application);\n            }\n        }\n        return applicationMapByIndex;\n    }\n    async findMaxIndex() {\n        const s = Q.Application;\n        return await this.airportDatabase.findOne.field({\n            SELECT: MAX(s.index),\n            FROM: [\n                s\n            ]\n        });\n    }\n    async findMaxVersionedMapByApplicationAndDomain_Names(applicationDomain_Names, applicationNames) {\n        const maxVersionedMapByApplicationAndDomain_Names = new Map();\n        let sv;\n        let s;\n        let d;\n        let sMaV;\n        let sMiV;\n        const applicationLookupRecords = await this.airportDatabase.find.tree({\n            FROM: [\n                sMiV = tree({\n                    FROM: [\n                        sMaV = tree({\n                            FROM: [\n                                s = Q.Application,\n                                sv = s.versions.INNER_JOIN(),\n                                d = s.domain.INNER_JOIN()\n                            ],\n                            SELECT: {\n                                index: s.index,\n                                domainId: d._localId,\n                                domainName: d.name,\n                                name: s.name,\n                                majorVersion: MAX(sv.majorVersion),\n                                minorVersion: sv.minorVersion,\n                                patchVersion: sv.patchVersion,\n                            },\n                            WHERE: AND(d.name.IN(applicationDomain_Names), s.name.IN(applicationNames)),\n                            GROUP_BY: [\n                                s.index,\n                                d._localId,\n                                d.name,\n                                s.name,\n                                sv.minorVersion,\n                                sv.patchVersion,\n                            ]\n                        })\n                    ],\n                    SELECT: {\n                        index: sMaV.index,\n                        domainId: sMaV.domainId,\n                        domainName: sMaV.domainName,\n                        name: sMaV.name,\n                        majorVersion: sMaV.majorVersion,\n                        minorVersion: MAX(sMaV.minorVersion),\n                        patchVersion: sMaV.patchVersion,\n                    },\n                    GROUP_BY: [\n                        sMaV.index,\n                        sMaV.domainId,\n                        sMaV.domainName,\n                        sMaV.name,\n                        sMaV.majorVersion,\n                        sMaV.patchVersion\n                    ]\n                })\n            ],\n            SELECT: {\n                index: sMiV.index,\n                domain: {\n                    _localId: sMiV.domainId,\n                    name: sMiV.domainName\n                },\n                name: sMiV.name,\n                majorVersion: sMiV.majorVersion,\n                minorVersion: sMiV.minorVersion,\n                patchVersion: MAX(sMiV.patchVersion),\n            },\n            GROUP_BY: [\n                sMiV.index,\n                sMiV.domainId,\n                sMiV.domainName,\n                sMiV.name,\n                sMiV.majorVersion,\n                sMiV.minorVersion\n            ]\n        });\n        for (const applicationLookupRecord of applicationLookupRecords) {\n            ensureChildJsMap(maxVersionedMapByApplicationAndDomain_Names, applicationLookupRecord.domain.name)\n                .set(applicationLookupRecord.name, applicationLookupRecord);\n        }\n        return maxVersionedMapByApplicationAndDomain_Names;\n    }\n    async setStatusByIndexes(indexes, status) {\n        let s;\n        await this.db.updateWhere({\n            UPDATE: s = Q.Application,\n            SET: {\n                status\n            },\n            WHERE: s.index.IN(indexes)\n        });\n    }\n    async findMapByFullNames(fullApplication_Names) {\n        const mapByFullName = new Map();\n        let s;\n        const records = await this.db.find.tree({\n            SELECT: {},\n            FROM: [\n                s = Q.Application\n            ],\n            WHERE: s.fullName.IN(fullApplication_Names)\n        });\n        for (const record of records) {\n            mapByFullName.set(record.fullName, record);\n        }\n        return mapByFullName;\n    }\n    async findByDomain_NamesAndApplication_Names(domainNames, applicationNames) {\n        let s;\n        let d;\n        return await this.db.find.tree({\n            SELECT: {\n                index: Y,\n                domain: {\n                    _localId: Y,\n                    name: Y\n                },\n                fullName: Y,\n                name: Y\n            },\n            FROM: [\n                s = Q.Application,\n                d = s.domain.INNER_JOIN()\n            ],\n            WHERE: AND(d.name.IN(domainNames), s.name.IN(applicationNames))\n        });\n    }\n    async findOneByDomain_NameAndApplication_Name(domainName, applicationName) {\n        let s;\n        let d;\n        return await this.db.findOne.tree({\n            SELECT: {\n                domain: {\n                    name: Y\n                },\n                fullName: Y,\n                index: Y,\n                name: Y\n            },\n            FROM: [\n                s = Q.Application,\n                d = s.domain.INNER_JOIN()\n            ],\n            WHERE: AND(d.name.equals(domainName), s.name.equals(applicationName))\n        });\n    }\n    async findByIndex(index) {\n        let a;\n        let d;\n        return await this.db.findOne.tree({\n            SELECT: {\n                ...ALL_FIELDS,\n                domain: {}\n            },\n            FROM: [\n                a = Q.Application,\n                d = a.domain.INNER_JOIN()\n            ],\n            WHERE: a.index.equals(index)\n        });\n    }\n    async insert(applications, context) {\n        let a;\n        const VALUES = [];\n        for (const application of applications) {\n            VALUES.push([\n                application.index, application.domain._localId, application.scope,\n                application.fullName, application.name,\n                // application.packageName,\n                application.status, application.signature\n            ]);\n        }\n        await this.db.insertValuesGenerateIds({\n            INSERT_INTO: a = Q.Application,\n            columns: [\n                a.index,\n                a.domain._localId,\n                a.scope,\n                a.fullName,\n                a.name,\n                // a.packageName,\n                a.status,\n                a.signature\n            ],\n            VALUES\n        }, context);\n    }\n};\n__decorate([\n    Inject()\n], ApplicationDao.prototype, \"airportDatabase\", void 0);\nApplicationDao = __decorate([\n    Injected()\n], ApplicationDao);\nexport { ApplicationDao };\n//# sourceMappingURL=ApplicationDao.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { BaseApplicationEntityDao, Q, } from '../generated/generated';\nlet ApplicationEntityDao = class ApplicationEntityDao extends BaseApplicationEntityDao {\n    async findAllForApplicationVersions(applicationVersionIds) {\n        let se;\n        return await this.db.find.tree({\n            SELECT: {},\n            FROM: [\n                se = Q.ApplicationEntity\n            ],\n            WHERE: se.applicationVersion._localId.IN(applicationVersionIds)\n        });\n    }\n    async insert(applicationEntities, context) {\n        let se;\n        const VALUES = [];\n        for (const applicationEntity of applicationEntities) {\n            VALUES.push([\n                applicationEntity._localId, applicationEntity.index,\n                applicationEntity.isLocal, applicationEntity.isAirEntity,\n                applicationEntity.name, applicationEntity.tableConfig,\n                applicationEntity.applicationVersion._localId,\n                applicationEntity.deprecatedSinceVersion ? applicationEntity.deprecatedSinceVersion._localId : null,\n                applicationEntity.removedInVersion ? applicationEntity.removedInVersion._localId : null,\n                applicationEntity.sinceVersion ? applicationEntity.sinceVersion._localId : null,\n            ]);\n        }\n        await this.db.insertValuesGenerateIds({\n            INSERT_INTO: se = Q.ApplicationEntity,\n            columns: [\n                se._localId,\n                se.index,\n                se.isLocal,\n                se.isAirEntity,\n                se.name,\n                se.tableConfig,\n                se.applicationVersion._localId,\n                se.deprecatedSinceVersion._localId,\n                se.removedInVersion._localId,\n                se.sinceVersion._localId\n            ],\n            VALUES\n        }, context);\n    }\n};\nApplicationEntityDao = __decorate([\n    Injected()\n], ApplicationEntityDao);\nexport { ApplicationEntityDao };\n//# sourceMappingURL=ApplicationEntityDao.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { BaseApplicationPropertyColumnDao, Q, } from '../generated/generated';\nlet ApplicationPropertyColumnDao = class ApplicationPropertyColumnDao extends BaseApplicationPropertyColumnDao {\n    async findAllForColumns(columnIds) {\n        let rc;\n        return this.db.find.tree({\n            SELECT: {},\n            FROM: [\n                rc = Q.ApplicationPropertyColumn\n            ],\n            WHERE: rc.column._localId.IN(columnIds)\n        });\n    }\n    async insert(applicationPropertyColumns, context) {\n        let spc;\n        const VALUES = [];\n        for (const applicationPropertyColumn of applicationPropertyColumns) {\n            VALUES.push([\n                applicationPropertyColumn.column._localId, applicationPropertyColumn.property._localId,\n                applicationPropertyColumn.deprecatedSinceVersion ? applicationPropertyColumn.deprecatedSinceVersion._localId : null,\n                applicationPropertyColumn.removedInVersion ? applicationPropertyColumn.removedInVersion._localId : null,\n                applicationPropertyColumn.sinceVersion ? applicationPropertyColumn.sinceVersion._localId : null,\n            ]);\n        }\n        await this.db.insertValuesGenerateIds({\n            INSERT_INTO: spc = Q.ApplicationPropertyColumn,\n            columns: [\n                spc.column._localId,\n                spc.property._localId,\n                spc.deprecatedSinceVersion._localId,\n                spc.removedInVersion._localId,\n                spc.sinceVersion._localId\n            ],\n            VALUES\n        }, context);\n    }\n};\nApplicationPropertyColumnDao = __decorate([\n    Injected()\n], ApplicationPropertyColumnDao);\nexport { ApplicationPropertyColumnDao };\n//# sourceMappingURL=ApplicationPropertyColumnDao.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { BaseApplicationPropertyDao, Q, } from '../generated/generated';\nlet ApplicationPropertyDao = class ApplicationPropertyDao extends BaseApplicationPropertyDao {\n    async findAllForEntities(entityIds) {\n        let p;\n        return this.db.find.tree({\n            SELECT: {},\n            FROM: [\n                p = Q.ApplicationProperty\n            ],\n            WHERE: p.entity._localId.IN(entityIds)\n        });\n    }\n    async insert(applicationProperties, context) {\n        let sp;\n        const VALUES = [];\n        for (const applicationProperty of applicationProperties) {\n            VALUES.push([\n                applicationProperty._localId, applicationProperty.index,\n                applicationProperty.name, applicationProperty.isId,\n                applicationProperty.entity._localId,\n                applicationProperty.deprecatedSinceVersion ? applicationProperty.deprecatedSinceVersion._localId : null,\n                applicationProperty.removedInVersion ? applicationProperty.removedInVersion._localId : null,\n                applicationProperty.sinceVersion ? applicationProperty.sinceVersion._localId : null,\n            ]);\n        }\n        await this.db.insertValuesGenerateIds({\n            INSERT_INTO: sp = Q.ApplicationProperty,\n            columns: [\n                sp._localId,\n                sp.index,\n                sp.name,\n                sp.isId,\n                sp.entity._localId,\n                sp.deprecatedSinceVersion._localId,\n                sp.removedInVersion._localId,\n                sp.sinceVersion._localId\n            ],\n            VALUES\n        }, context);\n    }\n};\nApplicationPropertyDao = __decorate([\n    Injected()\n], ApplicationPropertyDao);\nexport { ApplicationPropertyDao };\n//# sourceMappingURL=ApplicationPropertyDao.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { BaseApplicationReferenceDao, Q, } from '../generated/generated';\nlet ApplicationReferenceDao = class ApplicationReferenceDao extends BaseApplicationReferenceDao {\n    async findAllForApplicationVersions(applicationVersionIds) {\n        let sr;\n        return await this.db.find.tree({\n            SELECT: {},\n            FROM: [\n                sr = Q.ApplicationReference\n            ],\n            WHERE: sr.ownApplicationVersion._localId.IN(applicationVersionIds)\n        });\n    }\n    async insert(applicationReferences, context) {\n        let sr;\n        const VALUES = [];\n        for (const applicationReference of applicationReferences) {\n            VALUES.push([\n                applicationReference.ownApplicationVersion._localId,\n                applicationReference.referencedApplicationVersion._localId,\n                applicationReference.index,\n                applicationReference.deprecatedSinceVersion ? applicationReference.deprecatedSinceVersion._localId : null,\n                applicationReference.removedInVersion ? applicationReference.removedInVersion._localId : null,\n                applicationReference.sinceVersion ? applicationReference.sinceVersion._localId : null,\n            ]);\n        }\n        await this.db.insertValuesGenerateIds({\n            INSERT_INTO: sr = Q.ApplicationReference,\n            columns: [\n                sr.ownApplicationVersion._localId,\n                sr.referencedApplicationVersion._localId,\n                sr.index,\n                sr.deprecatedSinceVersion._localId,\n                sr.removedInVersion._localId,\n                sr.sinceVersion._localId\n            ],\n            VALUES\n        }, context);\n    }\n};\nApplicationReferenceDao = __decorate([\n    Injected()\n], ApplicationReferenceDao);\nexport { ApplicationReferenceDao };\n//# sourceMappingURL=ApplicationReferenceDao.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { OR } from '@airport/tarmaq-query';\nimport { Injected } from '@airport/direction-indicator';\nimport { BaseApplicationRelationColumnDao, Q, } from '../generated/generated';\nlet ApplicationRelationColumnDao = class ApplicationRelationColumnDao extends BaseApplicationRelationColumnDao {\n    async findAllForColumns(columnIds) {\n        let rc;\n        return this.db.find.tree({\n            SELECT: {},\n            FROM: [\n                rc = Q.ApplicationRelationColumn\n            ],\n            WHERE: OR(rc.oneColumn._localId.IN(columnIds), rc.manyColumn._localId.IN(columnIds))\n        });\n    }\n    async insert(applicationRelationColumns, context) {\n        let src;\n        const VALUES = [];\n        for (const applicationRelationColumn of applicationRelationColumns) {\n            VALUES.push([\n                applicationRelationColumn._localId,\n                applicationRelationColumn.manyColumn ? applicationRelationColumn.manyColumn._localId : null,\n                applicationRelationColumn.oneColumn ? applicationRelationColumn.oneColumn._localId : null,\n                applicationRelationColumn.manyRelation ? applicationRelationColumn.manyRelation._localId : null,\n                applicationRelationColumn.oneRelation ? applicationRelationColumn.oneRelation._localId : null,\n                applicationRelationColumn.parentRelation ? applicationRelationColumn.parentRelation._localId : null,\n                applicationRelationColumn.deprecatedSinceVersion ? applicationRelationColumn.deprecatedSinceVersion._localId : null,\n                applicationRelationColumn.removedInVersion ? applicationRelationColumn.removedInVersion._localId : null,\n                applicationRelationColumn.sinceVersion ? applicationRelationColumn.sinceVersion._localId : null,\n            ]);\n        }\n        await this.db.insertValuesGenerateIds({\n            INSERT_INTO: src = Q.ApplicationRelationColumn,\n            columns: [\n                src._localId,\n                src.manyColumn._localId,\n                src.oneColumn._localId,\n                src.manyRelation._localId,\n                src.oneRelation._localId,\n                src.parentRelation._localId,\n                src.deprecatedSinceVersion._localId,\n                src.removedInVersion._localId,\n                src.sinceVersion._localId\n            ],\n            VALUES\n        }, context);\n    }\n};\nApplicationRelationColumnDao = __decorate([\n    Injected()\n], ApplicationRelationColumnDao);\nexport { ApplicationRelationColumnDao };\n//# sourceMappingURL=ApplicationRelationColumnDao.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { undefinedToNull } from '@airport/ground-control';\nimport { BaseApplicationRelationDao, Q, } from '../generated/generated';\nlet ApplicationRelationDao = class ApplicationRelationDao extends BaseApplicationRelationDao {\n    async findAllForProperties(propertyIds) {\n        let r;\n        return this.db.find.tree({\n            SELECT: {},\n            FROM: [\n                r = Q.ApplicationRelation\n            ],\n            WHERE: r.property._localId.IN(propertyIds)\n        });\n    }\n    async insert(applicationRelations, context) {\n        let sr;\n        const VALUES = [];\n        for (const applicationRelation of applicationRelations) {\n            VALUES.push([\n                applicationRelation._localId, applicationRelation.index,\n                applicationRelation.property._localId,\n                undefinedToNull(applicationRelation.foreignKey),\n                undefinedToNull(applicationRelation.manyToOneElems),\n                undefinedToNull(applicationRelation.oneToManyElems),\n                applicationRelation.relationType, applicationRelation.isId,\n                applicationRelation.entity._localId, applicationRelation.relationEntity._localId,\n                applicationRelation.deprecatedSinceVersion ? applicationRelation.deprecatedSinceVersion._localId : null,\n                applicationRelation.removedInVersion ? applicationRelation.removedInVersion._localId : null,\n                applicationRelation.sinceVersion ? applicationRelation.sinceVersion._localId : null,\n            ]);\n        }\n        await this.db.insertValuesGenerateIds({\n            INSERT_INTO: sr = Q.ApplicationRelation,\n            columns: [\n                sr._localId,\n                sr.index,\n                sr.property._localId,\n                sr.foreignKey,\n                sr.manyToOneElems,\n                sr.oneToManyElems,\n                sr.relationType,\n                sr.isId,\n                sr.entity._localId,\n                sr.relationEntity._localId,\n                sr.deprecatedSinceVersion._localId,\n                sr.removedInVersion._localId,\n                sr.sinceVersion._localId\n            ],\n            VALUES\n        }, context);\n    }\n};\nApplicationRelationDao = __decorate([\n    Injected()\n], ApplicationRelationDao);\nexport { ApplicationRelationDao };\n//# sourceMappingURL=ApplicationRelationDao.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { AND, Y } from '@airport/tarmaq-query';\nimport { Injected } from '@airport/direction-indicator';\nimport { BaseApplicationVersionDao, Q } from '../generated/generated';\nlet ApplicationVersionDao = class ApplicationVersionDao extends BaseApplicationVersionDao {\n    /*\n    async findAllLatestForApplication_Indexes(\n        applicationIndexes: Application_Index[]\n    ): Promise<IApplicationVersion[]> {\n        let sv: QApplicationVersion\n\n        return await this.db.find.tree({\n            FROM: [\n                sv = Q.ApplicationVersion\n            ],\n            SELECT: {},\n            WHERE: AND(\n                sv._localId.IN(this._localIdsForMaxVersionSelect()),\n                sv.application.index.IN(applicationIndexes)\n            )\n        })\n    }\n    */\n    async findAllActiveOrderByApplication_IndexAndId() {\n        let sv;\n        // let s: QApplication\n        return await this.db.find.tree({\n            FROM: [\n                sv = Q.ApplicationVersion,\n                // s = sv.application.INNER_JOIN()\n            ],\n            SELECT: {},\n            ORDER_BY: [\n                sv.application.index.asc(),\n                sv._localId.desc()\n            ]\n        });\n    }\n    async findByDomain_NamesAndApplication_Names(domainNames, applicationNames) {\n        let sv;\n        let s;\n        let d;\n        return await this.db.find.tree({\n            SELECT: {\n                _localId: Y,\n                integerVersion: Y,\n                application: {\n                    domain: {\n                        name: Y\n                    },\n                    fullName: Y,\n                    name: Y\n                }\n            },\n            FROM: [\n                sv = Q.ApplicationVersion,\n                s = sv.application.INNER_JOIN(),\n                d = s.domain.INNER_JOIN()\n            ],\n            WHERE: AND(d.name.IN(domainNames), s.name.IN(applicationNames))\n        });\n    }\n    /*\n    async findMaxVersionedMapByApplicationAndDomain_Names(\n        applicationDomain_Names: Domain_Name[],\n        applicationNames: Application_Name[]\n    ): Promise<Map<Domain_Name, Map<Application_Name, IApplicationVersion>>> {\n        const maxVersionedMapByApplicationAndDomain_Names\n                  : Map<Domain_Name, Map<Application_Name, IApplicationVersion>>\n                  = new Map()\n\n        let sv: QApplicationVersion\n        let s: QApplication\n        let d: QDomain\n\n        const maxApplicationVersions: IApplicationVersion[] = <any>await this.db.find.tree({\n            SELECT: {\n                integerVersion: Y,\n                majorVersion: Y,\n                minorVersion: Y,\n                patchVersion: Y,\n                application: {\n                    index: Y,\n                    name: Y,\n                    domain: {\n                        _localId: Y,\n                        name: Y\n                    }\n                },\n                _localId: Y\n            },\n            FROM: [\n                sv = Q.ApplicationVersion,\n                s = sv.application.INNER_JOIN(),\n                d = s.domain.INNER_JOIN()\n            ],\n            WHERE: AND(\n                sv._localId.IN(this._localIdsForMaxVersionSelect()),\n                d.name.IN(applicationDomain_Names),\n                s.name.IN(applicationNames)\n            ),\n        })\n\n        for (const maxApplicationVersion of maxApplicationVersions) {\n            const application = maxApplicationVersion.application\n            this.utils.ensureChildJsMap(\n                maxVersionedMapByApplicationAndDomain_Names, application.domain.name)\n                .set(application.name, maxApplicationVersion)\n        }\n\n\n        return maxVersionedMapByApplicationAndDomain_Names\n    }\n\n    private idsForMaxVersionSelect(): RawFieldQuery<IQNumberField> {\n        let svMax\n        let sv2: QApplicationVersion\n\n        return field({\n            FROM: [\n                svMax = tree({\n                    FROM: [\n                        sv2 = Q.ApplicationVersion\n                    ],\n                    SELECT: DISTINCT({\n                        integerVersion: max(sv2.integerVersion),\n                        _localId: sv2._localId,\n                        applicationIndex: sv2.application.index\n                    })\n                })\n            ],\n            SELECT: svMax._localId\n        })\n    }\n*/\n    async insert(applicationVersions, context) {\n        let sv;\n        const VALUES = [];\n        for (const applicationVersion of applicationVersions) {\n            VALUES.push([\n                applicationVersion._localId, applicationVersion.integerVersion,\n                applicationVersion.versionString, applicationVersion.majorVersion,\n                applicationVersion.minorVersion, applicationVersion.patchVersion,\n                applicationVersion.application.index, applicationVersion.jsonApplication\n            ]);\n        }\n        await this.db.insertValuesGenerateIds({\n            INSERT_INTO: sv = Q.ApplicationVersion,\n            columns: [\n                sv._localId,\n                sv.integerVersion,\n                sv.versionString,\n                sv.majorVersion,\n                sv.minorVersion,\n                sv.patchVersion,\n                sv.application.index,\n                sv.jsonApplication\n            ],\n            VALUES: VALUES\n        }, context);\n    }\n};\nApplicationVersionDao = __decorate([\n    Injected()\n], ApplicationVersionDao);\nexport { ApplicationVersionDao };\n//# sourceMappingURL=ApplicationVersionDao.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar ApplicationUtils_1;\nimport { CRUDOperation, EntityRelationType, airEntity } from '@airport/ground-control';\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { convertToY, isY } from '@airport/tarmaq-query';\nlet ApplicationUtils = ApplicationUtils_1 = class ApplicationUtils {\n    getDbEntity(applicationIndex, tableIndex) {\n        return this.airportDatabase.applications[applicationIndex].currentVersion[0]\n            .applicationVersion.entities[tableIndex];\n    }\n    isActorId(columnName) {\n        return columnName === airEntity.ACTOR_LID;\n    }\n    isActorRecordId(columnName) {\n        return columnName === airEntity.ACTOR_RECORD_ID;\n    }\n    isRepositoryId(columnName) {\n        return columnName === airEntity.REPOSITORY_LID;\n    }\n    doCascade(dbRelation, crudOperation) {\n        if (dbRelation.relationType !== EntityRelationType.ONE_TO_MANY) {\n            return false;\n        }\n        if (!dbRelation.oneToManyElems) {\n            return false;\n        }\n        switch (crudOperation) {\n            case CRUDOperation.CREATE:\n            case CRUDOperation.UPDATE:\n            case CRUDOperation.DELETE:\n                return true;\n            default:\n                throw new Error(`Unsupported CRUDOperation '${crudOperation}' for cascade check.`);\n        }\n    }\n    getQEntityConstructor(dbEntity) {\n        return this.airportDatabase.qApplications[dbEntity.applicationVersion.application.index]\n            .__qConstructors__[dbEntity.index];\n    }\n    getEntityConstructor(dbEntity) {\n        const entityConstructor = this.airportDatabase.qApplications[dbEntity.applicationVersion.application.index]\n            .__constructors__[dbEntity.name];\n        return entityConstructor;\n    }\n    getNewEntity(dbEntity) {\n        const entityConstructor = this.getEntityConstructor(dbEntity);\n        if (!entityConstructor) {\n            return {};\n        }\n        return new entityConstructor();\n    }\n    isIdEmpty(idValue) {\n        return !idValue && idValue !== 0;\n    }\n    isEmpty(value) {\n        return this.isIdEmpty(value) && value !== false && value !== '';\n    }\n    isRelationColumn(dbColumn) {\n        return this.isManyRelationColumn(dbColumn)\n            || this.isOneRelationColumn(dbColumn);\n    }\n    isManyRelationColumn(dbColumn) {\n        return !!(dbColumn.manyRelationColumns && dbColumn.manyRelationColumns.length);\n    }\n    isOneRelationColumn(dbColumn) {\n        return !!(dbColumn.oneRelationColumns && dbColumn.oneRelationColumns.length);\n    }\n    getIdKey(entityObject, dbEntity, failOnNoId = true, \n    // noIdValueCallback: {\n    // \t(\n    // \t\trelationColumn: DbColumn,\n    // \t\tvalue: any,\n    // \t\tpropertyNameChains: string[][],\n    // \t): boolean;\n    // } = null,\n    idValueCallback) {\n        const keys = this.getIdKeyInfo(entityObject, dbEntity, failOnNoId, idValueCallback);\n        return keys.arrayByIdColumnIndex.join('|');\n    }\n    getIdKeyInfo(entityObject, dbEntity, failOnNoId = true, idValueCallback) {\n        if (!dbEntity.idColumns.length) {\n            if (failOnNoId) {\n                throw new Error(`@Id is not defined on entity '${dbEntity.name}'.`);\n            }\n            return null;\n        }\n        const idKeys = {\n            arrayByIdColumnIndex: [],\n            mapByIdColumnName: {}\n        };\n        for (const dbColumn of dbEntity.idColumns) {\n            const [propertyNameChains, idValue] = this.getColumnPropertyNameChainsAndValue(dbEntity, dbColumn, entityObject, true, failOnNoId);\n            idValueCallback && idValueCallback(dbColumn, idValue, propertyNameChains);\n            idKeys.arrayByIdColumnIndex.push(idValue);\n            idKeys.mapByIdColumnName[dbColumn.name] = idValue;\n        }\n        return idKeys;\n    }\n    getColumnPropertyNameChainsAndValue(dbEntity, dbColumn, entityObject, forIdKey = false, generateNegativeIdsForMissing = true) {\n        const columnValuesAndPaths = this.getColumnValuesAndPaths(dbColumn, entityObject, [], forIdKey, generateNegativeIdsForMissing);\n        const firstColumnValueAndPath = columnValuesAndPaths[0];\n        const propertyNameChains = [firstColumnValueAndPath.path];\n        const value = firstColumnValueAndPath.value;\n        columnValuesAndPaths.reduce((last, current) => {\n            if (!this.utils.valuesEqual(last.value, current.value, true)) {\n                throw new Error(`Values differ for ${dbEntity.name}.${dbColumn.name}:\r\n\t\t\t\t\t\t'${last.path.join('.')}' = ${last.value}\r\n\t\t\t\t\t\t'${current.path.join('.')}' = ${current.value}`);\n            }\n            propertyNameChains.push(current.path);\n            return current;\n        });\n        return [propertyNameChains, value];\n    }\n    addRelationToEntitySelectClause(dbRelation, selectClause, allowDefaults = false) {\n        this.forEachColumnTypeOfRelation(dbRelation, (dbColumn, propertyNameChains) => {\n            let convertTo = true;\n            let propertySelectClause = selectClause;\n            const firstPropertyNameChain = propertyNameChains[0];\n            firstPropertyNameChain.forEach((propertyNameLink, index) => {\n                let propertyObject = propertySelectClause[propertyNameLink];\n                if (!propertyObject) {\n                    propertyObject = {};\n                    this.entityStateManager.markAsStub(propertyObject);\n                    propertySelectClause[propertyNameLink] = propertyObject;\n                }\n                else {\n                    if (index < firstPropertyNameChain.length - 1) {\n                        if (!(propertyObject instanceof Object) || propertyObject instanceof Date) {\n                            throw new Error(`Invalid entry:\r\n\t\t\t\t\t\t\t\t...\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t...\r\n\t\t\t\t\t\t\t\t\t${propertyNameLink}: ${propertyObject}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tin '${dbRelation.property.entity.name}.${dbRelation.property.name}',\r\n\t\t\t\t\t\t\t\tProperty must be an Object.`);\n                        }\n                    }\n                    else {\n                        if (!allowDefaults && !isY(propertyObject)) {\n                            const reason = dbRelation.property.isId\n                                ? `'${dbRelation.property.entity.name}.${dbRelation.property.name}' is an @Id property`\n                                : `'${dbRelation.property.entity.name}' has no @Id - all properties are treated as @Ids`;\n                            throw new Error(`Defaults are not allowed in:\r\n\t\t\t\t\t\t\t\t...\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t...\r\n\t\t\t\t\t\t\t\t\t${propertyNameLink}: ${propertyObject}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t${reason}.`);\n                        }\n                        convertTo = false;\n                    }\n                }\n                propertySelectClause = propertyObject;\n            });\n            if (convertTo) {\n                convertToY(propertySelectClause);\n            }\n        });\n    }\n    forEachColumnOfRelation(dbRelation, entity, callback, failOnNoValue = true) {\n        const dbEntity = dbRelation.property.entity;\n        for (const dbRelationColumn of dbRelation.manyRelationColumns) {\n            const dbColumn = dbRelationColumn.manyColumn;\n            const [propertyNameChains, value] = this.getColumnPropertyNameChainsAndValue(dbEntity, dbColumn, entity);\n            if (callback(dbColumn, value, propertyNameChains)) {\n                return;\n            }\n        }\n    }\n    forEachColumnTypeOfRelation(dbRelation, callback) {\n        for (const dbRelationColumn of dbRelation.manyRelationColumns) {\n            const dbColumn = dbRelationColumn.manyColumn;\n            const propertyNameChains = this.getColumnPaths(dbColumn, []);\n            if (callback(dbColumn, propertyNameChains)) {\n                return;\n            }\n        }\n    }\n    getSheetSelectFromSetClause(dbEntity, qEntity, setClause, errorPrefix) {\n        const selectClause = [];\n        let actorIdColumnIndex;\n        let actorRecordIdColumnIndex;\n        let repositoryIdColumnIndex;\n        let systemWideOperationIdColumn;\n        for (const columnIndex in dbEntity.columns) {\n            const dbColumn = dbEntity.columns[columnIndex];\n            let dbProperty;\n            const isIdColumn = dbColumn.propertyColumns.some(propertyColumn => {\n                dbProperty = propertyColumn.property;\n                return dbProperty.isId;\n            });\n            let nonIdColumnSet = false;\n            if (isIdColumn) {\n                if (setClause[dbColumn.name]) {\n                    throw new Error(errorPrefix + `Cannot update @Id column '${dbColumn.name}' \r\nof property '${dbEntity.name}.${dbProperty.name}'.`);\n                }\n                this.addColumnToSheetSelect(dbColumn, qEntity, selectClause);\n            }\n            else if (setClause[dbColumn.name]) {\n                nonIdColumnSet = true;\n                this.addColumnToSheetSelect(dbColumn, qEntity, selectClause);\n                // } else {\n                // entitySelectClause[dbColumn.index] = null;\n            }\n            const inQueryColumnIndex = selectClause.length - 1;\n            switch (dbColumn.name) {\n                case airEntity.ACTOR_LID:\n                    actorIdColumnIndex = inQueryColumnIndex;\n                    break;\n                case airEntity.ACTOR_RECORD_ID:\n                    actorRecordIdColumnIndex = inQueryColumnIndex;\n                    break;\n                case airEntity.REPOSITORY_LID:\n                    repositoryIdColumnIndex = inQueryColumnIndex;\n                    break;\n                case airEntity.SYSTEM_WIDE_OPERATION_ID:\n                    if (nonIdColumnSet) {\n                        throw new Error(errorPrefix +\n                            `Cannot update 'systemWideOperationId' of Repository Entities.`);\n                    }\n                    systemWideOperationIdColumn = dbColumn;\n                    break;\n            }\n        }\n        return {\n            actorIdColumnIndex,\n            actorRecordIdColumnIndex,\n            repositoryIdColumnIndex,\n            selectClause,\n            systemWideOperationIdColumn\n        };\n    }\n    getColumnValuesAndPaths(dbColumn, relationObject, breadCrumb, forIdKey = false, generateNegativeIdsForMissing = true\n    // noIdValueCallback: {\n    // \t(\n    // \t\trelationColumn: DbColumn,\n    // \t\tvalue: any,\n    // \t\tpropertyNameChains: string[][],\n    // \t): void;\n    // }\n    ) {\n        if (this.isManyRelationColumn(dbColumn)) {\n            let columnValuesAndPaths = [];\n            // If a column is part of a relation, it would be on the Many Side\n            for (const dbRelationColumn of dbColumn.manyRelationColumns) {\n                const dbProperty = dbRelationColumn.manyRelation.property;\n                const relationBreadCrumb = [...breadCrumb];\n                const propertyName = dbProperty.name;\n                relationBreadCrumb.push(propertyName);\n                const value = relationObject[propertyName];\n                if (!value) {\n                    if (forIdKey\n                    // && this.handleNoId(dbColumn, dbProperty, relationBreadCrumb, value,\n                    // noIdValueCallback)\n                    ) {\n                        throw new Error(`Cannot retrieve composite Id value, value chain '${relationBreadCrumb.join('.')}' is : ${value}.`);\n                        // return null;\n                    }\n                    columnValuesAndPaths.push({\n                        path: relationBreadCrumb,\n                        value\n                    });\n                }\n                else {\n                    const otherEntityColumn = dbRelationColumn.oneColumn;\n                    const relationValuesAndPaths = this.getColumnValuesAndPaths(otherEntityColumn, value, relationBreadCrumb, forIdKey);\n                    columnValuesAndPaths = columnValuesAndPaths.concat(relationValuesAndPaths);\n                }\n            }\n            return columnValuesAndPaths;\n        }\n        else {\n            // If a column is not a part of (a) relation(s) then it is associated\n            // to only one property\n            const dbProperty = dbColumn.propertyColumns[0].property;\n            const propertyBreadCrumb = [...breadCrumb];\n            const propertyName = dbProperty.name;\n            propertyBreadCrumb.push(propertyName);\n            let value = relationObject[propertyName];\n            if (forIdKey && this.isIdEmpty(value)) {\n                if (dbColumn.isGenerated) {\n                    if (generateNegativeIdsForMissing) {\n                        value = --ApplicationUtils_1.TEMP_ID;\n                    }\n                    else {\n                        value = null;\n                    }\n                    relationObject[propertyName] = value;\n                }\n                else {\n                    // if (this.handleNoId(dbColumn, dbProperty, propertyBreadCrumb, value,\n                    // noValueCallback)) { return null; }\n                    throw new Error(`Cannot retrieve composite Id value, value chain '${propertyBreadCrumb.join('.')}' is : ${value}.`);\n                }\n            }\n            return [{\n                    path: propertyBreadCrumb,\n                    value\n                }];\n        }\n    }\n    getColumnPaths(dbColumn, breadCrumb) {\n        let columnValuesAndPaths = [];\n        if (this.isManyRelationColumn(dbColumn)) {\n            // If a column is part of a relation, it would be on the Many Side\n            for (const dbRelationColumn of dbColumn.manyRelationColumns) {\n                const dbProperty = dbRelationColumn.manyRelation.property;\n                const relationBreadCrumb = [...breadCrumb];\n                relationBreadCrumb.push(dbProperty.name);\n                const otherEntityColumn = dbRelationColumn.oneColumn;\n                const relationValuesAndPaths = this.getColumnPaths(otherEntityColumn, relationBreadCrumb);\n                columnValuesAndPaths = columnValuesAndPaths.concat(relationValuesAndPaths);\n            }\n        }\n        else {\n            // If a column is not a part of (a) relation(s) then it is associated\n            // to only one property\n            const dbProperty = dbColumn.propertyColumns[0].property;\n            const propertyBreadCrumb = [...breadCrumb];\n            propertyBreadCrumb.push(dbProperty.name);\n            columnValuesAndPaths.push(propertyBreadCrumb);\n        }\n        return columnValuesAndPaths;\n    }\n    addColumnToSheetSelect(dbColumn, qEntity, entitySelectClause) {\n        if (this.isManyRelationColumn(dbColumn)) {\n            const columnPaths = this.getColumnPaths(dbColumn, []);\n            const firstColumnPath = columnPaths[0];\n            let relationColumn = qEntity[firstColumnPath[0]];\n            firstColumnPath.reduce((last, current) => {\n                relationColumn = relationColumn[current];\n                return current;\n            });\n            entitySelectClause.push(relationColumn);\n        }\n        else {\n            entitySelectClause.push(qEntity[dbColumn.propertyColumns[0].property.name]);\n        }\n    }\n    /*\n        private addColumnToEntitySelect(\n            dbColumn: DbColumn,\n            entitySelectClause: any,\n        ) {\n            const dbRelation = dbColumn.relation;\n            if (dbRelation) {\n                let selectClauseFragment = entitySelectClause;\n                let lastSelectClauseFragment;\n                let sourceColumn = dbColumn;\n                let lastPropertyName;\n                do {\n                    lastPropertyName = sourceColumn.property.name;\n                    lastSelectClauseFragment = selectClauseFragment;\n                    if (!lastSelectClauseFragment[lastPropertyName]) {\n                        selectClauseFragment = {};\n                        lastSelectClauseFragment[lastPropertyName] = selectClauseFragment;\n                    } else {\n                        selectClauseFragment = lastSelectClauseFragment[lastPropertyName];\n                    }\n                    const relationColumn = sourceColumn.relation.relationColumns.filter(\n                        relationColumn => relationColumn.ownColumn.index === sourceColumn.index)[0];\n                    sourceColumn = relationColumn.relationColumn;\n                } while (sourceColumn.relation);\n                lastSelectClauseFragment[lastPropertyName] = null;\n            } else {\n                entitySelectClause[dbColumn.property.name] = null;\n            }\n        }\n    */\n    handleNoId(dbColumn, dbProperty, propertyNameChains, value, noIdValueCallback) {\n        if (noIdValueCallback) {\n            if (!noIdValueCallback(dbColumn, value, propertyNameChains)) {\n                return true;\n            }\n        }\n        else {\n            throw new Error(`Cannot retrieve composite Id value, value chain '${propertyNameChains.join('.')}' is : ${value}.`);\n        }\n        return false;\n    }\n};\nApplicationUtils.TEMP_ID = 0;\n__decorate([\n    Inject()\n], ApplicationUtils.prototype, \"airportDatabase\", void 0);\n__decorate([\n    Inject()\n], ApplicationUtils.prototype, \"entityStateManager\", void 0);\n__decorate([\n    Inject()\n], ApplicationUtils.prototype, \"utils\", void 0);\nApplicationUtils = ApplicationUtils_1 = __decorate([\n    Injected()\n], ApplicationUtils);\nexport { ApplicationUtils };\n//# sourceMappingURL=ApplicationUtils.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { EntityQuery, ENTITY_UTILS, QEntity, QField, QOperableField, QTree, QTreeDriver, TreeQuery, Y } from '@airport/tarmaq-query';\nimport { ACTOR_PROPERTY_NAME, REPOSITORY_PROPERTY_NAME } from '../../definition/AirportDatabase';\n/**\n * Created by Papa on 6/14/2016.\n */\nlet EntityUtils = class EntityUtils {\n    getObjectClassName(object) {\n        if (typeof object != 'object' || object === null) {\n            throw new Error(`Not an object instance`);\n        }\n        return this.getClassName(object.constructor);\n    }\n    getClassName(clazz) {\n        if (typeof clazz != 'function') {\n            throw new Error(`Not a constructor function`);\n        }\n        let className = clazz['name'];\n        // let className = /(\\w+)\\(/.exec(clazz.toString())[1];\n        return className;\n    }\n    exists(object) {\n        return this.utils.objectExists(object);\n    }\n    /*\n     static isBlank(\n     object: any\n     ) {\n     for (let propertyName in object) {\n     let property = object[propertyName];\n     if (this.exists(property)) {\n     if (property instanceof Array) {\n     if (property.length > 0) {\n     return false;\n     }\n     } else {\n     return false;\n     }\n     }\n     }\n     return true;\n     }\n     */\n    isAppliable(object) {\n        return object instanceof QOperableField;\n    }\n    getQuery(query) {\n        return this.getRawQuery(query);\n    }\n    ensureId(rawEntityQuery) {\n        let theRawEntityQuery = this.getRawQuery(rawEntityQuery);\n        this.ensureIdAtLevel(theRawEntityQuery.SELECT, theRawEntityQuery.FROM[0]);\n        return theRawEntityQuery;\n    }\n    ensureIdAtLevel(selectClauseFragment, qEntity) {\n        for (const propertyName in selectClauseFragment) {\n            const subFragment = selectClauseFragment[propertyName];\n            if (subFragment instanceof Object\n                && typeof subFragment.airportSelectField !== 'boolean'\n                && !subFragment.__allFields__) {\n                let matchingQEntity;\n                for (const childQEntity of qEntity.__driver__.childQEntities) {\n                    if (childQEntity.__driver__.dbRelation.property.name === propertyName) {\n                        matchingQEntity = childQEntity;\n                        break;\n                    }\n                }\n                if (matchingQEntity) {\n                    this.ensureIdAtLevel(subFragment, matchingQEntity);\n                }\n            }\n        }\n        if (!selectClauseFragment.id) {\n            return;\n        }\n        let repository = selectClauseFragment.repository;\n        if (repository) {\n            if (!(repository instanceof Object)) {\n                throw new Error(`id queries must include a repository object in the SELECT clause.\r\nIt must be an Object with the id property.`);\n            }\n            repository.GUID = Y;\n        }\n        let actor = selectClauseFragment.actor;\n        if (actor) {\n            if (!(actor instanceof Object)) {\n                throw new Error(`id queries must include an actor object in the SELECT clause.\r\nIt must be an Object with the id property.`);\n            }\n            actor.GUID = Y;\n        }\n        selectClauseFragment._actorRecordId = Y;\n        this.ensureRepositoryAndActorJoin(qEntity);\n    }\n    ensureRepositoryAndActorJoin(qEntity) {\n        let qActor, qRepository;\n        let repositoryJoinFound = false;\n        let actorJoinFound = false;\n        for (const childQEntity of qEntity.__driver__.childQEntities) {\n            if (childQEntity.__driver__.dbRelation.property.name === ACTOR_PROPERTY_NAME) {\n                actorJoinFound = true;\n                qActor = childQEntity;\n            }\n            if (childQEntity.__driver__.dbRelation.property.name === REPOSITORY_PROPERTY_NAME) {\n                repositoryJoinFound = true;\n                qRepository = childQEntity;\n            }\n        }\n        if (!actorJoinFound) {\n            qActor = qEntity.actor.LEFT_JOIN();\n        }\n        if (!repositoryJoinFound) {\n            qRepository = qEntity.repository.LEFT_JOIN();\n        }\n        return {\n            qActor,\n            qRepository\n        };\n    }\n    findActorQEntity() {\n    }\n    // Removes circular dependency at code initialization time\n    getRawQuery(rawQuery) {\n        if (rawQuery instanceof Function) {\n            return rawQuery();\n        }\n        else {\n            return rawQuery;\n        }\n    }\n    // Removes circular dependency at code initialization time\n    getEntityQuery(rawGraphQuery) {\n        return new EntityQuery(this.getRawQuery(rawGraphQuery));\n    }\n    // Removes circular dependency at code initialization time\n    getTreeQuery(rawQuery, entityAliases) {\n        return new TreeQuery(rawQuery, entityAliases);\n    }\n    // Removes circular dependency at code initialization time\n    isQEntity(qEntity) {\n        return qEntity instanceof QEntity;\n    }\n    // Removes circular dependency at code initialization time\n    isQTree(qEntity) {\n        return qEntity instanceof QTreeDriver;\n    }\n    // Removes circular dependency at code initialization time\n    getQTree(fromClausePosition, subQuery) {\n        return new QTree(fromClausePosition, subQuery);\n    }\n    // Removes circular dependency at code initialization time\n    isQField(qEntity) {\n        return qEntity instanceof QField;\n    }\n};\n__decorate([\n    Inject()\n], EntityUtils.prototype, \"utils\", void 0);\nEntityUtils = __decorate([\n    Injected()\n], EntityUtils);\nexport { EntityUtils };\nENTITY_UTILS.setClass(EntityUtils);\n//# sourceMappingURL=EntityUtils.js.map","export const ACTOR_PROPERTY_NAME = 'actor';\nexport const ACTOR_RECORD_ID_PROPERTY_NAME = '_actorRecordId';\nexport const LOCAL_ID_PROPERTY_NAME = '_localId';\nexport const REPOSITORY_PROPERTY_NAME = 'repository';\nexport const USER_ACCOUNT_PROPERTY_NAME = 'userAccount';\n//# sourceMappingURL=AirportDatabase.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { FieldQuery } from '@airport/tarmaq-query';\nlet FieldUtils = class FieldUtils {\n    getFieldQueryJson(fieldSubQuery, entityAliases, queryUtils) {\n        let subSelectQuery = new FieldQuery(fieldSubQuery, entityAliases);\n        return subSelectQuery.toJSON(queryUtils, this, this.relationManager);\n    }\n};\n__decorate([\n    Inject()\n], FieldUtils.prototype, \"relationManager\", void 0);\nFieldUtils = __decorate([\n    Injected()\n], FieldUtils);\nexport { FieldUtils };\n//# sourceMappingURL=FieldUtils.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { airEntity } from '@airport/ground-control';\nlet QMetadataUtils = class QMetadataUtils {\n    getAllColumns(qEntity) {\n        return qEntity.__driver__.allColumns;\n    }\n    getAllNonGeneratedColumns(qEntity) {\n        return this.getAllColumns(qEntity).filter(qField => !qField.dbColumn.isGenerated);\n    }\n    getAllInsertableColumns(qEntity) {\n        return this.getAllColumns(qEntity).filter(qField => {\n            if (qField.dbColumn.isGenerated) {\n                return false;\n            }\n            if (qEntity.__driver__.dbEntity.isAirEntity) {\n                switch (qField.dbColumn.name) {\n                    case airEntity.SYSTEM_WIDE_OPERATION_ID:\n                        return false;\n                }\n            }\n            return true;\n        });\n    }\n    getDbEntity(qEntity) {\n        return qEntity.__driver__.dbEntity;\n    }\n    getNewEntity(qEntity, airDb) {\n        const dbEntity = qEntity.__driver__.dbEntity;\n        const entityConstructor = airDb.qApplications[dbEntity.applicationVersion.application.index].__constructors__[dbEntity.name];\n        if (!entityConstructor) {\n            return {};\n        }\n        return new entityConstructor();\n    }\n};\nQMetadataUtils = __decorate([\n    Injected()\n], QMetadataUtils);\nexport { QMetadataUtils };\n//# sourceMappingURL=QMetadataUtils.js.map","import { extend } from '@airport/direction-indicator';\nimport { EntityRelationType, SQLDataType } from '@airport/ground-control';\nimport { QAirEntityOneToManyRelation, QAirEntityRelation, QBooleanField, QDateField, QEntity, QNumberField, QOneToManyRelation, QRelation, QStringField, QUntypedField } from '@airport/tarmaq-query';\nexport function getColumnQField(entity, property, q, column) {\n    switch (column.type) {\n        case SQLDataType.ANY:\n            return new QUntypedField(column, property, q);\n        case SQLDataType.BOOLEAN:\n            return new QBooleanField(column, property, q);\n        case SQLDataType.DATE:\n            return new QDateField(column, property, q);\n        case SQLDataType.NUMBER:\n            return new QNumberField(column, property, q);\n        case SQLDataType.JSON:\n        case SQLDataType.STRING:\n            return new QStringField(column, property, q);\n        default:\n            throw new Error(`Unsupported data type for property ${entity.applicationVersion.application.name}.${entity.name}.${property.name}`);\n    }\n}\nexport function getQRelation(entity, property, q, allQApplications, applicationUtils, relationManager) {\n    const relation = property.relation[0];\n    switch (relation.relationType) {\n        case EntityRelationType.MANY_TO_ONE:\n            const relationEntity = relation.relationEntity;\n            const relationApplication = relationEntity.applicationVersion.application;\n            const qIdRelationConstructor = allQApplications[relationApplication.index]\n                .__qIdRelationConstructors__[relationEntity.index];\n            return new qIdRelationConstructor(relation.relationEntity, relation, q, applicationUtils, relationManager);\n        case EntityRelationType.ONE_TO_MANY:\n            if (entity.isAirEntity) {\n                return new QAirEntityOneToManyRelation(relation, q, applicationUtils, relationManager);\n            }\n            else {\n                return new QOneToManyRelation(relation, q, applicationUtils, relationManager);\n            }\n        default:\n            throw new Error(`Unknown EntityRelationType: ${relation.relationType}.`);\n    }\n}\nexport function getQEntityConstructor(allQApplications) {\n    // ChildQEntity refers to the constructor\n    var ChildQEntity = function (entity, applicationUtils, relationManager, nextChildJoinPosition, dbRelation, joinType) {\n        ChildQEntity.base.constructor.call(this, entity, applicationUtils, relationManager, nextChildJoinPosition, dbRelation, joinType);\n        entity.properties.forEach((property) => {\n            let qFieldOrRelation;\n            if (property.relation && property.relation.length) {\n                qFieldOrRelation = getQRelation(entity, property, this, allQApplications, applicationUtils, relationManager);\n                for (const propertyColumn of property.propertyColumns) {\n                    addColumnQField(entity, property, this, propertyColumn.column);\n                }\n            }\n            else {\n                qFieldOrRelation = addColumnQField(entity, property, this, property.propertyColumns[0].column);\n            }\n            this[property.name] = qFieldOrRelation;\n        });\n        // entity.__qConstructor__ = ChildQEntity\n    };\n    const childQEntityMethods = {\n    /*\n    yourMethodName: function() {},\n    */\n    };\n    extend(QEntity, ChildQEntity, childQEntityMethods);\n    return ChildQEntity;\n}\nexport function addColumnQField(entity, property, q, column) {\n    const qFieldOrRelation = getColumnQField(entity, property, q, column);\n    q.__driver__.allColumns[column.index]\n        = qFieldOrRelation;\n    if (column.idIndex || column.idIndex === 0) {\n        q.__driver__.idColumns[column.idIndex]\n            = qFieldOrRelation;\n    }\n    return qFieldOrRelation;\n}\nexport function getQEntityIdRelationConstructor(dbEntity) {\n    function QEntityIdRelation(entity, relation, qEntity, appliationUtils, relationManager) {\n        QEntityIdRelation.base.constructor.call(this, relation, qEntity, appliationUtils, relationManager);\n        getQEntityIdFields(this, entity, qEntity, relation.property);\n        // (<any>entity).__qConstructor__.__qIdRelationConstructor__ = QEntityIdRelation\n    }\n    const qEntityIdRelationMethods = {\n    /*\n    yourMethodName: function() {},\n    */\n    };\n    if (dbEntity.isAirEntity) {\n        extend(QAirEntityRelation, QEntityIdRelation, qEntityIdRelationMethods);\n    }\n    else {\n        extend(QRelation, QEntityIdRelation, qEntityIdRelationMethods);\n    }\n    return QEntityIdRelation;\n}\n/**\n * Set all fields behind an id relation.  For example\n *\n * QA.id\n *\n * or\n *\n * QA.rel1.id\n *\n * or\n *\n * QA.rel2.otherRel.id\n * QA.rel2.id\n *\n * @param addToObject  Object to add to (Ex: QA | QA.rel1 | QA.rel2.otherRel\n * @param relationEntity  Entity to which the fields belong (Ex: QA, QRel1, QRel2, QOtherRel)\n * @param utils\n * @param parentProperty  The parent property from which the current property was\n *    navigated to\n * @param relationColumnMap  DbColumn map for the current path of properties\n *  (QA.rel2.otherRel), keyed by the column from the One side of the relation\n */\nexport function getQEntityIdFields(addToObject, relationEntity, qEntity, parentProperty, relationColumnMap) {\n    if (!relationColumnMap) {\n        const parentRelation = parentProperty.relation[0];\n        const relationColumns = parentRelation.manyRelationColumns;\n        relationColumnMap = new Map();\n        for (const relationColumn of relationColumns) {\n            relationColumnMap.set(relationColumn.oneColumn, relationColumn.manyColumn);\n        }\n    }\n    relationEntity.properties.forEach((property) => {\n        if (!property.isId) {\n            return;\n        }\n        let qFieldOrRelation;\n        // If it's a relation property (and therefore has backing columns)\n        if (property.relation && property.relation.length) {\n            const relation = property.relation[0];\n            const relationColumns = relation.manyRelationColumns;\n            for (const relationColumn of relationColumns) {\n                const originalColumn = relationColumnMap.get(relationColumn.manyColumn);\n                // Remove the mapping of the parent relation\n                relationColumnMap.delete(relationColumn.manyColumn);\n                // And replace it with the nested relation\n                relationColumnMap.set(relationColumn.oneColumn, originalColumn);\n            }\n            qFieldOrRelation = getQEntityIdFields({}, relation.relationEntity, qEntity, parentProperty, relationColumnMap);\n        }\n        else {\n            const originalColumn = relationColumnMap.get(property.propertyColumns[0].column);\n            qFieldOrRelation = getColumnQField(relationEntity, parentProperty, qEntity, originalColumn);\n        }\n        addToObject[property.name] = qFieldOrRelation;\n    });\n    return addToObject;\n}\nexport function setQApplicationEntities(application, qApplication, allQApplications, appliationUtils, relationManager) {\n    // const entities = orderEntitiesByIdDependencies(application.currentVersion[0].applicationVersion.entities,\n    // application)\n    qApplication.__qIdRelationConstructors__ = [];\n    qApplication.__qConstructors__ = {};\n    // let haveMissingDependencies\n    // do {\n    // \thaveMissingDependencies = false\n    // NOTE: only need to compute the keys of entities for Many-to-One(s)\n    // Many-to-Ones must reference the table by primary key in order to\n    // guarantee a single record.  Any other type of join may return multiple\n    // records and is in fact a Many-to-Many\n    application.currentVersion[0].applicationVersion.entities.forEach((\n    // entities.forEach((\n    entity) => {\n        // NOTE: an @Id column is guaranteed to be present in only one property\n        for (const idColumn of entity.idColumns) {\n            if (idColumn.manyRelationColumns\n                && idColumn.manyRelationColumns.length) {\n                const oneColumn = idColumn.manyRelationColumns[0].oneColumn;\n                const relatedEntity = oneColumn.entity;\n                const relatedQApplication = allQApplications[relatedEntity.applicationVersion.application.index];\n                if (!relatedQApplication) {\n                    throw new Error(`QApplication not yet initialized for ID relation:\r\n\t\t\t\t\t${entity.name}.${oneColumn.name}\r\n\t\t\t\t\t`);\n                }\n                // const manyColumn = idColumn.manyRelationColumns[0].manyColumn\n                // if (relatedEntity.id === manyColumn.entity.id\n                // \t&& relatedEntity.applicationVersion.application.index\n                // \t=== manyColumn.entity.applicationVersion.application.index) {\n                // \tcontinue\n                // }\n                // const relatedQEntityConstructor =\n                // qApplication.__qConstructors__[relatedEntity.index] if (!relatedQEntityConstructor)\n                // { throw new Error(`QEntity not yet initialized for ID relation:\n                // ${entity.name}.${manyColumn.name} `) haveMissingDependencies = true }\n            }\n        }\n        const qIdRelationConstructor = getQEntityIdRelationConstructor(entity);\n        qApplication.__qIdRelationConstructors__[entity.index] = qIdRelationConstructor;\n        // TODO: compute many-to-many relations\n        const qConstructor = getQEntityConstructor(allQApplications);\n        qApplication.__qConstructors__[entity.index] = qConstructor;\n        if (!Object.getOwnPropertyNames(qApplication)\n            .filter(propertyName => propertyName === entity.name).length) {\n            Object.defineProperty(qApplication, entity.name, {\n                get: function () {\n                    return new this.__qConstructors__[entity.index](entity, appliationUtils, relationManager);\n                }\n            });\n        }\n    });\n    // } while (haveMissingDependencies)\n}\nexport function orderApplicationsInOrderOfPrecedence(applications) {\n    const applicationWithDepsMap = new Map();\n    const applicationsWithDeps = applications.map(application => {\n        const dependencies = new Set();\n        for (const applicationReference of application.currentVersion[0]\n            .applicationVersion.references) {\n            dependencies.add(applicationReference.referencedApplicationVersion.application.index);\n        }\n        const applicationWithDependencies = {\n            application,\n            dependencies\n        };\n        applicationWithDepsMap.set(application.index, applicationWithDependencies);\n        return applicationWithDependencies;\n    });\n    applicationsWithDeps.sort((orderedApplication1, orderedApplication2) => {\n        if (applicationDependsOn(orderedApplication1, orderedApplication2.application.index, applicationWithDepsMap)) {\n            return 1;\n        }\n        else if (applicationDependsOn(orderedApplication2, orderedApplication1.application.index, applicationWithDepsMap)) {\n            return -1;\n        }\n        return 0;\n    });\n    return applicationsWithDeps.map(applicationWithDeps => applicationWithDeps.application);\n}\nexport function applicationDependsOn(dependantApplication, dependsOnApplication_Index, applicationWithDepsMap) {\n    if (dependantApplication.dependencies.has(dependsOnApplication_Index)) {\n        return true;\n    }\n    // for(const dependencyApplication_Index of dependantApplication.dependencies) {\n    //\n    // }\n    return false;\n}\n//# sourceMappingURL=qApplicationBuilderUtils.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected, IOC } from '@airport/direction-indicator';\nimport { OperationCategory, SqlOperator } from '@airport/ground-control';\nimport { AND, ENTITY_UTILS, OR, QEntity, QOperableField, wrapPrimitive } from '@airport/tarmaq-query';\nlet QueryUtils = class QueryUtils {\n    equals(entityOrId, toObject // | IQRelation<IQ>\n    ) {\n        if (!entityOrId) {\n            throw new Error(`null entity/Id is passed into 'equals' method`);\n        }\n        const { qActor, qRepository } = this.entityUtils.ensureRepositoryAndActorJoin(toObject);\n        if (entityOrId instanceof QEntity) {\n            const relationIdEntities = this.entityUtils\n                .ensureRepositoryAndActorJoin(entityOrId);\n            return AND(qRepository.GUID.equals(relationIdEntities.qRepository.repository.GUID), qActor.GUID.equals(relationIdEntities.qActor.actor.GUID), toObject._actorRecordId.equals(entityOrId._actorRecordId));\n        }\n        else {\n            let entityId = this.validateEntityId(entityOrId);\n            return AND(qRepository.GUID.equals(entityId.repository.GUID), qActor.GUID.equals(entityId.actor.GUID), toObject._actorRecordId.equals(entityId._actorRecordId));\n        }\n    }\n    in(entitiesOrIds, toObject // | IQRelation<IQ>\n    ) {\n        if (!entitiesOrIds || !entitiesOrIds.length) {\n            throw new Error(`null entity/Id array is passed into 'in' method`);\n        }\n        let entityIds = entitiesOrIds.map(entityOrId => this.validateEntityId(entityOrId));\n        const { qActor, qRepository } = this.entityUtils.ensureRepositoryAndActorJoin(toObject);\n        const equalOperations = [];\n        for (const entityId of entityIds) {\n            equalOperations.push(AND(qRepository.GUID.equals(entityId.repository.GUID), qActor.GUID.equals(entityId.actor.GUID), toObject._actorRecordId.equals(entityId._actorRecordId)));\n        }\n        return OR(...equalOperations);\n    }\n    validateEntityId(entityId) {\n        if (typeof entityId === 'string') {\n            return this.airEntityUtils.parseEGUID(entityId);\n        }\n        else {\n            if (!entityId.repository\n                || !entityId.repository.GUID\n                || typeof entityId.repository.GUID !== 'string'\n                || !entityId.actor\n                || !entityId.actor.GUID\n                || typeof entityId.actor.GUID !== 'number'\n                || !entityId._actorRecordId\n                || typeof entityId._actorRecordId !== 'number') {\n                throw new Error(`Passed in AirEntity does not have\r\n\t\t\t\tthe necessary fields to query by id.  Expecting:\r\n\t\t\t\t\tinterface AnInterface extends AirEntity {\r\n\t\t\t\t\t\trepository: {\r\n\t\t\t\t\t\t\tGUID: string\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tactor: {\r\n\t\t\t\t\t\t\tGUID: string\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t_actorRecordId: number\r\n\t\t\t\t\t}\r\n\t\t\t\t\t`);\n            }\n            return entityId;\n        }\n    }\n    whereClauseToJSON(whereClause, columnAliases) {\n        if (!whereClause) {\n            return null;\n        }\n        let operation = whereClause;\n        let jsonOperation = {\n            c: operation.c,\n            o: operation.o\n        };\n        switch (operation.c) {\n            case OperationCategory.LOGICAL:\n                let logicalOperation = operation;\n                let jsonLogicalOperation = jsonOperation;\n                switch (operation.o) {\n                    case SqlOperator.NOT:\n                        jsonLogicalOperation.v = this.whereClauseToJSON(logicalOperation.v, columnAliases);\n                        break;\n                    case SqlOperator.AND:\n                    case SqlOperator.OR:\n                        jsonLogicalOperation.v = logicalOperation.v.map((value) => this.whereClauseToJSON(value, columnAliases));\n                        break;\n                    default:\n                        throw new Error(`Unsupported logical operation '${operation.o}'`);\n                }\n                break;\n            case OperationCategory.FUNCTION:\n                // TODO: verify that cast of Q object is valid\n                let functionOperation = operation;\n                let query = functionOperation.getQuery();\n                let jsonQuery = IOC.getSync(ENTITY_UTILS).getTreeQuery(query, columnAliases.entityAliases).toJSON(this, this.fieldUtils, this.relationManager);\n                jsonOperation = functionOperation.toJSON(jsonQuery);\n                break;\n            case OperationCategory.BOOLEAN:\n            case OperationCategory.DATE:\n            case OperationCategory.NUMBER:\n            case OperationCategory.STRING:\n            case OperationCategory.UNTYPED:\n                let valueOperation = operation;\n                // All Non logical or exists operations are value operations (equals, IS_NULL, LIKE,\n                // etc.)\n                let jsonValueOperation = jsonOperation;\n                jsonValueOperation.l = this.convertLRValue(valueOperation.l, columnAliases);\n                let rValue = valueOperation.r;\n                if (rValue instanceof Array) {\n                    jsonValueOperation.r = rValue.map((anRValue) => {\n                        return this.convertLRValue(anRValue, columnAliases);\n                    });\n                }\n                else {\n                    jsonValueOperation.r = this.convertLRValue(rValue, columnAliases);\n                }\n                break;\n        }\n        return jsonOperation;\n    }\n    convertLRValue(value, columnAliases) {\n        value = wrapPrimitive(value);\n        switch (typeof value) {\n            case 'undefined':\n                throw new Error(`'undefined' is not a valid L or R value`);\n            default:\n                if (value instanceof QOperableField) {\n                    return value.toJSON(columnAliases, false, this, this.fieldUtils, this.relationManager);\n                } // Must be a Field Query\n                else {\n                    let rawFieldQuery = value;\n                    return this.fieldUtils.getFieldQueryJson(rawFieldQuery, columnAliases.entityAliases, this);\n                }\n        }\n    }\n};\n__decorate([\n    Inject()\n], QueryUtils.prototype, \"entityUtils\", void 0);\n__decorate([\n    Inject()\n], QueryUtils.prototype, \"fieldUtils\", void 0);\n__decorate([\n    Inject()\n], QueryUtils.prototype, \"relationManager\", void 0);\n__decorate([\n    Inject()\n], QueryUtils.prototype, \"airEntityUtils\", void 0);\nQueryUtils = __decorate([\n    Injected()\n], QueryUtils);\nexport { QueryUtils };\n//# sourceMappingURL=QueryUtils.js.map","import { AND, NOT, OR, bool, date, num, str, wrapPrimitive, ABS, ADD, AVG, CONCAT, COUNT, DISTINCT, DIVIDE, EXISTS, FORMAT, INTERSECT, LCASE, LEN, MAX, MID, MIN, MINUS, MODULUS, MULTIPLY, NOW, REPLACE, ROUND, SUBTRACT, SUM, TRIM, UCASE, UNION, UNION_ALL } from \"@airport/tarmaq-query\";\nexport const databaseState = {\n    applications: [],\n    entityMap: new Map(),\n    functions: {\n        ABS,\n        ADD,\n        AVG,\n        CONCAT,\n        COUNT,\n        DISTINCT,\n        DIVIDE,\n        EXISTS,\n        FORMAT,\n        INTERSECT,\n        LCASE,\n        LEN,\n        ROUND,\n        MAX,\n        MID,\n        MIN,\n        MINUS,\n        MODULUS,\n        MULTIPLY,\n        NOW,\n        REPLACE,\n        SUBTRACT,\n        SUM,\n        TRIM,\n        UCASE,\n        UNION,\n        UNION_ALL,\n        // logical operators\n        AND,\n        NOT,\n        OR,\n        // primitive wrappers\n        bool,\n        date,\n        num,\n        str,\n        wrapPrimitive,\n    },\n    qApplications: [],\n    QM: {},\n};\n//# sourceMappingURL=databaseState.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from \"@airport/direction-indicator\";\nimport { databaseState as theDatabaseState } from \"./databaseState\";\nlet DatabaseStore = class DatabaseStore {\n    constructor() {\n        this.databaseState = theDatabaseState;\n    }\n    get applications() {\n        return this.databaseState.applications;\n    }\n    get entityMap() {\n        return this.databaseState.entityMap;\n    }\n    get functions() {\n        return this.databaseState.functions;\n    }\n    get qApplications() {\n        return this.databaseState.qApplications;\n    }\n    get QM() {\n        return this.databaseState.QM;\n    }\n};\nDatabaseStore = __decorate([\n    Injected()\n], DatabaseStore);\nexport { DatabaseStore };\n//# sourceMappingURL=DatabaseStore.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet RelationManager = class RelationManager {\n    getPositionAlias(rootEntityPrefix, fromClausePosition) {\n        return `${rootEntityPrefix}_${fromClausePosition.join('_')}`;\n    }\n    getAlias(jsonRelation) {\n        return this.getPositionAlias(jsonRelation.rep, jsonRelation.fromClausePosition);\n    }\n    getParentAlias(jsonRelation) {\n        let fromClausePosition = jsonRelation.fromClausePosition;\n        if (fromClausePosition.length === 0) {\n            throw new Error(`Cannot find alias of a parent entity for the root entity`);\n        }\n        return this.getPositionAlias(jsonRelation.rep, fromClausePosition.slice(0, fromClausePosition.length - 1));\n    }\n    createRelatedQEntity(joinRelation, context) {\n        const dbEntity = this.applicationUtils.getDbEntity(joinRelation.si, joinRelation.ti);\n        let QEntityConstructor = this.applicationUtils.getQEntityConstructor(dbEntity);\n        return new QEntityConstructor(dbEntity, this.applicationUtils, this, joinRelation.fromClausePosition, dbEntity.relations[joinRelation.ri], joinRelation.jt);\n    }\n    getNextChildJoinPosition(joinParentDriver) {\n        let nextChildJoinPosition = joinParentDriver.fromClausePosition.slice();\n        nextChildJoinPosition.push(++joinParentDriver.currentChildIndex);\n        return nextChildJoinPosition;\n    }\n};\n__decorate([\n    Inject()\n], RelationManager.prototype, \"applicationUtils\", void 0);\nRelationManager = __decorate([\n    Injected()\n], RelationManager);\nexport { RelationManager };\n//# sourceMappingURL=RelationManager.js.map","import { airEntity } from '@airport/ground-control';\nexport async function getSysWideOpId(airDb, sequenceGenerator) {\n    const sequences = await getSysWideOpIds(1, airDb, sequenceGenerator);\n    return sequences[0];\n}\nexport async function getSysWideOpIds(numSequencesNeeded, airportDatabase, sequenceGenerator) {\n    if (!numSequencesNeeded) {\n        return [];\n    }\n    const sysWideOpIdGeneratedColumn = airportDatabase.QM[airEntity.SYS_WIDE_OP_ID_APPLICATION]\n        .__dbApplication__.currentVersion[0].applicationVersion\n        .entityMapByName[airEntity.SYS_WIDE_OP_ID_ENTITY]\n        .columnMap['SYSTEM_WIDE_OPERATION_LID'];\n    const generatedNumWrapper = await sequenceGenerator\n        .generateSequenceNumbers([sysWideOpIdGeneratedColumn], [numSequencesNeeded]);\n    return generatedNumWrapper[0];\n}\n//# sourceMappingURL=SystemWideOperationIds.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from \"@airport/direction-indicator\";\nlet Utils = class Utils {\n    strsToNums(strings) {\n        return strings.map(str => parseInt(str));\n    }\n    objectExists(object) {\n        return object !== null && object !== undefined;\n    }\n    valuesEqual(value1, value2, checkChildObjects = false) {\n        if (typeof value1 === 'object') {\n            if (value1 instanceof Date) {\n                if (value2 instanceof Date) {\n                    return value1.getTime() === value2.getTime();\n                }\n                else {\n                    return false;\n                }\n            }\n            else {\n                if (typeof value2 !== 'object') {\n                    return false;\n                }\n                if (!checkChildObjects) {\n                    // Skip child objects\n                    return true;\n                }\n                let checkedKeys = {};\n                for (let key in value1) {\n                    checkedKeys[key] = true;\n                    if (!this.valuesEqual(value1[key], value2[key], checkChildObjects)) {\n                        return false;\n                    }\n                }\n                for (let key in value2) {\n                    if (!checkedKeys[key]) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n        }\n        if (!value1) {\n            if (value1 === '') {\n                return value2 === '';\n            }\n            else if (value1 === false) {\n                return value2 === false;\n            }\n            else if (value1 === 0) {\n                return value2 === 0;\n            }\n            if (value2 === '' || value2 === false || value2 === 0) {\n                return false;\n            }\n            // treat undefined and null as same value\n            return (!value2);\n        }\n        if (!value2) {\n            return false;\n        }\n        return value1 === value2;\n    }\n    compareNumbers(number1, number2) {\n        if (number1 < number2) {\n            return -1;\n        }\n        if (number1 > number2) {\n            return 1;\n        }\n        return 0;\n    }\n};\nUtils = __decorate([\n    Injected()\n], Utils);\nexport { Utils };\n//# sourceMappingURL=Utils.js.map","import { lib } from \"@airport/direction-indicator\";\nexport const airTrafficControl = lib('air-traffic-control');\n//# sourceMappingURL=library.js.map","import { Utils } from \"./implementation/Utils\";\nimport { QueryUtils } from \"./implementation/utils/QueryUtils\";\nimport { airTrafficControl } from \"./library\";\nimport { ENTITY_UTILS, QUERY_UTILS } from \"@airport/tarmaq-query\";\n// Separating core-tokens from tokens removes circular dependencies\n// at code initialization time\nexport const UTILS = airTrafficControl.token({\n    class: Utils,\n    interface: 'IUtils',\n    token: 'UTILS'\n});\nENTITY_UTILS.setDependencies({\n    utils: UTILS\n});\nQUERY_UTILS.setClass(QueryUtils);\n//# sourceMappingURL=core-tokens.js.map","import { AIR_ENTITY_UTILS } from '@airport/aviation-communication';\nimport { DB_APPLICATION_UTILS, ENTITY_STATE_MANAGER, TRANSACTIONAL_CONNECTOR, UPDATE_CACHE_MANAGER } from '@airport/ground-control';\nimport { ENTITY_UTILS, QUERY_UTILS } from '@airport/tarmaq-query';\nimport { DATABASE_FACADE, LOOKUP, NON_ENTITY_FIND, NON_ENTITY_FIND_ONE, NON_ENTITY_SEARCH, NON_ENTITY_SEARCH_ONE, QUERY_FACADE, } from '@airport/tarmaq-dao';\nimport { QMetadataUtils } from './implementation/utils/QMetadataUtils';\nimport { ApplicationUtils } from './implementation/utils/ApplicationUtils';\nimport { FieldUtils } from './implementation/utils/FieldUtils';\nimport { DatabaseStore } from './implementation/DatabaseStore';\nimport { airTrafficControl } from './library';\nimport { RelationManager } from './implementation/RelationManager';\nimport { UTILS } from './core-tokens';\nexport const AIRPORT_DATABASE = airTrafficControl.token({\n    class: null,\n    interface: 'IAirportDatabase',\n    token: 'AIRPORT_DATABASE'\n});\nexport const APPLICATION_UTILS = airTrafficControl.token({\n    class: ApplicationUtils,\n    interface: 'IApplicationUtils',\n    token: 'APPLICATION_UTILS'\n});\nexport const DATABASE_STORE = airTrafficControl.token({\n    class: DatabaseStore,\n    interface: 'IDatabaseState',\n    token: 'DATABASE_STORE'\n});\nexport const FIELD_UTILS = airTrafficControl.token({\n    class: FieldUtils,\n    interface: 'IFieldUtils',\n    token: 'FIELD_UTILS'\n});\nexport const Q_METADATA_UTILS = airTrafficControl.token({\n    class: QMetadataUtils,\n    interface: 'IQMetadataUtils',\n    token: 'Q_METADATA_UTILS'\n});\nexport const RELATION_MANAGER = airTrafficControl.token({\n    class: RelationManager,\n    interface: 'IRelationManager',\n    token: 'RELATION_MANAGER'\n});\nexport const REPOSITORY_LOADER = airTrafficControl.token({\n    class: null,\n    interface: 'IRepositoryLoader',\n    token: 'REPOSITORY_LOADER'\n});\nAIRPORT_DATABASE.setDependencies({\n    appliationUtils: APPLICATION_UTILS,\n    databaseFacade: DATABASE_FACADE,\n    databaseStore: DATABASE_STORE,\n    dbApplicationUtils: DB_APPLICATION_UTILS,\n    find: NON_ENTITY_FIND,\n    findOne: NON_ENTITY_FIND_ONE,\n    relationManager: RELATION_MANAGER,\n    search: NON_ENTITY_SEARCH,\n    searchOne: NON_ENTITY_SEARCH_ONE\n});\nAPPLICATION_UTILS.setDependencies({\n    airportDatabase: AIRPORT_DATABASE,\n    entityStateManager: ENTITY_STATE_MANAGER,\n    utils: UTILS\n});\nDATABASE_FACADE.setDependencies({\n    applicationUtils: APPLICATION_UTILS,\n    entityStateManager: ENTITY_STATE_MANAGER,\n    transactionalConnector: TRANSACTIONAL_CONNECTOR,\n    updateCacheManager: UPDATE_CACHE_MANAGER\n});\nFIELD_UTILS.setDependencies({\n    relationManager: RELATION_MANAGER\n});\nLOOKUP.setDependencies({\n    entityUtils: ENTITY_UTILS,\n    queryFacade: QUERY_FACADE\n});\nQUERY_FACADE.setDependencies({\n    fieldUtils: FIELD_UTILS,\n    queryUtils: QUERY_UTILS,\n    relationManager: RELATION_MANAGER,\n    transactionalConnector: TRANSACTIONAL_CONNECTOR\n});\nQUERY_UTILS.setDependencies({\n    entityUtils: ENTITY_UTILS,\n    fieldUtils: FIELD_UTILS,\n    relationManager: RELATION_MANAGER,\n    airEntityUtils: AIR_ENTITY_UTILS\n});\nRELATION_MANAGER.setDependencies({\n    applicationUtils: APPLICATION_UTILS\n});\nUPDATE_CACHE_MANAGER.setDependencies({\n    applicationUtils: APPLICATION_UTILS,\n    entityStateManager: ENTITY_STATE_MANAGER,\n});\n//# sourceMappingURL=tokens.js.map","export * from './definition/utils/IQMetadataUtils';\nexport * from './definition/utils/Utils';\nexport * from './definition/AirportDatabase';\nexport * from './definition/DatabaseState';\nexport * from './definition/RepositoryLoader';\nexport * from './implementation/utils/ApplicationUtils';\nexport * from './implementation/utils/EntityUtils';\nexport * from './implementation/utils/FieldUtils';\nexport * from './implementation/utils/QMetadataUtils';\nexport * from './implementation/utils/qApplicationBuilderUtils';\nexport * from './implementation/utils/QueryUtils';\nexport * from './implementation/databaseState';\nexport * from './implementation/DatabaseStore';\nexport * from './implementation/RelationManager';\nexport * from './implementation/SystemWideOperationIds';\nexport * from './implementation/Utils';\nexport * from './core-tokens';\nexport * from './tokens';\nimport { airApi } from '@airport/aviation-communication';\nimport { DEPENDENCY_INJECTION } from '@airport/direction-indicator';\nimport { AIRPORT_DATABASE } from './tokens';\nairApi.setQApplication = function (qApplication) {\n    DEPENDENCY_INJECTION.db().eventuallyGet(AIRPORT_DATABASE).then((airportDatabase) => {\n        airportDatabase.setQApplication(qApplication);\n    });\n};\n//# sourceMappingURL=index.js.map","import { lib } from '@airport/direction-indicator';\nexport const trafficPattern = lib('traffic-pattern');\n//# sourceMappingURL=common-tokens.js.map","import { DomainDao } from '../dao/DomainDao';\nimport { ApplicationColumnDao } from '../dao/ApplicationColumnDao';\nimport { ApplicationDao } from '../dao/ApplicationDao';\nimport { ApplicationEntityDao } from '../dao/ApplicationEntityDao';\nimport { ApplicationPropertyColumnDao } from '../dao/ApplicationPropertyColumnDao';\nimport { ApplicationPropertyDao } from '../dao/ApplicationPropertyDao';\nimport { ApplicationReferenceDao } from '../dao/ApplicationReferenceDao';\nimport { ApplicationRelationColumnDao } from '../dao/ApplicationRelationColumnDao';\nimport { ApplicationRelationDao } from '../dao/ApplicationRelationDao';\nimport { ApplicationVersionDao } from '../dao/ApplicationVersionDao';\nimport { AIRPORT_DATABASE } from '@airport/air-traffic-control';\nimport { trafficPattern } from './common-tokens';\nexport const DOMAIN_DAO = trafficPattern.token({\n    class: DomainDao,\n    interface: 'IDomainDao',\n    token: 'DOMAIN_DAO'\n});\nexport const APPLICATION_COLUMN_DAO = trafficPattern.token({\n    class: ApplicationColumnDao,\n    interface: 'IApplicationColumnDao',\n    token: 'APPLICATION_COLUMN_DAO'\n});\nexport const APPLICATION_DAO = trafficPattern.token({\n    class: ApplicationDao,\n    interface: 'IApplicationDao',\n    token: 'APPLICATION_DAO'\n});\nexport const APPLICATION_ENTITY_DAO = trafficPattern.token({\n    class: ApplicationEntityDao,\n    interface: 'IApplicationEntityDao',\n    token: 'APPLICATION_ENTITY_DAO'\n});\nexport const APPLICATION_PROPERTY_COLUMN_DAO = trafficPattern.token({\n    class: ApplicationPropertyColumnDao,\n    interface: 'IApplicationPropertyColumnDao',\n    token: 'APPLICATION_PROPERTY_COLUMN_DAO'\n});\nexport const APPLICATION_PROPERTY_DAO = trafficPattern.token({\n    class: ApplicationPropertyDao,\n    interface: 'IApplicationPropertyDao',\n    token: 'APPLICATION_PROPERTY_DAO'\n});\nexport const APPLICATION_REFERENCE_DAO = trafficPattern.token({\n    class: ApplicationReferenceDao,\n    interface: 'IApplicationReferenceDao',\n    token: 'APPLICATION_REFERENCE_DAO'\n});\nexport const APPLICATION_RELATION_COLUMN_DAO = trafficPattern.token({\n    class: ApplicationRelationColumnDao,\n    interface: 'IApplicationRelationColumnDao',\n    token: 'APPLICATION_RELATION_COLUMN_DAO'\n});\nexport const APPLICATION_RELATION_DAO = trafficPattern.token({\n    class: ApplicationRelationDao,\n    interface: 'IApplicationRelationDao',\n    token: 'APPLICATION_RELATION_DAO'\n});\nexport const APPLICATION_VERSION_DAO = trafficPattern.token({\n    class: ApplicationVersionDao,\n    interface: 'IApplicationVersionDao',\n    token: 'APPLICATION_VERSION_DAO'\n});\nAPPLICATION_DAO.setDependencies({\n    airportDatabase: AIRPORT_DATABASE\n});\n//# sourceMappingURL=runtime-tokens.js.map","import { lib } from '@airport/direction-indicator';\nexport const holdingPattern = lib('holding-pattern');\nexport const REPOSITORY_API = holdingPattern.token({\n    class: null,\n    interface: 'RepositoryApi',\n    token: 'REPOSITORY_API'\n});\n//# sourceMappingURL=common-tokens.js.map","import { holdingPattern } from \"../to_be_generated/common-tokens\";\nexport const REPOSITORY_MANAGER = holdingPattern.token({\n    class: null,\n    interface: 'IRepositoryManager',\n    token: 'REPOSITORY_MANAGER'\n});\n//# sourceMappingURL=core-tokens.js.map","export var UpdateState;\n(function (UpdateState) {\n    UpdateState[\"GO_ONLINE\"] = \"GO_ONLINE\";\n    UpdateState[\"REMOTE\"] = \"REMOTE\";\n    UpdateState[\"LOCAL\"] = \"LOCAL\";\n})(UpdateState || (UpdateState = {}));\n//# sourceMappingURL=UpdateState.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbNumber, DbString, Entity, GeneratedValue, Id, JoinColumn, ManyToOne, OneToMany, SequenceGenerator, Table } from '@airport/tarmaq-entity';\n/**\n * Marks a group of mutation history changes.\n */\nlet OperationHistory = class OperationHistory {\n    constructor() {\n        this.recordHistory = [];\n    }\n};\n__decorate([\n    GeneratedValue(),\n    SequenceGenerator({ allocationSize: 600 }),\n    Id(),\n    Column({ name: 'OPERATION_HISTORY_LID' })\n], OperationHistory.prototype, \"_localId\", void 0);\n__decorate([\n    Column({ name: 'ORDER_NUMBER', nullable: false }),\n    DbNumber()\n], OperationHistory.prototype, \"orderNumber\", void 0);\n__decorate([\n    Column({ name: 'CHANGE_TYPE', nullable: false }),\n    DbString()\n], OperationHistory.prototype, \"changeType\", void 0);\n__decorate([\n    Column({ name: 'SYSTEM_WIDE_OPERATION_LID', nullable: false }),\n    DbNumber()\n], OperationHistory.prototype, \"systemWideOperationId\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'APPLICATION_ENTITY_LID',\n        referencedColumnName: 'APPLICATION_ENTITY_LID', nullable: false\n    })\n], OperationHistory.prototype, \"entity\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'ACTOR_LID',\n        referencedColumnName: 'ACTOR_LID',\n        nullable: false\n    })\n], OperationHistory.prototype, \"actor\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'REPOSITORY_TRANSACTION_HISTORY_LID',\n        referencedColumnName: 'REPOSITORY_TRANSACTION_HISTORY_LID',\n        nullable: false\n    })\n], OperationHistory.prototype, \"repositoryTransactionHistory\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'operationHistory' })\n], OperationHistory.prototype, \"recordHistory\", void 0);\nOperationHistory = __decorate([\n    Entity(),\n    Table({ name: 'REPOSITORY_OPERATION_HISTORY' })\n], OperationHistory);\nexport { OperationHistory };\n//# sourceMappingURL=OperationHistory.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbNumber, Entity, GeneratedValue, Id, JoinColumn, ManyToOne, OneToMany, SequenceGenerator, Table, Transient } from '@airport/tarmaq-entity';\nlet RecordHistory = class RecordHistory {\n    constructor() {\n        this.newValues = [];\n        this.oldValues = [];\n    }\n};\n__decorate([\n    Id(),\n    GeneratedValue(),\n    SequenceGenerator({ allocationSize: 2000 }),\n    Column({ name: 'RECORD_HISTORY_LID' })\n], RecordHistory.prototype, \"_localId\", void 0);\n__decorate([\n    Column({ name: 'ACTOR_RECORD_ID', nullable: false }),\n    DbNumber()\n], RecordHistory.prototype, \"_actorRecordId\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'ACTOR_LID',\n        referencedColumnName: 'ACTOR_LID', nullable: false\n    })\n], RecordHistory.prototype, \"actor\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'OPERATION_HISTORY_LID',\n        referencedColumnName: 'OPERATION_HISTORY_LID',\n        nullable: false\n    })\n], RecordHistory.prototype, \"operationHistory\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'recordHistory' })\n], RecordHistory.prototype, \"newValues\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'recordHistory' })\n], RecordHistory.prototype, \"oldValues\", void 0);\n__decorate([\n    Transient()\n], RecordHistory.prototype, \"tableColumnMap\", void 0);\nRecordHistory = __decorate([\n    Entity(),\n    Table({\n        name: 'REPOSITORY_RECORD_HISTORY',\n        indexes: [{\n                name: 'RCRD_HSTR_TO_OPRTN_HSTR_FX',\n                columnList: [\n                    'REPOSITORY_OPERATION_HISTORY_LID'\n                ],\n                unique: false\n            }]\n    })\n], RecordHistory);\nexport { RecordHistory };\n//# sourceMappingURL=RecordHistory.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbAny, DbNumber, Entity, Id, JoinColumn, ManyToOne, Table } from \"@airport/tarmaq-entity\";\n/**\n * Currently, syncing databases are always SqLite dbs.  This means\n * we don't need to store types for values.  If a need arises type\n * specific FieldChange classes can always be added.  Having\n * VARCHAR and NUMBER should suffice for other db implementations.\n * NUMBER covers (dates, booleans and numbers).  Maybe REALs will\n * also be required.\n */\nlet RecordHistoryNewValue = class RecordHistoryNewValue {\n};\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({\n        name: \"REPOSITORY_RECORD_HISTORY_LID\",\n        referencedColumnName: \"RECORD_HISTORY_LID\", nullable: false\n    })\n], RecordHistoryNewValue.prototype, \"recordHistory\", void 0);\n__decorate([\n    Id(),\n    Column({ name: \"COLUMN_INDEX\", nullable: false }),\n    DbNumber()\n], RecordHistoryNewValue.prototype, \"columnIndex\", void 0);\n__decorate([\n    Column({ name: \"NEW_VALUE\" }),\n    DbAny()\n], RecordHistoryNewValue.prototype, \"newValue\", void 0);\nRecordHistoryNewValue = __decorate([\n    Entity(),\n    Table({\n        name: \"REPOSITORY_RECORD_HISTORY_NEW_VALUES\",\n        // primaryKey: [\n        // \t\"REPOSITORY_RECORD_HISTORY_LID\",\n        // \t\"COLUMN_INDEX\"\n        // ]\n    })\n], RecordHistoryNewValue);\nexport { RecordHistoryNewValue };\n//# sourceMappingURL=RecordHistoryNewValue.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbAny, DbNumber, Entity, Id, JoinColumn, ManyToOne, Table } from \"@airport/tarmaq-entity\";\n/**\n * Currently, syncing databases are always SqLite dbs.  This means\n * we don't need to store types for values.  If a need arises type\n * specific FieldChange classes can always be added.  Having\n * VARCHAR and NUMBER should suffice for other db implementations.\n * NUMBER covers (dates, booleans and numbers).  Maybe REALs will\n * also be required.\n */\nlet RecordHistoryOldValue = class RecordHistoryOldValue {\n};\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({\n        name: \"REPOSITORY_RECORD_HISTORY_LID\",\n        referencedColumnName: \"RECORD_HISTORY_LID\", nullable: false\n    })\n], RecordHistoryOldValue.prototype, \"recordHistory\", void 0);\n__decorate([\n    Id(),\n    Column({ name: \"COLUMN_INDEX\", nullable: false }),\n    DbNumber()\n], RecordHistoryOldValue.prototype, \"columnIndex\", void 0);\n__decorate([\n    Column({ name: \"OLD_VALUE\" }),\n    DbAny()\n], RecordHistoryOldValue.prototype, \"oldValue\", void 0);\nRecordHistoryOldValue = __decorate([\n    Entity(),\n    Table({\n        name: \"REPOSITORY_RECORD_HISTORY_OLD_VALUES\",\n        // primaryKey: [\n        // \t\"REPOSITORY_RECORD_HISTORY_LID\",\n        // \t\"COLUMN_INDEX\"\n        // ]\n    })\n], RecordHistoryOldValue);\nexport { RecordHistoryOldValue };\n//# sourceMappingURL=RecordHistoryOldValue.js.map","export var RepositoryTransactionType;\n(function (RepositoryTransactionType) {\n    RepositoryTransactionType[\"LOCAL\"] = \"LOCAL\";\n    RepositoryTransactionType[\"REMOTE\"] = \"REMOTE\";\n    RepositoryTransactionType[\"REMOTE_REFERENCE\"] = \"REMOTE_REFERENCE\";\n})(RepositoryTransactionType || (RepositoryTransactionType = {}));\n//# sourceMappingURL=RepositoryTransactionType.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbBoolean, DbNumber, DbString, Entity, GeneratedValue, Id, JoinColumn, ManyToOne, OneToMany, SequenceGenerator, Table, } from '@airport/tarmaq-entity';\nimport { RepositoryTransactionType } from './RepositoryTransactionType';\nlet RepositoryTransactionHistory = class RepositoryTransactionHistory {\n    constructor(data) {\n        this.repositoryTransactionType = RepositoryTransactionType.LOCAL;\n        this.operationHistory = [];\n        if (!data) {\n            return;\n        }\n        this._localId = data._localId;\n        this.transactionHistory = data.transactionHistory;\n        this.repository = data.repository;\n        this.saveTimestamp = data.saveTimestamp;\n        this.operationHistory = data.operationHistory;\n    }\n};\n__decorate([\n    GeneratedValue(),\n    Id(),\n    SequenceGenerator({ allocationSize: 200 }),\n    Column({ name: 'REPOSITORY_TRANSACTION_HISTORY_LID' })\n], RepositoryTransactionHistory.prototype, \"_localId\", void 0);\n__decorate([\n    Column({ name: 'REPOSITORY_TRANSACTION_TYPE', nullable: false }),\n    DbString()\n], RepositoryTransactionHistory.prototype, \"repositoryTransactionType\", void 0);\n__decorate([\n    Column({ name: 'SAVE_TIMESTAMP', nullable: false }),\n    DbNumber()\n], RepositoryTransactionHistory.prototype, \"saveTimestamp\", void 0);\n__decorate([\n    Column({ name: 'SYNC_TIMESTAMP' }),\n    DbNumber()\n], RepositoryTransactionHistory.prototype, \"syncTimestamp\", void 0);\n__decorate([\n    Column({ name: \"GUID\", nullable: false }),\n    DbString()\n], RepositoryTransactionHistory.prototype, \"GUID\", void 0);\n__decorate([\n    Column({ name: \"IS_REPOSITORY_CREATION\", nullable: false }),\n    DbBoolean()\n], RepositoryTransactionHistory.prototype, \"isRepositoryCreation\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'REPOSITORY_LID',\n        referencedColumnName: 'REPOSITORY_LID', nullable: false\n    })\n], RepositoryTransactionHistory.prototype, \"repository\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'TRANSACTION_HISTORY_LID',\n        referencedColumnName: 'TRANSACTION_HISTORY_LID', nullable: false\n    })\n], RepositoryTransactionHistory.prototype, \"transactionHistory\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'repositoryTransactionHistory' })\n], RepositoryTransactionHistory.prototype, \"operationHistory\", void 0);\nRepositoryTransactionHistory = __decorate([\n    Entity(),\n    Table({ name: 'REPOSITORY_TRANSACTION_HISTORY' })\n], RepositoryTransactionHistory);\nexport { RepositoryTransactionHistory };\n//# sourceMappingURL=RepositoryTransactionHistory.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbString, Entity, GeneratedValue, Id, OneToMany, SequenceGenerator, Table, Transient } from '@airport/tarmaq-entity';\nimport { SyncApplicationMap } from '@airport/ground-control';\nlet TransactionHistory = class TransactionHistory {\n    constructor() {\n        this.repositoryTransactionHistories = [];\n        this.repositoryTransactionHistoryMap = {};\n        this.applicationMap = new SyncApplicationMap();\n        this.allOperationHistory = [];\n        this.allRecordHistory = [];\n        this.allRecordHistoryNewValues = [];\n        this.allRecordHistoryOldValues = [];\n    }\n};\n__decorate([\n    GeneratedValue(),\n    Id(),\n    SequenceGenerator({ allocationSize: 100 }),\n    Column({ name: 'TRANSACTION_HISTORY_LID' })\n], TransactionHistory.prototype, \"_localId\", void 0);\n__decorate([\n    Column({ name: 'TRANSACTION_TYPE', nullable: false }),\n    DbString()\n], TransactionHistory.prototype, \"transactionType\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'transactionHistory' })\n], TransactionHistory.prototype, \"repositoryTransactionHistories\", void 0);\n__decorate([\n    Transient()\n], TransactionHistory.prototype, \"repositoryTransactionHistoryMap\", void 0);\n__decorate([\n    Transient()\n], TransactionHistory.prototype, \"applicationMap\", void 0);\n__decorate([\n    Transient()\n], TransactionHistory.prototype, \"allOperationHistory\", void 0);\n__decorate([\n    Transient()\n], TransactionHistory.prototype, \"allRecordHistory\", void 0);\n__decorate([\n    Transient()\n], TransactionHistory.prototype, \"allRecordHistoryNewValues\", void 0);\n__decorate([\n    Transient()\n], TransactionHistory.prototype, \"allRecordHistoryOldValues\", void 0);\nTransactionHistory = __decorate([\n    Entity(),\n    Table({ name: 'TRANSACTION_HISTORY' })\n], TransactionHistory);\nexport { TransactionHistory };\n//# sourceMappingURL=TransactionHistory.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbNumber, DbString, Entity, GeneratedValue, Id, JoinColumn, ManyToOne, } from '@airport/tarmaq-entity';\nlet Actor = class Actor {\n};\n__decorate([\n    Id(),\n    GeneratedValue(),\n    DbNumber(),\n    Column({ name: 'ACTOR_LID' })\n], Actor.prototype, \"_localId\", void 0);\n__decorate([\n    Column({ name: 'GUID', nullable: false }),\n    DbString()\n], Actor.prototype, \"GUID\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'USER_ACCOUNT_LID',\n        referencedColumnName: 'USER_ACCOUNT_LID',\n        nullable: false\n    })\n], Actor.prototype, \"userAccount\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'TERMINAL_LID',\n        referencedColumnName: 'TERMINAL_LID',\n        nullable: false\n    })\n], Actor.prototype, \"terminal\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: \"APPLICATION_INDEX\",\n        referencedColumnName: \"APPLICATION_INDEX\"\n    })\n], Actor.prototype, \"application\", void 0);\nActor = __decorate([\n    Entity()\n], Actor);\nexport { Actor };\n//# sourceMappingURL=Actor.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbDate, DbNumber, GeneratedValue, Id, JoinColumn, ManyToOne, MappedSuperclass, Transient } from '@airport/tarmaq-entity';\nimport { IOC } from '@airport/direction-indicator';\nimport { AIR_ENTITY_UTILS } from '@airport/aviation-communication';\nlet AirEntity = class AirEntity {\n    constructor(entityGUID) {\n        // Currently TypeScript does not support optional getters/setters\n        // this is a workaround\n        delete this.id;\n        Object.defineProperty(this, 'id', {\n            get() {\n                return IOC.getSync(AIR_ENTITY_UTILS).encodeId(this);\n            },\n            set(idString) {\n                IOC.getSync(AIR_ENTITY_UTILS).setId(idString, this);\n            }\n        });\n        delete this.isNew;\n        Object.defineProperty(this, 'isNew', {\n            get() {\n                return !!this._actorRecordId;\n            }\n        });\n        delete this.createdBy;\n        Object.defineProperty(this, 'createdBy', {\n            get() {\n                return this.actor.userAccount;\n            }\n        });\n        this.id = entityGUID;\n    }\n};\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({\n        name: 'REPOSITORY_LID',\n        referencedColumnName: 'REPOSITORY_LID',\n        nullable: false\n    })\n], AirEntity.prototype, \"repository\", void 0);\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({\n        name: 'ACTOR_LID',\n        referencedColumnName: 'ACTOR_LID',\n        nullable: false\n    })\n], AirEntity.prototype, \"actor\", void 0);\n__decorate([\n    Id(),\n    Column({ name: 'ACTOR_RECORD_ID', nullable: false }),\n    GeneratedValue()\n], AirEntity.prototype, \"_actorRecordId\", void 0);\n__decorate([\n    Column({ name: 'AGE_SUITABILITY', nullable: false }),\n    DbNumber()\n], AirEntity.prototype, \"ageSuitability\", void 0);\n__decorate([\n    Column({ name: 'CREATED_AT' }),\n    DbDate()\n], AirEntity.prototype, \"createdAt\", void 0);\n__decorate([\n    Column({ name: 'SYSTEM_WIDE_OPERATION_LID', nullable: false })\n], AirEntity.prototype, \"systemWideOperationId\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'ORIGINAL_REPOSITORY_LID',\n        referencedColumnName: 'REPOSITORY_LID'\n    })\n], AirEntity.prototype, \"originalRepository\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'ORIGINAL_ACTOR_LID',\n        referencedColumnName: 'ACTOR_LID'\n    })\n], AirEntity.prototype, \"originalActor\", void 0);\n__decorate([\n    Column({ name: 'ORIGINAL_ACTOR_RECORD_ID' })\n], AirEntity.prototype, \"originalActorRecordId\", void 0);\n__decorate([\n    Transient()\n], AirEntity.prototype, \"createdBy\", void 0);\n__decorate([\n    Transient()\n], AirEntity.prototype, \"isNew\", void 0);\n__decorate([\n    Transient()\n], AirEntity.prototype, \"id\", void 0);\nAirEntity = __decorate([\n    MappedSuperclass()\n], AirEntity);\nexport { AirEntity };\n//# sourceMappingURL=AirEntity.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbDate, DbNumber, DbString, Entity, GeneratedValue, Id, JoinColumn, ManyToOne, OneToMany, Table } from \"@airport/tarmaq-entity\";\n/**\n * Created by Papa on 2/9/2017.\n */\nlet Repository = class Repository {\n    constructor() {\n        this.repositoryTransactionHistory = [];\n        this.repositoryApplications = [];\n        this.repositoryClients = [];\n        this.repositoryDatabases = [];\n        this.repositoryTerminals = [];\n        this.repositoryTypes = [];\n    }\n};\n__decorate([\n    Column({ name: \"REPOSITORY_LID\" }),\n    GeneratedValue(),\n    Id(),\n    DbNumber()\n], Repository.prototype, \"_localId\", void 0);\n__decorate([\n    Column({ name: \"GUID\", nullable: false }),\n    DbString()\n], Repository.prototype, \"GUID\", void 0);\n__decorate([\n    Column({ name: \"NAME\", nullable: false }),\n    DbString()\n], Repository.prototype, \"name\", void 0);\n__decorate([\n    Column({ name: 'AGE_SUITABILITY', nullable: false }),\n    DbNumber()\n], Repository.prototype, \"ageSuitability\", void 0);\n__decorate([\n    Column({ name: \"CREATED_AT\", nullable: false }),\n    DbDate()\n], Repository.prototype, \"createdAt\", void 0);\n__decorate([\n    Column({ name: \"IMMUTABLE\", nullable: false })\n], Repository.prototype, \"immutable\", void 0);\n__decorate([\n    Column({ name: \"SOURCE\", nullable: false }),\n    DbString()\n], Repository.prototype, \"source\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'OWNER_USER_ACCOUNT_LID', referencedColumnName: 'USER_ACCOUNT_LID',\n        nullable: false\n    })\n], Repository.prototype, \"owner\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'repository' })\n], Repository.prototype, \"repositoryTransactionHistory\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'CONTINENT_ID',\n        referencedColumnName: 'CONTINENT_ID', nullable: true\n    })\n], Repository.prototype, \"continent\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'COUNTRY_ID',\n        referencedColumnName: 'COUNTRY_ID', nullable: true\n    })\n], Repository.prototype, \"country\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'STATE_ID',\n        referencedColumnName: 'STATE_ID', nullable: true\n    })\n], Repository.prototype, \"state\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'METRO_AREA_ID',\n        referencedColumnName: 'METRO_AREA_ID', nullable: true\n    })\n], Repository.prototype, \"metroArea\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'repository' })\n], Repository.prototype, \"repositoryApplications\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'repository' })\n], Repository.prototype, \"repositoryClients\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'repository' })\n], Repository.prototype, \"repositoryDatabases\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'repository' })\n], Repository.prototype, \"repositoryTerminals\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'repository' })\n], Repository.prototype, \"repositoryTypes\", void 0);\nRepository = __decorate([\n    Entity(),\n    Table({\n        name: \"REPOSITORY\"\n    })\n], Repository);\nexport { Repository };\n//# sourceMappingURL=Repository.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Entity, Id, JoinColumn, ManyToOne, Table } from \"@airport/tarmaq-entity\";\nlet RepositoryApplication = class RepositoryApplication {\n};\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({ name: \"APPLICATION_INDEX\", referencedColumnName: \"APPLICATION_INDEX\" })\n], RepositoryApplication.prototype, \"application\", void 0);\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({\n        name: 'REPOSITORY_LID',\n        referencedColumnName: 'REPOSITORY_LID'\n    })\n], RepositoryApplication.prototype, \"repository\", void 0);\nRepositoryApplication = __decorate([\n    Entity(),\n    Table({\n        name: \"REPOSITORY_APPLICATIONS\"\n    })\n], RepositoryApplication);\nexport { RepositoryApplication };\n//# sourceMappingURL=RepositoryApplication.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Entity, Id, JoinColumn, ManyToOne, Table } from \"@airport/tarmaq-entity\";\nlet RepositoryClient = class RepositoryClient {\n};\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({\n        name: 'REPOSITORY_LID',\n        referencedColumnName: 'REPOSITORY_LID'\n    })\n], RepositoryClient.prototype, \"repository\", void 0);\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({\n        name: 'CLIENT_LID',\n        referencedColumnName: 'CLIENT_LID'\n    })\n], RepositoryClient.prototype, \"client\", void 0);\nRepositoryClient = __decorate([\n    Entity(),\n    Table({\n        name: \"REPOSITORY_CLIENTS\"\n    })\n], RepositoryClient);\nexport { RepositoryClient };\n//# sourceMappingURL=RepositoryClient.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Entity, Id, JoinColumn, ManyToOne, Table } from \"@airport/tarmaq-entity\";\nlet RepositoryDatabase = class RepositoryDatabase {\n};\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({\n        name: 'REPOSITORY_LID',\n        referencedColumnName: 'REPOSITORY_LID'\n    })\n], RepositoryDatabase.prototype, \"repository\", void 0);\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({\n        name: 'DATABASE_LID',\n        referencedColumnName: 'DATABASE_LID'\n    })\n], RepositoryDatabase.prototype, \"database\", void 0);\nRepositoryDatabase = __decorate([\n    Entity(),\n    Table({\n        name: \"REPOSITORY_DATABASES\"\n    })\n], RepositoryDatabase);\nexport { RepositoryDatabase };\n//# sourceMappingURL=RepositoryDatabase.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Entity, Id, JoinColumn, ManyToOne, Table } from \"@airport/tarmaq-entity\";\nlet RepositoryTerminal = class RepositoryTerminal {\n};\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({\n        name: 'REPOSITORY_LID',\n        referencedColumnName: 'REPOSITORY_LID'\n    })\n], RepositoryTerminal.prototype, \"repository\", void 0);\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({\n        name: 'TERMINAL_LID',\n        referencedColumnName: 'TERMINAL_LID'\n    })\n], RepositoryTerminal.prototype, \"terminal\", void 0);\nRepositoryTerminal = __decorate([\n    Entity(),\n    Table({\n        name: \"REPOSITORY_TERMINALS\"\n    })\n], RepositoryTerminal);\nexport { RepositoryTerminal };\n//# sourceMappingURL=RepositoryTerminal.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Entity, Id, JoinColumn, ManyToOne, Table } from \"@airport/tarmaq-entity\";\nlet RepositoryType = class RepositoryType {\n};\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({\n        name: 'REPOSITORY_LID',\n        referencedColumnName: 'REPOSITORY_LID'\n    })\n], RepositoryType.prototype, \"repository\", void 0);\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({\n        name: 'TYPE_ID',\n        referencedColumnName: 'TYPE_ID'\n    })\n], RepositoryType.prototype, \"type\", void 0);\nRepositoryType = __decorate([\n    Entity(),\n    Table({\n        name: \"REPOSITORY_TYPES\"\n    })\n], RepositoryType);\nexport { RepositoryType };\n//# sourceMappingURL=RepositoryType.js.map","import { airApi } from '@airport/aviation-communication';\nimport { Actor, AirEntity, OperationHistory, RecordHistory, RecordHistoryNewValue, RecordHistoryOldValue, Repository, RepositoryApplication, RepositoryClient, RepositoryDatabase, RepositoryTerminal, RepositoryTransactionHistory, RepositoryType, TransactionHistory } from '../ddl/ddl';\nconst __constructors__ = {\n    Actor: Actor,\n    AirEntity: AirEntity,\n    OperationHistory: OperationHistory,\n    RecordHistory: RecordHistory,\n    RecordHistoryNewValue: RecordHistoryNewValue,\n    RecordHistoryOldValue: RecordHistoryOldValue,\n    Repository: Repository,\n    RepositoryApplication: RepositoryApplication,\n    RepositoryClient: RepositoryClient,\n    RepositoryDatabase: RepositoryDatabase,\n    RepositoryTerminal: RepositoryTerminal,\n    RepositoryTransactionHistory: RepositoryTransactionHistory,\n    RepositoryType: RepositoryType,\n    TransactionHistory: TransactionHistory\n};\nexport const Q_APPLICATION = {\n    __constructors__,\n    domain: 'air',\n    name: '@airport/holding-pattern'\n};\nexport const Q = Q_APPLICATION;\nexport function diSet(dbEntityId) {\n    return airApi.dS(Q.__dbApplication__, dbEntityId);\n}\nexport function duoDiSet(dbEntityId) {\n    return airApi.ddS(Q.__dbApplication__, dbEntityId);\n}\nairApi.setQApplication(Q_APPLICATION);\n//# sourceMappingURL=qApplication.js.map","import { Dao, DaoQueryDecorators, } from '@airport/tarmaq-dao';\nimport { Q, duoDiSet, } from './qApplication';\n// Application Q object Dependency Injection readiness detection Dao\nexport class SQDIDao extends Dao {\n    constructor(dbEntityId) {\n        super(dbEntityId, Q);\n    }\n}\nexport class BaseActorDao extends SQDIDao {\n    constructor() {\n        super(0);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(0);\n    }\n}\nBaseActorDao.Find = new DaoQueryDecorators();\nBaseActorDao.FindOne = new DaoQueryDecorators();\nBaseActorDao.Search = new DaoQueryDecorators();\nBaseActorDao.SearchOne = new DaoQueryDecorators();\nexport class BaseOperationHistoryDao extends SQDIDao {\n    constructor() {\n        super(12);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(12);\n    }\n}\nBaseOperationHistoryDao.Find = new DaoQueryDecorators();\nBaseOperationHistoryDao.FindOne = new DaoQueryDecorators();\nBaseOperationHistoryDao.Search = new DaoQueryDecorators();\nBaseOperationHistoryDao.SearchOne = new DaoQueryDecorators();\nexport class BaseRecordHistoryDao extends SQDIDao {\n    constructor() {\n        super(3);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(3);\n    }\n}\nBaseRecordHistoryDao.Find = new DaoQueryDecorators();\nBaseRecordHistoryDao.FindOne = new DaoQueryDecorators();\nBaseRecordHistoryDao.Search = new DaoQueryDecorators();\nBaseRecordHistoryDao.SearchOne = new DaoQueryDecorators();\nexport class BaseRecordHistoryNewValueDao extends SQDIDao {\n    constructor() {\n        super(1);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(1);\n    }\n}\nBaseRecordHistoryNewValueDao.Find = new DaoQueryDecorators();\nBaseRecordHistoryNewValueDao.FindOne = new DaoQueryDecorators();\nBaseRecordHistoryNewValueDao.Search = new DaoQueryDecorators();\nBaseRecordHistoryNewValueDao.SearchOne = new DaoQueryDecorators();\nexport class BaseRecordHistoryOldValueDao extends SQDIDao {\n    constructor() {\n        super(2);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(2);\n    }\n}\nBaseRecordHistoryOldValueDao.Find = new DaoQueryDecorators();\nBaseRecordHistoryOldValueDao.FindOne = new DaoQueryDecorators();\nBaseRecordHistoryOldValueDao.Search = new DaoQueryDecorators();\nBaseRecordHistoryOldValueDao.SearchOne = new DaoQueryDecorators();\nexport class BaseRepositoryDao extends SQDIDao {\n    constructor() {\n        super(9);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(9);\n    }\n}\nBaseRepositoryDao.Find = new DaoQueryDecorators();\nBaseRepositoryDao.FindOne = new DaoQueryDecorators();\nBaseRepositoryDao.Search = new DaoQueryDecorators();\nBaseRepositoryDao.SearchOne = new DaoQueryDecorators();\nexport class BaseRepositoryApplicationDao extends SQDIDao {\n    constructor() {\n        super(8);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(8);\n    }\n}\nBaseRepositoryApplicationDao.Find = new DaoQueryDecorators();\nBaseRepositoryApplicationDao.FindOne = new DaoQueryDecorators();\nBaseRepositoryApplicationDao.Search = new DaoQueryDecorators();\nBaseRepositoryApplicationDao.SearchOne = new DaoQueryDecorators();\nexport class BaseRepositoryClientDao extends SQDIDao {\n    constructor() {\n        super(6);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(6);\n    }\n}\nBaseRepositoryClientDao.Find = new DaoQueryDecorators();\nBaseRepositoryClientDao.FindOne = new DaoQueryDecorators();\nBaseRepositoryClientDao.Search = new DaoQueryDecorators();\nBaseRepositoryClientDao.SearchOne = new DaoQueryDecorators();\nexport class BaseRepositoryDatabaseDao extends SQDIDao {\n    constructor() {\n        super(5);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(5);\n    }\n}\nBaseRepositoryDatabaseDao.Find = new DaoQueryDecorators();\nBaseRepositoryDatabaseDao.FindOne = new DaoQueryDecorators();\nBaseRepositoryDatabaseDao.Search = new DaoQueryDecorators();\nBaseRepositoryDatabaseDao.SearchOne = new DaoQueryDecorators();\nexport class BaseRepositoryTerminalDao extends SQDIDao {\n    constructor() {\n        super(7);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(7);\n    }\n}\nBaseRepositoryTerminalDao.Find = new DaoQueryDecorators();\nBaseRepositoryTerminalDao.FindOne = new DaoQueryDecorators();\nBaseRepositoryTerminalDao.Search = new DaoQueryDecorators();\nBaseRepositoryTerminalDao.SearchOne = new DaoQueryDecorators();\nexport class BaseRepositoryTransactionHistoryDao extends SQDIDao {\n    constructor() {\n        super(11);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(11);\n    }\n}\nBaseRepositoryTransactionHistoryDao.Find = new DaoQueryDecorators();\nBaseRepositoryTransactionHistoryDao.FindOne = new DaoQueryDecorators();\nBaseRepositoryTransactionHistoryDao.Search = new DaoQueryDecorators();\nBaseRepositoryTransactionHistoryDao.SearchOne = new DaoQueryDecorators();\nexport class BaseRepositoryTypeDao extends SQDIDao {\n    constructor() {\n        super(4);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(4);\n    }\n}\nBaseRepositoryTypeDao.Find = new DaoQueryDecorators();\nBaseRepositoryTypeDao.FindOne = new DaoQueryDecorators();\nBaseRepositoryTypeDao.Search = new DaoQueryDecorators();\nBaseRepositoryTypeDao.SearchOne = new DaoQueryDecorators();\nexport class BaseTransactionHistoryDao extends SQDIDao {\n    constructor() {\n        super(10);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(10);\n    }\n}\nBaseTransactionHistoryDao.Find = new DaoQueryDecorators();\nBaseTransactionHistoryDao.FindOne = new DaoQueryDecorators();\nBaseTransactionHistoryDao.Search = new DaoQueryDecorators();\nBaseTransactionHistoryDao.SearchOne = new DaoQueryDecorators();\n//# sourceMappingURL=baseDaos.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { BaseRecordHistoryNewValueDao, Q } from '../../generated/generated';\nlet RecordHistoryNewValueDao = class RecordHistoryNewValueDao extends BaseRecordHistoryNewValueDao {\n    async findByRecordHistory_LocalIdIn(RecordHistory_LocalIds) {\n        let rhnv;\n        return await this.db.find.tree({\n            SELECT: {},\n            FROM: [\n                rhnv = Q.RecordHistoryNewValue\n            ],\n            WHERE: rhnv.recordHistory._localId.IN(RecordHistory_LocalIds)\n        });\n    }\n};\nRecordHistoryNewValueDao = __decorate([\n    Injected()\n], RecordHistoryNewValueDao);\nexport { RecordHistoryNewValueDao };\n//# sourceMappingURL=RecordHistoryNewValueDao.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { BaseRecordHistoryOldValueDao } from '../../generated/generated';\nimport { Q, } from '../../generated/generated';\nlet RecordHistoryOldValueDao = class RecordHistoryOldValueDao extends BaseRecordHistoryOldValueDao {\n    async findByRecordHistory_LocalIdIn(RecordHistory_LocalIds) {\n        let rhov;\n        return await this.db.find.tree({\n            SELECT: {},\n            FROM: [\n                rhov = Q.RecordHistoryOldValue\n            ],\n            WHERE: rhov.recordHistory._localId.IN(RecordHistory_LocalIds)\n        });\n    }\n};\nRecordHistoryOldValueDao = __decorate([\n    Injected()\n], RecordHistoryOldValueDao);\nexport { RecordHistoryOldValueDao };\n//# sourceMappingURL=RecordHistoryOldValueDao.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ALL_FIELDS, AND, OR, Y } from '@airport/tarmaq-query';\nimport { ensureChildArray, TransactionType } from '@airport/ground-control';\nimport { BaseRepositoryTransactionHistoryDao, Q, } from '../../generated/generated';\nimport { Injected } from '@airport/direction-indicator';\nlet RepositoryTransactionHistoryDao = class RepositoryTransactionHistoryDao extends BaseRepositoryTransactionHistoryDao {\n    /*\n    async clearContentsWhereIdsIn(\n        repositoryTransactionBlockIds: TmRepositoryTransactionBlockId[]\n    ): Promise<void> {\n        const rtb: QRepositoryTransactionBlock = Q.QRepositoryTransactionBlock\n        await this.db.updateWhere({\n            UPDATE: rtb,\n            SET: {\n                contents: null\n            },\n            WHERE: rtb._localId.IN(repositoryTransactionBlockIds)\n        })\n    }\n    */\n    async findWhereGUIDsIn(GUIDs) {\n        let rth;\n        return await this.db.find.tree({\n            SELECT: {\n                GUID: Y\n            },\n            FROM: [\n                rth = Q.RepositoryTransactionHistory\n            ],\n            WHERE: rth.GUID.IN(GUIDs)\n        });\n    }\n    async findAllLocalChangesForRecordIds(changedRecordIds) {\n        const repositoryTransactionHistoryMapByRepositoryId = new Map();\n        const rth = Q.RepositoryTransactionHistory;\n        const th = rth.transactionHistory.INNER_JOIN();\n        const oh = rth.operationHistory.LEFT_JOIN();\n        const ae = oh.entity.LEFT_JOIN();\n        const av = ae.applicationVersion.LEFT_JOIN();\n        const rh = oh.recordHistory.LEFT_JOIN();\n        const nv = rh.newValues.LEFT_JOIN();\n        let _localId = Y;\n        const repositoryEquals = [];\n        for (const [repositoryId, idsForRepository] of changedRecordIds) {\n            const recordMapForRepository = idsForRepository.actorRecordIdsByLocalIds;\n            const entityEquals = [];\n            for (const [entityId, recordMapForEntity] of recordMapForRepository) {\n                const actorEquals = [];\n                for (const [actorId, recordsForActor] of recordMapForEntity) {\n                    actorEquals.push(AND(oh.actor._localId.equals(actorId), rh._actorRecordId.IN(Array.from(recordsForActor))));\n                }\n                entityEquals.push(AND(oh.entity._localId.equals(entityId), OR(...actorEquals)));\n            }\n            repositoryEquals.push(AND(rth.repository._localId.equals(repositoryId), rth.saveTimestamp.greaterThanOrEquals(idsForRepository.firstChangeTime), OR(...entityEquals)));\n        }\n        const repoTransHistories = await this.db.find.tree({\n            SELECT: {\n                ...ALL_FIELDS,\n                operationHistory: {\n                    orderNumber: Y,\n                    changeType: Y,\n                    entity: {\n                        _localId,\n                        // index: Y,\n                        applicationVersion: {\n                            _localId: Y,\n                            // integerVersion: Y,\n                            // application: {\n                            // \tindex: Y\n                            // }\n                        }\n                    },\n                    recordHistory: {\n                        _localId,\n                        newValues: {\n                            columnIndex: Y,\n                            newValue: Y\n                        }\n                    }\n                }\n            },\n            FROM: [\n                rth,\n                th,\n                oh,\n                ae,\n                av,\n                rh,\n                nv\n            ],\n            WHERE: AND(th.transactionType.equals(TransactionType.LOCAL), OR(...repositoryEquals)),\n            // ORDER_BY: [\n            // \trth.repository._localId.asc()\n            // ]\n        });\n        for (const repoTransHistory of repoTransHistories) {\n            ensureChildArray(repositoryTransactionHistoryMapByRepositoryId, repoTransHistory.repository._localId)\n                .push(repoTransHistory);\n            repoTransHistory.operationHistory.sort((rth1, rth2) => {\n                if (rth1.orderNumber < rth2.orderNumber) {\n                    return -1;\n                }\n                if (rth1.orderNumber > rth2.orderNumber) {\n                    return 1;\n                }\n                return 0;\n            });\n        }\n        return repositoryTransactionHistoryMapByRepositoryId;\n    }\n    async updateSyncTimestamp(repositoryTransactionHistory) {\n        let rth;\n        await this.db.updateWhere({\n            UPDATE: rth = Q.RepositoryTransactionHistory,\n            SET: {\n                syncTimestamp: repositoryTransactionHistory.syncTimestamp\n            },\n            WHERE: rth._localId.equals(repositoryTransactionHistory._localId)\n        });\n    }\n};\nRepositoryTransactionHistoryDao = __decorate([\n    Injected()\n], RepositoryTransactionHistoryDao);\nexport { RepositoryTransactionHistoryDao };\n//# sourceMappingURL=RepositoryTransactionHistoryDao.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ALL_FIELDS, AND, Y } from '@airport/tarmaq-query';\nimport { ensureChildJsMap } from '@airport/ground-control';\nimport { BaseActorDao, Q } from '../../generated/generated';\nimport { Injected } from '@airport/direction-indicator';\nlet ActorDao = class ActorDao extends BaseActorDao {\n    async findWithDetailsAndGlobalIdsByIds(actorIds) {\n        return await this.findWithDetailsAndGlobalIdsByWhereClause((a) => a._localId.IN(actorIds));\n    }\n    async findMapsWithDetailsByGlobalIds(actorGUIDs, userAccountIds, terminalIds, actorMap, actorMapById) {\n        const actors = await this.findWithDetailsByGlobalIds(actorGUIDs, userAccountIds, terminalIds);\n        for (const actor of actors) {\n            ensureChildJsMap(actorMap, actor.userAccount._localId)\n                .set(actor.terminal._localId, actor);\n            actorMapById.set(actor._localId, actor);\n        }\n    }\n    async findWithDetailsByGlobalIds(actorGUIDs, userAccountIds, terminalIds) {\n        return await this.findWithDetailsAndGlobalIdsByWhereClause((a) => AND(a.GUID.IN(actorGUIDs), a.terminal._localId.IN(terminalIds), a.userAccount._localId.IN(userAccountIds)));\n    }\n    async findByDomainAndApplication_Names(domainName, applicationName) {\n        let act;\n        let application;\n        let domain;\n        let terminal;\n        let userAccount;\n        return await this.db.find.tree({\n            SELECT: {\n                _localId: Y,\n                application: {\n                    ...ALL_FIELDS,\n                    domain: {}\n                },\n                terminal: {},\n                userAccount: {},\n                GUID: Y\n            },\n            FROM: [\n                act = Q.Actor,\n                application = act.application.INNER_JOIN(),\n                domain = application.domain.INNER_JOIN(),\n                terminal = act.terminal.LEFT_JOIN(),\n                userAccount = act.userAccount.LEFT_JOIN()\n            ],\n            WHERE: AND(domain.name.equals(domainName), application.name.equals(applicationName))\n        });\n    }\n    async findOneByDomainAndApplication_Names_UserAccountGUID_TerminalGUID(domainName, applicationName, userAccountGUID, terminalGUID) {\n        let act;\n        let application;\n        let domain;\n        let terminal;\n        let userAccount;\n        return await this.db.findOne.tree({\n            SELECT: {\n                _localId: Y,\n                application: {\n                    domain: {\n                        name: Y\n                    },\n                    fullName: Y,\n                    index: Y,\n                    name: Y\n                },\n                terminal: {},\n                userAccount: {},\n                GUID: Y\n            },\n            FROM: [\n                act = Q.Actor,\n                application = act.application.INNER_JOIN(),\n                domain = application.domain.INNER_JOIN(),\n                terminal = act.terminal.LEFT_JOIN(),\n                userAccount = act.userAccount.LEFT_JOIN()\n            ],\n            WHERE: AND(domain.name.equals(domainName), application.name.equals(applicationName), terminal.GUID.equals(terminalGUID), userAccount.GUID.equals(userAccountGUID))\n        });\n    }\n    async findByGUIDs(actorGUIDs) {\n        let a;\n        return await this.db.find.tree({\n            SELECT: {},\n            FROM: [\n                a = Q.Actor\n            ],\n            WHERE: a.GUID.IN(actorGUIDs)\n        });\n    }\n    async findWithUserAccountBy_LocalIdIn(actor_localIds) {\n        let a, u;\n        return await this.db.find.graph({\n            SELECT: {\n                '*': Y,\n                userAccount: {\n                    _localId: Y,\n                    GUID: Y,\n                    ranking: Y,\n                    username: Y\n                }\n            },\n            FROM: [\n                a = Q.Actor,\n                u = a.userAccount.LEFT_JOIN(),\n                u.continent.LEFT_JOIN(),\n                u.country.LEFT_JOIN(),\n                u.metroArea.LEFT_JOIN(),\n                u.state.LEFT_JOIN()\n            ],\n            WHERE: a._localId.IN(actor_localIds)\n        });\n    }\n    async insert(actors, context) {\n        let a;\n        const VALUES = [];\n        for (const actor of actors) {\n            VALUES.push([\n                actor.GUID, actor.application.index,\n                actor.userAccount._localId, actor.terminal._localId\n            ]);\n        }\n        const _localIds = await this.db.insertValuesGenerateIds({\n            INSERT_INTO: a = Q.Actor,\n            columns: [\n                a.GUID,\n                a.application.index,\n                a.userAccount._localId,\n                a.terminal._localId\n            ],\n            VALUES\n        }, context);\n        for (let i = 0; i < actors.length; i++) {\n            let actor = actors[i];\n            actor._localId = _localIds[i][0];\n        }\n    }\n    async findWithDetailsAndGlobalIdsByWhereClause(getWhereClause) {\n        let a;\n        let ap;\n        let t;\n        const id = Y;\n        const username = Y;\n        const GUID = Y;\n        return await this.db.find.tree({\n            SELECT: {\n                ...ALL_FIELDS,\n                application: {\n                    index: Y,\n                    name: Y,\n                    domain: {\n                        name: Y\n                    }\n                },\n                terminal: {\n                    id,\n                    GUID,\n                    owner: {\n                        id,\n                        username,\n                        GUID,\n                    }\n                },\n                userAccount: {\n                    id,\n                    username,\n                    GUID,\n                }\n            },\n            FROM: [\n                a = Q.Actor,\n                ap = a.application.LEFT_JOIN(),\n                ap.domain.LEFT_JOIN(),\n                t = a.terminal.LEFT_JOIN(),\n                t.owner.LEFT_JOIN(),\n                a.userAccount.LEFT_JOIN()\n            ],\n            WHERE: getWhereClause(a)\n        });\n    }\n};\nActorDao = __decorate([\n    Injected()\n], ActorDao);\nexport { ActorDao };\n//# sourceMappingURL=ActorDao.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { AND, Y } from '@airport/tarmaq-query';\nimport { Injected } from '@airport/direction-indicator';\nimport { TransactionType } from '@airport/ground-control';\nimport { BaseRepositoryDao, Q, } from '../../generated/generated';\nlet RepositoryDao = class RepositoryDao extends BaseRepositoryDao {\n    async getRepositoryLoadInfo(repositorySource, repositoryGUID, context) {\n        let r;\n        let rth;\n        let th;\n        return await this.db.findOne.tree({\n            SELECT: {\n                immutable: Y,\n                repositoryTransactionHistory: {\n                    saveTimestamp: Y\n                }\n            },\n            FROM: [\n                r = Q.Repository,\n                rth = r.repositoryTransactionHistory.INNER_JOIN(),\n                th = rth.transactionHistory.INNER_JOIN()\n            ],\n            WHERE: AND(r.source.equals(repositorySource), r.GUID.equals(repositoryGUID), th.transactionType.equals(TransactionType.REMOTE_SYNC))\n        }, context);\n    }\n    async findReposWithDetailsAndSyncNodeIds(repositoryIds) {\n        let r;\n        const _localId = Y;\n        return await this.db.find.tree({\n            SELECT: {\n                _localId,\n                owner: {\n                    _localId\n                },\n                createdAt: Y,\n                GUID: Y\n            },\n            FROM: [\n                r = Q.Repository\n            ],\n            WHERE: r._localId.IN(repositoryIds)\n        });\n    }\n    async findWithOwnerBy_LocalIds(repositoryIds) {\n        let r;\n        return await this.db.find.tree({\n            SELECT: {\n                '*': Y,\n                owner: {\n                    _localId: Y,\n                    GUID: Y,\n                    username: Y\n                }\n            },\n            FROM: [\n                r = Q.Repository,\n                r.owner.INNER_JOIN()\n            ],\n            WHERE: r._localId.IN(repositoryIds)\n        });\n    }\n    async findWithOwnerBy_LocalIdIn(repository_localIds) {\n        let r, o;\n        return await this.db.find.graph({\n            SELECT: {\n                '*': Y,\n                owner: {\n                    _localId: Y,\n                    GUID: Y,\n                    ranking: Y,\n                    username: Y\n                }\n            },\n            FROM: [\n                r = Q.Repository,\n                r.owner.INNER_JOIN()\n            ],\n            WHERE: r._localId.IN(repository_localIds)\n        });\n    }\n    async findByGUIDs(repositoryGUIDs) {\n        let r;\n        return await this.db.find.tree({\n            SELECT: {},\n            FROM: [\n                r = Q.Repository\n            ],\n            WHERE: r.GUID.IN(repositoryGUIDs)\n        });\n    }\n    async insert(repositories, context) {\n        let r;\n        const VALUES = [];\n        for (const repository of repositories) {\n            VALUES.push([\n                repository.createdAt, repository.GUID, repository.ageSuitability,\n                repository.source, repository.immutable, repository.owner._localId,\n            ]);\n        }\n        const _localIds = await this.db.insertValuesGenerateIds({\n            INSERT_INTO: r = Q.Repository,\n            columns: [\n                r.createdAt,\n                r.GUID,\n                r.ageSuitability,\n                r.source,\n                r.immutable,\n                r.owner._localId\n            ],\n            VALUES\n        }, context);\n        for (let i = 0; i < repositories.length; i++) {\n            let repository = repositories[i];\n            repository._localId = _localIds[i][0];\n        }\n    }\n};\nRepositoryDao = __decorate([\n    Injected()\n], RepositoryDao);\nexport { RepositoryDao };\n//# sourceMappingURL=RepositoryDao.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet OperationHistoryDuo = class OperationHistoryDuo {\n    getNewRecord(entityChangeType, dbEntity, actor, repositoryTransactionHistory, systemWideOperationId, rootTransaction) {\n        let operationHistory = {\n            actor,\n            changeType: entityChangeType,\n            entity: dbEntity,\n            _localId: undefined,\n            orderNumber: ++rootTransaction.numberOfOperations,\n            recordHistory: [],\n            repositoryTransactionHistory: repositoryTransactionHistory,\n            systemWideOperationId\n        };\n        return operationHistory;\n    }\n    sort(ew1, ew2) {\n        let startId1 = ew1.orderNumber;\n        let startId2 = ew2.orderNumber;\n        if (startId1 > startId2) {\n            return 1;\n        }\n        if (startId2 > startId1) {\n            return -1;\n        }\n        return 0;\n    }\n    startRecordHistory(operationHistory, actorId, _actorRecordId) {\n        const recordHistory = this.recordHistoryDuo.getNewRecord(actorId, _actorRecordId);\n        recordHistory.operationHistory = operationHistory;\n        operationHistory.recordHistory.push(recordHistory);\n        operationHistory.repositoryTransactionHistory\n            .transactionHistory.allRecordHistory.push(recordHistory);\n        return recordHistory;\n    }\n};\n__decorate([\n    Inject()\n], OperationHistoryDuo.prototype, \"recordHistoryDuo\", void 0);\nOperationHistoryDuo = __decorate([\n    Injected()\n], OperationHistoryDuo);\nexport { OperationHistoryDuo };\n//# sourceMappingURL=OperationHistoryDuo.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { RecordHistory } from '../../ddl/ddl';\nlet RecordHistoryDuo = class RecordHistoryDuo {\n    getNewRecord(actorId, _actorRecordId) {\n        const recordHistory = new RecordHistory();\n        recordHistory._actorRecordId = _actorRecordId;\n        recordHistory.actor = {\n            _localId: actorId\n        };\n        return recordHistory;\n    }\n    addNewValue(recordHistory, dbColumn, newValue) {\n        if (newValue === null) {\n            // No need to record a null value\n            return null;\n        }\n        const recordHistoryNewValue = this.recordHistoryNewValueDuo.getNewRecord(recordHistory, dbColumn, newValue);\n        recordHistory.newValues.push(recordHistoryNewValue);\n        recordHistory.operationHistory.repositoryTransactionHistory\n            .transactionHistory.allRecordHistoryNewValues.push(recordHistoryNewValue);\n        return recordHistoryNewValue;\n    }\n    addOldValue(recordHistory, dbColumn, oldValue) {\n        if (oldValue === null) {\n            // No need to record a null value\n            return null;\n        }\n        const recordHistoryOldValue = this.recordHistoryOldValueDuo.getNewRecord(recordHistory, dbColumn, oldValue);\n        recordHistory.oldValues.push(recordHistoryOldValue);\n        recordHistory.operationHistory.repositoryTransactionHistory\n            .transactionHistory.allRecordHistoryOldValues.push(recordHistoryOldValue);\n        return recordHistoryOldValue;\n    }\n};\n__decorate([\n    Inject()\n], RecordHistoryDuo.prototype, \"recordHistoryNewValueDuo\", void 0);\n__decorate([\n    Inject()\n], RecordHistoryDuo.prototype, \"recordHistoryOldValueDuo\", void 0);\nRecordHistoryDuo = __decorate([\n    Injected()\n], RecordHistoryDuo);\nexport { RecordHistoryDuo };\n//# sourceMappingURL=RecordHistoryDuo.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { RecordHistoryNewValue } from '../../ddl/ddl';\nlet RecordHistoryNewValueDuo = class RecordHistoryNewValueDuo {\n    getNewRecord(recordHistory, dbColumn, newValue) {\n        const recordHistoryNewValue = new RecordHistoryNewValue();\n        recordHistoryNewValue.columnIndex = dbColumn.index;\n        recordHistoryNewValue.recordHistory = recordHistory;\n        recordHistoryNewValue.newValue = newValue;\n        return recordHistoryNewValue;\n    }\n};\nRecordHistoryNewValueDuo = __decorate([\n    Injected()\n], RecordHistoryNewValueDuo);\nexport { RecordHistoryNewValueDuo };\n//# sourceMappingURL=RecordHistoryNewValueDuo.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { RecordHistoryOldValue } from '../../ddl/ddl';\nlet RecordHistoryOldValueDuo = class RecordHistoryOldValueDuo {\n    getNewRecord(recordHistory, dbColumn, oldValue) {\n        const recordHistoryOldValue = new RecordHistoryOldValue();\n        recordHistoryOldValue.columnIndex = dbColumn.index;\n        recordHistoryOldValue.recordHistory = recordHistory;\n        recordHistoryOldValue.oldValue = oldValue;\n        return recordHistoryOldValue;\n    }\n};\nRecordHistoryOldValueDuo = __decorate([\n    Injected()\n], RecordHistoryOldValueDuo);\nexport { RecordHistoryOldValueDuo };\n//# sourceMappingURL=RecordHistoryOldValueDuo.js.map","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { v4 as guidv4 } from \"uuid\";\nimport { Repository, RepositoryTransactionHistory } from '../../ddl/ddl';\nlet RepositoryTransactionHistoryDuo = class RepositoryTransactionHistoryDuo {\n    getNewRecord(repositoryId, isRepositoryCreation) {\n        let repositoryTransactionHistory = new RepositoryTransactionHistory();\n        let saveTimestamp = new Date().getTime();\n        repositoryTransactionHistory.saveTimestamp = saveTimestamp;\n        repositoryTransactionHistory.GUID = guidv4();\n        repositoryTransactionHistory.isRepositoryCreation = isRepositoryCreation;\n        repositoryTransactionHistory.repository = new Repository();\n        repositoryTransactionHistory.repository._localId = repositoryId;\n        return repositoryTransactionHistory;\n    }\n    newRecord(data) {\n        if (!data) {\n            return null;\n        }\n        return { ...data };\n    }\n    sortRepoTransHistories(repoTransHistories, actorMapById) {\n        repoTransHistories.sort((repoTransHistory1, repoTransHistory2) => {\n            const syncTimeComparison = this.compareNumbers(repoTransHistory1.syncTimestamp, repoTransHistory2.syncTimestamp);\n            if (syncTimeComparison) {\n                return syncTimeComparison;\n            }\n            const saveTimeComparison = this.compareNumbers(repoTransHistory1.saveTimestamp, repoTransHistory2.saveTimestamp);\n            if (saveTimeComparison) {\n                return saveTimeComparison;\n            }\n            return 0;\n        });\n    }\n    startOperation(repositoryTransactionHistory, systemWideOperationId, entityChangeType, dbEntity, actor, rootTransaction) {\n        let operationHistory = this.operationHistoryDuo.getNewRecord(entityChangeType, dbEntity, actor, repositoryTransactionHistory, systemWideOperationId, rootTransaction);\n        repositoryTransactionHistory.operationHistory.push(operationHistory);\n        repositoryTransactionHistory\n            .transactionHistory.allOperationHistory.push(operationHistory);\n        return operationHistory;\n    }\n    compareDates(date1, date2) {\n        const time1 = date1 ? date1.getTime() : -1;\n        const time2 = date2 ? date2.getTime() : -1;\n        return this.compareNumbers(time1, time2);\n    }\n    compareNumbers(number1, number2) {\n        if (number1 < number2) {\n            return -1;\n        }\n        if (number2 > number1) {\n            return 1;\n        }\n        return 0;\n    }\n};\n__decorate([\n    Inject()\n], RepositoryTransactionHistoryDuo.prototype, \"operationHistoryDuo\", void 0);\nRepositoryTransactionHistoryDuo = __decorate([\n    Injected()\n], RepositoryTransactionHistoryDuo);\nexport { RepositoryTransactionHistoryDuo };\n//# sourceMappingURL=RepositoryTransactionHistoryDuo.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { TransactionType } from '@airport/ground-control';\nimport { TransactionHistory } from '../../ddl/ddl';\nlet TransactionHistoryDuo = class TransactionHistoryDuo {\n    getNewRecord(transactionType = TransactionType.LOCAL) {\n        let transaction = new TransactionHistory();\n        transaction.transactionType = TransactionType.LOCAL;\n        return transaction;\n    }\n    getRepositoryTransaction(transactionHistory, repositoryId, isRepositoryCreation) {\n        let repositoryTransactionHistory = transactionHistory.repositoryTransactionHistoryMap[repositoryId];\n        if (!repositoryTransactionHistory) {\n            repositoryTransactionHistory = this.repositoryTransactionHistoryDuo.getNewRecord(repositoryId, isRepositoryCreation);\n            transactionHistory.repositoryTransactionHistories.push(repositoryTransactionHistory);\n            transactionHistory.repositoryTransactionHistoryMap[repositoryId] = repositoryTransactionHistory;\n            repositoryTransactionHistory.transactionHistory = transactionHistory;\n        }\n        return repositoryTransactionHistory;\n    }\n};\n__decorate([\n    Inject()\n], TransactionHistoryDuo.prototype, \"repositoryTransactionHistoryDuo\", void 0);\nTransactionHistoryDuo = __decorate([\n    Injected()\n], TransactionHistoryDuo);\nexport { TransactionHistoryDuo };\n//# sourceMappingURL=TransactionHistoryDuo.js.map","export var ApiObjectKind;\n(function (ApiObjectKind) {\n    ApiObjectKind[\"ARRAY\"] = \"ARRAY\";\n    ApiObjectKind[\"BOOLEAN\"] = \"BOOLEAN\";\n    ApiObjectKind[\"BOOLEAN_VALUE\"] = \"BOOLEAN_VALUE\";\n    ApiObjectKind[\"DATE\"] = \"DATE\";\n    ApiObjectKind[\"DB_ENTITY\"] = \"DB_ENTITY\";\n    ApiObjectKind[\"NUMBER\"] = \"NUMBER\";\n    ApiObjectKind[\"NUMBER_VALUE\"] = \"NUMBER_VALUE\";\n    ApiObjectKind[\"OBJECT\"] = \"OBJECT\";\n    ApiObjectKind[\"STRING\"] = \"STRING\";\n    ApiObjectKind[\"STRING_VALUE\"] = \"STRING_VALUE\";\n    ApiObjectKind[\"TYPE_UNION\"] = \"TYPE_UNION\";\n})(ApiObjectKind || (ApiObjectKind = {}));\n//# sourceMappingURL=ApiOperation.js.map","import { CONTAINER_ACCESSOR, lib } from '@airport/direction-indicator';\nconst checkIn = lib('check-in');\nexport const API_REGISTRY = checkIn.token({\n    class: null,\n    interface: 'IApiRegistry',\n    token: 'API_REGISTRY'\n});\nexport const API_VALIDATOR = checkIn.token({\n    class: null,\n    interface: 'IApiValidator',\n    token: 'API_VALIDATOR'\n});\nAPI_REGISTRY.setDependencies({\n    containerAccessor: CONTAINER_ACCESSOR\n});\n//# sourceMappingURL=tokens.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Api } from '@airport/check-in';\nimport { Inject, Injected } from \"@airport/direction-indicator\";\nlet RepositoryApi = class RepositoryApi {\n    async findAll() {\n        return await this.repositoryDao.findAll();\n    }\n    async create(repositoryName) {\n        return await this.repositoryManager.createRepository(repositoryName);\n    }\n};\n__decorate([\n    Inject()\n], RepositoryApi.prototype, \"repositoryDao\", void 0);\n__decorate([\n    Inject()\n], RepositoryApi.prototype, \"repositoryManager\", void 0);\n__decorate([\n    Api()\n], RepositoryApi.prototype, \"findAll\", null);\n__decorate([\n    Api()\n], RepositoryApi.prototype, \"create\", null);\nRepositoryApi = __decorate([\n    Injected()\n], RepositoryApi);\nexport { RepositoryApi };\n//# sourceMappingURL=RepositoryApi.js.map","export const Api = function () {\n    return function (target, propertyKey, descriptor) {\n        // No runtime logic required.\n        return null;\n    };\n};\n//# sourceMappingURL=Api.js.map","import { RepositoryApi } from '../api/api';\nimport { RecordHistoryNewValueDao } from '../dao/history/RecordHistoryNewValueDao';\nimport { RecordHistoryOldValueDao } from '../dao/history/RecordHistoryOldValueDao';\nimport { RepositoryTransactionHistoryDao } from '../dao/history/RepositoryTransactionHistoryDao';\nimport { ActorDao } from '../dao/infrastructure/ActorDao';\nimport { RepositoryDao } from '../dao/repository/RepositoryDao';\nimport { OperationHistoryDuo } from '../duo/history/OperationHistoryDuo';\nimport { RecordHistoryDuo } from '../duo/history/RecordHistoryDuo';\nimport { RecordHistoryNewValueDuo } from '../duo/history/RecordHistoryNewValueDuo';\nimport { RecordHistoryOldValueDuo } from '../duo/history/RecordHistoryOldValueDuo';\nimport { RepositoryTransactionHistoryDuo } from '../duo/history/RepositoryTransactionHistoryDuo';\nimport { TransactionHistoryDuo } from '../duo/history/TransactionHistoryDuo';\nimport { holdingPattern, REPOSITORY_API } from './common-tokens';\nimport { REPOSITORY_MANAGER } from './runtime-index';\nexport const ACTOR_DAO = holdingPattern.token({\n    class: ActorDao,\n    interface: 'IActorDao',\n    token: 'ACTOR_DAO'\n});\nexport const OPERATION_HISTORY_DUO = holdingPattern.token({\n    class: OperationHistoryDuo,\n    interface: 'IOperationHistoryDuo',\n    token: 'OPERATION_HISTORY_DUO'\n});\nexport const RECORD_HISTORY_DUO = holdingPattern.token({\n    class: RecordHistoryDuo,\n    interface: 'IRecordHistoryDuo',\n    token: 'RECORD_HISTORY_DUO'\n});\nexport const RECORD_HISTORY_NEW_VALUE_DAO = holdingPattern.token({\n    class: RecordHistoryNewValueDao,\n    interface: 'IRecordHistoryNewValueDao',\n    token: 'RECORD_HISTORY_NEW_VALUE_DAO'\n});\nexport const RECORD_HISTORY_NEW_VALUE_DUO = holdingPattern.token({\n    class: RecordHistoryNewValueDuo,\n    interface: 'IRecordHistoryNewValueDuo',\n    token: 'RECORD_HISTORY_NEW_VALUE_DUO'\n});\nexport const RECORD_HISTORY_OLD_VALUE_DAO = holdingPattern.token({\n    class: RecordHistoryOldValueDao,\n    interface: 'IRecordHistoryOldValueDao',\n    token: 'RECORD_HISTORY_OLD_VALUE_DAO'\n});\nexport const RECORD_HISTORY_OLD_VALUE_DUO = holdingPattern.token({\n    class: RecordHistoryOldValueDuo,\n    interface: 'IRecordHistoryOldValueDuo',\n    token: 'RECORD_HISTORY_OLD_VALUE_DUO'\n});\nexport const REPOSITORY_DAO = holdingPattern.token({\n    class: RepositoryDao,\n    interface: 'IRepositoryDao',\n    token: 'REPOSITORY_DAO'\n});\nexport const REPOSITORY_TRANSACTION_HISTORY_DAO = holdingPattern.token({\n    class: RepositoryTransactionHistoryDao,\n    interface: 'IRepositoryTransactionHistoryDao',\n    token: 'REPOSITORY_TRANSACTION_HISTORY_DAO'\n});\nexport const REPOSITORY_TRANSACTION_HISTORY_DUO = holdingPattern.token({\n    class: RepositoryTransactionHistoryDuo,\n    interface: 'IRepositoryTransactionHistoryDuo',\n    token: 'REPOSITORY_TRANSACTION_HISTORY_DUO'\n});\nexport const TRANSACTION_HISTORY_DUO = holdingPattern.token({\n    class: TransactionHistoryDuo,\n    interface: 'ITransactionHistoryDuo',\n    token: 'TRANSACTION_HISTORY_DUO'\n});\nOPERATION_HISTORY_DUO.setDependencies({\n    recordHistoryDuo: RECORD_HISTORY_DUO,\n});\nREPOSITORY_API.setClass(RepositoryApi);\nREPOSITORY_API.setDependencies({\n    repositoryDao: REPOSITORY_DAO,\n    repositoryManager: REPOSITORY_MANAGER,\n});\nRECORD_HISTORY_DUO.setDependencies({\n    recordHistoryNewValueDuo: RECORD_HISTORY_NEW_VALUE_DUO,\n    recordHistoryOldValueDuo: RECORD_HISTORY_OLD_VALUE_DUO,\n});\nREPOSITORY_TRANSACTION_HISTORY_DUO.setDependencies({\n    operationHistoryDuo: OPERATION_HISTORY_DUO,\n});\nTRANSACTION_HISTORY_DUO.setDependencies({\n    repositoryTransactionHistoryDuo: REPOSITORY_TRANSACTION_HISTORY_DUO,\n});\n//# sourceMappingURL=runtime-tokens.js.map","/**\n * Created by Papa on 4/16/2017.\n */\nexport var AirEntityType;\n(function (AirEntityType) {\n    AirEntityType[\"NOT_AIR_ENTITY\"] = \"NOT_AIR_ENTITY\";\n    AirEntityType[\"AIR_ENTITY\"] = \"AIR_ENTITY\";\n})(AirEntityType || (AirEntityType = {}));\n//# sourceMappingURL=AirEntityType.js.map","/**\n * For logic classes to be hot-swappable for quick upgrades all state is contained\n * in one non-reloadable BehaviorSubject.\n */\nimport { INTERNAL_DOMAIN } from \"@airport/ground-control\";\nimport { BehaviorSubject } from \"rxjs\";\nexport const internalTerminalState = new BehaviorSubject({\n    applicationActors: [],\n    applicationInitializer: {\n        applicationWindowMap: new Map(),\n        initializingApplicationMap: new Map()\n    },\n    applicationMapByFullName: new Map(),\n    applications: [],\n    domains: [],\n    frameworkActor: null,\n    internalConnector: {\n        dbName: '',\n        internalCredentials: {\n            application: null,\n            domain: INTERNAL_DOMAIN,\n            methodName: null,\n            objectName: null\n        },\n        serverUrl: ''\n    },\n    isServer: false,\n    lastIds: {\n        columns: 0,\n        domains: 0,\n        entities: 0,\n        properties: 0,\n        propertyColumns: 0,\n        relations: 0,\n        relationColumns: 0,\n        applications: 0,\n        applicationVersions: 0\n    },\n    receiver: {\n        initializedApps: new Set(),\n        initializingApps: new Set(),\n    },\n    sequenceGenerator: {\n        sequences: [],\n        sequenceBlocks: [],\n        generatingSequenceNumbers: false\n    },\n    terminal: null,\n    transactionManager: {\n        pendingTransactionQueue: [],\n        rootTransactionInProgressMap: new Map(),\n        transactionInProgressMap: new Map()\n    },\n    webReceiver: {\n        domainPrefix: '',\n        localDomain: '',\n        mainDomainFragments: [],\n        onClientMessageCallback: null,\n        pendingApplicationCounts: new Map(),\n        pendingHostCounts: new Map(),\n        pendingInterAppApiCallMessageMap: new Map(),\n        subsriptionMap: new Map()\n    }\n});\n//# sourceMappingURL=theState.js.map","export const INTERNAL_APP = '@airport/terminal';\nexport const INTERNAL_DOMAIN = 'internal://domain';\n//# sourceMappingURL=ITransactionalConnector.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { internalTerminalState } from './theState';\nlet TerminalState = class TerminalState {\n    constructor() {\n        this.terminalState = internalTerminalState;\n    }\n};\nTerminalState = __decorate([\n    Injected()\n], TerminalState);\nexport { TerminalState };\n//# sourceMappingURL=TerminalState.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { ensureChildJsMap } from '@airport/ground-control';\nlet TerminalStore = class TerminalStore {\n    get state() {\n        return this.terminalState.terminalState;\n    }\n    async init() {\n        this.getTerminalState = this.selectorManager.createRootSelector(this.state);\n        this.getApplicationActors = this.selectorManager.createSelector(this.getTerminalState, terminal => terminal.applicationActors);\n        this.getApplicationInitializer = this.selectorManager.createSelector(this.getTerminalState, terminal => terminal.applicationInitializer);\n        this.getApplicationActorMapByDomainAndApplication_Names = this.selectorManager.createSelector(this.getApplicationActors, applicationActors => {\n            const applicationActorsByDomainAndApplication_Names = new Map();\n            for (const applicationActor of applicationActors) {\n                const applicationActorMapForDomain = ensureChildJsMap(applicationActorsByDomainAndApplication_Names, applicationActor.application.domain.name);\n                let actorsForApplication = applicationActorMapForDomain\n                    .get(applicationActor.application.name);\n                if (!actorsForApplication) {\n                    actorsForApplication = [];\n                    applicationActorMapForDomain.set(applicationActor.application.name, actorsForApplication);\n                }\n                actorsForApplication.push(applicationActor);\n            }\n            return applicationActorsByDomainAndApplication_Names;\n        });\n        this.getDomains = this.selectorManager.createSelector(this.getTerminalState, terminal => terminal.domains);\n        this.getDomainMapByName = this.selectorManager.createSelector(this.getDomains, domains => {\n            const domainsByName = new Map();\n            for (const domain of domains) {\n                domainsByName.set(domain.name, domain);\n            }\n            return domainsByName;\n        });\n        this.getFrameworkActor = this.selectorManager.createSelector(this.getTerminalState, terminal => terminal.frameworkActor);\n        this.getInternalConnector = this.selectorManager.createSelector(this.getTerminalState, terminalState => terminalState.internalConnector);\n        this.getIsServer = this.selectorManager.createSelector(this.getTerminalState, terminalState => terminalState.isServer);\n        this.getLastIds = this.selectorManager.createSelector(this.getTerminalState, terminalState => terminalState.lastIds);\n        this.getLatestApplicationVersionMapByNames = this.selectorManager.createSelector(this.getDomains, domains => {\n            const latestApplicationVersionMapByNames = new Map();\n            for (const domain of domains) {\n                const mapForDomain = ensureChildJsMap(latestApplicationVersionMapByNames, domain.name);\n                for (const application of domain.applications) {\n                    mapForDomain.set(application.name, application.currentVersion[0].applicationVersion);\n                }\n            }\n            return latestApplicationVersionMapByNames;\n        });\n        this.getLatestApplicationVersionMapByFullApplication_Name = this.selectorManager.createSelector(this.getLatestApplicationVersionMapByNames, (latestApplicationVersionMapByNames) => {\n            const latestApplicationVersionMapByFullApplication_Name = new Map();\n            for (const applicationVersionsForDomain_Name of latestApplicationVersionMapByNames.values()) {\n                for (const applicationVersion of applicationVersionsForDomain_Name.values()) {\n                    latestApplicationVersionMapByFullApplication_Name.set(applicationVersion.application.fullName, applicationVersion);\n                }\n            }\n            return latestApplicationVersionMapByFullApplication_Name;\n        });\n        this.getAllApplicationVersionsByIds = this.selectorManager.createSelector(this.getDomains, domains => {\n            const allApplicationVersionsByIds = [];\n            for (const domain of domains) {\n                for (const application of domain.applications) {\n                    for (const applicationVersion of application.versions) {\n                        allApplicationVersionsByIds[applicationVersion._localId] = applicationVersion;\n                    }\n                }\n            }\n            return allApplicationVersionsByIds;\n        });\n        this.getLatestApplicationVersionsByApplication_Indexes = this.selectorManager.createSelector(this.getDomains, domains => {\n            const latestApplicationVersionsByApplication_Indexes = [];\n            for (const domain of domains) {\n                for (const application of domain.applications) {\n                    latestApplicationVersionsByApplication_Indexes[application.index]\n                        = application.currentVersion[0].applicationVersion;\n                }\n            }\n            return latestApplicationVersionsByApplication_Indexes;\n        });\n        this.getApplicationMapByFullName = this.selectorManager.createSelector(this.getTerminalState, terminal => terminal.applicationMapByFullName);\n        this.getApplications = this.selectorManager.createSelector(this.getTerminalState, terminal => terminal.applications);\n        this.getAllEntities = this.selectorManager.createSelector(this.getLatestApplicationVersionsByApplication_Indexes, latestApplicationVersionsByApplication_Indexes => {\n            const allEntities = [];\n            for (const latestApplicationVersion of latestApplicationVersionsByApplication_Indexes) {\n                if (!latestApplicationVersion) {\n                    continue;\n                }\n                for (const entity of latestApplicationVersion.entities) {\n                    allEntities[entity._localId] = entity;\n                }\n            }\n            return allEntities;\n        });\n        this.getAllColumns = this.selectorManager.createSelector(this.getAllEntities, allEntities => {\n            const allColumns = [];\n            for (const entity of allEntities) {\n                if (!entity) {\n                    continue;\n                }\n                for (const column of entity.columns) {\n                    allColumns[column._localId] = column;\n                }\n            }\n            return allColumns;\n        });\n        this.getAllRelations = this.selectorManager.createSelector(this.getAllEntities, allEntities => {\n            const allRelations = [];\n            for (const entity of allEntities) {\n                if (!entity) {\n                    continue;\n                }\n                for (const relation of entity.relations) {\n                    allRelations[relation._localId] = relation;\n                }\n            }\n            return allRelations;\n        });\n        this.getReceiver = this.selectorManager.createSelector(this.getTerminalState, terminal => terminal.receiver);\n        this.getSequenceGenerator = this.selectorManager.createSelector(this.getTerminalState, terminal => terminal.sequenceGenerator);\n        this.getTerminal = this.selectorManager.createSelector(this.getTerminalState, terminalState => terminalState.terminal);\n        this.getTransactionManager = this.selectorManager.createSelector(this.getTerminalState, terminal => terminal.transactionManager);\n        this.getWebReceiver = this.selectorManager.createSelector(this.getTerminalState, terminal => terminal.webReceiver);\n    }\n    tearDown() {\n    }\n};\n__decorate([\n    Inject()\n], TerminalStore.prototype, \"selectorManager\", void 0);\n__decorate([\n    Inject()\n], TerminalStore.prototype, \"terminalState\", void 0);\nTerminalStore = __decorate([\n    Injected()\n], TerminalStore);\nexport { TerminalStore };\n//# sourceMappingURL=TerminalStore.js.map","import { BehaviorSubject } from \"rxjs\";\nexport const internalUserState = new BehaviorSubject({\n    allSessions: [],\n    sessionMapByEmail: new Map()\n});\n//# sourceMappingURL=theUserState.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from \"@airport/direction-indicator\";\nimport { internalUserState } from \"./theUserState\";\nlet UserState = class UserState {\n    constructor() {\n        this.userState = internalUserState;\n    }\n};\nUserState = __decorate([\n    Injected()\n], UserState);\nexport { UserState };\n//# sourceMappingURL=UserState.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from \"@airport/direction-indicator\";\nlet UserStore = class UserStore {\n    get state() {\n        return this.userState.userState;\n    }\n    async init() {\n        this.getUserState = this.selectorManager.createRootSelector(this.state);\n        this.getAllSessions = this.selectorManager.createSelector(this.getUserState, userState => userState.allSessions);\n        this.getSessionMapByEmail = this.selectorManager.createSelector(this.getUserState, userState => userState.sessionMapByEmail);\n    }\n};\n__decorate([\n    Inject()\n], UserStore.prototype, \"selectorManager\", void 0);\n__decorate([\n    Inject()\n], UserStore.prototype, \"userState\", void 0);\nUserStore = __decorate([\n    Injected()\n], UserStore);\nexport { UserStore };\n//# sourceMappingURL=UserStore.js.map","export var IsolateMessageType;\n(function (IsolateMessageType) {\n    IsolateMessageType[\"ADD_REPOSITORY\"] = \"ADD_REPOSITORY\";\n    IsolateMessageType[\"APP_INITIALIZING\"] = \"APP_INITIALIZING\";\n    IsolateMessageType[\"APP_INITIALIZED\"] = \"APP_INITIALIZED\";\n    IsolateMessageType[\"CALL_API\"] = \"CALL_API\";\n    IsolateMessageType[\"DELETE_WHERE\"] = \"DELETE_WHERE\";\n    IsolateMessageType[\"FIND\"] = \"FIND\";\n    IsolateMessageType[\"FIND_ONE\"] = \"FIND_ONE\";\n    IsolateMessageType[\"GET_LATEST_APPLICATION_VERSION_BY_APPLICATION_NAME\"] = \"GET_LATEST_APPLICATION_VERSION_BY_APPLICATION_NAME\";\n    IsolateMessageType[\"INSERT_VALUES\"] = \"INSERT_VALUES\";\n    IsolateMessageType[\"INSERT_VALUES_GET_IDS\"] = \"INSERT_VALUES_GET_IDS\";\n    IsolateMessageType[\"RETRIEVE_DOMAIN\"] = \"RETRIEVE_DOMAIN\";\n    IsolateMessageType[\"SEARCH\"] = \"SEARCH\";\n    IsolateMessageType[\"SEARCH_ONE\"] = \"SEARCH_ONE\";\n    IsolateMessageType[\"SEARCH_UNSUBSCRIBE\"] = \"UNSUBSCRIBE\";\n    IsolateMessageType[\"SAVE\"] = \"SAVE\";\n    IsolateMessageType[\"SAVE_TO_DESTINATION\"] = \"SAVE_TO_DESTINATION\";\n    IsolateMessageType[\"UPDATE_VALUES\"] = \"UPDATE_VALUES\";\n})(IsolateMessageType || (IsolateMessageType = {}));\n//# sourceMappingURL=IsolateMessage.js.map","export var AppState;\n(function (AppState) {\n    AppState[\"NOT_INITIALIED\"] = \"NOT_INITIALIED\";\n    AppState[\"START_INITIALIZING\"] = \"START_INITIALIZING\";\n    AppState[\"INITIALIZING_IN_PROGRESS\"] = \"INITIALIZING_IN_PROGRESS\";\n    AppState[\"INITIALIZED\"] = \"INITIALIZED\";\n})(AppState || (AppState = {}));\n//# sourceMappingURL=ApplicationState.js.map","import { AppState } from \"./ApplicationState\";\nexport const applicationState = {\n    api: null,\n    application: null,\n    appState: AppState.NOT_INITIALIED,\n    domain: null,\n    // FIXME: make this dynamic for web version (https://turbase.app), local version (https://localhost:PORT)\n    // and debugging (http://localhost:7500)\n    hostServer: 'http://localhost:7500',\n    // FIXME: tie this in to the hostServer variable\n    mainDomain: null,\n    observableMessageMap: new Map(),\n    pendingMessageMap: new Map(),\n    messageCallback: null,\n};\n//# sourceMappingURL=theApplicationState.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from \"@airport/direction-indicator\";\nimport { applicationState as theApplicationState } from \"./theApplicationState\";\nlet ApplicationStore = class ApplicationStore {\n    constructor() {\n        this.applicationState = theApplicationState;\n    }\n    get state() {\n        return this.applicationState;\n    }\n};\nApplicationStore = __decorate([\n    Injected()\n], ApplicationStore);\nexport { ApplicationStore };\n//# sourceMappingURL=ApplicationStore.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { from } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nlet SelectorManager = class SelectorManager {\n    createSelector(...args) {\n        if (args.length < 2 || args.length > 6) {\n            throw new Error(`Invalid createSelector call, Expecting 1 to 5 selectors and a callback.`);\n        }\n        const inputSelectors = args.slice(0, args.length - 1);\n        const callback = args[args.length - 1];\n        let sourceObservable;\n        if (inputSelectors.length > 1) {\n            // TODO: check if this will work\n            sourceObservable = from(inputSelectors.map(selector => selector.observable));\n        }\n        else {\n            sourceObservable = inputSelectors[0].observable;\n        }\n        let observable = sourceObservable.pipe(\n        // share() TODO: implement once RxJs support is added\n        distinctUntilChanged(), map(value => callback(value)));\n        return this.getSelector(observable);\n    }\n    createRootSelector(stateObservable) {\n        return this.getSelector(stateObservable);\n    }\n    getSelector(observable) {\n        let selector = (function (\n        // otherStateObservable?: Observable<SV>\n        ) {\n            let currentValue;\n            observable.subscribe(value => currentValue = value).unsubscribe();\n            return currentValue;\n        });\n        selector.observable = observable;\n        return selector;\n    }\n};\nSelectorManager = __decorate([\n    Injected()\n], SelectorManager);\nexport { SelectorManager };\n//# sourceMappingURL=Selector.js.map","import { lib } from '@airport/direction-indicator';\nimport { ApplicationStore } from './state/ApplicationStore';\nimport { SelectorManager } from './state/Selector';\nconst apron = lib('apron');\nexport const APPLICATION_LOADER = apron.token({\n    class: null,\n    interface: 'IApplicationLoader',\n    token: 'APPLICATION_LOADER'\n});\nexport const APPLICATION_STORE = apron.token({\n    class: ApplicationStore,\n    interface: 'IApplicationStore',\n    token: 'APPLICATION_STORE'\n});\nexport const LOCAL_API_SERVER = apron.token({\n    class: null,\n    interface: 'ILocalAPIServer',\n    token: 'LOCAL_API_SERVER'\n});\nexport const SELECTOR_MANAGER = apron.token({\n    class: SelectorManager,\n    interface: 'ISelectorManager',\n    token: 'SELECTOR_MANAGER'\n});\n//# sourceMappingURL=tokens.js.map","import { AIRPORT_DATABASE } from '@airport/air-traffic-control';\nimport { lib } from '@airport/direction-indicator';\nimport { DB_APPLICATION_UTILS, SEQUENCE_GENERATOR, TRANSACTIONAL_CONNECTOR } from '@airport/ground-control';\nimport { TerminalStore } from './store/TerminalStore';\nimport { TerminalState } from './store/TerminalState';\nimport { SELECTOR_MANAGER } from '@airport/apron';\nimport { UserState } from './store/user/UserState';\nimport { UserStore } from './store/user/UserStore';\nconst terminalMap = lib('terminal-map');\nexport const APPLICATION_INITIALIZER = terminalMap.token({\n    class: null,\n    interface: 'IApplicationInitializer',\n    token: 'APPLICATION_INITIALIZER'\n});\nexport const DOMAIN_RETRIEVER = terminalMap.token({\n    class: null,\n    interface: 'IDomainRetriever',\n    token: 'DOMAIN_RETRIEVER'\n});\nexport const STORE_DRIVER = terminalMap.token({\n    class: null,\n    interface: 'IStoreDriver',\n    token: 'STORE_DRIVER'\n});\nexport const TERMINAL_SESSION_MANAGER = terminalMap.token({\n    class: null,\n    interface: 'ITerminalSessionManager',\n    token: 'TERMINAL_SESSION_MANAGER'\n});\nexport const TERMINAL_STATE = terminalMap.token({\n    class: TerminalState,\n    interface: 'ITerminalStateContainer',\n    token: 'TERMINAL_STATE'\n});\nexport const TERMINAL_STORE = terminalMap.token({\n    class: TerminalStore,\n    interface: 'ITerminalStore',\n    token: 'TERMINAL_STORE'\n});\nexport const TRANSACTION_MANAGER = terminalMap.token({\n    class: null,\n    interface: 'ITransactionManager',\n    token: 'TRANSACTION_MANAGER'\n});\nexport const TRANSACTIONAL_RECEIVER = terminalMap.token({\n    class: null,\n    interface: 'ITransactionalReceiver',\n    token: 'TRANSACTIONAL_RECEIVER'\n});\nexport const TRANSACTIONAL_SERVER = terminalMap.token({\n    class: null,\n    interface: 'ITransactionalServer',\n    token: 'TRANSACTIONAL_SERVER'\n});\nexport const USER_STATE = terminalMap.token({\n    class: UserState,\n    interface: 'IUserStateContainer',\n    token: 'USER_STATE'\n});\nexport const USER_STORE = terminalMap.token({\n    class: UserStore,\n    interface: 'IUserStore',\n    token: 'USER_STORE'\n});\nAPPLICATION_INITIALIZER.setDependencies({\n    airportDatabase: AIRPORT_DATABASE,\n    sequenceGenerator: SEQUENCE_GENERATOR,\n    terminalStore: TERMINAL_STORE\n});\nDOMAIN_RETRIEVER.setDependencies({\n    transactionalConnector: TRANSACTIONAL_CONNECTOR\n});\nTERMINAL_STORE.setDependencies({\n    selectorManager: SELECTOR_MANAGER,\n    terminalState: TERMINAL_STATE\n});\nTRANSACTION_MANAGER.setDependencies({\n    storeDriver: STORE_DRIVER,\n    terminalStore: TERMINAL_STORE\n});\nTRANSACTIONAL_RECEIVER.setDependencies({\n    applicationInitializer: APPLICATION_INITIALIZER,\n    dbApplicationUtils: DB_APPLICATION_UTILS,\n});\nTRANSACTIONAL_SERVER.setDependencies({\n    terminalStore: TERMINAL_STORE,\n    transactionManager: TRANSACTION_MANAGER\n});\nUSER_STORE.setDependencies({\n    selectorManager: SELECTOR_MANAGER,\n    userState: USER_STATE\n});\n//# sourceMappingURL=tokens.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet RepositoryLoader = class RepositoryLoader {\n    /*\n    Repository can be loaded because:\n    - Repository is not present at all\n    - Central: Last non-local Transaction Log timestamp is too old\n    - Distributed:  Also stale timestamp but not as frequently (maybe once an hour)\n    Immutable repositories are only loaded once\n    */\n    async loadRepository(repositorySource, repositoryGUID, context) {\n        if (context.repositoryExistenceChecked) {\n            return;\n        }\n        context.repositoryExistenceChecked = true;\n        const repositoryLoadInfo = await this.repositoryDao.getRepositoryLoadInfo(repositorySource, repositoryGUID, context);\n        let loadRepository = false;\n        let lastSyncTimestamp = 0;\n        if (!repositoryLoadInfo) {\n            loadRepository = true;\n        }\n        else if (!repositoryLoadInfo.immutable) {\n            loadRepository = true;\n            for (const remoteRepositoryTransactionHistory of repositoryLoadInfo.repositoryTransactionHistory) {\n                if (lastSyncTimestamp < remoteRepositoryTransactionHistory.saveTimestamp) {\n                    lastSyncTimestamp = remoteRepositoryTransactionHistory.saveTimestamp;\n                }\n            }\n        }\n        if (!loadRepository) {\n            return;\n        }\n        const now = new Date().getTime();\n        const synchronizationAdapter = await this.synchronizationAdapterLoader\n            .load(repositorySource);\n        let messages;\n        try {\n            if (lastSyncTimestamp) {\n                // If it's been less than 10 seconds, don't retrieve the repository\n                if (lastSyncTimestamp >= now - 10000) {\n                    return;\n                }\n                // Check 100 seconds back, in case there were update issues\n                lastSyncTimestamp -= 100000;\n                messages = await synchronizationAdapter.getTransactionsForRepository(repositorySource, repositoryGUID, lastSyncTimestamp);\n            }\n            else {\n                messages = await synchronizationAdapter.getTransactionsForRepository(repositorySource, repositoryGUID);\n            }\n            // TODO: Add a special message for repository for adding users\n            // into the repository \n            // each user will have a public key that they will distribute\n            // each message is signed with the private key and the initial\n            // message for repository is CREATE_REPOSITORY with the public \n            // key of the owner user\n            const messageMapByGUID = new Map();\n            for (const message of messages) {\n                messageMapByGUID.set(message.history.GUID, message);\n            }\n            await this.synchronizationInManager.receiveMessages(messageMapByGUID, context);\n        }\n        catch (e) {\n            console.error(e);\n            return;\n        }\n    }\n};\n__decorate([\n    Inject()\n], RepositoryLoader.prototype, \"repositoryDao\", void 0);\n__decorate([\n    Inject()\n], RepositoryLoader.prototype, \"synchronizationAdapterLoader\", void 0);\n__decorate([\n    Inject()\n], RepositoryLoader.prototype, \"synchronizationInManager\", void 0);\nRepositoryLoader = __decorate([\n    Injected()\n], RepositoryLoader);\nexport { RepositoryLoader };\n//# sourceMappingURL=RepositoryLoader.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { REPOSITORY_PROPERTY_NAME, } from '@airport/air-traffic-control';\nimport { Inject, Injected } from '@airport/direction-indicator';\n// import is reserved for Application use\nimport { AND, } from '@airport/tarmaq-query';\nimport { v4 as guidv4 } from \"uuid\";\nlet RepositoryManager = class RepositoryManager {\n    async initialize() {\n    }\n    async createRepository(repositoryName) {\n        const userSession = await this.terminalSessionManager.getUserSession();\n        if (userSession.currentRootTransaction.newRepository) {\n            throw new Error(`Cannot create more than one repository per transaction:\r\nAttempting to create a new repository and Operation Context\r\nalready contains a new repository.`);\n        }\n        let repository = await this.createRepositoryRecord(repositoryName, userSession.currentActor);\n        userSession.currentRootTransaction.newRepository = repository;\n        return repository;\n    }\n    goOffline() {\n        throw new Error(`not implemented`);\n    }\n    getUpdateState(repository) {\n        throw new Error(`not implemented`);\n    }\n    setUpdateStateForAll(updateState) {\n        throw new Error(`not implemented`);\n    }\n    setUpdateState(repository, updateState) {\n        throw new Error(`not implemented`);\n    }\n    getRepositoryRecord(name, actor) {\n        const repository = {\n            ageSuitability: 0,\n            createdAt: new Date(),\n            _localId: null,\n            immutable: false,\n            name,\n            owner: actor.userAccount,\n            // platformConfig: platformConfig ? JSON.stringify(platformConfig) : null,\n            // platformConfig: null,\n            repositoryTransactionHistory: [],\n            // FIXME: propage the \n            source: actor.application.fullName,\n            GUID: guidv4(),\n        };\n        return repository;\n    }\n    async createRepositoryRecord(name, actor) {\n        const repository = this.getRepositoryRecord(name, actor);\n        await this.repositoryDao.save(repository);\n        return repository;\n    }\n    ensureRepositoryScopeOnInsertValues(repository, rawInsertValues) {\n        let qEntity = rawInsertValues.INSERT_INTO;\n        if (!qEntity.__driver__.dbEntity.isAirEntity) {\n            return rawInsertValues;\n        }\n        let columns = rawInsertValues.columns.slice();\n        if (columns.some((column, index) => {\n            // return column.fieldName === REPOSITORY_PROPERTY_NAME\n            return column.dbProperty.name === REPOSITORY_PROPERTY_NAME;\n        })) {\n            return rawInsertValues;\n        }\n        columns.push(qEntity[REPOSITORY_PROPERTY_NAME]);\n        let VALUES = rawInsertValues.VALUES.slice();\n        for (let i = 0; i < VALUES.length; i++) {\n            let row = VALUES[i].slice();\n            VALUES[i] = row;\n            row.push(repository._localId);\n        }\n        return {\n            INSERT_INTO: qEntity, columns, VALUES\n        };\n    }\n    ensureRepositoryLinkOnUpdateWhere(qEntity, repository, rawUpdate) {\n        if (!qEntity.__driver__.dbEntity.isAirEntity) {\n            return;\n        }\n        return {\n            UPDATE: rawUpdate.UPDATE,\n            SET: rawUpdate.SET,\n            WHERE: AND(rawUpdate.WHERE, qEntity.repository._localId.equals(repository._localId))\n        };\n    }\n    ensureRepositoryScopeOnDeleteWhere(qEntity, repository, rawDelete) {\n        if (!qEntity.__driver__.dbEntity.isAirEntity) {\n            return;\n        }\n        return {\n            DELETE_FROM: rawDelete.DELETE_FROM,\n            WHERE: AND(rawDelete.WHERE, qEntity.repository._localId.equals(repository._localId))\n        };\n    }\n};\n__decorate([\n    Inject()\n], RepositoryManager.prototype, \"repositoryDao\", void 0);\n__decorate([\n    Inject()\n], RepositoryManager.prototype, \"terminalSessionManager\", void 0);\nRepositoryManager = __decorate([\n    Injected()\n], RepositoryManager);\nexport { RepositoryManager };\n//# sourceMappingURL=RepositoryManager.js.map","import { lib } from '@airport/direction-indicator';\nexport const travelDocumentCheckpoint = lib('travel-document-checkpoint');\nexport const USER_ACCOUNT_API = travelDocumentCheckpoint.token({\n    class: null,\n    interface: 'UserAccountApi',\n    token: 'USER_ACCOUNT_API'\n});\n//# sourceMappingURL=common-tokens.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { USER_ACCOUNT_API, } from '../../to_be_generated/common-tokens';\nimport { DEPENDENCY_INJECTION, Inject, Injected, } from '@airport/direction-indicator';\n// An API stub for other Applications and UIs to use\nlet UserAccountApi = class UserAccountApi {\n    constructor() {\n        DEPENDENCY_INJECTION.db().manualInject(this, USER_ACCOUNT_API);\n    }\n    async findUserAccount(privateId) {\n        return await this.userAccountApi.findUserAccount(privateId);\n    }\n};\n__decorate([\n    Inject()\n], UserAccountApi.prototype, \"userAccountApi\", void 0);\nUserAccountApi = __decorate([\n    Injected()\n], UserAccountApi);\nexport { UserAccountApi };\n//# sourceMappingURL=UserAccountApi.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from \"@airport/direction-indicator\";\nimport { v4 as guidv4 } from \"uuid\";\nlet _inDemoMode = true;\n// let _demoServer = 'https://turbase.app'\nlet _demoServer = 'http://localhost:7500';\nlet LocalAPIClient = class LocalAPIClient {\n    constructor() {\n        this.pendingDemoMessageMap = new Map();\n        this.demoListenerStarted = false;\n        this.lastConnectionReadyCheckMap = new Map();\n    }\n    init() {\n        if (_inDemoMode) {\n            this.initializeForWeb();\n        }\n    }\n    initializeForWeb() {\n        const htmlElements = document.getElementsByName('AIRportClient');\n        if (htmlElements.length) {\n            this.clientIframe = htmlElements[0];\n        }\n        else {\n            this.clientIframe = document.createElement('iframe');\n            this.clientIframe.src = _demoServer + '/client/index.html';\n            this.clientIframe.name = 'AIRportClient';\n            this.clientIframe.style.display = 'none';\n            document.body.appendChild(this.clientIframe);\n        }\n        window.addEventListener(\"message\", event => {\n            const message = event.data;\n            if (message.__received__) {\n                return;\n            }\n            message.__received__ = true;\n            if (this.messageCallback) {\n                const receivedDate = new Date();\n                message.__receivedTime__ = receivedDate.getTime();\n                this.messageCallback(message);\n            }\n            switch (message.category) {\n                case 'ConnectionIsReady':\n                    let checksForDomain = this.lastConnectionReadyCheckMap.get(message.domain);\n                    if (!checksForDomain) {\n                        checksForDomain = new Map();\n                        this.lastConnectionReadyCheckMap.set(message.domain, checksForDomain);\n                    }\n                    checksForDomain.set(message.application, true);\n                    break;\n                case 'ToClientRedirected':\n                    // All requests need to have a application signature\n                    // to know what application is being communicated to/from\n                    if (!this.hasValidApplicationInfo(message)) {\n                        return;\n                    }\n                    let requestDemoMessage = this.pendingDemoMessageMap.get(message.id);\n                    if (requestDemoMessage) {\n                        requestDemoMessage.resolve(message);\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }, false);\n    }\n    onMessage(callback) {\n        this.messageCallback = callback;\n    }\n    hasValidApplicationInfo(message) {\n        return typeof message.domain === 'string' && message.domain.length >= 3\n            && typeof message.application === 'string' && message.application.length >= 3;\n    }\n    async invokeApiMethod(token, methodName, args) {\n        while (!await this.isConnectionReady(token)) {\n            await this.wait(100);\n        }\n        let serializedParams;\n        if (_inDemoMode) {\n            serializedParams = args;\n        }\n        else {\n            serializedParams = this.operationSerializer.serializeAsArray(args);\n        }\n        const request = {\n            application: token.application.name,\n            args: serializedParams,\n            category: 'FromClient',\n            domain: token.application.domain.name,\n            hostDomain: null,\n            hostProtocol: null,\n            id: guidv4(),\n            methodName,\n            objectName: token.descriptor.interface,\n            protocol: window.location.protocol,\n        };\n        let response;\n        if (_inDemoMode) {\n            response = await this.sendDemoRequest(request);\n        }\n        else {\n            response = await this.sendLocalRequest(request);\n        }\n        if (response.errorMessage) {\n            throw new Error(response.errorMessage);\n        }\n        let payload;\n        if (_inDemoMode) {\n            payload = response.payload;\n        }\n        else {\n            if (response.payload) {\n                payload = this.queryResultsDeserializer\n                    .deserialize(response.payload);\n            }\n        }\n        if (payload) {\n            this.queryResultsDeserializer.setPropertyDescriptors(payload);\n        }\n        for (let i = 0; i < args.length; i++) {\n            this.queryResultsDeserializer\n                .deepCopyProperties(response.args[i], args[i]);\n        }\n        return payload;\n    }\n    wait(milliseconds) {\n        return new Promise((resolve, _reject) => {\n            setTimeout(() => {\n                resolve();\n            }, milliseconds);\n        });\n    }\n    async isConnectionReady(token) {\n        const domain = token.application.domain.name;\n        const application = token.application.name;\n        if (this.lastConnectionReadyCheckMap.get(domain)\n            && this.lastConnectionReadyCheckMap.get(domain).get(application)) {\n            // FIXME: checking every time breaks in inconsistent ways,\n            // The whole 'IsConnectionReady' check needs to be done internally\n            // in the framework, without sending messages around (that is\n            // done on every request). \n            // this.lastConnectionReadyCheckMap.get(domain).delete(application)\n            return true;\n        }\n        let request = {\n            application,\n            args: [],\n            category: 'IsConnectionReady',\n            domain,\n            hostDomain: null,\n            hostProtocol: null,\n            id: null,\n            methodName: null,\n            objectName: null,\n            protocol: window.location.protocol,\n        };\n        if (_inDemoMode) {\n            this.clientIframe.contentWindow.postMessage(request, _demoServer);\n            return false;\n        }\n        else {\n            const response = await this.sendLocalRequest(request);\n            if (response.errorMessage) {\n                return false;\n            }\n            return true;\n        }\n    }\n    async sendLocalRequest(request) {\n        const httpResponse = await fetch('http://localhost:31817', {\n            method: 'PUT',\n            mode: 'cors',\n            cache: 'no-cache',\n            credentials: 'omit',\n            headers: {\n                'Content-Type': 'application/json'\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            // redirect: 'follow', // manual, *follow, error\n            referrerPolicy: 'origin',\n            body: JSON.stringify(request) // body data type must match \"Content-Type\" header\n        });\n        return await httpResponse.json();\n    }\n    async sendDemoRequest(request) {\n        if (!this.demoListenerStarted) {\n            this.startDemoListener();\n        }\n        const returnValue = new Promise((resolve, reject) => {\n            this.pendingDemoMessageMap.set(request.id, {\n                request,\n                resolve,\n                reject\n            });\n        });\n        this.clientIframe.contentWindow.postMessage(request, _demoServer);\n        return returnValue;\n    }\n    startDemoListener() {\n        window.addEventListener(\"message\", event => {\n            this.handleDemoResponse(event.data);\n        });\n    }\n    handleDemoResponse(response) {\n        if (response.domain !== window.location.host) {\n            return;\n        }\n        if (response.category !== 'ToClientRedirected') {\n            return;\n        }\n        const pendingRequest = this.pendingDemoMessageMap.get(response.id);\n        if (!pendingRequest) {\n            return;\n        }\n        if (response.errorMessage) {\n            pendingRequest.reject(response.errorMessage);\n        }\n        else {\n            pendingRequest.resolve(response);\n        }\n    }\n};\n__decorate([\n    Inject()\n], LocalAPIClient.prototype, \"operationSerializer\", void 0);\n__decorate([\n    Inject()\n], LocalAPIClient.prototype, \"queryResultsDeserializer\", void 0);\nLocalAPIClient = __decorate([\n    Injected()\n], LocalAPIClient);\nexport { LocalAPIClient };\n//# sourceMappingURL=LocalAPIClient.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected, INTER_APP_API_CLIENT } from '@airport/direction-indicator';\nlet AutopilotApiLoader = class AutopilotApiLoader {\n    loadApiAutopilot(token) {\n        let _this = this;\n        return new Proxy({}, {\n            get(target, methodName) {\n                switch (methodName) {\n                    case '__initialized__':\n                        return true;\n                    case 'then':\n                        return target;\n                }\n                return function (...args) {\n                    if (INTER_APP_API_CLIENT.getClass()) {\n                        return _this.interAppApiClient.invokeApiMethod(token, methodName, args);\n                    }\n                    else {\n                        return _this.localApiClient.invokeApiMethod(token, methodName, args);\n                    }\n                };\n            }\n        });\n    }\n};\n__decorate([\n    Inject()\n], AutopilotApiLoader.prototype, \"interAppApiClient\", void 0);\n__decorate([\n    Inject()\n], AutopilotApiLoader.prototype, \"localApiClient\", void 0);\nAutopilotApiLoader = __decorate([\n    Injected()\n], AutopilotApiLoader);\nexport { AutopilotApiLoader };\n//# sourceMappingURL=AutopilotApiLoader.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet OperationSerializer = class OperationSerializer {\n    serializeAsArray(entity) {\n        let serializedEntity = [];\n        if (!entity) {\n            return serializedEntity;\n        }\n        if (entity instanceof Array) {\n            serializedEntity = entity\n                .map(anEntity => this.serialize(anEntity));\n        }\n        else {\n            serializedEntity = [this.serialize(entity)];\n        }\n        return serializedEntity;\n    }\n    serialize(entity) {\n        const operation = {\n            namePath: ['root'],\n            processedEntityMap: new Map(),\n            sequence: 0,\n            stubLookupTable: [],\n        };\n        return this.doSerialize(entity, operation);\n    }\n    doSerialize(entity, operation) {\n        if (entity instanceof Object) {\n            if (entity instanceof Array) {\n                return entity.map(anEntity => this.doSerialize(anEntity, operation));\n            }\n            else if (entity instanceof Date) {\n                return this.serializationStateManager.serializeAsDate(entity);\n            }\n        }\n        else {\n            return entity;\n        }\n        let operationUniqueId = operation.processedEntityMap.get(entity);\n        if (operationUniqueId) {\n            return operation.stubLookupTable[operationUniqueId];\n        }\n        operationUniqueId = ++operation.sequence;\n        operation.processedEntityMap.set(entity, operationUniqueId);\n        let entityStub = {};\n        this.serializationStateManager.markAsStub(entity);\n        entityStub[this.serializationStateManager.getUniqueIdFieldName()] = operationUniqueId;\n        operation.stubLookupTable[operationUniqueId] = entityStub;\n        let serializedEntity = {};\n        serializedEntity[this.serializationStateManager.getUniqueIdFieldName()] = operationUniqueId;\n        var isFirstProperty = true;\n        for (const propertyName in entity) {\n            const property = entity[propertyName];\n            // const propertyState = property[serializationStateManager.getStateFieldName()]\n            let propertyCopy;\n            if (!isFirstProperty) {\n                operation.namePath.pop();\n            }\n            isFirstProperty = false;\n            operation.namePath.push(propertyName);\n            if (property instanceof Object) {\n                if (property instanceof Array) {\n                    // if (propertyState === EntityState.RESULT_JSON_ARRAY) {\n                    // \tpropertyCopy = {\n                    // \t\tvalue: JSON.stringify(property)\n                    // \t}\n                    // \tpropertyCopy[entityStateManager.getStateFieldName()] = propertyState\n                    // } else {\n                    propertyCopy = property.map(aProperty => this.doSerialize(aProperty, operation));\n                    // }\n                }\n                else if (property instanceof Date) {\n                    propertyCopy = this.serializationStateManager.serializeAsDate(property);\n                }\n                else {\n                    // if (propertyState === EntityState.RESULT_JSON) {\n                    // \tpropertyCopy = {\n                    // \t\tvalue: JSON.stringify(property)\n                    // \t}\n                    // \tpropertyCopy[entityStateManager.getStateFieldName()] = propertyState\n                    // } else {\n                    propertyCopy = this.doSerialize(property, operation);\n                    // }\n                }\n            }\n            else {\n                // switch (propertyState) {\n                // \t// case EntityState.RESULT_JSON_ARRAY:\n                // \t// \tif (property) {\n                // \t// \t\tthrow new Error(`Expecting an Array for \"${operation.namePath.join('.')}\", got: ${property}`)\n                // \t// \t}\n                // \t// \tbreak\n                // \t// case EntityState.RESULT_JSON:\n                // \t// \tif (property) {\n                // \t// \t\tthrow new Error(`Expecting an Object for \"${operation.namePath.join('.')}\", got: ${property}`)\n                // \t// \t}\n                // \t// \tbreak\n                // \tcase SerializationState.DATE:\n                // \t\tif (property) {\n                // \t\t\tthrow new Error(`Expecting a Date for \"${operation.namePath.join('.')}\", got: ${property}`)\n                // \t\t}\n                // \t\tbreak\n                // \tdefault:\n                propertyCopy = property;\n                // break\n                // }\n            }\n            serializedEntity[propertyName] = propertyCopy;\n        }\n        if (!isFirstProperty) {\n            operation.namePath.pop();\n        }\n        return serializedEntity;\n    }\n};\n__decorate([\n    Inject()\n], OperationSerializer.prototype, \"serializationStateManager\", void 0);\nOperationSerializer = __decorate([\n    Injected()\n], OperationSerializer);\nexport { OperationSerializer };\n//# sourceMappingURL=OperationSerializer.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar SerializationStateManager_1;\nimport { Injected } from \"@airport/direction-indicator\";\nexport var SerializationState;\n(function (SerializationState) {\n    SerializationState[\"DATE\"] = \"DATE\";\n    SerializationState[\"STUB\"] = \"STUB\";\n})(SerializationState || (SerializationState = {}));\nlet SerializationStateManager = SerializationStateManager_1 = class SerializationStateManager {\n    getSerializationUniqueId(entity, throwIfNotFound = true) {\n        const serializationUniqueId = entity[SerializationStateManager_1.SERIALIZATION_UNIQUE_ID_FIELD];\n        if (!serializationUniqueId || typeof serializationUniqueId !== 'number' || serializationUniqueId < 1) {\n            if (throwIfNotFound) {\n                throw new Error(`Could not find \"${SerializationStateManager_1.SERIALIZATION_UNIQUE_ID_FIELD}\" property on DTO:\r\n        \r\n        ${JSON.stringify(entity)}`);\n            }\n        }\n        return serializationUniqueId;\n    }\n    getEntityState(entity) {\n        return entity[SerializationStateManager_1.SERIALIZATION_STATE_FIELD];\n    }\n    markAsStub(entity) {\n        this.markAs(entity, SerializationState.STUB);\n    }\n    isStub(entity) {\n        return this.is(entity, SerializationState.STUB);\n    }\n    serializeAsDate(value) {\n        return {\n            __serializationState__: SerializationState.DATE,\n            value: value.toISOString()\n        };\n    }\n    isDate(entity) {\n        return this.is(entity, SerializationState.DATE);\n    }\n    getUniqueIdFieldName() {\n        return SerializationStateManager_1.SERIALIZATION_UNIQUE_ID_FIELD;\n    }\n    // getStateFieldName(): string {\n    //     return SerializationStateManager.SERIALIZATION_STATE_FIELD\n    // }\n    is(entity, serializationState) {\n        return entity[SerializationStateManager_1.SERIALIZATION_STATE_FIELD] == serializationState;\n    }\n    markAs(entity, serializationState) {\n        entity[SerializationStateManager_1.SERIALIZATION_STATE_FIELD] = serializationState;\n    }\n};\nSerializationStateManager.SERIALIZATION_UNIQUE_ID_FIELD = '__SUID__';\nSerializationStateManager.SERIALIZATION_STATE_FIELD = '__serializationState__';\nSerializationStateManager = SerializationStateManager_1 = __decorate([\n    Injected()\n], SerializationStateManager);\nexport { SerializationStateManager };\n//# sourceMappingURL=SerializationStateManager.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { AIR_ENTITY_UTILS } from '@airport/aviation-communication';\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { SerializationState } from './SerializationStateManager';\n/*\ninterface ArrayMemberEntityRecord<T> {\n    index: number,\n    entity: T\n}\n*/\n/*\n\nInstead of doing a blind \"copy if GUID is present otherwise do nothing\":\n\n1.\tWhen sending objects, mark them all with serialization Ids\n2.  Retain those Ids during operations in @Api()s & AIRport\n3.\tMap all objects on the way back by these serialization ids\n4.\tDo a copy from -> to based on those ids\n\ninterface ArrayMemberRecord<T> {\n    index: number,\n    isWithoutId: boolean\n    isObject: boolean\n    isEntity: boolean\n    isPrimitive: boolean\n    entity: T\n}\n\ninterface ArrayEntityInfo {\n    hasWithoutId: boolean\n    hasObjects: boolean\n    hasEntities: boolean\n    hasPrimitives: boolean\n    entityMap: Map<string, ArrayMemberEntityRecord<any>>\n    entityArray: ArrayMemberRecord<any>[]\n}\n */\nlet QueryResultsDeserializer = class QueryResultsDeserializer {\n    deserialize(entity) {\n        const operation = {\n            lookupTable: [],\n        };\n        let deserializedEntity;\n        if (entity instanceof Array) {\n            deserializedEntity = entity.map(anEntity => this.doDeserialize(anEntity, operation));\n        }\n        else {\n            deserializedEntity = this.doDeserialize(entity, operation);\n        }\n        return deserializedEntity;\n    }\n    doDeserialize(entity, operation) {\n        let state = this.serializationStateManager.getEntityState(entity);\n        switch (state) {\n            case SerializationState.DATE:\n                return new Date(entity['value']);\n            // case EntityState.RESULT_JSON:\n            // \treturn entity\n            // case EntityState.RESULT_JSON_ARRAY:\n            // \tconst value = entity['value']\n            // \tvalue[entityStateManager.getStateFieldName()] = EntityState.RESULT_JSON_ARRAY\n            // \treturn entity\n        }\n        let operationUniqueId = this.serializationStateManager.getSerializationUniqueId(entity);\n        if (!operationUniqueId || typeof operationUniqueId !== 'number' || operationUniqueId < 1) {\n            throw new Error(`Invalid or missing ${this.serializationStateManager.getUniqueIdFieldName()} field.`);\n        }\n        let alreadyDeserializedEntity = operation.lookupTable[operationUniqueId];\n        switch (state) {\n            case SerializationState.STUB: {\n                if (!alreadyDeserializedEntity) {\n                    throw new Error(`Could not find an already present entity for\r\n\t\t\t\t\t${this.serializationStateManager.getUniqueIdFieldName()} of ${operationUniqueId}`);\n                }\n                return alreadyDeserializedEntity;\n            }\n            default:\n                if (alreadyDeserializedEntity) {\n                    throw new Error(`Entity appears more than once for\r\n\t\t\t\t\t${this.serializationStateManager.getUniqueIdFieldName()} of ${operationUniqueId}`);\n                }\n        }\n        let deserializedEntity = {};\n        operation.lookupTable[operationUniqueId] = deserializedEntity;\n        for (const propertyName in entity) {\n            const property = entity[propertyName];\n            let propertyCopy;\n            if (property instanceof Object) {\n                if (property instanceof Array) {\n                    propertyCopy = property.map(aProperty => this.doDeserialize(aProperty, operation));\n                }\n                else {\n                    propertyCopy = this.doDeserialize(property, operation);\n                }\n            }\n            else {\n                propertyCopy = property;\n            }\n            deserializedEntity[propertyName] = propertyCopy;\n        }\n        delete deserializedEntity[this.serializationStateManager.getUniqueIdFieldName()];\n        return deserializedEntity;\n    }\n    // private getArrayEntityMap() {\n    // \t{\n    // \t\thasWithoutId: boolean\n    // \t\thasObjects: boolean\n    // \t\thasEntities: boolean\n    // \t\thasPrimitives: boolean\n    // \t\tentityMap: Map < string, ArrayMemberEntityRecord < any >>\n    // \t\t\tentityArray: ArrayMemberRecod[]\n    // \t}\n    // }\n    deepCopyProperties(from, to) {\n        if (from instanceof Array) {\n            // let fromArrayEntityMapByGUID: Map<string, ArrayMemberEntityRecord<any>> = new Map()\n            // let toArrayEntityMapByGUID: Map<string, ArrayMemberEntityRecord<any>> = new Map()\n            // let haveFromWithoutId = false\n            // let haveFromObjects = false\n            // let haveFromEntities = false\n            // let haveFromPrimitives = false\n            // for (let i = 0; i < from.length; i++) {\n            // \tlet fromEntity = from[i]\n            // \tif (fromEntity instanceof Object && !(fromEntity instanceof Date)) {\n            // \t\thaveFromObjects = true\n            // \t\tlet entityGUID = this.airEntityUtils.encodeId(from[i])\n            // \t\tif (entityGUID) {\n            // \t\t\thaveFromEntities = true\n            // \t\t\tfromArrayEntityMapByGUID.set(entityGUID, from[i])\n            // \t\t} else {\n            // \t\t\thaveFromWithoutId = true\n            // \t\t}\n            // \t} else {\n            // \t\thaveFromPrimitives = true\n            // \t}\n            // }\n            // let haveToWithoutId = false\n            // for (let i = 0; i < from.length; i++) {\n            // \tthis.deepCopyProperties(from[i], to[i])\n            // }\n            for (let i = 0; i < from.length; i++) {\n                this.deepCopyProperties(from[i], to[i]);\n            }\n        }\n        if (!(from instanceof Object)) {\n            return;\n        }\n        if (from instanceof Date) {\n            return;\n        }\n        for (let propertyName in from) {\n            if (!from.hasOwnProperty(propertyName)) {\n                continue;\n            }\n            let fromProperty = from[propertyName];\n            let toProperty = to[propertyName];\n            if (fromProperty instanceof Object && toProperty instanceof Object) {\n                this.deepCopyProperties(fromProperty, toProperty);\n            }\n            else {\n                to[propertyName] = from[propertyName];\n            }\n        }\n        for (let propertyName in to) {\n            if (!to.hasOwnProperty(propertyName)) {\n                continue;\n            }\n            if (!from.hasOwnProperty(propertyName)) {\n                delete to[propertyName];\n            }\n        }\n        this.doSetPropertyDescriptors(to);\n    }\n    setPropertyDescriptors(object) {\n        if (object instanceof Array) {\n            for (let i = 0; i < object.length; i++) {\n                this.setPropertyDescriptors(object[i]);\n            }\n        }\n        if (!(object instanceof Object)) {\n            return;\n        }\n        if (object instanceof Date) {\n            return;\n        }\n        for (let propertyName in object) {\n            if (!object.hasOwnProperty(propertyName)) {\n                continue;\n            }\n            let property = object[propertyName];\n            if (property instanceof Object) {\n                this.setPropertyDescriptors(property);\n            }\n        }\n        this.doSetPropertyDescriptors(object);\n    }\n    doSetPropertyDescriptors(object) {\n        let objectPrototype = Object.getPrototypeOf(object);\n        if (!object.id\n            && !Object.getOwnPropertyDescriptor(object, 'id')\n            && (!objectPrototype\n                || !Object.getOwnPropertyDescriptor(objectPrototype, 'id'))) {\n            Object.defineProperty(object, 'id', {\n                get() {\n                    return this.__container__.getSync(AIR_ENTITY_UTILS).encodeId(this);\n                },\n                set(idString) {\n                    this.__container__.getSync(AIR_ENTITY_UTILS).setId(idString, this);\n                }\n            });\n        }\n        if (!object.isNew\n            && !Object.getOwnPropertyDescriptor(object, 'isNew')\n            && (!objectPrototype\n                || !Object.getOwnPropertyDescriptor(objectPrototype, 'isNew'))) {\n            Object.defineProperty(object, 'isNew', {\n                get() {\n                    return !!this._actorRecordId;\n                }\n            });\n        }\n        if (!object.createdBy\n            && !Object.getOwnPropertyDescriptor(object, 'createdBy')\n            && (!objectPrototype\n                || !Object.getOwnPropertyDescriptor(objectPrototype, 'createdBy'))) {\n            Object.defineProperty(object, 'createdBy', {\n                get() {\n                    return this.actor.userAccount;\n                }\n            });\n        }\n    }\n};\n__decorate([\n    Inject()\n], QueryResultsDeserializer.prototype, \"airEntityUtils\", void 0);\n__decorate([\n    Inject()\n], QueryResultsDeserializer.prototype, \"serializationStateManager\", void 0);\nQueryResultsDeserializer = __decorate([\n    Injected()\n], QueryResultsDeserializer);\nexport { QueryResultsDeserializer };\n//# sourceMappingURL=QueryResultsDeserializer.js.map","import { lib } from '@airport/direction-indicator';\nimport { QueryResultsDeserializer } from './QueryResultsDeserializer';\nimport { OperationSerializer } from './OperationSerializer';\nimport { SerializationStateManager } from './SerializationStateManager';\nimport { AIR_ENTITY_UTILS } from '@airport/aviation-communication';\nconst pressurization = lib('pressurization');\nexport const OPERATION_SERIALIZER = pressurization.token({\n    class: OperationSerializer,\n    interface: 'IOperationSerializer',\n    token: 'OPERATION_SERIALIZER'\n});\nexport const QUERY_RESULTS_DESERIALIZER = pressurization.token({\n    class: QueryResultsDeserializer,\n    interface: 'IQueryResultsDeserializer',\n    token: 'QUERY_RESULTS_DESERIALIZER'\n});\nexport const SERIALIZATION_STATE_MANAGER = pressurization.token({\n    class: SerializationStateManager,\n    interface: 'ISerializationStateManager',\n    token: 'SERIALIZATION_STATE_MANAGER'\n});\nOPERATION_SERIALIZER.setDependencies({\n    serializationStateManager: SERIALIZATION_STATE_MANAGER\n});\nQUERY_RESULTS_DESERIALIZER.setDependencies({\n    airEntityUtils: AIR_ENTITY_UTILS,\n    serializationStateManager: SERIALIZATION_STATE_MANAGER\n});\n//# sourceMappingURL=tokens.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar UiStateManager_1;\nimport { Injected } from \"@airport/direction-indicator\";\nexport var EntityState;\n(function (EntityState) {\n    EntityState[\"CREATE\"] = \"CREATE\";\n    EntityState[\"DATE\"] = \"DATE\";\n    EntityState[\"DELETE\"] = \"DELETE\";\n    EntityState[\"PARENT_SCHEMA_ID\"] = \"PARENT_SCHEMA_LID\";\n    EntityState[\"STUB\"] = \"STUB\";\n    EntityState[\"UPDATE\"] = \"UPDATE\";\n})(EntityState || (EntityState = {}));\nlet UiStateManager = UiStateManager_1 = class UiStateManager {\n    isStub(entity) {\n        return this.getEntityState(entity) === EntityState.STUB;\n    }\n    isParentSchemaId(entity) {\n        return this.getEntityState(entity) === EntityState.PARENT_SCHEMA_ID;\n    }\n    markForDeletion(entity, arrayToRemoveFrom) {\n        entity[UiStateManager_1.STATE_FIELD] = EntityState.DELETE;\n        if (!arrayToRemoveFrom) {\n            return;\n        }\n        for (let i = arrayToRemoveFrom.length - 1; i >= 0; i--) {\n            if (arrayToRemoveFrom[i] === entity) {\n                arrayToRemoveFrom.splice(i, 1);\n                break;\n            }\n        }\n    }\n    isDeleted(entity) {\n        return entity[UiStateManager_1.STATE_FIELD] === EntityState.DELETE;\n    }\n    markAsStub(entity) {\n        entity[UiStateManager_1.STATE_FIELD] = EntityState.STUB;\n    }\n    getEntityState(entity) {\n        return entity[UiStateManager_1.STATE_FIELD];\n    }\n};\nUiStateManager.STATE_FIELD = '__state__';\nUiStateManager = UiStateManager_1 = __decorate([\n    Injected()\n], UiStateManager);\nexport { UiStateManager };\n//# sourceMappingURL=UiStateManager.js.map","import { AUTOPILOT_API_LOADER, INTER_APP_API_CLIENT, lib } from \"@airport/direction-indicator\";\nimport { OPERATION_SERIALIZER, QUERY_RESULTS_DESERIALIZER } from \"@airport/pressurization\";\nimport { AutopilotApiLoader } from \"./api/AutopilotApiLoader\";\nimport { LocalAPIClient } from \"./LocalAPIClient\";\nimport { UiStateManager } from \"./UiStateManager\";\nconst autopilot = lib('autopilot');\nexport const LOCAL_API_CLIENT = autopilot.token({\n    class: LocalAPIClient,\n    interface: 'ILocalAPIClient',\n    token: 'LOCAL_API_CLIENT'\n});\nexport const UI_STATE_MANAGER = autopilot.token({\n    class: UiStateManager,\n    interface: 'IUiStateManager',\n    token: 'UI_STATE_MANAGER'\n});\nLOCAL_API_CLIENT.setDependencies({\n    operationSerializer: OPERATION_SERIALIZER,\n    queryResultsDeserializer: QUERY_RESULTS_DESERIALIZER\n});\nAUTOPILOT_API_LOADER.setClass(AutopilotApiLoader);\nAUTOPILOT_API_LOADER.setDependencies({\n    interAppApiClient: INTER_APP_API_CLIENT,\n    localApiClient: LOCAL_API_CLIENT\n});\n//# sourceMappingURL=tokens.js.map","export * from './LocalAPIClient';\nexport * from './api/AutopilotApiLoader';\nexport * from './globalApis';\nexport * from './UiStateManager';\nexport * from './tokens';\nexport function loadAutopilot() {\n    console.log(\"@airport/autopilot loaded\");\n}\n//# sourceMappingURL=index.js.map","export * from './UserAccountApi';\nimport { loadAutopilot } from '@airport/autopilot';\nloadAutopilot();\n//# sourceMappingURL=api.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbNumber, DbString, Entity, Id, JoinColumn, ManyToOne, OneToMany, Table } from \"@airport/tarmaq-entity\";\nlet Client = class Client {\n};\n__decorate([\n    Id(),\n    DbNumber(),\n    Column({ name: 'CLIENT_LID' })\n], Client.prototype, \"_localId\", void 0);\n__decorate([\n    DbString(),\n    Column({ name: 'CLIENT_DOMAIN' })\n], Client.prototype, \"domain\", void 0);\n__decorate([\n    DbString(),\n    Column({ name: 'CLIENT_GUID' })\n], Client.prototype, \"GUID\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'CONTINENT_ID',\n        referencedColumnName: 'CONTINENT_ID', nullable: true\n    })\n], Client.prototype, \"continent\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'COUNTRY_ID',\n        referencedColumnName: 'COUNTRY_ID', nullable: true\n    })\n], Client.prototype, \"country\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'STATE_ID',\n        referencedColumnName: 'STATE_ID', nullable: true\n    })\n], Client.prototype, \"state\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'METRO_AREA_ID',\n        referencedColumnName: 'METRO_AREA_ID', nullable: true\n    })\n], Client.prototype, \"metroArea\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'client' })\n], Client.prototype, \"clientTypes\", void 0);\nClient = __decorate([\n    Entity(),\n    Table({\n        name: 'CLIENTS'\n    })\n], Client);\nexport { Client };\n//# sourceMappingURL=Client.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Entity, Id, JoinColumn, ManyToOne, Table } from '@airport/tarmaq-entity';\nlet ClientType = class ClientType {\n};\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({\n        name: 'CLIENT_LID',\n        referencedColumnName: 'CLIENT_LID'\n    })\n], ClientType.prototype, \"client\", void 0);\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({\n        name: 'TYPE_ID',\n        referencedColumnName: 'TYPE_ID'\n    })\n], ClientType.prototype, \"type\", void 0);\nClientType = __decorate([\n    Entity(),\n    Table({\n        name: 'CLIENT_TYPES'\n    })\n], ClientType);\nexport { ClientType };\n//# sourceMappingURL=ClientType.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbNumber, DbString, Entity, Id, JoinColumn, ManyToOne, OneToMany, Table } from \"@airport/tarmaq-entity\";\nlet Database = class Database {\n};\n__decorate([\n    Id(),\n    DbNumber(),\n    Column({ name: 'DATABASE_LID' })\n], Database.prototype, \"_localId\", void 0);\n__decorate([\n    DbString(),\n    Column({ name: 'DATABASE_DOMAIN' })\n], Database.prototype, \"domain\", void 0);\n__decorate([\n    DbString(),\n    Column({ name: 'DATABASE_GUID' })\n], Database.prototype, \"GUID\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'CONTINENT_ID',\n        referencedColumnName: 'CONTINENT_ID', nullable: true\n    })\n], Database.prototype, \"continent\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'COUNTRY_ID',\n        referencedColumnName: 'COUNTRY_ID', nullable: true\n    })\n], Database.prototype, \"country\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'STATE_ID',\n        referencedColumnName: 'STATE_ID', nullable: true\n    })\n], Database.prototype, \"state\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'METRO_AREA_ID',\n        referencedColumnName: 'METRO_AREA_ID', nullable: true\n    })\n], Database.prototype, \"metroArea\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'database' })\n], Database.prototype, \"databaseTypes\", void 0);\nDatabase = __decorate([\n    Entity(),\n    Table({\n        name: 'DATABASES'\n    })\n], Database);\nexport { Database };\n//# sourceMappingURL=Database.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Entity, Id, JoinColumn, ManyToOne, Table } from '@airport/tarmaq-entity';\nlet DatabaseType = class DatabaseType {\n};\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({\n        name: 'DATABASE_LID',\n        referencedColumnName: 'DATABASE_LID', nullable: true\n    })\n], DatabaseType.prototype, \"database\", void 0);\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({\n        name: 'TYPE_ID',\n        referencedColumnName: 'TYPE_ID', nullable: true\n    })\n], DatabaseType.prototype, \"type\", void 0);\nDatabaseType = __decorate([\n    Entity(),\n    Table({\n        name: 'DATABASE_TYPE'\n    })\n], DatabaseType);\nexport { DatabaseType };\n//# sourceMappingURL=DatabaseType.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbNumber, DbString, Entity, Id, OneToMany, Table } from \"@airport/tarmaq-entity\";\nlet Continent = class Continent {\n};\n__decorate([\n    Id(),\n    DbNumber(),\n    Column({ name: 'CONTINENT_ID' })\n], Continent.prototype, \"id\", void 0);\n__decorate([\n    DbString()\n], Continent.prototype, \"name\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'continent' })\n], Continent.prototype, \"countries\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'continent' })\n], Continent.prototype, \"userAccounts\", void 0);\nContinent = __decorate([\n    Entity(),\n    Table({ name: \"CONTINENTS\" })\n], Continent);\nexport { Continent };\n//# sourceMappingURL=Continent.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbNumber, DbString, Entity, GeneratedValue, Id, JoinColumn, ManyToOne, OneToMany, Table } from \"@airport/tarmaq-entity\";\nlet Country = class Country {\n};\n__decorate([\n    Id(),\n    GeneratedValue(),\n    DbNumber(),\n    Column({ name: 'COUNTRY_ID' })\n], Country.prototype, \"id\", void 0);\n__decorate([\n    DbString()\n], Country.prototype, \"abbreviation\", void 0);\n__decorate([\n    DbString()\n], Country.prototype, \"name\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'CONTINENT_ID',\n        referencedColumnName: 'CONTINENT_ID'\n    })\n], Country.prototype, \"continent\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'country' })\n], Country.prototype, \"userAccounts\", void 0);\nCountry = __decorate([\n    Entity(),\n    Table({ name: \"COUNTRIES\" })\n], Country);\nexport { Country };\n//# sourceMappingURL=Country.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbNumber, DbString, Entity, GeneratedValue, Id, JoinColumn, ManyToOne, OneToMany, Table } from \"@airport/tarmaq-entity\";\nlet MetroArea = class MetroArea {\n};\n__decorate([\n    Id(),\n    GeneratedValue(),\n    DbNumber(),\n    Column({ name: 'METRO_AREA_ID' })\n], MetroArea.prototype, \"id\", void 0);\n__decorate([\n    DbString()\n], MetroArea.prototype, \"name\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'COUNTRY_ID',\n        referencedColumnName: 'COUNTRY_ID'\n    })\n], MetroArea.prototype, \"country\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'metroArea' })\n], MetroArea.prototype, \"metroAreaStates\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'metroArea' })\n], MetroArea.prototype, \"userAccounts\", void 0);\nMetroArea = __decorate([\n    Entity(),\n    Table({ name: \"METRO_AREAS\" })\n], MetroArea);\nexport { MetroArea };\n//# sourceMappingURL=MetroArea.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Entity, Id, JoinColumn, ManyToOne, Table } from \"@airport/tarmaq-entity\";\nlet MetroAreaState = class MetroAreaState {\n};\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({\n        name: 'STATE_ID',\n        referencedColumnName: 'STATE_ID'\n    })\n], MetroAreaState.prototype, \"state\", void 0);\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({\n        name: 'METRO_AREA_ID',\n        referencedColumnName: 'METRO_AREA_ID'\n    })\n], MetroAreaState.prototype, \"metroArea\", void 0);\nMetroAreaState = __decorate([\n    Entity(),\n    Table({ name: \"METRO_AREA_STATES\" })\n], MetroAreaState);\nexport { MetroAreaState };\n//# sourceMappingURL=MetroAreaState.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbNumber, DbString, Entity, GeneratedValue, Id, JoinColumn, ManyToOne, OneToMany, Table } from \"@airport/tarmaq-entity\";\nlet State = class State {\n};\n__decorate([\n    Id(),\n    GeneratedValue(),\n    DbNumber(),\n    Column({ name: 'STATE_ID' })\n], State.prototype, \"id\", void 0);\n__decorate([\n    DbString()\n], State.prototype, \"abbreviation\", void 0);\n__decorate([\n    DbString()\n], State.prototype, \"name\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'COUNTRY_ID',\n        referencedColumnName: 'COUNTRY_ID'\n    })\n], State.prototype, \"country\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'state' })\n], State.prototype, \"metroAreaStates\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'state' })\n], State.prototype, \"userAccounts\", void 0);\nState = __decorate([\n    Entity(),\n    Table({ name: \"STATES\" })\n], State);\nexport { State };\n//# sourceMappingURL=State.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbBoolean, DbNumber, DbString, Entity, GeneratedValue, Id, JoinColumn, ManyToOne, OneToMany, Table } from '@airport/tarmaq-entity';\nlet Terminal = class Terminal {\n    constructor() {\n        this.isLocal = false;\n    }\n};\n__decorate([\n    Id(),\n    GeneratedValue(),\n    DbNumber(),\n    Column({ name: 'TERMINAL_LID' })\n], Terminal.prototype, \"_localId\", void 0);\n__decorate([\n    Column({ name: 'GUID', nullable: false }),\n    DbString()\n], Terminal.prototype, \"GUID\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'OWNER_USER_ACCOUNT_LID',\n        referencedColumnName: 'USER_ACCOUNT_LID', nullable: true\n    })\n], Terminal.prototype, \"owner\", void 0);\n__decorate([\n    Column({ name: 'IS_LOCAL', nullable: false }),\n    DbBoolean()\n], Terminal.prototype, \"isLocal\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'CONTINENT_ID',\n        referencedColumnName: 'CONTINENT_ID', nullable: true\n    })\n], Terminal.prototype, \"continent\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'COUNTRY_ID',\n        referencedColumnName: 'COUNTRY_ID', nullable: true\n    })\n], Terminal.prototype, \"country\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'STATE_ID',\n        referencedColumnName: 'STATE_ID', nullable: true\n    })\n], Terminal.prototype, \"state\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'METRO_AREA_ID',\n        referencedColumnName: 'METRO_AREA_ID', nullable: true\n    })\n], Terminal.prototype, \"metroArea\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'terminal' })\n], Terminal.prototype, \"terminalTypes\", void 0);\nTerminal = __decorate([\n    Entity(),\n    Table({\n        name: 'TERMINALS',\n        indexes: (t) => [{\n                property: t.GUID,\n                unique: true\n            }]\n    })\n], Terminal);\nexport { Terminal };\n//# sourceMappingURL=Terminal.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Entity, Id, JoinColumn, ManyToOne, Table } from '@airport/tarmaq-entity';\nlet TerminalType = class TerminalType {\n};\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({\n        name: 'TERMINAL_LID',\n        referencedColumnName: 'TERMINAL_LID'\n    })\n], TerminalType.prototype, \"terminal\", void 0);\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({\n        name: 'TYPE_ID',\n        referencedColumnName: 'TYPE_ID'\n    })\n], TerminalType.prototype, \"type\", void 0);\nTerminalType = __decorate([\n    Entity(),\n    Table({\n        name: 'TERMINAL_TYPES'\n    })\n], TerminalType);\nexport { TerminalType };\n//# sourceMappingURL=TerminalType.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, Entity, Id, Table } from '@airport/tarmaq-entity';\nlet Classification = class Classification {\n};\n__decorate([\n    Id(),\n    Column({ name: 'CLASSIFICATION_ID' })\n], Classification.prototype, \"id\", void 0);\nClassification = __decorate([\n    Entity(),\n    Table({\n        name: 'CLASSIFICATIONS'\n    })\n], Classification);\nexport { Classification };\n//# sourceMappingURL=Classification.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, Entity, Id, OneToMany, Table } from '@airport/tarmaq-entity';\nlet Type = class Type {\n};\n__decorate([\n    Id(),\n    Column({ name: 'TYPE_ID' })\n], Type.prototype, \"id\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'type' })\n], Type.prototype, \"typeClassifications\", void 0);\nType = __decorate([\n    Entity(),\n    Table({\n        name: 'TYPES'\n    })\n], Type);\nexport { Type };\n//# sourceMappingURL=Type.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Entity, Id, JoinColumn, ManyToOne, Table } from '@airport/tarmaq-entity';\nlet TypeClassification = class TypeClassification {\n};\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({\n        name: 'CLASSIFICATION_ID',\n        referencedColumnName: 'CLASSIFICATION_ID'\n    })\n], TypeClassification.prototype, \"classification\", void 0);\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({\n        name: 'TYPE_ID',\n        referencedColumnName: 'TYPE_ID'\n    })\n], TypeClassification.prototype, \"type\", void 0);\nTypeClassification = __decorate([\n    Entity(),\n    Table({\n        name: 'TYPE_CLASSIFICATIONS'\n    })\n], TypeClassification);\nexport { TypeClassification };\n//# sourceMappingURL=TypeClassification.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbNumber, DbString, Entity, GeneratedValue, Id, JoinColumn, ManyToOne, } from '@airport/tarmaq-entity';\nlet UserAccount = class UserAccount {\n};\n__decorate([\n    Id(),\n    GeneratedValue(),\n    DbNumber(),\n    Column({ name: 'USER_ACCOUNT_LID' })\n], UserAccount.prototype, \"_localId\", void 0);\n__decorate([\n    Column({ name: \"EMAIL\" }),\n    DbString()\n], UserAccount.prototype, \"email\", void 0);\n__decorate([\n    Column({ name: \"PASSWORD_HASH\" }),\n    DbString()\n], UserAccount.prototype, \"passwordHash\", void 0);\n__decorate([\n    Column({ name: \"RANKING\" }),\n    DbNumber()\n], UserAccount.prototype, \"ranking\", void 0);\n__decorate([\n    Column({ name: \"USER_ACCOUNTNAME\" }),\n    DbString()\n], UserAccount.prototype, \"username\", void 0);\n__decorate([\n    Column({ name: \"USER_ACCOUNT_GUID\", nullable: false }),\n    DbString()\n], UserAccount.prototype, \"GUID\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'DOMAIN_LID',\n        referencedColumnName: 'DOMAIN_LID'\n    })\n], UserAccount.prototype, \"domain\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'CONTINENT_ID',\n        referencedColumnName: 'CONTINENT_ID', nullable: true\n    })\n], UserAccount.prototype, \"continent\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'COUNTRY_ID',\n        referencedColumnName: 'COUNTRY_ID', nullable: true\n    })\n], UserAccount.prototype, \"country\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'STATE_ID',\n        referencedColumnName: 'STATE_ID', nullable: true\n    })\n], UserAccount.prototype, \"state\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'METRO_AREA_ID',\n        referencedColumnName: 'METRO_AREA_ID', nullable: true\n    })\n], UserAccount.prototype, \"metroArea\", void 0);\nUserAccount = __decorate([\n    Entity()\n], UserAccount);\nexport { UserAccount };\n//# sourceMappingURL=UserAccount.js.map","import { airApi } from '@airport/aviation-communication';\nimport { Classification, Client, ClientType, Continent, Country, Database, DatabaseType, MetroArea, MetroAreaState, State, Terminal, TerminalType, Type, TypeClassification, UserAccount } from '../ddl/ddl';\nconst __constructors__ = {\n    Classification: Classification,\n    Client: Client,\n    ClientType: ClientType,\n    Continent: Continent,\n    Country: Country,\n    Database: Database,\n    DatabaseType: DatabaseType,\n    MetroArea: MetroArea,\n    MetroAreaState: MetroAreaState,\n    State: State,\n    Terminal: Terminal,\n    TerminalType: TerminalType,\n    Type: Type,\n    TypeClassification: TypeClassification,\n    UserAccount: UserAccount\n};\nexport const Q_APPLICATION = {\n    __constructors__,\n    domain: 'air',\n    name: '@airport/travel-document-checkpoint'\n};\nexport const Q = Q_APPLICATION;\nexport function diSet(dbEntityId) {\n    return airApi.dS(Q.__dbApplication__, dbEntityId);\n}\nexport function duoDiSet(dbEntityId) {\n    return airApi.ddS(Q.__dbApplication__, dbEntityId);\n}\nairApi.setQApplication(Q_APPLICATION);\n//# sourceMappingURL=qApplication.js.map","import { INTER_APP_API_CLIENT } from '@airport/direction-indicator';\nimport { UserAccountApi } from '../generated/api/api';\nimport { USER_ACCOUNT_API } from './common-tokens';\nUSER_ACCOUNT_API.setClass(UserAccountApi);\nUSER_ACCOUNT_API.setDependencies({\n    interAppApiClient: INTER_APP_API_CLIENT\n});\n//# sourceMappingURL=api-tokens.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Actor, } from \"@airport/holding-pattern/lib/to_be_generated/runtime-index\";\nimport { Terminal, UserAccount } from \"@airport/travel-document-checkpoint\";\nimport { v4 as guidv4 } from \"uuid\";\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet InternalRecordManager = class InternalRecordManager {\n    async ensureApplicationRecords(application, context) {\n        await this.transactionManager.transactInternal(async (_transaction, context) => {\n            await this.updateDomain(application, context);\n            let actorMapForDomain = this.terminalStore\n                .getApplicationActorMapByDomainAndApplication_Names().get(application.domain);\n            let actors;\n            if (actorMapForDomain) {\n                actors = actorMapForDomain.get(application.name);\n                if (actors && actors.length) {\n                    return;\n                }\n            }\n            actors = await this.actorDao.findByDomainAndApplication_Names(application.domain, application.name);\n            let anApplication = await this.applicationDao.findByIndex(application.lastIds.applications + 1);\n            if (!actors || !actors.length) {\n                const frameworkActor = this.terminalStore.getFrameworkActor();\n                const actor = {\n                    _localId: null,\n                    application: anApplication,\n                    terminal: frameworkActor.terminal,\n                    userAccount: frameworkActor.userAccount,\n                    GUID: guidv4()\n                };\n                await this.actorDao.save(actor, context);\n                actors = [actor];\n            }\n            const lastTerminalState = this.terminalStore.getTerminalState();\n            const applications = lastTerminalState.applications.slice();\n            applications.push(anApplication);\n            let applicationActors = lastTerminalState.applicationActors.slice();\n            applicationActors = applicationActors.concat(actors);\n            this.terminalStore.state.next({\n                ...lastTerminalState,\n                applicationActors,\n                applications\n            });\n        }, context);\n    }\n    async initTerminal(domainName, context) {\n        await this.transactionManager.transactInternal(async (_transaction) => {\n            const userAccount = new UserAccount();\n            userAccount.GUID = 'AIRport-internal-' + guidv4();\n            userAccount.username = \"internalUserAccount\";\n            const terminal = new Terminal();\n            terminal.owner = userAccount;\n            terminal.isLocal = true;\n            terminal.GUID = guidv4();\n            const actor = new Actor();\n            actor.userAccount = userAccount;\n            actor.terminal = terminal;\n            actor.GUID = guidv4();\n            const actorDao = await this.getactorDaoAsync();\n            await actorDao.save(actor, context);\n            const lastTerminalState = this.terminalStore.getTerminalState();\n            this.terminalStore.state.next({\n                ...lastTerminalState,\n                frameworkActor: actor,\n                terminal\n            });\n        }, context);\n    }\n    async updateDomain(application, context) {\n        let domain = this.terminalStore.getDomainMapByName().get(application.domain);\n        if (domain && this.entityStateManager.getOriginalValues(domain)) {\n            return domain;\n        }\n        let dbDomain = await this.domainDao.findByName(application.domain);\n        let updatedDomain;\n        if (domain) {\n            if (dbDomain) {\n                this.entityStateManager.setOriginalValues(this.entityStateManager.getOriginalValues(dbDomain), domain);\n                updatedDomain = domain;\n            }\n        }\n        else {\n            if (dbDomain) {\n                updatedDomain = dbDomain;\n            }\n            else {\n                updatedDomain = {\n                    _localId: null,\n                    name: application.domain,\n                };\n                await this.domainDao.save(updatedDomain, context);\n            }\n        }\n        if (!updatedDomain) {\n            return domain;\n        }\n        const lastTerminalState = this.terminalStore.getTerminalState();\n        const domains = lastTerminalState.domains.slice();\n        let replaced = false;\n        for (let i = 0; i < domains.length; i++) {\n            let currentDomain = domains[i];\n            if (currentDomain.name === domain.name) {\n                domains.splice(i, 1, domain);\n                replaced = true;\n            }\n        }\n        if (!replaced) {\n            domains.push(domain);\n        }\n        this.terminalStore.state.next({\n            ...lastTerminalState,\n            domains\n        });\n        return updatedDomain;\n    }\n};\n__decorate([\n    Inject()\n], InternalRecordManager.prototype, \"actorDao\", void 0);\n__decorate([\n    Inject()\n], InternalRecordManager.prototype, \"applicationDao\", void 0);\n__decorate([\n    Inject()\n], InternalRecordManager.prototype, \"domainDao\", void 0);\n__decorate([\n    Inject()\n], InternalRecordManager.prototype, \"entityStateManager\", void 0);\n__decorate([\n    Inject()\n], InternalRecordManager.prototype, \"terminalStore\", void 0);\n__decorate([\n    Inject()\n], InternalRecordManager.prototype, \"transactionManager\", void 0);\nInternalRecordManager = __decorate([\n    Injected()\n], InternalRecordManager);\nexport { InternalRecordManager };\n//# sourceMappingURL=InternalRecordManager.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet InternalTransactionalConnector = class InternalTransactionalConnector {\n    callApi(_) {\n        throw new Error(`InternalTransactionalConnector.callApi should never be called.\r\nInteral Application API requests should be made directly (since\r\nthey are internal to the AIRport framework).`);\n    }\n    async find(portableQuery, context, cachedSqlQueryId) {\n        return await this.transactionalServer.find(portableQuery, this.terminalStore.getInternalConnector().internalCredentials, {\n            internal: true,\n            ...context\n        }, cachedSqlQueryId);\n    }\n    async findOne(portableQuery, context, cachedSqlQueryId) {\n        return await this.transactionalServer.findOne(portableQuery, this.terminalStore.getInternalConnector().internalCredentials, {\n            internal: true,\n            ...context\n        }, cachedSqlQueryId);\n    }\n    search(portableQuery, context, cachedSqlQueryId) {\n        return this.transactionalServer.search(portableQuery, this.terminalStore.getInternalConnector().internalCredentials, {\n            internal: true,\n            ...context\n        }, cachedSqlQueryId);\n    }\n    searchOne(portableQuery, context, cachedSqlQueryId) {\n        return this.transactionalServer.searchOne(portableQuery, this.terminalStore.getInternalConnector().internalCredentials, {\n            internal: true,\n            ...context\n        }, cachedSqlQueryId);\n    }\n    async save(entity, context) {\n        return await this.transactionalServer.save(entity, this.terminalStore.getInternalConnector().internalCredentials, {\n            internal: true,\n            ...context\n        });\n    }\n    async saveToDestination(repositoryDestination, entity, context) {\n        return await this.transactionalServer.saveToDestination(repositoryDestination, entity, this.terminalStore.getInternalConnector().internalCredentials, {\n            internal: true,\n            ...context\n        });\n    }\n    async insertValues(portableQuery, context, ensureGeneratedValues // For internal use only\n    ) {\n        return await this.transactionalServer.insertValues(portableQuery, this.terminalStore.getInternalConnector().internalCredentials, {\n            internal: true,\n            ...context\n        }, ensureGeneratedValues);\n    }\n    async insertValuesGetLocalIds(portableQuery, context) {\n        return await this.transactionalServer.insertValuesGetLocalIds(portableQuery, this.terminalStore.getInternalConnector().internalCredentials, {\n            internal: true,\n            ...context\n        });\n    }\n    async updateValues(portableQuery, context) {\n        return await this.transactionalServer.updateValues(portableQuery, this.terminalStore.getInternalConnector().internalCredentials, {\n            internal: true,\n            ...context\n        });\n    }\n    async deleteWhere(portableQuery, context) {\n        return await this.transactionalServer.deleteWhere(portableQuery, this.terminalStore.getInternalConnector().internalCredentials, {\n            internal: true,\n            ...context\n        });\n    }\n    onMessage(callback) {\n        // Nothing to do, onMessage callback was added for demo purposes for Web implementations\n    }\n};\n__decorate([\n    Inject()\n], InternalTransactionalConnector.prototype, \"terminalStore\", void 0);\n__decorate([\n    Inject()\n], InternalTransactionalConnector.prototype, \"transactionalServer\", void 0);\nInternalTransactionalConnector = __decorate([\n    Injected()\n], InternalTransactionalConnector);\nexport { InternalTransactionalConnector };\nexport function injectTransactionalConnector() {\n    console.log('Injecting TransactionalConnector');\n}\n//# sourceMappingURL=InternalTransactionalConnector.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { BlockSyncStatus } from '@airport/ground-control';\nimport { RepositoryTransactionHistory, UpdateState, } from '@airport/holding-pattern/lib/to_be_generated/runtime-index';\nlet OnlineManager = class OnlineManager {\n    constructor() {\n        this.online = false;\n    }\n    async goOffline(context = {}) {\n        this.repositoryManager.goOffline();\n        this.online = false;\n    }\n    /**\n     There are tree update states:\n     LOCAL            0\n     REMOTE_CHANGES   1\n     GO_ONLINE        2\n     Mutation operations of lower order type are blocked until the higher order operation finishes.\n     Blocking prevents conflicts in remove transaction application.\n     Go-Online logic\n     1)  Flip update state to GO_ONLINE\n     2)  Find the lastSyncedTransaction recorded locally\n     3)  Go Online and start listening for new transactions coming in\n     a) While Go-Online is in progress continue gatethering all remote transactions that come in\n     and add them to remoteChangesSinceInitialGoOffline\n     b) Once Go-Online finishes, when remote transactions come in\n     i)  Flip update state to REMOTE_CHANGES\n     ii)  Add remote transactions to local store\n     iii) Flip state to LOCAL\n     4)  Load from deltaStore all remote transactions since lastSyncedTransaction\n     5)  Add remote transactions to local store\n     6)  While there are more transactions coming in remotely:\n     Add them to local store\n     7)  Find all local unsynced transactions\n     a)  Mark them as synchronized\n     b)  add them to deltaStore\n     c)  save them back in local store, now with the synched flag\n     (and update db with new lastSyncedTransaction)\n     8)  While there are more transactions coming in remotely:\n     Add them to local store\n     9)  Flip the online state to true\n     Finally, always flip update state to LOCAL\n     * @returns {Promise<void>}\n     */\n    async goOnline(context = {}) {\n        await this.transactionManager.transactInternal(async () => {\n            try {\n                // 1)  Flip update state to GO_ONLINE\n                this.repositoryManager.setUpdateStateForAll(UpdateState.GO_ONLINE);\n                // 2)  Find repositories\n                // const repoRecords = await this.repositoryDao.findWithTransaction()\n                const repoRecords = await this.repositoryDao.findReposWithDetailsByIds();\n                // 3) make each repository go Online\n                let goOnlineCalls = [];\n                repoRecords.forEach((repository) => {\n                    goOnlineCalls.push(this.repositoryGoOnline(repository, this.repositoryManager));\n                });\n                await Promise.all(goOnlineCalls);\n                // 9)  Flip the online state to true\n                this.online = true;\n            }\n            catch (error) {\n                // TODO: notify of error\n                throw error;\n            }\n            finally {\n                // Finally, always flip update state to LOCAL\n                this.repositoryManager.setUpdateStateForAll(UpdateState.LOCAL);\n            }\n        }, context);\n    }\n    async repositoryGoOnline(repository, repositoryManager) {\n        let deltaStore = repositoryManager.deltaStore[repository._localId];\n        let remoteChangesSinceInitialGoOnline = [];\n        // 3)  Go Online and start listening for new transactions coming in\n        await deltaStore.goOnline(async (transactions) => {\n            if (!transactions.length) {\n                return;\n            }\n            transactions = transactions.map((repoTransaction) => {\n                repoTransaction = new RepositoryTransactionHistory(repoTransaction);\n                // TODO: ?is the following needed?\n                // repoTransaction.deserialize(repository)\n                return repoTransaction;\n            });\n            // a) While Go-Online is in progress continue gathering all remote transactions\n            // that come in and add them to remoteChangesSinceInitialGoOffline\n            if (repositoryManager.getUpdateState(repository) === UpdateState.GO_ONLINE) {\n                remoteChangesSinceInitialGoOnline.push(transactions);\n            }\n            // b) Once Go-Online finishes, when remote transactions come in\n            else {\n                try {\n                    // i)  Flip update state to REMOTE_CHANGES\n                    repositoryManager.setUpdateState(repository, UpdateState.REMOTE);\n                    // ii)  Add remote transactions to local store\n                    await this.offlineDeltaStore.addRemoteChanges(repository, transactions);\n                }\n                catch (error) {\n                    // TODO: notify of error\n                    throw error;\n                }\n                finally {\n                    // iii) Flip state to LOCAL\n                    repositoryManager.setUpdateState(repository, UpdateState.LOCAL);\n                }\n            }\n        });\n        // 4)  Load from deltaStore all remote transactions since lastSyncedTransaction\n        let remoteChangesIter = await deltaStore.loadTransactionsSinceLastKnown(repository.lastSyncedTransaction);\n        let remoteChanges = [];\n        while (remoteChangesIter.hasNext()) {\n            remoteChanges.push(remoteChangesIter.next());\n        }\n        // 5)  Add remote transactions to local store\n        if (remoteChanges.length) {\n            await this.offlineDeltaStore.addRemoteChanges(repository, remoteChanges);\n        }\n        // 6)  While there are more transactions coming in remotely:\n        while (remoteChangesSinceInitialGoOnline.length) {\n            remoteChanges = remoteChangesSinceInitialGoOnline;\n            remoteChangesSinceInitialGoOnline = [];\n            // Add them to local store\n            await this.offlineDeltaStore.addRemoteChanges(repository, remoteChanges);\n        }\n        // 7)  Find all local unsynced transactions\n        let unsyncedChanges = await this.repositoryTransactionHistoryDao\n            .findUnsyncedTransactions(repository);\n        if (unsyncedChanges.length) {\n            unsyncedChanges.forEach((transaction) => {\n                // a)  Mark them as synchronized\n                transaction.syncStatus = BlockSyncStatus.SYNCHRONIZED;\n            });\n            // b)  add them to deltaStore\n            await deltaStore.addChanges(deltaStore.config.changeListConfig, unsyncedChanges);\n            // c)  save them back in local store, now with the synched flag\n            // (and update db with new lastSyncedTransaction)\n            await this.offlineDeltaStore.markChangesAsSynced(repository, null);\n        }\n        // \t8)  While there are more transactions coming in remotely:\n        // Add them to local store\n        while (remoteChangesSinceInitialGoOnline.length) {\n            remoteChanges = remoteChangesSinceInitialGoOnline;\n            remoteChangesSinceInitialGoOnline = [];\n            await this.offlineDeltaStore.addRemoteChanges(repository, remoteChanges);\n        }\n        // 9)  Flip the online state to true\n        this.online = true;\n    }\n    isOnline(context = {}) {\n        return this.online;\n    }\n};\n__decorate([\n    Inject()\n], OnlineManager.prototype, \"repositoryDao\", void 0);\n__decorate([\n    Inject()\n], OnlineManager.prototype, \"repositoryManager\", void 0);\n__decorate([\n    Inject()\n], OnlineManager.prototype, \"repositoryTransactionHistoryDao\", void 0);\n__decorate([\n    Inject()\n], OnlineManager.prototype, \"transactionManager\", void 0);\nOnlineManager = __decorate([\n    Injected()\n], OnlineManager);\nexport { OnlineManager };\n//# sourceMappingURL=OnlineManager.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { INTERNAL_DOMAIN } from '@airport/ground-control';\nimport { IsolateMessageType } from '@airport/apron';\nimport { v4 as guidv4 } from \"uuid\";\nlet TransactionalReceiver = class TransactionalReceiver {\n    async processMessage(message) {\n        let result;\n        let errorMessage;\n        try {\n            if (message.domain === INTERNAL_DOMAIN) {\n                throw new Error(`Internal domain cannot be used in external calls`);\n            }\n            let credentials = {\n                application: message.application,\n                domain: message.domain,\n                methodName: message.methodName,\n                objectName: message.objectName,\n                transactionId: message.transactionId\n            };\n            let context = {};\n            context.startedAt = new Date();\n            const { theErrorMessage, theResult } = await this.doProcessMessage(message, credentials, context);\n            errorMessage = theErrorMessage;\n            result = theResult;\n        }\n        catch (error) {\n            console.error(error);\n            result = null;\n            errorMessage = error.message;\n        }\n        return {\n            application: message.application,\n            category: 'FromDb',\n            domain: message.domain,\n            errorMessage,\n            id: message.id,\n            type: message.type,\n            result\n        };\n    }\n    async doProcessMessage(message, credentials, context) {\n        let theErrorMessage = null;\n        let theResult = null;\n        switch (message.type) {\n            case IsolateMessageType.APP_INITIALIZING:\n                let initConnectionMessage = message;\n                const application = initConnectionMessage.jsonApplication;\n                const fullApplication_Name = this.dbApplicationUtils.\n                    getFullApplication_Name(application);\n                const messageFullApplication_Name = this.dbApplicationUtils.\n                    getFullApplication_NameFromDomainAndName(message.domain, message.application);\n                if (fullApplication_Name !== messageFullApplication_Name) {\n                    theResult = null;\n                    break;\n                }\n                if (this.terminalStore.getReceiver().initializingApps\n                    .has(fullApplication_Name)) {\n                    return {\n                        theErrorMessage,\n                        theResult\n                    };\n                }\n                this.terminalStore.getReceiver().initializingApps\n                    .add(fullApplication_Name);\n                // FIXME: initalize ahead of time, at Isolate Loading\n                await this.databaseManager.initFeatureApplications({}, [application]);\n                await this.internalRecordManager.ensureApplicationRecords(application, {});\n                theResult = application.lastIds;\n                break;\n            case IsolateMessageType.APP_INITIALIZED:\n                const initializedApps = this.terminalStore.getReceiver().initializedApps;\n                initializedApps.add(message.fullApplication_Name);\n                return {\n                    theErrorMessage,\n                    theResult\n                };\n            case IsolateMessageType.GET_LATEST_APPLICATION_VERSION_BY_APPLICATION_NAME: {\n                theResult = this.terminalStore.getLatestApplicationVersionMapByFullApplication_Name()\n                    .get(message.fullApplication_Name);\n                break;\n            }\n            case IsolateMessageType.RETRIEVE_DOMAIN: {\n                theResult = this.terminalStore.getDomainMapByName()\n                    .get(message.domain);\n                break;\n            }\n            case IsolateMessageType.DELETE_WHERE:\n                const deleteWhereMessage = message;\n                theResult = await this.transactionalServer.deleteWhere(deleteWhereMessage.portableQuery, credentials, context);\n                break;\n            case IsolateMessageType.FIND:\n                const findMessage = message;\n                theResult = await this.transactionalServer.find(findMessage.portableQuery, credentials, {\n                    ...context,\n                    repository: findMessage.repository\n                });\n                break;\n            case IsolateMessageType.FIND_ONE:\n                const findOneMessage = message;\n                theResult = await this.transactionalServer.findOne(findOneMessage.portableQuery, credentials, {\n                    ...context,\n                    repository: findOneMessage.repository,\n                });\n                break;\n            case IsolateMessageType.INSERT_VALUES:\n                const insertValuesMessage = message;\n                theResult = await this.transactionalServer.insertValues(insertValuesMessage.portableQuery, credentials, context);\n                break;\n            case IsolateMessageType.INSERT_VALUES_GET_IDS:\n                const insertValuesGetIdsMessage = message;\n                theResult = await this.transactionalServer.insertValuesGetLocalIds(insertValuesGetIdsMessage.portableQuery, credentials, context);\n                break;\n            case IsolateMessageType.SAVE:\n            case IsolateMessageType.SAVE_TO_DESTINATION: {\n                const saveMessage = message;\n                if (!saveMessage.dbEntity) {\n                    theErrorMessage = `DbEntity id was not passed in`;\n                    break;\n                }\n                const dbEntityId = saveMessage.dbEntity._localId;\n                const dbEntity = this.terminalStore.getAllEntities()[dbEntityId];\n                if (!dbEntity) {\n                    theErrorMessage = `Could not find DbEntity with Id ${dbEntityId}`;\n                    break;\n                }\n                context.dbEntity = dbEntity;\n                if (message.type === IsolateMessageType.SAVE) {\n                    theResult = await this.transactionalServer.save(saveMessage.entity, credentials, context);\n                }\n                else {\n                    const saveToDestinationMessage = message;\n                    theResult = await this.transactionalServer.saveToDestination(saveToDestinationMessage.repositoryDestination, saveToDestinationMessage.entity, credentials, context);\n                }\n                break;\n            }\n            case IsolateMessageType.SEARCH:\n                const searchMessage = message;\n                theResult = await this.transactionalServer.search(searchMessage.portableQuery, credentials, {\n                    ...context,\n                    repository: searchMessage.repository,\n                });\n                break;\n            case IsolateMessageType.SEARCH_ONE:\n                const searchOneMessage = message;\n                theResult = await this.transactionalServer.search(searchOneMessage.portableQuery, credentials, {\n                    ...context,\n                    repository: searchOneMessage.repository,\n                });\n                break;\n            case IsolateMessageType.UPDATE_VALUES:\n                const updateValuesMessage = message;\n                theResult = await this.transactionalServer.updateValues(updateValuesMessage.portableQuery, credentials, context);\n                break;\n            default:\n                // Unexpected IsolateMessageInType\n                return {\n                    theErrorMessage,\n                    theResult\n                };\n        }\n        return {\n            theErrorMessage,\n            theResult,\n        };\n    }\n    async startApiCall(message, context, nativeHandleCallback) {\n        const userSession = await this.terminalSessionManager.getUserSession();\n        const transactionCredentials = {\n            application: message.application,\n            domain: message.domain,\n            methodName: message.methodName,\n            objectName: message.objectName,\n            transactionId: message.transactionId\n        };\n        if (!await this.transactionalServer.startTransaction(transactionCredentials, context)) {\n            return {\n                isStarted: false\n            };\n        }\n        let actor = await this.getApiCallActor(message, userSession, context);\n        context.transaction.actor = actor;\n        const initiator = context.transaction.initiator;\n        initiator.application = message.application;\n        initiator.domain = message.domain;\n        initiator.methodName = message.methodName;\n        initiator.objectName = message.objectName;\n        let isFramework = true;\n        try {\n            if (message.domain !== INTERNAL_DOMAIN) {\n                isFramework = false;\n                await this.doNativeHandleCallback(message, actor, context, nativeHandleCallback);\n            }\n        }\n        catch (e) {\n            context.errorMessage = e.message;\n            this.transactionalServer.rollback(transactionCredentials, context);\n            return {\n                isStarted: false\n            };\n        }\n        return {\n            isFramework,\n            isStarted: true\n        };\n    }\n    async doNativeHandleCallback(message, actor, context, nativeHandleCallback) {\n        message.transactionId = context.transaction.id;\n        message.actor = {\n            application: actor.application,\n            GUID: actor.GUID,\n            terminal: {\n                GUID: actor.terminal.GUID\n            },\n            userAccount: {\n                GUID: actor.userAccount.username,\n                username: actor.userAccount.username\n            }\n        };\n        await nativeHandleCallback();\n    }\n    async getApiCallActor(message, userSession, context) {\n        if (context.transaction.parentTransaction) {\n            return context.transaction.parentTransaction.actor;\n        }\n        const terminal = this.terminalStore.getTerminal();\n        let actor = await this.actorDao.findOneByDomainAndApplication_Names_UserAccountGUID_TerminalGUID(message.domain, message.application, userSession.userAccount.GUID, terminal.GUID);\n        if (actor) {\n            userSession.currentActor = actor;\n            return actor;\n        }\n        const application = await this.applicationDao.findOneByDomain_NameAndApplication_Name(message.domain, message.application);\n        actor = {\n            application,\n            GUID: guidv4(),\n            terminal: terminal,\n            userAccount: userSession.userAccount\n        };\n        await this.actorDao.save(actor);\n        userSession.currentActor = actor;\n        return actor;\n    }\n    async endApiCall(credentials, errorMessage, context) {\n        if (errorMessage) {\n            return await this.transactionalServer.rollback(credentials, context);\n        }\n        else {\n            return await this.transactionalServer.commit(credentials, context);\n        }\n    }\n};\n__decorate([\n    Inject()\n], TransactionalReceiver.prototype, \"actorDao\", void 0);\n__decorate([\n    Inject()\n], TransactionalReceiver.prototype, \"applicationDao\", void 0);\n__decorate([\n    Inject()\n], TransactionalReceiver.prototype, \"databaseManager\", void 0);\n__decorate([\n    Inject()\n], TransactionalReceiver.prototype, \"dbApplicationUtils\", void 0);\n__decorate([\n    Inject()\n], TransactionalReceiver.prototype, \"internalRecordManager\", void 0);\n__decorate([\n    Inject()\n], TransactionalReceiver.prototype, \"localApiServer\", void 0);\n__decorate([\n    Inject()\n], TransactionalReceiver.prototype, \"terminalSessionManager\", void 0);\n__decorate([\n    Inject()\n], TransactionalReceiver.prototype, \"terminalStore\", void 0);\n__decorate([\n    Inject()\n], TransactionalReceiver.prototype, \"transactionalServer\", void 0);\nTransactionalReceiver = __decorate([\n    Injected()\n], TransactionalReceiver);\nexport { TransactionalReceiver };\n//# sourceMappingURL=TransactionalReceiver.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { INTERNAL_DOMAIN } from '@airport/ground-control';\n/**\n * Keeps track of transactions, per client and validates that a given\n * transaction belongs to the provided client.  If the connection\n * information matches, passes the transaction for handling.\n *\n * All transactions are queued.  Read operations are not blocked while\n * any transaction is in progress.  Best way to make sure that you get\n * the latest state is to subscribe to a query, which is guaranteed to\n * be updated after data has changed.\n *\n *\n * Should read operations be blocked while transactions are in process?\n * Probably not since they will just get snapshot of the state at any\n * given point in time and transactionality takes care of not exposing\n * inconsistent state.  There doesn't appear to be a need to que-up\n * read transactions, since SqLite can handle it:\n *\n * https://www.skoumal.net/en/parallel-read-and-write-in-sqlite/\n *\n * Also, there doesn't appear to be a reason to prioritize remote transactions\n * over local ones, since ultimately the state needs to sync either way.\n * A single transactional queue should be enough.\n *\n */\nlet TransactionalServer = class TransactionalServer {\n    async init(context = {}) {\n        return await this.transactionManager.initialize('airport', context);\n    }\n    async find(portableQuery, credentials, context, cachedSqlQueryId) {\n        if (context.transaction || credentials.transactionId) {\n            this.transactionManager.getTransactionFromContextOrCredentials(credentials, context);\n        }\n        return await this.queryManager.find(portableQuery, context, cachedSqlQueryId);\n    }\n    async findOne(portableQuery, credentials, context, cachedSqlQueryId) {\n        if (context.transaction || credentials.transactionId) {\n            this.transactionManager.getTransactionFromContextOrCredentials(credentials, context);\n        }\n        return await this.queryManager.findOne(portableQuery, context, cachedSqlQueryId);\n    }\n    search(portableQuery, credentials, context, cachedSqlQueryId) {\n        if (context.transaction || credentials.transactionId) {\n            this.transactionManager.getTransactionFromContextOrCredentials(credentials, context);\n        }\n        return this.queryManager.search(portableQuery, context);\n    }\n    searchOne(portableQuery, credentials, context, cachedSqlQueryId) {\n        if (context.transaction || credentials.transactionId) {\n            this.transactionManager.getTransactionFromContextOrCredentials(credentials, context);\n        }\n        return this.queryManager.searchOne(portableQuery, context);\n    }\n    async startTransaction(credentials, context) {\n        try {\n            await this.transactionManager.startTransaction(credentials, context);\n            return true;\n        }\n        catch (e) {\n            context.errorMessage = e.message;\n            console.error(e);\n            return false;\n        }\n    }\n    async commit(credentials, context) {\n        try {\n            await this.transactionManager.commit(credentials, context);\n            return true;\n        }\n        catch (e) {\n            console.error(e);\n            context.errorMessage = e.message;\n            return false;\n        }\n    }\n    async rollback(credentials, context) {\n        try {\n            await this.transactionManager.rollback(credentials, context);\n            return true;\n        }\n        catch (e) {\n            console.error(e);\n            context.errorMessage = e.message;\n            return false;\n        }\n    }\n    async save(entity, credentials, context) {\n        if (!entity) {\n            return null;\n        }\n        if (context.transaction || credentials.transactionId) {\n            this.transactionManager.getTransactionFromContextOrCredentials(credentials, context);\n        }\n        const actor = await this.getActor(credentials);\n        context.actor = actor;\n        let saveResult;\n        await this.transactionManager.transactInternal(async (transaction, context) => {\n            saveResult = await this.operationManager.performSave(entity, actor, transaction, context.rootTransaction, context);\n        }, context);\n        return saveResult;\n    }\n    async saveToDestination(repositoryDestination, entity, credentials, context) {\n        if (!entity) {\n            return null;\n        }\n        if (context.transaction || credentials.transactionId) {\n            this.transactionManager.getTransactionFromContextOrCredentials(credentials, context);\n        }\n        const actor = await this.getActor(credentials);\n        context.actor = actor;\n        let saveResult;\n        await this.transactionManager.transactInternal(async (transaction, context) => {\n            // TODO: save to serialized repository to the specified destination\n            saveResult = await this.operationManager.performSave(entity, actor, transaction, context.rootTransaction, context);\n        }, context);\n        return saveResult;\n    }\n    async insertValues(portableQuery, credentials, context, ensureGeneratedValues // for internal use only\n    ) {\n        if (context.transaction || credentials.transactionId) {\n            this.transactionManager.getTransactionFromContextOrCredentials(credentials, context);\n        }\n        const actor = await this.getActor(credentials);\n        let numInsertedRecords;\n        await this.transactionManager.transactInternal(async (transaction, context) => {\n            numInsertedRecords = await this.insertManager.insertValues(portableQuery, actor, transaction, context.rootTransaction, context, ensureGeneratedValues);\n        }, context);\n        return numInsertedRecords;\n    }\n    async insertValuesGetLocalIds(portableQuery, credentials, context) {\n        if (context.transaction || credentials.transactionId) {\n            this.transactionManager.getTransactionFromContextOrCredentials(credentials, context);\n        }\n        const actor = await this.getActor(credentials);\n        let _localIds;\n        await this.transactionManager.transactInternal(async (transaction, context) => {\n            _localIds = await this.insertManager.insertValuesGetLocalIds(portableQuery, actor, transaction, context.rootTransaction, context);\n        }, context);\n        return _localIds;\n    }\n    async updateValues(portableQuery, credentials, context) {\n        if (context.transaction || credentials.transactionId) {\n            this.transactionManager.getTransactionFromContextOrCredentials(credentials, context);\n        }\n        const actor = await this.getActor(credentials);\n        let numUpdatedRecords;\n        await this.transactionManager.transactInternal(async (transaction, context) => {\n            numUpdatedRecords = await this.updateManager.updateValues(portableQuery, actor, transaction, context.rootTransaction, context);\n        }, context);\n        return numUpdatedRecords;\n    }\n    async deleteWhere(portableQuery, credentials, context) {\n        if (context.transaction || credentials.transactionId) {\n            this.transactionManager.getTransactionFromContextOrCredentials(credentials, context);\n        }\n        const actor = await this.getActor(credentials);\n        let numDeletedRecords;\n        await this.transactionManager.transactInternal(async (transaction, context) => {\n            numDeletedRecords = await this.deleteManager.deleteWhere(portableQuery, actor, transaction, context.rootTransaction, context);\n        }, context);\n        return numDeletedRecords;\n    }\n    async getActor(credentials) {\n        if (this.tempActor) {\n            return this.tempActor;\n        }\n        if (credentials.domain === INTERNAL_DOMAIN) {\n            return this.terminalStore.getFrameworkActor();\n        }\n        let actors;\n        const actorMapForDomain = this.terminalStore\n            .getApplicationActorMapByDomainAndApplication_Names().get(credentials.domain);\n        if (actorMapForDomain) {\n            actors = actorMapForDomain.get(credentials.application);\n        }\n        else {\n            throw new Error(`No Actors found for\r\n\tDomain:\r\n\t\t${credentials.domain}\r\n\t\t\t`);\n        }\n        if (!actors) {\n            throw new Error(`No Actors found for\r\n\tDomain:\r\n\t\t${credentials.domain}\r\n\tApplication:\r\n\t\t${credentials.application}\r\n\t\t\t`);\n        }\n        const localTerminal = this.terminalStore.getFrameworkActor().terminal;\n        if (!localTerminal.isLocal) {\n            throw new Error(`Expecting terminal of the TerminalStore.frameworkActor to be .isLocal`);\n        }\n        let actor;\n        for (const anActor of actors) {\n            if (anActor.terminal.GUID === localTerminal.GUID) {\n                actor = anActor;\n                break;\n            }\n        }\n        if (!actor) {\n            throw new Error(`Could not find actor for\r\n\tDomain:\r\n\t\t${credentials.domain}\r\n\tApplication:\r\n\t\t${credentials.application}\r\n\t\t\t`);\n        }\n        return actor;\n    }\n};\n__decorate([\n    Inject()\n], TransactionalServer.prototype, \"deleteManager\", void 0);\n__decorate([\n    Inject()\n], TransactionalServer.prototype, \"insertManager\", void 0);\n__decorate([\n    Inject()\n], TransactionalServer.prototype, \"operationManager\", void 0);\n__decorate([\n    Inject()\n], TransactionalServer.prototype, \"queryManager\", void 0);\n__decorate([\n    Inject()\n], TransactionalServer.prototype, \"repositoryManager\", void 0);\n__decorate([\n    Inject()\n], TransactionalServer.prototype, \"terminalStore\", void 0);\n__decorate([\n    Inject()\n], TransactionalServer.prototype, \"transactionManager\", void 0);\n__decorate([\n    Inject()\n], TransactionalServer.prototype, \"updateManager\", void 0);\nTransactionalServer = __decorate([\n    Injected()\n], TransactionalServer);\nexport { TransactionalServer };\nexport function injectTransactionalServer() {\n    console.log('Injecting TransactionalServer');\n}\n//# sourceMappingURL=TransactionalServer.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { InsertValues, } from '@airport/tarmaq-query';\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet AbstractMutationManager = class AbstractMutationManager {\n    getPortableQuery(applicationIndex, tableIndex, query, queryResultType) {\n        return {\n            applicationIndex,\n            tableIndex,\n            jsonQuery: query.toJSON(this.queryUtils, this.fieldUtils, this.relationManager),\n            parameterMap: query.getParameters(),\n            queryResultType,\n        };\n    }\n    async doInsertValues(transaction, q, entities, context) {\n        const dbEntity = q.__driver__.dbEntity;\n        const columnIndexes = [];\n        const columnValueLookups = [];\n        for (const dbProperty of dbEntity.properties) {\n            let columnValueLookup = {\n                name: dbProperty.name,\n                nested: null,\n            };\n            if (dbProperty.relation && dbProperty.relation.length) {\n                const dbRelation = dbProperty.relation[0];\n                this.applicationUtils.forEachColumnTypeOfRelation(dbRelation, (dbColumn, propertyNameChains) => {\n                    if (columnIndexes[dbColumn.index]) {\n                        return;\n                    }\n                    columnIndexes[dbColumn.index] = dbColumn.index;\n                    columnValueLookups[dbColumn.index] = columnValueLookup;\n                    const firstPropertyNameChain = propertyNameChains[0];\n                    for (let i = 1; i < firstPropertyNameChain.length; i++) {\n                        const propertyName = firstPropertyNameChain[i];\n                        const nextColumnValueLookup = {\n                            name: propertyName,\n                            nested: null,\n                        };\n                        columnValueLookup.nested = nextColumnValueLookup;\n                        columnValueLookup = nextColumnValueLookup;\n                    }\n                });\n            }\n            else {\n                const dbColumn = dbProperty.propertyColumns[0].column;\n                if (columnIndexes[dbColumn.index]) {\n                    continue;\n                }\n                columnIndexes[dbColumn.index] = dbColumn.index;\n                columnValueLookups[dbColumn.index] = columnValueLookup;\n            }\n        }\n        const VALUES = entities.map(entity => {\n            return columnValueLookups.map(lookup => {\n                let value = entity[lookup.name];\n                while (lookup.nested) {\n                    if (!(value instanceof Object)) {\n                        break;\n                    }\n                    lookup = lookup.nested;\n                    value = value[lookup.name];\n                }\n                return value === undefined ? null : value;\n            });\n        });\n        const rawInsertValues = {\n            INSERT_INTO: q,\n            columns: null,\n            VALUES\n        };\n        let insertValues = new InsertValues(rawInsertValues, columnIndexes);\n        let portableQuery = this.getPortableQuery(dbEntity.applicationVersion.application.index, dbEntity.index, insertValues, null);\n        return await transaction.insertValues(portableQuery, context);\n    }\n};\n__decorate([\n    Inject()\n], AbstractMutationManager.prototype, \"applicationUtils\", void 0);\n__decorate([\n    Inject()\n], AbstractMutationManager.prototype, \"fieldUtils\", void 0);\n__decorate([\n    Inject()\n], AbstractMutationManager.prototype, \"queryUtils\", void 0);\n__decorate([\n    Inject()\n], AbstractMutationManager.prototype, \"relationManager\", void 0);\nAbstractMutationManager = __decorate([\n    Injected()\n], AbstractMutationManager);\nexport { AbstractMutationManager };\n//# sourceMappingURL=AbstractMutationManager.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { REPOSITORY_API, } from '../../to_be_generated/common-tokens';\nimport { DEPENDENCY_INJECTION, Inject, Injected, } from '@airport/direction-indicator';\n// An API stub for other Applications and UIs to use\nlet RepositoryApi = class RepositoryApi {\n    constructor() {\n        DEPENDENCY_INJECTION.db().manualInject(this, REPOSITORY_API);\n    }\n    async findAll() {\n        return await this.repositoryApi.findAll();\n    }\n    async create(repositoryName) {\n        return await this.repositoryApi.create(repositoryName);\n    }\n};\n__decorate([\n    Inject()\n], RepositoryApi.prototype, \"repositoryApi\", void 0);\nRepositoryApi = __decorate([\n    Injected()\n], RepositoryApi);\nexport { RepositoryApi };\n//# sourceMappingURL=RepositoryApi.js.map","export * from './RepositoryApi';\nimport { loadAutopilot } from '@airport/autopilot';\nloadAutopilot();\n//# sourceMappingURL=api.js.map","import { INTER_APP_API_CLIENT } from '@airport/direction-indicator';\nimport { RepositoryApi } from '../generated/api/api';\nimport { REPOSITORY_API } from \"./common-tokens\";\nREPOSITORY_API.setClass(RepositoryApi);\nREPOSITORY_API.setDependencies({\n    interAppApiClient: INTER_APP_API_CLIENT\n});\n//# sourceMappingURL=api-tokens.js.map","/* eslint-disable */\nexport const APPLICATION = {\n    \"domain\": \"air\",\n    \"index\": null,\n    \"name\": \"@airport/airport-code\",\n    \"sinceVersion\": 1,\n    \"versions\": [\n        {\n            \"api\": {\n                \"apiObjectMap\": {}\n            },\n            \"entities\": [\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"APPLICATION_INDEX\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"TABLE_INDEX\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"COLUMN_INDEX\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 3,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"SEQUENCE_INCREMENT_BY\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 3\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 4,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"CURRENT_VALUE\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 4\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        },\n                        {\n                            \"index\": 1\n                        },\n                        {\n                            \"index\": 2\n                        }\n                    ],\n                    \"index\": 0,\n                    \"isLocal\": true,\n                    \"isAirEntity\": false,\n                    \"name\": \"Sequence\",\n                    \"properties\": [\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"applicationIndex\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 1\n                            },\n                            \"index\": 1,\n                            \"isId\": true,\n                            \"name\": \"tableIndex\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 2\n                            },\n                            \"index\": 2,\n                            \"isId\": true,\n                            \"name\": \"columnIndex\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 3\n                            },\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"name\": \"incrementBy\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 4\n                            },\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"name\": \"currentValue\",\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"SEQUENCES\",\n                        \"columnIndexes\": []\n                    },\n                    \"operations\": {}\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": true,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"SYSTEM_WIDE_OPERATION_LID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        }\n                    ],\n                    \"index\": 1,\n                    \"isLocal\": true,\n                    \"isAirEntity\": false,\n                    \"name\": \"SystemWideOperationId\",\n                    \"properties\": [\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"_localId\",\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"SYSTEM_WIDE_OPERATION_LIDS\",\n                        \"columnIndexes\": []\n                    }\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": true,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"TERMINAL_RUN_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"CREATE_TIMESTAMP\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"RANDOM_NUMBER\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        }\n                    ],\n                    \"index\": 2,\n                    \"isLocal\": true,\n                    \"isAirEntity\": false,\n                    \"name\": \"TerminalRun\",\n                    \"properties\": [\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"_localId\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 1\n                            },\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"createTimestamp\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 2\n                            },\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"randomNumber\",\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"TERMINAL_RUNS\",\n                        \"columnIndexes\": []\n                    },\n                    \"operations\": {}\n                }\n            ],\n            \"integerVersion\": 1,\n            \"referencedApplications\": [],\n            \"versionString\": \"1.0.0\"\n        }\n    ]\n};\n//# sourceMappingURL=application.js.map","import { APPLICATION as AIRPORT_CODE } from '@airport/airport-code/lib/generated/application';\nimport { APPLICATION as HOLDING_PATTERN } from '@airport/holding-pattern/lib/generated/application';\nimport { APPLICATION as AIRSPACE } from '@airport/airspace/lib/generated/application';\nimport { APPLICATION as TRAVEL_DOCUMENT_CHECKPOINT } from '@airport/travel-document-checkpoint/lib/generated/application';\nimport { APPLICATION as LAYOVER } from '@airport/layover/lib/generated/application';\nexport const BLUEPRINT = [\n    AIRPORT_CODE,\n    TRAVEL_DOCUMENT_CHECKPOINT,\n    AIRSPACE,\n    HOLDING_PATTERN,\n    LAYOVER\n];\n//# sourceMappingURL=index.js.map","/* eslint-disable */\nexport const APPLICATION = {\n    \"domain\": \"air\",\n    \"index\": null,\n    \"name\": \"@airport/travel-document-checkpoint\",\n    \"sinceVersion\": 1,\n    \"versions\": [\n        {\n            \"api\": {\n                \"apiObjectMap\": {\n                    \"UserAccountApi\": {\n                        \"operationMap\": {\n                            \"findUserAccount\": {\n                                \"isAsync\": true,\n                                \"parameters\": []\n                            }\n                        }\n                    }\n                }\n            },\n            \"entities\": [\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": true,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"COUNTRY_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"ABBREVIATION\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"NAME\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 3,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 5,\n                                    \"oneRelationIndex\": 0,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"CONTINENT_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 3\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        }\n                    ],\n                    \"index\": 0,\n                    \"isLocal\": true,\n                    \"isAirEntity\": false,\n                    \"name\": \"Country\",\n                    \"properties\": [\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"id\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 1\n                            },\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"abbreviation\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 2\n                            },\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"name\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"name\": \"continent\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"name\": \"userAccounts\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 3\n                            },\n                            \"relationTableIndex\": 5,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"country\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 4\n                            },\n                            \"relationTableIndex\": 4,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"COUNTRIES\",\n                        \"columnIndexes\": []\n                    }\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": true,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"STATE_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"ABBREVIATION\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"NAME\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 3,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 0,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"COUNTRY_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 3\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        }\n                    ],\n                    \"index\": 1,\n                    \"isLocal\": true,\n                    \"isAirEntity\": false,\n                    \"name\": \"State\",\n                    \"properties\": [\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"id\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 1\n                            },\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"abbreviation\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 2\n                            },\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"name\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"name\": \"country\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"name\": \"metroAreaStates\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 5,\n                            \"isId\": false,\n                            \"name\": \"userAccounts\",\n                            \"relationRef\": {\n                                \"index\": 2\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 3\n                            },\n                            \"relationTableIndex\": 0,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"state\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 4\n                            },\n                            \"relationTableIndex\": 1,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"state\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 5\n                            },\n                            \"relationTableIndex\": 4,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"STATES\",\n                        \"columnIndexes\": []\n                    }\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 1,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"STATE_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 1,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 3,\n                                    \"oneRelationIndex\": 1,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"METRO_AREA_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        },\n                        {\n                            \"index\": 1\n                        }\n                    ],\n                    \"index\": 2,\n                    \"isLocal\": true,\n                    \"isAirEntity\": false,\n                    \"name\": \"MetroAreaState\",\n                    \"properties\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"state\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": true,\n                            \"name\": \"metroArea\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 0\n                            },\n                            \"relationTableIndex\": 1,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": true,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 1\n                            },\n                            \"relationTableIndex\": 3,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"METRO_AREA_STATES\",\n                        \"columnIndexes\": []\n                    }\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": true,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"METRO_AREA_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"NAME\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 0,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"COUNTRY_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        }\n                    ],\n                    \"index\": 3,\n                    \"isLocal\": true,\n                    \"isAirEntity\": false,\n                    \"name\": \"MetroArea\",\n                    \"properties\": [\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"id\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 1\n                            },\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"name\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"country\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"name\": \"metroAreaStates\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"name\": \"userAccounts\",\n                            \"relationRef\": {\n                                \"index\": 2\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 2\n                            },\n                            \"relationTableIndex\": 0,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"metroArea\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 3\n                            },\n                            \"relationTableIndex\": 2,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"metroArea\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 4\n                            },\n                            \"relationTableIndex\": 4,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"METRO_AREAS\",\n                        \"columnIndexes\": []\n                    }\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": true,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"USER_ACCOUNT_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"EMAIL\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"PASSWORD_HASH\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 3,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"RANKING\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 3\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 4,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"USER_ACCOUNTNAME\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 4\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 5,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"USER_ACCOUNT_GUID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 5\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 6,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplication_Index\": 0,\n                                    \"oneTableIndex\": 11,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"DOMAIN_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 6\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 7,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 1,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 5,\n                                    \"oneRelationIndex\": 1,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"CONTINENT_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 7\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 8,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 2,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 0,\n                                    \"oneRelationIndex\": 1,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"COUNTRY_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 8\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 9,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 3,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 1,\n                                    \"oneRelationIndex\": 2,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"STATE_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 9\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 10,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 4,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 3,\n                                    \"oneRelationIndex\": 2,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"METRO_AREA_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 10\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        }\n                    ],\n                    \"index\": 4,\n                    \"isLocal\": true,\n                    \"isAirEntity\": false,\n                    \"name\": \"UserAccount\",\n                    \"properties\": [\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"_localId\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 1\n                            },\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"email\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 2\n                            },\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"passwordHash\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 3\n                            },\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"name\": \"ranking\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 4\n                            },\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"name\": \"username\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 5\n                            },\n                            \"index\": 5,\n                            \"isId\": false,\n                            \"name\": \"GUID\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 6,\n                            \"isId\": false,\n                            \"name\": \"domain\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 7,\n                            \"isId\": false,\n                            \"name\": \"continent\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 8,\n                            \"isId\": false,\n                            \"name\": \"country\",\n                            \"relationRef\": {\n                                \"index\": 2\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 9,\n                            \"isId\": false,\n                            \"name\": \"state\",\n                            \"relationRef\": {\n                                \"index\": 3\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 10,\n                            \"isId\": false,\n                            \"name\": \"metroArea\",\n                            \"relationRef\": {\n                                \"index\": 4\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 6\n                            },\n                            \"relationTableIndex\": 11,\n                            \"relationTableApplication_Index\": 0,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 7\n                            },\n                            \"relationTableIndex\": 5,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 8\n                            },\n                            \"relationTableIndex\": 0,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 9\n                            },\n                            \"relationTableIndex\": 1,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 10\n                            },\n                            \"relationTableIndex\": 3,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"columnIndexes\": []\n                    },\n                    \"operations\": {}\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"CONTINENT_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"NAME\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        }\n                    ],\n                    \"index\": 5,\n                    \"isLocal\": true,\n                    \"isAirEntity\": false,\n                    \"name\": \"Continent\",\n                    \"properties\": [\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"id\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 1\n                            },\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"name\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"countries\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"name\": \"userAccounts\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"continent\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 2\n                            },\n                            \"relationTableIndex\": 0,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"continent\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 3\n                            },\n                            \"relationTableIndex\": 4,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"CONTINENTS\",\n                        \"columnIndexes\": []\n                    }\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"CLASSIFICATION_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"NAME\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        }\n                    ],\n                    \"index\": 6,\n                    \"isLocal\": true,\n                    \"isAirEntity\": false,\n                    \"name\": \"Classification\",\n                    \"properties\": [\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"id\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 1\n                            },\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"name\",\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"CLASSIFICATIONS\",\n                        \"columnIndexes\": []\n                    }\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 6,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"CLASSIFICATION_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 1,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneRelationIndex\": 0,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"TYPE_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        },\n                        {\n                            \"index\": 1\n                        }\n                    ],\n                    \"index\": 7,\n                    \"isLocal\": true,\n                    \"isAirEntity\": false,\n                    \"name\": \"TypeClassification\",\n                    \"properties\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"classification\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": true,\n                            \"name\": \"type\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 0\n                            },\n                            \"relationTableIndex\": 6,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": true,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 1\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"TYPE_CLASSIFICATIONS\",\n                        \"columnIndexes\": []\n                    }\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"TYPE_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"NAME\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        }\n                    ],\n                    \"index\": 8,\n                    \"isLocal\": true,\n                    \"isAirEntity\": false,\n                    \"name\": \"Type\",\n                    \"properties\": [\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"id\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 1\n                            },\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"name\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"typeClassifications\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"type\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 2\n                            },\n                            \"relationTableIndex\": 7,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"TYPES\",\n                        \"columnIndexes\": []\n                    }\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 10,\n                                    \"oneRelationIndex\": 4,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"CLIENT_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 1,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"TYPE_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        },\n                        {\n                            \"index\": 1\n                        }\n                    ],\n                    \"index\": 9,\n                    \"isLocal\": true,\n                    \"isAirEntity\": false,\n                    \"name\": \"ClientType\",\n                    \"properties\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"client\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": true,\n                            \"name\": \"type\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 0\n                            },\n                            \"relationTableIndex\": 10,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": true,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 1\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"CLIENT_TYPES\",\n                        \"columnIndexes\": []\n                    }\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"CLIENT_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"CLIENT_DOMAIN\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"CLIENT_GUID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 3,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 5,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"CONTINENT_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 3\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 4,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 1,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 0,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"COUNTRY_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 4\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 5,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 2,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 1,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"STATE_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 5\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 6,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 3,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 3,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"METRO_AREA_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 6\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        }\n                    ],\n                    \"index\": 10,\n                    \"isLocal\": true,\n                    \"isAirEntity\": false,\n                    \"name\": \"Client\",\n                    \"properties\": [\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"_localId\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 1\n                            },\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"domain\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 2\n                            },\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"GUID\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"name\": \"continent\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"name\": \"country\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 5,\n                            \"isId\": false,\n                            \"name\": \"state\",\n                            \"relationRef\": {\n                                \"index\": 2\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 6,\n                            \"isId\": false,\n                            \"name\": \"metroArea\",\n                            \"relationRef\": {\n                                \"index\": 3\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 7,\n                            \"isId\": false,\n                            \"name\": \"clientTypes\",\n                            \"relationRef\": {\n                                \"index\": 4\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 3\n                            },\n                            \"relationTableIndex\": 5,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 4\n                            },\n                            \"relationTableIndex\": 0,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 5\n                            },\n                            \"relationTableIndex\": 1,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 6\n                            },\n                            \"relationTableIndex\": 3,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"client\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 7\n                            },\n                            \"relationTableIndex\": 9,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"CLIENTS\",\n                        \"columnIndexes\": []\n                    }\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 12,\n                                    \"oneRelationIndex\": 4,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"DATABASE_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 1,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"TYPE_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        },\n                        {\n                            \"index\": 1\n                        }\n                    ],\n                    \"index\": 11,\n                    \"isLocal\": true,\n                    \"isAirEntity\": false,\n                    \"name\": \"DatabaseType\",\n                    \"properties\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"database\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": true,\n                            \"name\": \"type\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 0\n                            },\n                            \"relationTableIndex\": 12,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": true,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 1\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"DATABASE_TYPE\",\n                        \"columnIndexes\": []\n                    }\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"DATABASE_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"DATABASE_DOMAIN\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"DATABASE_GUID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 3,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 5,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"CONTINENT_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 3\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 4,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 1,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 0,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"COUNTRY_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 4\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 5,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 2,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 1,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"STATE_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 5\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 6,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 3,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 3,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"METRO_AREA_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 6\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        }\n                    ],\n                    \"index\": 12,\n                    \"isLocal\": true,\n                    \"isAirEntity\": false,\n                    \"name\": \"Database\",\n                    \"properties\": [\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"_localId\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 1\n                            },\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"domain\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 2\n                            },\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"GUID\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"name\": \"continent\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"name\": \"country\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 5,\n                            \"isId\": false,\n                            \"name\": \"state\",\n                            \"relationRef\": {\n                                \"index\": 2\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 6,\n                            \"isId\": false,\n                            \"name\": \"metroArea\",\n                            \"relationRef\": {\n                                \"index\": 3\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 7,\n                            \"isId\": false,\n                            \"name\": \"databaseTypes\",\n                            \"relationRef\": {\n                                \"index\": 4\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 3\n                            },\n                            \"relationTableIndex\": 5,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 4\n                            },\n                            \"relationTableIndex\": 0,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 5\n                            },\n                            \"relationTableIndex\": 1,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 6\n                            },\n                            \"relationTableIndex\": 3,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"database\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 7\n                            },\n                            \"relationTableIndex\": 11,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"DATABASES\",\n                        \"columnIndexes\": []\n                    }\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 14,\n                                    \"oneRelationIndex\": 5,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"TERMINAL_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 1,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"TYPE_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        },\n                        {\n                            \"index\": 1\n                        }\n                    ],\n                    \"index\": 13,\n                    \"isLocal\": true,\n                    \"isAirEntity\": false,\n                    \"name\": \"TerminalType\",\n                    \"properties\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"terminal\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": true,\n                            \"name\": \"type\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 0\n                            },\n                            \"relationTableIndex\": 14,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": true,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 1\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"TERMINAL_TYPES\",\n                        \"columnIndexes\": []\n                    }\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": true,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"TERMINAL_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"GUID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"IS_LOCAL\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 3\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"BOOLEAN\"\n                        },\n                        {\n                            \"index\": 3,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 4,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"OWNER_USER_ACCOUNT_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 4,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 1,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 5,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"CONTINENT_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 4\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 5,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 2,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 0,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"COUNTRY_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 5\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 6,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 3,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 1,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"STATE_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 6\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 7,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 4,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 3,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"METRO_AREA_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 7\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        }\n                    ],\n                    \"index\": 14,\n                    \"isLocal\": true,\n                    \"isAirEntity\": false,\n                    \"name\": \"Terminal\",\n                    \"properties\": [\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"_localId\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 1\n                            },\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"GUID\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"owner\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 2\n                            },\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"name\": \"isLocal\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"name\": \"continent\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 5,\n                            \"isId\": false,\n                            \"name\": \"country\",\n                            \"relationRef\": {\n                                \"index\": 2\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 6,\n                            \"isId\": false,\n                            \"name\": \"state\",\n                            \"relationRef\": {\n                                \"index\": 3\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 7,\n                            \"isId\": false,\n                            \"name\": \"metroArea\",\n                            \"relationRef\": {\n                                \"index\": 4\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 8,\n                            \"isId\": false,\n                            \"name\": \"terminalTypes\",\n                            \"relationRef\": {\n                                \"index\": 5\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 2\n                            },\n                            \"relationTableIndex\": 4,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 4\n                            },\n                            \"relationTableIndex\": 5,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 5\n                            },\n                            \"relationTableIndex\": 0,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 6\n                            },\n                            \"relationTableIndex\": 1,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 7\n                            },\n                            \"relationTableIndex\": 3,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 5,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"terminal\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 8\n                            },\n                            \"relationTableIndex\": 13,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"TERMINALS\",\n                        \"propertyIndexes\": [\n                            {\n                                \"propertyIndex\": 1,\n                                \"unique\": true\n                            }\n                        ]\n                    },\n                    \"operations\": {}\n                }\n            ],\n            \"integerVersion\": 1,\n            \"referencedApplications\": [\n                {\n                    \"domain\": \"air\",\n                    \"index\": 0,\n                    \"name\": \"@airport/airspace\",\n                    \"sinceVersion\": 1,\n                    \"versions\": [\n                        {\n                            \"entities\": null,\n                            \"integerVersion\": 1,\n                            \"referencedApplications\": null,\n                            \"versionString\": \"1.0.0\"\n                        }\n                    ]\n                }\n            ],\n            \"versionString\": \"1.0.0\"\n        }\n    ]\n};\n//# sourceMappingURL=application.js.map","/* eslint-disable */\nexport const APPLICATION = {\n    \"domain\": \"air\",\n    \"index\": null,\n    \"name\": \"@airport/airspace\",\n    \"sinceVersion\": 1,\n    \"versions\": [\n        {\n            \"api\": {\n                \"apiObjectMap\": {}\n            },\n            \"entities\": [\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"DEPRECATED_SINCE_APPLICATION_VERSION_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 1,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"REMOVED_IN_APPLICATION_VERSION_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 2,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"SINCE_APPLICATION_VERSION_LID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 3,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"APPLICATION_RELATION_COLUMN_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 3\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 4,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 3,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 4,\n                                    \"oneRelationIndex\": 5,\n                                    \"oneColumnIndex\": 3,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"MANY_APPLICATION_COLUMN_LID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 4\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 5,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 4,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 4,\n                                    \"oneRelationIndex\": 6,\n                                    \"oneColumnIndex\": 3,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"ONE_APPLICATION_COLUMN_LID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 5\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 6,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 5,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 1,\n                                    \"oneRelationIndex\": 6,\n                                    \"oneColumnIndex\": 3,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"MANY_APPLICATION_RELATION_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 6\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 7,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 6,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 1,\n                                    \"oneRelationIndex\": 7,\n                                    \"oneColumnIndex\": 3,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"ONE_APPLICATION_RELATION_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 7\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 8,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 7,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 1,\n                                    \"oneColumnIndex\": 3,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"PARENT_RELATION_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 8\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 3\n                        }\n                    ],\n                    \"index\": 0,\n                    \"isLocal\": true,\n                    \"isAirEntity\": false,\n                    \"name\": \"ApplicationRelationColumn\",\n                    \"properties\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"name\": \"deprecatedSinceVersion\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"removedInVersion\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"sinceVersion\",\n                            \"relationRef\": {\n                                \"index\": 2\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 3\n                            },\n                            \"index\": 3,\n                            \"isId\": true,\n                            \"name\": \"_localId\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"name\": \"manyColumn\",\n                            \"relationRef\": {\n                                \"index\": 3\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 5,\n                            \"isId\": false,\n                            \"name\": \"oneColumn\",\n                            \"relationRef\": {\n                                \"index\": 4\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 6,\n                            \"isId\": false,\n                            \"name\": \"manyRelation\",\n                            \"relationRef\": {\n                                \"index\": 5\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 7,\n                            \"isId\": false,\n                            \"name\": \"oneRelation\",\n                            \"relationRef\": {\n                                \"index\": 6\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 8,\n                            \"isId\": false,\n                            \"name\": \"parentRelation\",\n                            \"relationRef\": {\n                                \"index\": 7\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 0\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 1\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 2\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 4\n                            },\n                            \"relationTableIndex\": 4,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 5\n                            },\n                            \"relationTableIndex\": 4,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 5,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 6\n                            },\n                            \"relationTableIndex\": 1,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 6,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 7\n                            },\n                            \"relationTableIndex\": 1,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 7,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 8\n                            },\n                            \"relationTableIndex\": 1,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"APPLICATION_RELATION_COLUMNS\",\n                        \"columnIndexes\": []\n                    },\n                    \"operations\": {}\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"DEPRECATED_SINCE_APPLICATION_VERSION_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 1,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"REMOVED_IN_APPLICATION_VERSION_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 2,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"SINCE_APPLICATION_VERSION_LID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 3,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"APPLICATION_RELATION_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 3\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 4,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"RELATION_INDEX\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 4\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 5,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"FOREIGN_KEY\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 6\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"JSON\"\n                        },\n                        {\n                            \"index\": 6,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"MANY_TO_ONE_ELEMENTS\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 7\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"JSON\"\n                        },\n                        {\n                            \"index\": 7,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"ONE_TO_MANY_ELEMENTS\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 8\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"JSON\"\n                        },\n                        {\n                            \"index\": 8,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"RELATION_TYPE\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 9\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 9,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"IS_LID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 10\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"BOOLEAN\"\n                        },\n                        {\n                            \"index\": 10,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 3,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 2,\n                                    \"oneRelationIndex\": 5,\n                                    \"oneColumnIndex\": 3,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"APPLICATION_PROPERTY_LID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 5\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 11,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 4,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 6,\n                                    \"oneRelationIndex\": 7,\n                                    \"oneColumnIndex\": 3,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"APPLICATION_ENTITY_LID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 11\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 12,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 5,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 6,\n                                    \"oneRelationIndex\": 8,\n                                    \"oneColumnIndex\": 3,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"RELATION_APPLICATION_ENTITY_LID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 12\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 3\n                        }\n                    ],\n                    \"index\": 1,\n                    \"isLocal\": true,\n                    \"isAirEntity\": false,\n                    \"name\": \"ApplicationRelation\",\n                    \"properties\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"name\": \"deprecatedSinceVersion\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"removedInVersion\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"sinceVersion\",\n                            \"relationRef\": {\n                                \"index\": 2\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 3\n                            },\n                            \"index\": 3,\n                            \"isId\": true,\n                            \"name\": \"_localId\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 4\n                            },\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"name\": \"index\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 5,\n                            \"isId\": false,\n                            \"name\": \"property\",\n                            \"relationRef\": {\n                                \"index\": 3\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 5\n                            },\n                            \"index\": 6,\n                            \"isId\": false,\n                            \"name\": \"foreignKey\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 6\n                            },\n                            \"index\": 7,\n                            \"isId\": false,\n                            \"name\": \"manyToOneElems\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 7\n                            },\n                            \"index\": 8,\n                            \"isId\": false,\n                            \"name\": \"oneToManyElems\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 8\n                            },\n                            \"index\": 9,\n                            \"isId\": false,\n                            \"name\": \"relationType\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 9\n                            },\n                            \"index\": 10,\n                            \"isId\": false,\n                            \"name\": \"isId\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 11,\n                            \"isId\": false,\n                            \"name\": \"entity\",\n                            \"relationRef\": {\n                                \"index\": 4\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 12,\n                            \"isId\": false,\n                            \"name\": \"relationEntity\",\n                            \"relationRef\": {\n                                \"index\": 5\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 13,\n                            \"isId\": false,\n                            \"name\": \"manyRelationColumns\",\n                            \"relationRef\": {\n                                \"index\": 6\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 14,\n                            \"isId\": false,\n                            \"name\": \"oneRelationColumns\",\n                            \"relationRef\": {\n                                \"index\": 7\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 0\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 1\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 2\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 5\n                            },\n                            \"relationTableIndex\": 2,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 11\n                            },\n                            \"relationTableIndex\": 6,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 5,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 12\n                            },\n                            \"relationTableIndex\": 6,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 6,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"manyRelation\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 13\n                            },\n                            \"relationTableIndex\": 0,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 7,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"oneRelation\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 14\n                            },\n                            \"relationTableIndex\": 0,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"APPLICATION_RELATIONS\",\n                        \"columnIndexes\": []\n                    },\n                    \"operations\": {}\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"DEPRECATED_SINCE_APPLICATION_VERSION_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 1,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"REMOVED_IN_APPLICATION_VERSION_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 2,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"SINCE_APPLICATION_VERSION_LID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 3,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"APPLICATION_PROPERTY_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 3\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 4,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"PROPERTY_INDEX\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 4\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 5,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"NAME\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 5\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 6,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"IS_LID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 6\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"BOOLEAN\"\n                        },\n                        {\n                            \"index\": 7,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 3,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 6,\n                                    \"oneRelationIndex\": 6,\n                                    \"oneColumnIndex\": 3,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"APPLICATION_ENTITY_LID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 7\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 3\n                        }\n                    ],\n                    \"index\": 2,\n                    \"isLocal\": true,\n                    \"isAirEntity\": false,\n                    \"name\": \"ApplicationProperty\",\n                    \"properties\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"name\": \"deprecatedSinceVersion\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"removedInVersion\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"sinceVersion\",\n                            \"relationRef\": {\n                                \"index\": 2\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 3\n                            },\n                            \"index\": 3,\n                            \"isId\": true,\n                            \"name\": \"_localId\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 4\n                            },\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"name\": \"index\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 5\n                            },\n                            \"index\": 5,\n                            \"isId\": false,\n                            \"name\": \"name\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 6\n                            },\n                            \"index\": 6,\n                            \"isId\": false,\n                            \"name\": \"isId\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 7,\n                            \"isId\": false,\n                            \"name\": \"entity\",\n                            \"relationRef\": {\n                                \"index\": 3\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 8,\n                            \"isId\": false,\n                            \"name\": \"propertyColumns\",\n                            \"relationRef\": {\n                                \"index\": 4\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 9,\n                            \"isId\": false,\n                            \"name\": \"relation\",\n                            \"relationRef\": {\n                                \"index\": 5\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 0\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 1\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 2\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 7\n                            },\n                            \"relationTableIndex\": 6,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"property\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 8\n                            },\n                            \"relationTableIndex\": 3,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 5,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"property\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 9\n                            },\n                            \"relationTableIndex\": 1,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"APPLICATION_PROPERTIES\",\n                        \"columnIndexes\": []\n                    },\n                    \"operations\": {}\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"DEPRECATED_SINCE_APPLICATION_VERSION_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 1,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"REMOVED_IN_APPLICATION_VERSION_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 2,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"SINCE_APPLICATION_VERSION_LID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 3,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 3,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 4,\n                                    \"oneRelationIndex\": 4,\n                                    \"oneColumnIndex\": 3,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"APPLICATION_COLUMN_LID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 3\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 4,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 4,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 2,\n                                    \"oneRelationIndex\": 4,\n                                    \"oneColumnIndex\": 3,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"APPLICATION_PROPERTY_LID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 4\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 3\n                        },\n                        {\n                            \"index\": 4\n                        }\n                    ],\n                    \"index\": 3,\n                    \"isLocal\": true,\n                    \"isAirEntity\": false,\n                    \"name\": \"ApplicationPropertyColumn\",\n                    \"properties\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"name\": \"deprecatedSinceVersion\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"removedInVersion\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"sinceVersion\",\n                            \"relationRef\": {\n                                \"index\": 2\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": true,\n                            \"name\": \"column\",\n                            \"relationRef\": {\n                                \"index\": 3\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 4,\n                            \"isId\": true,\n                            \"name\": \"property\",\n                            \"relationRef\": {\n                                \"index\": 4\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 0\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 1\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 2\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": true,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 3\n                            },\n                            \"relationTableIndex\": 4,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 4,\n                            \"isId\": true,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 4\n                            },\n                            \"relationTableIndex\": 2,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"APPLICATION_PROPERTY_COLUMNS\",\n                        \"columnIndexes\": []\n                    },\n                    \"operations\": {}\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"DEPRECATED_SINCE_APPLICATION_VERSION_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 1,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"REMOVED_IN_APPLICATION_VERSION_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 2,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"SINCE_APPLICATION_VERSION_LID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 3,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"APPLICATION_COLUMN_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 3\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 4,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"COLUMN_INDEX\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 4\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 5,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"ID_INDEX\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 5\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 6,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"IS_GENERATED\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 6\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"BOOLEAN\"\n                        },\n                        {\n                            \"index\": 7,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"ALLOCATION_SIZE\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 7\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 8,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"NAME\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 8\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 9,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"NOT_NULL\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 9\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"BOOLEAN\"\n                        },\n                        {\n                            \"index\": 10,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"PRECISION\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 10\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 11,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"SCALE\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 11\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 12,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"TYPE\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 12\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 13,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 3,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 6,\n                                    \"oneRelationIndex\": 4,\n                                    \"oneColumnIndex\": 3,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"APPLICATION_ENTITY_LID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 13\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 3\n                        }\n                    ],\n                    \"index\": 4,\n                    \"isLocal\": true,\n                    \"isAirEntity\": false,\n                    \"name\": \"ApplicationColumn\",\n                    \"properties\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"name\": \"deprecatedSinceVersion\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"removedInVersion\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"sinceVersion\",\n                            \"relationRef\": {\n                                \"index\": 2\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 3\n                            },\n                            \"index\": 3,\n                            \"isId\": true,\n                            \"name\": \"_localId\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 4\n                            },\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"name\": \"index\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 5\n                            },\n                            \"index\": 5,\n                            \"isId\": false,\n                            \"name\": \"idIndex\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 6\n                            },\n                            \"index\": 6,\n                            \"isId\": false,\n                            \"name\": \"isGenerated\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 7\n                            },\n                            \"index\": 7,\n                            \"isId\": false,\n                            \"name\": \"allocationSize\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 8\n                            },\n                            \"index\": 8,\n                            \"isId\": false,\n                            \"name\": \"name\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 9\n                            },\n                            \"index\": 9,\n                            \"isId\": false,\n                            \"name\": \"notNull\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 10\n                            },\n                            \"index\": 10,\n                            \"isId\": false,\n                            \"name\": \"precision\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 11\n                            },\n                            \"index\": 11,\n                            \"isId\": false,\n                            \"name\": \"scale\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 12\n                            },\n                            \"index\": 12,\n                            \"isId\": false,\n                            \"name\": \"type\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 13,\n                            \"isId\": false,\n                            \"name\": \"entity\",\n                            \"relationRef\": {\n                                \"index\": 3\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 14,\n                            \"isId\": false,\n                            \"name\": \"propertyColumns\",\n                            \"relationRef\": {\n                                \"index\": 4\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 15,\n                            \"isId\": false,\n                            \"name\": \"manyRelationColumns\",\n                            \"relationRef\": {\n                                \"index\": 5\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 16,\n                            \"isId\": false,\n                            \"name\": \"oneRelationColumns\",\n                            \"relationRef\": {\n                                \"index\": 6\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 0\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 1\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 2\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 13\n                            },\n                            \"relationTableIndex\": 6,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"column\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 14\n                            },\n                            \"relationTableIndex\": 3,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 5,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"manyColumn\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 15\n                            },\n                            \"relationTableIndex\": 0,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 6,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"oneColumn\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 16\n                            },\n                            \"relationTableIndex\": 0,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"APPLICATION_COLUMNS\",\n                        \"columnIndexes\": []\n                    },\n                    \"operations\": {}\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"DEPRECATED_SINCE_APPLICATION_VERSION_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 1,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"REMOVED_IN_APPLICATION_VERSION_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 2,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"SINCE_APPLICATION_VERSION_LID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 3,\n                            \"isGenerated\": true,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"APPLICATION_OPERATION_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 3\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 4,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"TYPE\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 4\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 5,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"NAME\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 6\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 6,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"RULE\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 7\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"JSON\"\n                        },\n                        {\n                            \"index\": 7,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 3,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 6,\n                                    \"oneRelationIndex\": 5,\n                                    \"oneColumnIndex\": 3,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"APPLICATION_ENTITY_LID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 5\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 3\n                        }\n                    ],\n                    \"index\": 5,\n                    \"isLocal\": true,\n                    \"isAirEntity\": false,\n                    \"name\": \"ApplicationOperation\",\n                    \"properties\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"name\": \"deprecatedSinceVersion\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"removedInVersion\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"sinceVersion\",\n                            \"relationRef\": {\n                                \"index\": 2\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 3\n                            },\n                            \"index\": 3,\n                            \"isId\": true,\n                            \"name\": \"_localId\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 4\n                            },\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"name\": \"type\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 5,\n                            \"isId\": false,\n                            \"name\": \"entity\",\n                            \"relationRef\": {\n                                \"index\": 3\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 5\n                            },\n                            \"index\": 6,\n                            \"isId\": false,\n                            \"name\": \"name\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 6\n                            },\n                            \"index\": 7,\n                            \"isId\": false,\n                            \"name\": \"rule\",\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 0\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 1\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 2\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 5\n                            },\n                            \"relationTableIndex\": 6,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"APPLICATION_OPERATIONS\",\n                        \"columnIndexes\": []\n                    }\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"DEPRECATED_SINCE_APPLICATION_VERSION_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 1,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"REMOVED_IN_APPLICATION_VERSION_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 2,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"SINCE_APPLICATION_VERSION_LID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 3,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"APPLICATION_ENTITY_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 3\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 4,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"TABLE_INDEX\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 4\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 5,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"IS_LOCAL\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 5\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"BOOLEAN\"\n                        },\n                        {\n                            \"index\": 6,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"IS_AIR_ENTITY\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 6\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"BOOLEAN\"\n                        },\n                        {\n                            \"index\": 7,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"NAME\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 7\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 8,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"TABLE_CONFIGURATION\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 8\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"JSON\"\n                        },\n                        {\n                            \"index\": 9,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 3,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneRelationIndex\": 1,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"APPLICATION_VERSION_LID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 9\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 3\n                        }\n                    ],\n                    \"index\": 6,\n                    \"isLocal\": true,\n                    \"isAirEntity\": false,\n                    \"name\": \"ApplicationEntity\",\n                    \"properties\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"name\": \"deprecatedSinceVersion\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"removedInVersion\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"sinceVersion\",\n                            \"relationRef\": {\n                                \"index\": 2\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 3\n                            },\n                            \"index\": 3,\n                            \"isId\": true,\n                            \"name\": \"_localId\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 4\n                            },\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"name\": \"index\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 5\n                            },\n                            \"index\": 5,\n                            \"isId\": false,\n                            \"name\": \"isLocal\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 6\n                            },\n                            \"index\": 6,\n                            \"isId\": false,\n                            \"name\": \"isAirEntity\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 7\n                            },\n                            \"index\": 7,\n                            \"isId\": false,\n                            \"name\": \"name\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 8\n                            },\n                            \"index\": 8,\n                            \"isId\": false,\n                            \"name\": \"tableConfig\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 9,\n                            \"isId\": false,\n                            \"name\": \"applicationVersion\",\n                            \"relationRef\": {\n                                \"index\": 3\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 10,\n                            \"isId\": false,\n                            \"name\": \"columns\",\n                            \"relationRef\": {\n                                \"index\": 4\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 11,\n                            \"isId\": false,\n                            \"name\": \"operations\",\n                            \"relationRef\": {\n                                \"index\": 5\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 12,\n                            \"isId\": false,\n                            \"name\": \"properties\",\n                            \"relationRef\": {\n                                \"index\": 6\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 13,\n                            \"isId\": false,\n                            \"name\": \"relations\",\n                            \"relationRef\": {\n                                \"index\": 7\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 14,\n                            \"isId\": false,\n                            \"name\": \"relationReferences\",\n                            \"relationRef\": {\n                                \"index\": 8\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 0\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 1\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 2\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 9\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"entity\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 10\n                            },\n                            \"relationTableIndex\": 4,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 5,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"entity\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 11\n                            },\n                            \"relationTableIndex\": 5,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 6,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"entity\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 12\n                            },\n                            \"relationTableIndex\": 2,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 7,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"entity\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 13\n                            },\n                            \"relationTableIndex\": 1,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 8,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"relationEntity\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 14\n                            },\n                            \"relationTableIndex\": 1,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"APPLICATION_ENTITIES\",\n                        \"columnIndexes\": []\n                    },\n                    \"operations\": {}\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"DEPRECATED_SINCE_APPLICATION_VERSION_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 1,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"REMOVED_IN_APPLICATION_VERSION_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 2,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"SINCE_APPLICATION_VERSION_LID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 3,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"APPLICATION_REFERENCE_INDEX\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 5\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 4,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 3,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneRelationIndex\": 2,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"OWN_APPLICATION_VERSION_LID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 3\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 5,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 4,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneRelationIndex\": 3,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"REFERENCED_APPLICATION_VERSION_LID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 4\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 4\n                        },\n                        {\n                            \"index\": 5\n                        }\n                    ],\n                    \"index\": 7,\n                    \"isLocal\": true,\n                    \"isAirEntity\": false,\n                    \"name\": \"ApplicationReference\",\n                    \"properties\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"name\": \"deprecatedSinceVersion\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"removedInVersion\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"sinceVersion\",\n                            \"relationRef\": {\n                                \"index\": 2\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": true,\n                            \"name\": \"ownApplicationVersion\",\n                            \"relationRef\": {\n                                \"index\": 3\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 4,\n                            \"isId\": true,\n                            \"name\": \"referencedApplicationVersion\",\n                            \"relationRef\": {\n                                \"index\": 4\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 3\n                            },\n                            \"index\": 5,\n                            \"isId\": false,\n                            \"name\": \"index\",\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 0\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 1\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 2\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": true,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 3\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 4,\n                            \"isId\": true,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 4\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"APPLICATION_REFERENCES\",\n                        \"columnIndexes\": []\n                    },\n                    \"operations\": {}\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"allocationSize\": 100,\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"APPLICATION_VERSION_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"INTEGER_VERSION\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"VERSION_STRING\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 3,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"MAJOR_VERSION\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 3\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 4,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"MINOR_VERSION\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 4\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 5,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"PATCH_VERSION\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 5\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 6,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"JSON_APPLICATION\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 6\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"JSON\"\n                        },\n                        {\n                            \"index\": 7,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 10,\n                                    \"oneRelationIndex\": 1,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"APPLICATION_INDEX\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 7\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        }\n                    ],\n                    \"index\": 8,\n                    \"isLocal\": true,\n                    \"isAirEntity\": false,\n                    \"name\": \"ApplicationVersion\",\n                    \"properties\": [\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"_localId\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 1\n                            },\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"integerVersion\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 2\n                            },\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"versionString\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 3\n                            },\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"name\": \"majorVersion\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 4\n                            },\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"name\": \"minorVersion\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 5\n                            },\n                            \"index\": 5,\n                            \"isId\": false,\n                            \"name\": \"patchVersion\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 6\n                            },\n                            \"index\": 6,\n                            \"isId\": false,\n                            \"name\": \"jsonApplication\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 7,\n                            \"isId\": false,\n                            \"name\": \"application\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 8,\n                            \"isId\": false,\n                            \"name\": \"entities\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 9,\n                            \"isId\": false,\n                            \"name\": \"references\",\n                            \"relationRef\": {\n                                \"index\": 2\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 10,\n                            \"isId\": false,\n                            \"name\": \"referencedBy\",\n                            \"relationRef\": {\n                                \"index\": 3\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 7\n                            },\n                            \"relationTableIndex\": 10,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"applicationVersion\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 8\n                            },\n                            \"relationTableIndex\": 6,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"ownApplicationVersion\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 9\n                            },\n                            \"relationTableIndex\": 7,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"referencedApplicationVersion\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 10\n                            },\n                            \"relationTableIndex\": 7,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"APPLICATION_VERSIONS\",\n                        \"columnIndexes\": []\n                    },\n                    \"operations\": {}\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 10,\n                                    \"oneRelationIndex\": 2,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"APPLICATION_INDEX\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 1,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"APPLICATION_VERSION_LID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        },\n                        {\n                            \"index\": 1\n                        }\n                    ],\n                    \"index\": 9,\n                    \"isLocal\": true,\n                    \"isAirEntity\": false,\n                    \"name\": \"ApplicationCurrentVersion\",\n                    \"properties\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"application\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": true,\n                            \"name\": \"applicationVersion\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 0\n                            },\n                            \"relationTableIndex\": 10,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": true,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 1\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"APPLICATION_CURRENT_VERSIONS\",\n                        \"columnIndexes\": []\n                    }\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"APPLICATION_INDEX\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"GUID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"SCOPE\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 3,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"APPLICATION_NAME\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 3\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 4,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"FULL_APPLICATION_NAME\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 4\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 5,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"STATUS\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 5\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 6,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"SIGNATURE\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 6\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 7,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 11,\n                                    \"oneRelationIndex\": 0,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"DOMAIN_LID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 7\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        }\n                    ],\n                    \"index\": 10,\n                    \"isLocal\": true,\n                    \"isAirEntity\": false,\n                    \"name\": \"Application\",\n                    \"properties\": [\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"index\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 1\n                            },\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"GUID\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 2\n                            },\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"scope\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 3\n                            },\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"name\": \"name\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 4\n                            },\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"name\": \"fullName\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 5\n                            },\n                            \"index\": 5,\n                            \"isId\": false,\n                            \"name\": \"status\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 6\n                            },\n                            \"index\": 6,\n                            \"isId\": false,\n                            \"name\": \"signature\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 7,\n                            \"isId\": false,\n                            \"name\": \"domain\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 8,\n                            \"isId\": false,\n                            \"name\": \"versions\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 9,\n                            \"isId\": false,\n                            \"name\": \"currentVersion\",\n                            \"relationRef\": {\n                                \"index\": 2\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 7\n                            },\n                            \"relationTableIndex\": 11,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"application\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 8\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"application\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 9\n                            },\n                            \"relationTableIndex\": 9,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"APPLICATIONS\",\n                        \"columnIndexes\": []\n                    },\n                    \"operations\": {}\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"DOMAIN_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"NAME\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        }\n                    ],\n                    \"index\": 11,\n                    \"isLocal\": true,\n                    \"isAirEntity\": false,\n                    \"name\": \"Domain\",\n                    \"properties\": [\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"_localId\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 1\n                            },\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"name\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"applications\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"domain\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 2\n                            },\n                            \"relationTableIndex\": 10,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"DOMAINS\",\n                        \"columnIndexes\": []\n                    },\n                    \"operations\": {}\n                }\n            ],\n            \"integerVersion\": 1,\n            \"referencedApplications\": [],\n            \"versionString\": \"1.0.0\"\n        }\n    ]\n};\n//# sourceMappingURL=application.js.map","/* eslint-disable */\nexport const APPLICATION = {\n    \"domain\": \"air\",\n    \"index\": null,\n    \"name\": \"@airport/holding-pattern\",\n    \"sinceVersion\": 1,\n    \"versions\": [\n        {\n            \"api\": {\n                \"apiObjectMap\": {\n                    \"RepositoryApi\": {\n                        \"operationMap\": {\n                            \"findAll\": {\n                                \"isAsync\": true,\n                                \"parameters\": []\n                            },\n                            \"create\": {\n                                \"isAsync\": true,\n                                \"parameters\": []\n                            }\n                        }\n                    }\n                }\n            },\n            \"entities\": [\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": true,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"ACTOR_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"GUID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplication_Index\": 0,\n                                    \"oneTableIndex\": 4,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"USER_ACCOUNT_LID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 3,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 1,\n                                    \"oneApplication_Index\": 0,\n                                    \"oneTableIndex\": 14,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"TERMINAL_LID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 3\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 4,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 2,\n                                    \"oneApplication_Index\": 1,\n                                    \"oneTableIndex\": 10,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"APPLICATION_INDEX\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 4\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        }\n                    ],\n                    \"index\": 0,\n                    \"isLocal\": true,\n                    \"isAirEntity\": false,\n                    \"name\": \"Actor\",\n                    \"properties\": [\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"_localId\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 1\n                            },\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"GUID\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"userAccount\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"name\": \"terminal\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"name\": \"application\",\n                            \"relationRef\": {\n                                \"index\": 2\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 2\n                            },\n                            \"relationTableIndex\": 4,\n                            \"relationTableApplication_Index\": 0,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 3\n                            },\n                            \"relationTableIndex\": 14,\n                            \"relationTableApplication_Index\": 0,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 4\n                            },\n                            \"relationTableIndex\": 10,\n                            \"relationTableApplication_Index\": 1,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"columnIndexes\": []\n                    },\n                    \"operations\": {}\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"COLUMN_INDEX\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"NEW_VALUE\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"ANY\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 3,\n                                    \"oneRelationIndex\": 2,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"REPOSITORY_RECORD_HISTORY_LID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        },\n                        {\n                            \"index\": 2\n                        }\n                    ],\n                    \"index\": 1,\n                    \"isLocal\": true,\n                    \"isAirEntity\": false,\n                    \"name\": \"RecordHistoryNewValue\",\n                    \"properties\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"recordHistory\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 1,\n                            \"isId\": true,\n                            \"name\": \"columnIndex\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 1\n                            },\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"newValue\",\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 0\n                            },\n                            \"relationTableIndex\": 3,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"REPOSITORY_RECORD_HISTORY_NEW_VALUES\",\n                        \"columnIndexes\": []\n                    },\n                    \"operations\": {}\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"COLUMN_INDEX\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"OLD_VALUE\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"ANY\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 3,\n                                    \"oneRelationIndex\": 3,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"REPOSITORY_RECORD_HISTORY_LID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        },\n                        {\n                            \"index\": 2\n                        }\n                    ],\n                    \"index\": 2,\n                    \"isLocal\": true,\n                    \"isAirEntity\": false,\n                    \"name\": \"RecordHistoryOldValue\",\n                    \"properties\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"recordHistory\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 1,\n                            \"isId\": true,\n                            \"name\": \"columnIndex\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 1\n                            },\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"oldValue\",\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 0\n                            },\n                            \"relationTableIndex\": 3,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"REPOSITORY_RECORD_HISTORY_OLD_VALUES\",\n                        \"columnIndexes\": []\n                    },\n                    \"operations\": {}\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"allocationSize\": 2000,\n                            \"index\": 0,\n                            \"isGenerated\": true,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"RECORD_HISTORY_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"ACTOR_RECORD_ID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 0,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"ACTOR_LID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 3,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 1,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 12,\n                                    \"oneRelationIndex\": 3,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"OPERATION_HISTORY_LID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 3\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        }\n                    ],\n                    \"index\": 3,\n                    \"isLocal\": true,\n                    \"isAirEntity\": false,\n                    \"name\": \"RecordHistory\",\n                    \"properties\": [\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"_localId\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 1\n                            },\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"_actorRecordId\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"actor\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"name\": \"operationHistory\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"name\": \"newValues\",\n                            \"relationRef\": {\n                                \"index\": 2\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 5,\n                            \"isId\": false,\n                            \"name\": \"oldValues\",\n                            \"relationRef\": {\n                                \"index\": 3\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 2\n                            },\n                            \"relationTableIndex\": 0,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 3\n                            },\n                            \"relationTableIndex\": 12,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"recordHistory\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 4\n                            },\n                            \"relationTableIndex\": 1,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"recordHistory\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 5\n                            },\n                            \"relationTableIndex\": 2,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"REPOSITORY_RECORD_HISTORY\",\n                        \"columnIndexes\": [\n                            {\n                                \"name\": \"RCRD_HSTR_TO_OPRTN_HSTR_FX\",\n                                \"columnList\": [\n                                    \"REPOSITORY_OPERATION_HISTORY_LID\"\n                                ],\n                                \"unique\": false\n                            }\n                        ]\n                    }\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 9,\n                                    \"oneRelationIndex\": 10,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"REPOSITORY_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 1,\n                                    \"oneApplication_Index\": 0,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"TYPE_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        },\n                        {\n                            \"index\": 1\n                        }\n                    ],\n                    \"index\": 4,\n                    \"isLocal\": true,\n                    \"isAirEntity\": false,\n                    \"name\": \"RepositoryType\",\n                    \"properties\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"repository\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": true,\n                            \"name\": \"type\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 0\n                            },\n                            \"relationTableIndex\": 9,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": true,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 1\n                            },\n                            \"relationTableIndex\": 8,\n                            \"relationTableApplication_Index\": 0,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"REPOSITORY_TYPES\",\n                        \"columnIndexes\": []\n                    }\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 9,\n                                    \"oneRelationIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"REPOSITORY_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 1,\n                                    \"oneApplication_Index\": 0,\n                                    \"oneTableIndex\": 12,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"DATABASE_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        },\n                        {\n                            \"index\": 1\n                        }\n                    ],\n                    \"index\": 5,\n                    \"isLocal\": true,\n                    \"isAirEntity\": false,\n                    \"name\": \"RepositoryDatabase\",\n                    \"properties\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"repository\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": true,\n                            \"name\": \"database\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 0\n                            },\n                            \"relationTableIndex\": 9,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": true,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 1\n                            },\n                            \"relationTableIndex\": 12,\n                            \"relationTableApplication_Index\": 0,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"REPOSITORY_DATABASES\",\n                        \"columnIndexes\": []\n                    }\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 9,\n                                    \"oneRelationIndex\": 7,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"REPOSITORY_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 1,\n                                    \"oneApplication_Index\": 0,\n                                    \"oneTableIndex\": 10,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"CLIENT_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        },\n                        {\n                            \"index\": 1\n                        }\n                    ],\n                    \"index\": 6,\n                    \"isLocal\": true,\n                    \"isAirEntity\": false,\n                    \"name\": \"RepositoryClient\",\n                    \"properties\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"repository\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": true,\n                            \"name\": \"client\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 0\n                            },\n                            \"relationTableIndex\": 9,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": true,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 1\n                            },\n                            \"relationTableIndex\": 10,\n                            \"relationTableApplication_Index\": 0,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"REPOSITORY_CLIENTS\",\n                        \"columnIndexes\": []\n                    }\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 9,\n                                    \"oneRelationIndex\": 9,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"REPOSITORY_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 1,\n                                    \"oneApplication_Index\": 0,\n                                    \"oneTableIndex\": 14,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"TERMINAL_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        },\n                        {\n                            \"index\": 1\n                        }\n                    ],\n                    \"index\": 7,\n                    \"isLocal\": true,\n                    \"isAirEntity\": false,\n                    \"name\": \"RepositoryTerminal\",\n                    \"properties\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"repository\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": true,\n                            \"name\": \"terminal\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 0\n                            },\n                            \"relationTableIndex\": 9,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": true,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 1\n                            },\n                            \"relationTableIndex\": 14,\n                            \"relationTableApplication_Index\": 0,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"REPOSITORY_TERMINALS\",\n                        \"columnIndexes\": []\n                    }\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplication_Index\": 1,\n                                    \"oneTableIndex\": 10,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"APPLICATION_INDEX\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 1,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 9,\n                                    \"oneRelationIndex\": 6,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"REPOSITORY_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        },\n                        {\n                            \"index\": 1\n                        }\n                    ],\n                    \"index\": 8,\n                    \"isLocal\": true,\n                    \"isAirEntity\": false,\n                    \"name\": \"RepositoryApplication\",\n                    \"properties\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"application\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": true,\n                            \"name\": \"repository\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 0\n                            },\n                            \"relationTableIndex\": 10,\n                            \"relationTableApplication_Index\": 1,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": true,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 1\n                            },\n                            \"relationTableIndex\": 9,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"REPOSITORY_APPLICATIONS\",\n                        \"columnIndexes\": []\n                    }\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": true,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"REPOSITORY_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"GUID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"NAME\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 3,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"AGE_SUITABILITY\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 3\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 4,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"CREATED_AT\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 4\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"DATE\"\n                        },\n                        {\n                            \"index\": 5,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"IMMUTABLE\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 5\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"BOOLEAN\"\n                        },\n                        {\n                            \"index\": 6,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"SOURCE\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 6\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 7,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplication_Index\": 0,\n                                    \"oneTableIndex\": 4,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"OWNER_USER_ACCOUNT_LID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 7\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 8,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 2,\n                                    \"oneApplication_Index\": 0,\n                                    \"oneTableIndex\": 5,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"CONTINENT_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 9\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 9,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 3,\n                                    \"oneApplication_Index\": 0,\n                                    \"oneTableIndex\": 0,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"COUNTRY_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 10\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 10,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 4,\n                                    \"oneApplication_Index\": 0,\n                                    \"oneTableIndex\": 1,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"STATE_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 11\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 11,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 5,\n                                    \"oneApplication_Index\": 0,\n                                    \"oneTableIndex\": 3,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"METRO_AREA_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 12\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        }\n                    ],\n                    \"index\": 9,\n                    \"isLocal\": true,\n                    \"isAirEntity\": false,\n                    \"name\": \"Repository\",\n                    \"properties\": [\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"_localId\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 1\n                            },\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"GUID\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 2\n                            },\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"name\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 3\n                            },\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"name\": \"ageSuitability\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 4\n                            },\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"name\": \"createdAt\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 5\n                            },\n                            \"index\": 5,\n                            \"isId\": false,\n                            \"name\": \"immutable\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 6\n                            },\n                            \"index\": 6,\n                            \"isId\": false,\n                            \"name\": \"source\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 7,\n                            \"isId\": false,\n                            \"name\": \"owner\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 8,\n                            \"isId\": false,\n                            \"name\": \"repositoryTransactionHistory\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 9,\n                            \"isId\": false,\n                            \"name\": \"continent\",\n                            \"relationRef\": {\n                                \"index\": 2\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 10,\n                            \"isId\": false,\n                            \"name\": \"country\",\n                            \"relationRef\": {\n                                \"index\": 3\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 11,\n                            \"isId\": false,\n                            \"name\": \"state\",\n                            \"relationRef\": {\n                                \"index\": 4\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 12,\n                            \"isId\": false,\n                            \"name\": \"metroArea\",\n                            \"relationRef\": {\n                                \"index\": 5\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 13,\n                            \"isId\": false,\n                            \"name\": \"repositoryApplications\",\n                            \"relationRef\": {\n                                \"index\": 6\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 14,\n                            \"isId\": false,\n                            \"name\": \"repositoryClients\",\n                            \"relationRef\": {\n                                \"index\": 7\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 15,\n                            \"isId\": false,\n                            \"name\": \"repositoryDatabases\",\n                            \"relationRef\": {\n                                \"index\": 8\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 16,\n                            \"isId\": false,\n                            \"name\": \"repositoryTerminals\",\n                            \"relationRef\": {\n                                \"index\": 9\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 17,\n                            \"isId\": false,\n                            \"name\": \"repositoryTypes\",\n                            \"relationRef\": {\n                                \"index\": 10\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 7\n                            },\n                            \"relationTableIndex\": 4,\n                            \"relationTableApplication_Index\": 0,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"repository\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 8\n                            },\n                            \"relationTableIndex\": 11,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 9\n                            },\n                            \"relationTableIndex\": 5,\n                            \"relationTableApplication_Index\": 0,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 10\n                            },\n                            \"relationTableIndex\": 0,\n                            \"relationTableApplication_Index\": 0,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 11\n                            },\n                            \"relationTableIndex\": 1,\n                            \"relationTableApplication_Index\": 0,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 5,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 12\n                            },\n                            \"relationTableIndex\": 3,\n                            \"relationTableApplication_Index\": 0,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 6,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"repository\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 13\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 7,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"repository\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 14\n                            },\n                            \"relationTableIndex\": 6,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 8,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"repository\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 15\n                            },\n                            \"relationTableIndex\": 5,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 9,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"repository\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 16\n                            },\n                            \"relationTableIndex\": 7,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 10,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"repository\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 17\n                            },\n                            \"relationTableIndex\": 4,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"REPOSITORY\",\n                        \"columnIndexes\": []\n                    },\n                    \"operations\": {}\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"allocationSize\": 100,\n                            \"index\": 0,\n                            \"isGenerated\": true,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"TRANSACTION_HISTORY_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"TRANSACTION_TYPE\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        }\n                    ],\n                    \"index\": 10,\n                    \"isLocal\": true,\n                    \"isAirEntity\": false,\n                    \"name\": \"TransactionHistory\",\n                    \"properties\": [\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"_localId\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 1\n                            },\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"transactionType\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"repositoryTransactionHistories\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"transactionHistory\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 2\n                            },\n                            \"relationTableIndex\": 11,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"TRANSACTION_HISTORY\",\n                        \"columnIndexes\": []\n                    }\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"allocationSize\": 200,\n                            \"index\": 0,\n                            \"isGenerated\": true,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"REPOSITORY_TRANSACTION_HISTORY_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"REPOSITORY_TRANSACTION_TYPE\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"SAVE_TIMESTAMP\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 3,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"SYNC_TIMESTAMP\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 3\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 4,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"GUID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 4\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 5,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"IS_REPOSITORY_CREATION\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 5\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"BOOLEAN\"\n                        },\n                        {\n                            \"index\": 6,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 9,\n                                    \"oneRelationIndex\": 1,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"REPOSITORY_LID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 6\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 7,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 1,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 10,\n                                    \"oneRelationIndex\": 0,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"TRANSACTION_HISTORY_LID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 7\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        }\n                    ],\n                    \"index\": 11,\n                    \"isLocal\": true,\n                    \"isAirEntity\": false,\n                    \"name\": \"RepositoryTransactionHistory\",\n                    \"properties\": [\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"_localId\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 1\n                            },\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"repositoryTransactionType\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 2\n                            },\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"saveTimestamp\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 3\n                            },\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"name\": \"syncTimestamp\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 4\n                            },\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"name\": \"GUID\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 5\n                            },\n                            \"index\": 5,\n                            \"isId\": false,\n                            \"name\": \"isRepositoryCreation\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 6,\n                            \"isId\": false,\n                            \"name\": \"repository\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 7,\n                            \"isId\": false,\n                            \"name\": \"transactionHistory\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 8,\n                            \"isId\": false,\n                            \"name\": \"operationHistory\",\n                            \"relationRef\": {\n                                \"index\": 2\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 6\n                            },\n                            \"relationTableIndex\": 9,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 7\n                            },\n                            \"relationTableIndex\": 10,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"repositoryTransactionHistory\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 8\n                            },\n                            \"relationTableIndex\": 12,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"REPOSITORY_TRANSACTION_HISTORY\",\n                        \"columnIndexes\": []\n                    },\n                    \"operations\": {}\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"allocationSize\": 600,\n                            \"index\": 0,\n                            \"isGenerated\": true,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"OPERATION_HISTORY_LID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"ORDER_NUMBER\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"CHANGE_TYPE\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 3,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"SYSTEM_WIDE_OPERATION_LID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 3\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 4,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplication_Index\": 1,\n                                    \"oneTableIndex\": 6,\n                                    \"oneColumnIndex\": 3,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"APPLICATION_ENTITY_LID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 4\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 5,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 1,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 0,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"ACTOR_LID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 5\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 6,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 2,\n                                    \"oneApplication_Index\": null,\n                                    \"oneTableIndex\": 11,\n                                    \"oneRelationIndex\": 2,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"REPOSITORY_TRANSACTION_HISTORY_LID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 6\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        }\n                    ],\n                    \"index\": 12,\n                    \"isLocal\": true,\n                    \"isAirEntity\": false,\n                    \"name\": \"OperationHistory\",\n                    \"properties\": [\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"_localId\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 1\n                            },\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"orderNumber\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 2\n                            },\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"changeType\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 3\n                            },\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"name\": \"systemWideOperationId\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"name\": \"entity\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 5,\n                            \"isId\": false,\n                            \"name\": \"actor\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 6,\n                            \"isId\": false,\n                            \"name\": \"repositoryTransactionHistory\",\n                            \"relationRef\": {\n                                \"index\": 2\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 7,\n                            \"isId\": false,\n                            \"name\": \"recordHistory\",\n                            \"relationRef\": {\n                                \"index\": 3\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 4\n                            },\n                            \"relationTableIndex\": 6,\n                            \"relationTableApplication_Index\": 1,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 5\n                            },\n                            \"relationTableIndex\": 0,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 6\n                            },\n                            \"relationTableIndex\": 11,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"operationHistory\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 7\n                            },\n                            \"relationTableIndex\": 3,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"REPOSITORY_OPERATION_HISTORY\",\n                        \"columnIndexes\": []\n                    }\n                }\n            ],\n            \"integerVersion\": 1,\n            \"referencedApplications\": [\n                {\n                    \"domain\": \"air\",\n                    \"index\": 0,\n                    \"name\": \"@airport/travel-document-checkpoint\",\n                    \"sinceVersion\": 1,\n                    \"versions\": [\n                        {\n                            \"entities\": null,\n                            \"integerVersion\": 1,\n                            \"referencedApplications\": null,\n                            \"versionString\": \"1.0.0\"\n                        }\n                    ]\n                },\n                {\n                    \"domain\": \"air\",\n                    \"index\": 1,\n                    \"name\": \"@airport/airspace\",\n                    \"sinceVersion\": 1,\n                    \"versions\": [\n                        {\n                            \"entities\": null,\n                            \"integerVersion\": 1,\n                            \"referencedApplications\": null,\n                            \"versionString\": \"1.0.0\"\n                        }\n                    ]\n                }\n            ],\n            \"versionString\": \"1.0.0\"\n        }\n    ]\n};\n//# sourceMappingURL=application.js.map","/* eslint-disable */\r\nexport const APPLICATION = {\r\n    \"domain\": \"air\",\r\n    \"index\": null,\r\n    \"name\": \"@airport/layover\",\r\n    \"sinceVersion\": 1,\r\n    \"versions\": [\r\n        {\r\n            \"api\": {\r\n                \"apiObjectMap\": {}\r\n            },\r\n            \"entities\": [\r\n                {\r\n                    \"columns\": [\r\n                        {\r\n                            \"index\": 0,\r\n                            \"isGenerated\": true,\r\n                            \"manyRelationColumnRefs\": [],\r\n                            \"name\": \"RECORD_UPDATE_STAGE_LID\",\r\n                            \"notNull\": false,\r\n                            \"propertyRefs\": [\r\n                                {\r\n                                    \"index\": 0\r\n                                }\r\n                            ],\r\n                            \"sinceVersion\": 1,\r\n                            \"type\": \"NUMBER\"\r\n                        },\r\n                        {\r\n                            \"index\": 1,\r\n                            \"isGenerated\": false,\r\n                            \"manyRelationColumnRefs\": [],\r\n                            \"name\": \"ACTOR_RECORD_ID\",\r\n                            \"notNull\": false,\r\n                            \"propertyRefs\": [\r\n                                {\r\n                                    \"index\": 5\r\n                                }\r\n                            ],\r\n                            \"sinceVersion\": 1,\r\n                            \"type\": \"NUMBER\"\r\n                        },\r\n                        {\r\n                            \"index\": 2,\r\n                            \"isGenerated\": false,\r\n                            \"manyRelationColumnRefs\": [],\r\n                            \"name\": \"UPDATED_VALUE\",\r\n                            \"notNull\": false,\r\n                            \"propertyRefs\": [\r\n                                {\r\n                                    \"index\": 7\r\n                                }\r\n                            ],\r\n                            \"sinceVersion\": 1,\r\n                            \"type\": \"ANY\"\r\n                        },\r\n                        {\r\n                            \"index\": 3,\r\n                            \"isGenerated\": false,\r\n                            \"manyRelationColumnRefs\": [\r\n                                {\r\n                                    \"manyRelationIndex\": 0,\r\n                                    \"oneApplication_Index\": 0,\r\n                                    \"oneTableIndex\": 8,\r\n                                    \"oneColumnIndex\": 0,\r\n                                    \"sinceVersion\": 1\r\n                                }\r\n                            ],\r\n                            \"name\": \"APPLICATION_VERSION_LID\",\r\n                            \"notNull\": false,\r\n                            \"propertyRefs\": [\r\n                                {\r\n                                    \"index\": 1\r\n                                }\r\n                            ],\r\n                            \"sinceVersion\": 1,\r\n                            \"type\": \"NUMBER\"\r\n                        },\r\n                        {\r\n                            \"index\": 4,\r\n                            \"isGenerated\": false,\r\n                            \"manyRelationColumnRefs\": [\r\n                                {\r\n                                    \"manyRelationIndex\": 1,\r\n                                    \"oneApplication_Index\": 0,\r\n                                    \"oneTableIndex\": 6,\r\n                                    \"oneColumnIndex\": 3,\r\n                                    \"sinceVersion\": 1\r\n                                }\r\n                            ],\r\n                            \"name\": \"APPLICATION_ENTITY_LID\",\r\n                            \"notNull\": false,\r\n                            \"propertyRefs\": [\r\n                                {\r\n                                    \"index\": 2\r\n                                }\r\n                            ],\r\n                            \"sinceVersion\": 1,\r\n                            \"type\": \"NUMBER\"\r\n                        },\r\n                        {\r\n                            \"index\": 5,\r\n                            \"isGenerated\": false,\r\n                            \"manyRelationColumnRefs\": [\r\n                                {\r\n                                    \"manyRelationIndex\": 2,\r\n                                    \"oneApplication_Index\": 1,\r\n                                    \"oneTableIndex\": 9,\r\n                                    \"oneColumnIndex\": 0,\r\n                                    \"sinceVersion\": 1\r\n                                }\r\n                            ],\r\n                            \"name\": \"REPOSITORY_LID\",\r\n                            \"notNull\": false,\r\n                            \"propertyRefs\": [\r\n                                {\r\n                                    \"index\": 3\r\n                                }\r\n                            ],\r\n                            \"sinceVersion\": 1,\r\n                            \"type\": \"NUMBER\"\r\n                        },\r\n                        {\r\n                            \"index\": 6,\r\n                            \"isGenerated\": false,\r\n                            \"manyRelationColumnRefs\": [\r\n                                {\r\n                                    \"manyRelationIndex\": 3,\r\n                                    \"oneApplication_Index\": 1,\r\n                                    \"oneTableIndex\": 0,\r\n                                    \"oneColumnIndex\": 0,\r\n                                    \"sinceVersion\": 1\r\n                                }\r\n                            ],\r\n                            \"name\": \"ACTOR_LID\",\r\n                            \"notNull\": false,\r\n                            \"propertyRefs\": [\r\n                                {\r\n                                    \"index\": 4\r\n                                }\r\n                            ],\r\n                            \"sinceVersion\": 1,\r\n                            \"type\": \"NUMBER\"\r\n                        },\r\n                        {\r\n                            \"index\": 7,\r\n                            \"isGenerated\": false,\r\n                            \"manyRelationColumnRefs\": [\r\n                                {\r\n                                    \"manyRelationIndex\": 4,\r\n                                    \"oneApplication_Index\": 0,\r\n                                    \"oneTableIndex\": 4,\r\n                                    \"oneColumnIndex\": 3,\r\n                                    \"sinceVersion\": 1\r\n                                }\r\n                            ],\r\n                            \"name\": \"APPLICATION_COLUMN_LID\",\r\n                            \"notNull\": false,\r\n                            \"propertyRefs\": [\r\n                                {\r\n                                    \"index\": 6\r\n                                }\r\n                            ],\r\n                            \"sinceVersion\": 1,\r\n                            \"type\": \"NUMBER\"\r\n                        }\r\n                    ],\r\n                    \"idColumnRefs\": [\r\n                        {\r\n                            \"index\": 0\r\n                        }\r\n                    ],\r\n                    \"index\": 0,\r\n                    \"isLocal\": true,\r\n                    \"isAirEntity\": false,\r\n                    \"name\": \"RecordUpdateStage\",\r\n                    \"properties\": [\r\n                        {\r\n                            \"columnRef\": {\r\n                                \"index\": 0\r\n                            },\r\n                            \"index\": 0,\r\n                            \"isId\": true,\r\n                            \"name\": \"_localId\",\r\n                            \"sinceVersion\": 1\r\n                        },\r\n                        {\r\n                            \"index\": 1,\r\n                            \"isId\": false,\r\n                            \"name\": \"applicationVersion\",\r\n                            \"relationRef\": {\r\n                                \"index\": 0\r\n                            },\r\n                            \"sinceVersion\": 1\r\n                        },\r\n                        {\r\n                            \"index\": 2,\r\n                            \"isId\": false,\r\n                            \"name\": \"entity\",\r\n                            \"relationRef\": {\r\n                                \"index\": 1\r\n                            },\r\n                            \"sinceVersion\": 1\r\n                        },\r\n                        {\r\n                            \"index\": 3,\r\n                            \"isId\": false,\r\n                            \"name\": \"repository\",\r\n                            \"relationRef\": {\r\n                                \"index\": 2\r\n                            },\r\n                            \"sinceVersion\": 1\r\n                        },\r\n                        {\r\n                            \"index\": 4,\r\n                            \"isId\": false,\r\n                            \"name\": \"actor\",\r\n                            \"relationRef\": {\r\n                                \"index\": 3\r\n                            },\r\n                            \"sinceVersion\": 1\r\n                        },\r\n                        {\r\n                            \"columnRef\": {\r\n                                \"index\": 1\r\n                            },\r\n                            \"index\": 5,\r\n                            \"isId\": false,\r\n                            \"name\": \"_actorRecordId\",\r\n                            \"sinceVersion\": 1\r\n                        },\r\n                        {\r\n                            \"index\": 6,\r\n                            \"isId\": false,\r\n                            \"name\": \"column\",\r\n                            \"relationRef\": {\r\n                                \"index\": 4\r\n                            },\r\n                            \"sinceVersion\": 1\r\n                        },\r\n                        {\r\n                            \"columnRef\": {\r\n                                \"index\": 2\r\n                            },\r\n                            \"index\": 7,\r\n                            \"isId\": false,\r\n                            \"name\": \"updatedValue\",\r\n                            \"sinceVersion\": 1\r\n                        }\r\n                    ],\r\n                    \"relations\": [\r\n                        {\r\n                            \"index\": 0,\r\n                            \"isId\": false,\r\n                            \"relationType\": \"MANY_TO_ONE\",\r\n                            \"propertyRef\": {\r\n                                \"index\": 1\r\n                            },\r\n                            \"relationTableIndex\": 8,\r\n                            \"relationTableApplication_Index\": 0,\r\n                            \"sinceVersion\": 1\r\n                        },\r\n                        {\r\n                            \"index\": 1,\r\n                            \"isId\": false,\r\n                            \"relationType\": \"MANY_TO_ONE\",\r\n                            \"propertyRef\": {\r\n                                \"index\": 2\r\n                            },\r\n                            \"relationTableIndex\": 6,\r\n                            \"relationTableApplication_Index\": 0,\r\n                            \"sinceVersion\": 1\r\n                        },\r\n                        {\r\n                            \"index\": 2,\r\n                            \"isId\": false,\r\n                            \"relationType\": \"MANY_TO_ONE\",\r\n                            \"propertyRef\": {\r\n                                \"index\": 3\r\n                            },\r\n                            \"relationTableIndex\": 9,\r\n                            \"relationTableApplication_Index\": 1,\r\n                            \"sinceVersion\": 1\r\n                        },\r\n                        {\r\n                            \"index\": 3,\r\n                            \"isId\": false,\r\n                            \"relationType\": \"MANY_TO_ONE\",\r\n                            \"propertyRef\": {\r\n                                \"index\": 4\r\n                            },\r\n                            \"relationTableIndex\": 0,\r\n                            \"relationTableApplication_Index\": 1,\r\n                            \"sinceVersion\": 1\r\n                        },\r\n                        {\r\n                            \"index\": 4,\r\n                            \"isId\": false,\r\n                            \"relationType\": \"MANY_TO_ONE\",\r\n                            \"propertyRef\": {\r\n                                \"index\": 6\r\n                            },\r\n                            \"relationTableIndex\": 4,\r\n                            \"relationTableApplication_Index\": 0,\r\n                            \"sinceVersion\": 1\r\n                        }\r\n                    ],\r\n                    \"sinceVersion\": 1,\r\n                    \"tableConfig\": {\r\n                        \"name\": \"RECORD_UPDATE_STAGE\",\r\n                        \"columnIndexes\": []\r\n                    },\r\n                    \"operations\": {}\r\n                },\r\n                {\r\n                    \"columns\": [\r\n                        {\r\n                            \"index\": 0,\r\n                            \"isGenerated\": false,\r\n                            \"manyRelationColumnRefs\": [],\r\n                            \"name\": \"COLUMNINDEX\",\r\n                            \"notNull\": false,\r\n                            \"propertyRefs\": [\r\n                                {\r\n                                    \"index\": 1\r\n                                }\r\n                            ],\r\n                            \"sinceVersion\": 1,\r\n                            \"type\": \"NUMBER\"\r\n                        },\r\n                        {\r\n                            \"index\": 1,\r\n                            \"isGenerated\": false,\r\n                            \"manyRelationColumnRefs\": [\r\n                                {\r\n                                    \"manyRelationIndex\": 0,\r\n                                    \"oneApplication_Index\": null,\r\n                                    \"oneTableIndex\": 2,\r\n                                    \"oneRelationIndex\": 3,\r\n                                    \"oneColumnIndex\": 0,\r\n                                    \"sinceVersion\": 1\r\n                                }\r\n                            ],\r\n                            \"name\": \"SYNCHRONIZATION_CONFLICT_LID\",\r\n                            \"notNull\": false,\r\n                            \"propertyRefs\": [\r\n                                {\r\n                                    \"index\": 0\r\n                                }\r\n                            ],\r\n                            \"sinceVersion\": 1,\r\n                            \"type\": \"NUMBER\"\r\n                        }\r\n                    ],\r\n                    \"idColumnRefs\": [\r\n                        {\r\n                            \"index\": 0\r\n                        },\r\n                        {\r\n                            \"index\": 1\r\n                        }\r\n                    ],\r\n                    \"index\": 1,\r\n                    \"isLocal\": true,\r\n                    \"isAirEntity\": false,\r\n                    \"name\": \"SynchronizationConflictValues\",\r\n                    \"properties\": [\r\n                        {\r\n                            \"index\": 0,\r\n                            \"isId\": true,\r\n                            \"name\": \"synchronizationConflict\",\r\n                            \"relationRef\": {\r\n                                \"index\": 0\r\n                            },\r\n                            \"sinceVersion\": 1\r\n                        },\r\n                        {\r\n                            \"columnRef\": {\r\n                                \"index\": 0\r\n                            },\r\n                            \"index\": 1,\r\n                            \"isId\": true,\r\n                            \"name\": \"columnIndex\",\r\n                            \"sinceVersion\": 1\r\n                        }\r\n                    ],\r\n                    \"relations\": [\r\n                        {\r\n                            \"index\": 0,\r\n                            \"isId\": true,\r\n                            \"relationType\": \"MANY_TO_ONE\",\r\n                            \"propertyRef\": {\r\n                                \"index\": 0\r\n                            },\r\n                            \"relationTableIndex\": 2,\r\n                            \"sinceVersion\": 1\r\n                        }\r\n                    ],\r\n                    \"sinceVersion\": 1,\r\n                    \"tableConfig\": {\r\n                        \"name\": \"SYNCHRONIZATION_CONFLICT_VALUES\",\r\n                        \"columnIndexes\": []\r\n                    },\r\n                    \"operations\": {}\r\n                },\r\n                {\r\n                    \"columns\": [\r\n                        {\r\n                            \"index\": 0,\r\n                            \"isGenerated\": true,\r\n                            \"manyRelationColumnRefs\": [],\r\n                            \"name\": \"SYNCHRONIZATION_CONFLICT_LID\",\r\n                            \"notNull\": false,\r\n                            \"propertyRefs\": [\r\n                                {\r\n                                    \"index\": 0\r\n                                }\r\n                            ],\r\n                            \"sinceVersion\": 1,\r\n                            \"type\": \"NUMBER\"\r\n                        },\r\n                        {\r\n                            \"index\": 1,\r\n                            \"isGenerated\": false,\r\n                            \"manyRelationColumnRefs\": [],\r\n                            \"name\": \"TYPE\",\r\n                            \"notNull\": false,\r\n                            \"propertyRefs\": [\r\n                                {\r\n                                    \"index\": 1\r\n                                }\r\n                            ],\r\n                            \"sinceVersion\": 1,\r\n                            \"type\": \"STRING\"\r\n                        },\r\n                        {\r\n                            \"index\": 2,\r\n                            \"isGenerated\": false,\r\n                            \"manyRelationColumnRefs\": [],\r\n                            \"name\": \"ACKNOWLEDGED\",\r\n                            \"notNull\": false,\r\n                            \"propertyRefs\": [\r\n                                {\r\n                                    \"index\": 2\r\n                                }\r\n                            ],\r\n                            \"sinceVersion\": 1,\r\n                            \"type\": \"BOOLEAN\"\r\n                        },\r\n                        {\r\n                            \"index\": 3,\r\n                            \"isGenerated\": false,\r\n                            \"manyRelationColumnRefs\": [\r\n                                {\r\n                                    \"manyRelationIndex\": 0,\r\n                                    \"oneApplication_Index\": 1,\r\n                                    \"oneTableIndex\": 9,\r\n                                    \"oneColumnIndex\": 0,\r\n                                    \"sinceVersion\": 1\r\n                                }\r\n                            ],\r\n                            \"name\": \"REPOSITORY_LID\",\r\n                            \"notNull\": false,\r\n                            \"propertyRefs\": [\r\n                                {\r\n                                    \"index\": 3\r\n                                }\r\n                            ],\r\n                            \"sinceVersion\": 1,\r\n                            \"type\": \"NUMBER\"\r\n                        },\r\n                        {\r\n                            \"index\": 4,\r\n                            \"isGenerated\": false,\r\n                            \"manyRelationColumnRefs\": [\r\n                                {\r\n                                    \"manyRelationIndex\": 1,\r\n                                    \"oneApplication_Index\": 1,\r\n                                    \"oneTableIndex\": 3,\r\n                                    \"oneColumnIndex\": 0,\r\n                                    \"sinceVersion\": 1\r\n                                }\r\n                            ],\r\n                            \"name\": \"OVERWRITTEN_RECORD_HISTORY_LID\",\r\n                            \"notNull\": false,\r\n                            \"propertyRefs\": [\r\n                                {\r\n                                    \"index\": 4\r\n                                }\r\n                            ],\r\n                            \"sinceVersion\": 1,\r\n                            \"type\": \"NUMBER\"\r\n                        },\r\n                        {\r\n                            \"index\": 5,\r\n                            \"isGenerated\": false,\r\n                            \"manyRelationColumnRefs\": [\r\n                                {\r\n                                    \"manyRelationIndex\": 2,\r\n                                    \"oneApplication_Index\": 1,\r\n                                    \"oneTableIndex\": 3,\r\n                                    \"oneColumnIndex\": 0,\r\n                                    \"sinceVersion\": 1\r\n                                }\r\n                            ],\r\n                            \"name\": \"OVERWRITING_RECORD_HISTORY_LID\",\r\n                            \"notNull\": false,\r\n                            \"propertyRefs\": [\r\n                                {\r\n                                    \"index\": 5\r\n                                }\r\n                            ],\r\n                            \"sinceVersion\": 1,\r\n                            \"type\": \"NUMBER\"\r\n                        }\r\n                    ],\r\n                    \"idColumnRefs\": [\r\n                        {\r\n                            \"index\": 0\r\n                        }\r\n                    ],\r\n                    \"index\": 2,\r\n                    \"isLocal\": true,\r\n                    \"isAirEntity\": false,\r\n                    \"name\": \"SynchronizationConflict\",\r\n                    \"properties\": [\r\n                        {\r\n                            \"columnRef\": {\r\n                                \"index\": 0\r\n                            },\r\n                            \"index\": 0,\r\n                            \"isId\": true,\r\n                            \"name\": \"_localId\",\r\n                            \"sinceVersion\": 1\r\n                        },\r\n                        {\r\n                            \"columnRef\": {\r\n                                \"index\": 1\r\n                            },\r\n                            \"index\": 1,\r\n                            \"isId\": false,\r\n                            \"name\": \"type\",\r\n                            \"sinceVersion\": 1\r\n                        },\r\n                        {\r\n                            \"columnRef\": {\r\n                                \"index\": 2\r\n                            },\r\n                            \"index\": 2,\r\n                            \"isId\": false,\r\n                            \"name\": \"acknowledged\",\r\n                            \"sinceVersion\": 1\r\n                        },\r\n                        {\r\n                            \"index\": 3,\r\n                            \"isId\": false,\r\n                            \"name\": \"repository\",\r\n                            \"relationRef\": {\r\n                                \"index\": 0\r\n                            },\r\n                            \"sinceVersion\": 1\r\n                        },\r\n                        {\r\n                            \"index\": 4,\r\n                            \"isId\": false,\r\n                            \"name\": \"overwrittenRecordHistory\",\r\n                            \"relationRef\": {\r\n                                \"index\": 1\r\n                            },\r\n                            \"sinceVersion\": 1\r\n                        },\r\n                        {\r\n                            \"index\": 5,\r\n                            \"isId\": false,\r\n                            \"name\": \"overwritingRecordHistory\",\r\n                            \"relationRef\": {\r\n                                \"index\": 2\r\n                            },\r\n                            \"sinceVersion\": 1\r\n                        },\r\n                        {\r\n                            \"index\": 6,\r\n                            \"isId\": false,\r\n                            \"name\": \"values\",\r\n                            \"relationRef\": {\r\n                                \"index\": 3\r\n                            },\r\n                            \"sinceVersion\": 1\r\n                        }\r\n                    ],\r\n                    \"relations\": [\r\n                        {\r\n                            \"index\": 0,\r\n                            \"isId\": false,\r\n                            \"relationType\": \"MANY_TO_ONE\",\r\n                            \"propertyRef\": {\r\n                                \"index\": 3\r\n                            },\r\n                            \"relationTableIndex\": 9,\r\n                            \"relationTableApplication_Index\": 1,\r\n                            \"sinceVersion\": 1\r\n                        },\r\n                        {\r\n                            \"index\": 1,\r\n                            \"isId\": false,\r\n                            \"relationType\": \"MANY_TO_ONE\",\r\n                            \"propertyRef\": {\r\n                                \"index\": 4\r\n                            },\r\n                            \"relationTableIndex\": 3,\r\n                            \"relationTableApplication_Index\": 1,\r\n                            \"sinceVersion\": 1\r\n                        },\r\n                        {\r\n                            \"index\": 2,\r\n                            \"isId\": false,\r\n                            \"relationType\": \"MANY_TO_ONE\",\r\n                            \"propertyRef\": {\r\n                                \"index\": 5\r\n                            },\r\n                            \"relationTableIndex\": 3,\r\n                            \"relationTableApplication_Index\": 1,\r\n                            \"sinceVersion\": 1\r\n                        },\r\n                        {\r\n                            \"index\": 3,\r\n                            \"isId\": false,\r\n                            \"oneToManyElems\": {\r\n                                \"mappedBy\": \"synchronizationConflict\"\r\n                            },\r\n                            \"relationType\": \"ONE_TO_MANY\",\r\n                            \"propertyRef\": {\r\n                                \"index\": 6\r\n                            },\r\n                            \"relationTableIndex\": 1,\r\n                            \"sinceVersion\": 1\r\n                        }\r\n                    ],\r\n                    \"sinceVersion\": 1,\r\n                    \"tableConfig\": {\r\n                        \"name\": \"SYNCHRONIZATION_CONFLICT\",\r\n                        \"columnIndexes\": []\r\n                    },\r\n                    \"operations\": {}\r\n                }\r\n            ],\r\n            \"integerVersion\": 1,\r\n            \"referencedApplications\": [\r\n                {\r\n                    \"domain\": \"air\",\r\n                    \"index\": 0,\r\n                    \"name\": \"@airport/airspace\",\r\n                    \"sinceVersion\": 1,\r\n                    \"versions\": [\r\n                        {\r\n                            \"entities\": null,\r\n                            \"integerVersion\": 1,\r\n                            \"referencedApplications\": null,\r\n                            \"versionString\": \"1.0.0\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"domain\": \"air\",\r\n                    \"index\": 1,\r\n                    \"name\": \"@airport/holding-pattern\",\r\n                    \"sinceVersion\": 1,\r\n                    \"versions\": [\r\n                        {\r\n                            \"entities\": null,\r\n                            \"integerVersion\": 1,\r\n                            \"referencedApplications\": null,\r\n                            \"versionString\": \"1.0.0\"\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"versionString\": \"1.0.0\"\r\n        }\r\n    ]\r\n};\r\n//# sourceMappingURL=application.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { Actor, } from '@airport/holding-pattern';\nimport { BLUEPRINT } from '@airport/blueprint';\nlet DatabaseManager = class DatabaseManager {\n    constructor() {\n        this.initialized = false;\n    }\n    async initNoDb(context, ...applications) {\n        this.airportDatabase.load();\n        this.transactionalServer.tempActor = new Actor();\n        await this.installStarterApplication(true, false, context);\n        await this.applicationInitializer.stage(applications, context);\n        this.transactionalServer.tempActor = null;\n        this.initialized = true;\n    }\n    async initWithDb(domainName, context) {\n        this.airportDatabase.load();\n        this.transactionalServer.tempActor = new Actor();\n        await this.transactionManager.transactInternal(async (_transaction, context) => {\n            const hydrate = await this.storeDriver.doesTableExist(this.dbApplicationUtils\n                .getFullApplication_Name(BLUEPRINT[0]), 'PACKAGES', context);\n            await this.installStarterApplication(false, hydrate, context);\n            if (!hydrate) {\n                await this.internalRecordManager.initTerminal(domainName, context);\n            }\n            this.transactionalServer.tempActor = null;\n            this.initialized = true;\n        }, {\n            doNotRecordHistory: true\n        });\n    }\n    isInitialized() {\n        return this.initialized;\n    }\n    async initFeatureApplications(context, jsonApplications) {\n        const applications = await this.applicationDao.findAllWithJson();\n        const existingApplicationMap = new Map();\n        for (const application of applications) {\n            existingApplicationMap.set(application.fullName, application);\n        }\n        const applicationsToCreate = [];\n        for (const jsonApplication of jsonApplications) {\n            const existingApplication = existingApplicationMap.get(this.dbApplicationUtils\n                .getFullApplication_Name(jsonApplication));\n            if (existingApplication) {\n                jsonApplication.lastIds = existingApplication.versions[0].jsonApplication.lastIds;\n            }\n            else {\n                applicationsToCreate.push(jsonApplication);\n            }\n        }\n        this.transactionalServer.tempActor = new Actor();\n        await this.applicationInitializer.initialize(applicationsToCreate, context, true, true);\n        this.transactionalServer.tempActor = null;\n    }\n    async installStarterApplication(stage, hydrate, context) {\n        const blueprintFile = await import('@airport/blueprint');\n        if (stage) {\n            await this.applicationInitializer.stage(blueprintFile.BLUEPRINT, context);\n        }\n        else if (hydrate) {\n            await this.applicationInitializer.hydrate(blueprintFile.BLUEPRINT, context);\n        }\n        else {\n            await this.applicationInitializer.initialize(blueprintFile.BLUEPRINT, context, false, false);\n        }\n    }\n};\n__decorate([\n    Inject()\n], DatabaseManager.prototype, \"airportDatabase\", void 0);\n__decorate([\n    Inject()\n], DatabaseManager.prototype, \"applicationDao\", void 0);\n__decorate([\n    Inject()\n], DatabaseManager.prototype, \"applicationInitializer\", void 0);\n__decorate([\n    Inject()\n], DatabaseManager.prototype, \"dbApplicationUtils\", void 0);\n__decorate([\n    Inject()\n], DatabaseManager.prototype, \"internalRecordManager\", void 0);\n__decorate([\n    Inject()\n], DatabaseManager.prototype, \"storeDriver\", void 0);\n__decorate([\n    Inject()\n], DatabaseManager.prototype, \"transactionalServer\", void 0);\n__decorate([\n    Inject()\n], DatabaseManager.prototype, \"transactionManager\", void 0);\nDatabaseManager = __decorate([\n    Injected()\n], DatabaseManager);\nexport { DatabaseManager };\n//# sourceMappingURL=DatabaseManager.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { getSysWideOpId } from '@airport/air-traffic-control';\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { ChangeType, ensureChildArray, ensureChildJsMap, EntityRelationType, QueryResultType, airEntity, } from '@airport/ground-control';\n// for Applications\nimport { Y } from '@airport/tarmaq-query';\nlet DeleteManager = class DeleteManager {\n    async deleteWhere(portableQuery, actor, transaction, rootTransaction, context) {\n        const dbEntity = this.airportDatabase\n            .applications[portableQuery.applicationIndex].currentVersion[0].applicationVersion\n            .entities[portableQuery.tableIndex];\n        const deleteCommand = transaction.deleteWhere(portableQuery, context);\n        if (dbEntity.isLocal || transaction.isSync) {\n            return await deleteCommand;\n        }\n        const selectCascadeTree = this.getCascadeSubTree(dbEntity);\n        const jsonDelete = portableQuery.jsonQuery;\n        const jsonSelect = {\n            S: selectCascadeTree,\n            F: [jsonDelete.DF],\n            W: jsonDelete.W,\n        };\n        const portableSelect = {\n            applicationIndex: portableQuery.applicationIndex,\n            tableIndex: portableQuery.tableIndex,\n            jsonQuery: jsonSelect,\n            queryResultType: QueryResultType.ENTITY_TREE,\n            parameterMap: portableQuery.parameterMap,\n            // values: portableQuery.values,\n        };\n        const treesToDelete = await transaction\n            .find(portableSelect, {}, context);\n        const recordsToDelete = new Map();\n        const repositoryIdSet = new Set();\n        for (const treeToDelete of treesToDelete) {\n            this.recordRepositoryIds(treeToDelete, dbEntity, recordsToDelete, repositoryIdSet, this.applicationUtils);\n        }\n        await this.recordTreeToDelete(recordsToDelete, actor, transaction, rootTransaction, context);\n        return await deleteCommand;\n    }\n    recordRepositoryIds(treeToDelete, dbEntity, recordsToDelete, repositoryIdSet, applicationUtils) {\n        const repositoryId = treeToDelete.repository._localId;\n        repositoryIdSet.add(repositoryId);\n        const recordsToDeleteForApplication = ensureChildJsMap(recordsToDelete, dbEntity.applicationVersion.application.index);\n        const recordsToDeleteForTable = ensureChildJsMap(recordsToDeleteForApplication, dbEntity.index);\n        const recordsToDeleteForRepository = ensureChildArray(recordsToDeleteForTable, repositoryId);\n        const recordToDelete = {};\n        // FIXME: implement\n        recordsToDeleteForRepository.push(recordToDelete);\n        for (const dbProperty of dbEntity.properties) {\n            if (dbProperty.relation && dbProperty.relation.length) {\n                if (!treeToDelete[dbProperty.name]) {\n                    continue;\n                }\n                const dbRelation = dbProperty.relation[0];\n                switch (dbRelation.relationType) {\n                    case EntityRelationType.MANY_TO_ONE:\n                        applicationUtils.forEachColumnOfRelation(dbRelation, treeToDelete, (dbColumn, value, propertyNameChains) => {\n                            this.columnProcessed(dbProperty, recordToDelete, dbColumn, value);\n                        }, false);\n                        break;\n                    case EntityRelationType.ONE_TO_MANY:\n                        if (!dbRelation.oneToManyElems) {\n                            continue;\n                        }\n                        let childTrees = treeToDelete[dbRelation.property.name];\n                        if (childTrees && childTrees.length) {\n                            const childDbEntity = dbRelation.relationEntity;\n                            childTrees.forEach(childTree => {\n                                this.recordRepositoryIds(childTree, childDbEntity, recordsToDelete, repositoryIdSet, applicationUtils);\n                            });\n                        }\n                        break;\n                    default:\n                        throw new Error(`Unknown relation type: '${dbRelation.relationType}' \r\n\t\t\t\t\t\t\ton '${dbEntity.name}.${dbRelation.property.name}'.`);\n                }\n            }\n            else {\n                const value = treeToDelete[dbProperty.name];\n                if (value === null || value === undefined) {\n                    continue;\n                }\n                this.columnProcessed(dbProperty, recordToDelete, dbProperty.propertyColumns[0].column, value);\n            }\n        }\n    }\n    /*\n     Values for the same column could be repeated in different places in the object graph.\n     For example, if the same column is mapped to two different @ManyToOne relations.\n     In this case, when persisting an entity we need to make sure that all values for the\n     entity in question are being persisted.\n     */\n    columnProcessed(dbProperty, foundValues, dbColumn, value) {\n        // if (value === undefined) {\n        // \tthrow new Error(`Values cannot be undefined, please use null.`_;\n        // }\n        if (foundValues[dbColumn.name] === undefined) {\n            foundValues[dbColumn.name] = value;\n            return false;\n        }\n        if (!this.utils.valuesEqual(foundValues[dbColumn.name], value)) {\n            throw new Error(`Found value mismatch in '${dbProperty.entity.name}.${dbProperty.name}'\r\n\t\t\t(column: '${dbColumn.name}'): ${foundValues[dbColumn.name]} !== ${value}`);\n        }\n        return true;\n    }\n    async recordTreeToDelete(recordsToDelete, actor, transaction, rootTransaction, context) {\n        let systemWideOperationId;\n        for (const [applicationIndex, applicationRecordsToDelete] of recordsToDelete) {\n            for (const [entityIndex, entityRecordsToDelete] of applicationRecordsToDelete) {\n                const dbEntity = this.airportDatabase.applications[applicationIndex].currentVersion[0]\n                    .applicationVersion.entities[entityIndex];\n                if (!systemWideOperationId) {\n                    systemWideOperationId = await getSysWideOpId(this.airportDatabase, this.sequenceGenerator);\n                }\n                for (const [repositoryId, entityRecordsToDeleteForRepo] of entityRecordsToDelete) {\n                    const repositoryTransactionHistory = await this.historyManager.getNewRepositoryTransactionHistory(transaction.transactionHistory, repositoryId, context);\n                    const operationHistory = this.repositoryTransactionHistoryDuo.startOperation(repositoryTransactionHistory, systemWideOperationId, ChangeType.DELETE_ROWS, dbEntity, actor, rootTransaction);\n                    for (const recordToDelete of entityRecordsToDeleteForRepo) {\n                        const recordHistory = this.operationHistoryDuo.startRecordHistory(operationHistory, recordToDelete.actor._localId, recordToDelete._actorRecordId);\n                        for (const dbProperty of dbEntity.properties) {\n                            if (dbProperty.relation && dbProperty.relation.length) {\n                                const dbRelation = dbProperty.relation[0];\n                                switch (dbRelation.relationType) {\n                                    case EntityRelationType.MANY_TO_ONE:\n                                        this.applicationUtils.forEachColumnOfRelation(dbRelation, recordToDelete, (dbColumn, value, propertyNameChains) => {\n                                            switch (dbColumn.name) {\n                                                // Do not add Actor or Repository the are recorded\n                                                // at record history level\n                                                case airEntity.ACTOR_LID:\n                                                case airEntity.REPOSITORY_LID:\n                                                    break;\n                                                default:\n                                                    this.recordHistoryDuo.addOldValue(recordHistory, dbColumn, value);\n                                            }\n                                        });\n                                        break;\n                                    case EntityRelationType.ONE_TO_MANY:\n                                        // One-To-Many do not contain any columns in source entity\n                                        break;\n                                    default:\n                                        throw new Error(`Unknown relation type: '${dbRelation.relationType}'\r\n\t\t\t\t\t\t\t\t\t\ton '${dbEntity.name}.${dbProperty.name}'.`);\n                                }\n                            }\n                            else {\n                                const dbColumn = dbProperty.propertyColumns[0].column;\n                                this.recordHistoryDuo\n                                    .addOldValue(recordHistory, dbColumn, recordToDelete[dbProperty.name]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    getCascadeSubTree(dbEntity, selectClause = {}) {\n        for (const dbProperty of dbEntity.properties) {\n            let dbRelation;\n            if (dbProperty.relation && dbProperty.relation.length) {\n                dbRelation = dbProperty.relation[0];\n            }\n            if (dbRelation) {\n                switch (dbRelation.relationType) {\n                    case EntityRelationType.ONE_TO_MANY:\n                        if (!dbRelation.oneToManyElems) {\n                            continue;\n                        }\n                        const subTree = {};\n                        selectClause[dbProperty.name] = subTree;\n                        this.getCascadeSubTree(dbRelation.relationEntity, subTree);\n                        break;\n                    case EntityRelationType.MANY_TO_ONE:\n                        this.applicationUtils.addRelationToEntitySelectClause(dbRelation, selectClause);\n                        break;\n                    default:\n                        throw new Error(`Unknown relation type: '${dbRelation.relationType}' \r\n\t\t\t\t\t\t\ton '${dbEntity.name}.${dbProperty.name}'.`);\n                }\n            }\n            else {\n                selectClause[dbProperty.name] = Y;\n            }\n        }\n        return selectClause;\n    }\n};\n__decorate([\n    Inject()\n], DeleteManager.prototype, \"airportDatabase\", void 0);\n__decorate([\n    Inject()\n], DeleteManager.prototype, \"applicationUtils\", void 0);\n__decorate([\n    Inject()\n], DeleteManager.prototype, \"historyManager\", void 0);\n__decorate([\n    Inject()\n], DeleteManager.prototype, \"operationHistoryDuo\", void 0);\n__decorate([\n    Inject()\n], DeleteManager.prototype, \"recordHistoryDuo\", void 0);\n__decorate([\n    Inject()\n], DeleteManager.prototype, \"repositoryTransactionHistoryDuo\", void 0);\n__decorate([\n    Inject()\n], DeleteManager.prototype, \"sequenceGenerator\", void 0);\n__decorate([\n    Inject()\n], DeleteManager.prototype, \"utils\", void 0);\nDeleteManager = __decorate([\n    Injected()\n], DeleteManager);\nexport { DeleteManager };\n//# sourceMappingURL=DeleteManager.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { TransactionType } from '@airport/ground-control';\nlet HistoryManager = class HistoryManager {\n    async getNewTransactionHistory(transactionType = TransactionType.LOCAL) {\n        return await this.transactionHistoryDuo.getNewRecord(transactionType);\n    }\n    async getNewRepositoryTransactionHistory(transactionHistory, repositoryId, context) {\n        return await this.transactionHistoryDuo.getRepositoryTransaction(transactionHistory, repositoryId, !!context.rootTransaction.newRepository);\n    }\n};\n__decorate([\n    Inject()\n], HistoryManager.prototype, \"transactionHistoryDuo\", void 0);\nHistoryManager = __decorate([\n    Injected()\n], HistoryManager);\nexport { HistoryManager };\n//# sourceMappingURL=HistoryManager.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { getSysWideOpId } from '@airport/air-traffic-control';\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { ChangeType, airEntity, } from '@airport/ground-control';\nlet InsertManager = class InsertManager {\n    async insertValues(portableQuery, actor, transaction, rootTransaction, context, ensureGeneratedValues) {\n        return await this.internalInsertValues(portableQuery, actor, transaction, rootTransaction, context, false, ensureGeneratedValues);\n    }\n    async insertValuesGetLocalIds(portableQuery, actor, transaction, rootTransaction, context) {\n        return await this.internalInsertValues(portableQuery, actor, transaction, rootTransaction, context, true);\n    }\n    verifyNoGeneratedColumns(dbEntity, jsonInsertValues, errorPrefix) {\n        for (let i = 0; i < jsonInsertValues.C.length; i++) {\n            const columnIndex = jsonInsertValues.C[i];\n            const dbColumn = dbEntity.columns[columnIndex];\n            if (dbColumn.isGenerated) {\n                throw new Error(errorPrefix +\n                    `You cannot explicitly insert into a @GeneratedValue column '${dbColumn.name}'`);\n            }\n        }\n        return dbEntity.columns.filter(dbColumn => dbColumn.isGenerated);\n    }\n    async internalInsertValues(portableQuery, actor, transaction, rootTransaction, context, getIds = false, ensureGeneratedValues = true) {\n        const dbEntity = this.airportDatabase.applications[portableQuery.applicationIndex]\n            .currentVersion[0].applicationVersion.entities[portableQuery.tableIndex];\n        const errorPrefix = `Error inserting into '${dbEntity.name}'.'\r\n`;\n        this.validateValueRowLength(portableQuery, errorPrefix);\n        const jsonInsertValues = portableQuery.jsonQuery;\n        const columnIndexSet = {};\n        let inStatementIndex = 0;\n        for (const columnIndex of jsonInsertValues.C) {\n            if (columnIndex < 0 || columnIndex >= dbEntity.columns.length) {\n                throw new Error(errorPrefix +\n                    `Invalid column index: ${columnIndex}`);\n            }\n            if (columnIndexSet[columnIndex]) {\n                throw new Error(errorPrefix +\n                    `Column ${dbEntity.name}.${dbEntity.columns[columnIndex].name} \r\nappears more than once in the Columns clause`);\n            }\n            let rowNumber = 1;\n            for (let row of jsonInsertValues.V) {\n                if (row[inStatementIndex] === undefined) {\n                    throw new Error(errorPrefix +\n                        `\r\n\t'undefined' value in column ${dbEntity.name}.${dbEntity.columns[columnIndex].name} of row ${rowNumber}.\r\n\tAll values in an insert statment must either be null or have a non-null value.`);\n                }\n                rowNumber++;\n            }\n            inStatementIndex++;\n            columnIndexSet[columnIndex] = true;\n        }\n        let columnsToPopulate;\n        const insertValues = portableQuery.jsonQuery;\n        if (dbEntity.isAirEntity) {\n            columnsToPopulate = this.ensureAirEntityIdValues(actor, dbEntity, insertValues, errorPrefix, transaction, context);\n        }\n        let generatedColumns;\n        if (!transaction.isSync || context.generateOnSync) {\n            generatedColumns = this.verifyNoGeneratedColumns(dbEntity, portableQuery.jsonQuery, errorPrefix);\n        }\n        let _localIds;\n        let systemWideOperationId;\n        if (!dbEntity.isLocal) {\n            systemWideOperationId = await getSysWideOpId(this.airportDatabase, this.sequenceGenerator);\n        }\n        if ((!transaction.isSync || context.generateOnSync) && ensureGeneratedValues) {\n            _localIds = await this.ensureGeneratedValues(dbEntity, insertValues, actor, columnsToPopulate, generatedColumns, systemWideOperationId, errorPrefix, this.sequenceGenerator);\n        }\n        if (!dbEntity.isLocal && !transaction.isSync) {\n            await this.addInsertHistory(dbEntity, portableQuery, actor, systemWideOperationId, transaction, rootTransaction, context);\n        }\n        const numberOfInsertedRecords = await transaction.insertValues(portableQuery, context);\n        return getIds ? _localIds : numberOfInsertedRecords;\n    }\n    async validateValueRowLength(portableQuery, errorPrefix) {\n        const values = portableQuery.jsonQuery.V;\n        if (!values.length) {\n            throw new Error(errorPrefix + `no colum values provided`);\n        }\n        const firstValuesRow = values[0];\n        if (!firstValuesRow || !firstValuesRow.length) {\n            throw new Error(errorPrefix + `First row has no values`);\n        }\n        const numValuesInRow = firstValuesRow.length;\n        for (let i = 0; i < values.length; i++) {\n            const valuesRow = values[i];\n            if (valuesRow.length !== numValuesInRow) {\n                throw new Error(errorPrefix + `First row has ${numValuesInRow} values,\r\n\twhile row ${i + 1} has ${valuesRow.length} values`);\n            }\n        }\n    }\n    async ensureGeneratedValues(dbEntity, jsonInsertValues, actor, columnsToPopulate, generatedColumns, systemWideOperationId, errorPrefix, sequenceGenerator) {\n        const values = jsonInsertValues.V;\n        const idColumns = dbEntity.idColumns;\n        const allIds = [];\n        for (const _entityValues of values) {\n            allIds.push([]);\n        }\n        let actorIdColumn;\n        let sysWideOperationIdColumn;\n        if (!dbEntity.isLocal) {\n            actorIdColumn = columnsToPopulate.actorIdColumn;\n            sysWideOperationIdColumn = columnsToPopulate.sysWideOperationIdColumn;\n        }\n        for (const idColumn of idColumns) {\n            if (idColumn.isGenerated) {\n                continue;\n            }\n            let isActorIdColumn = false;\n            let inStatementColumnIndex;\n            const matchingColumns = jsonInsertValues.C.filter((columnIndex, index) => {\n                if (columnIndex === idColumn.index) {\n                    inStatementColumnIndex = index;\n                    return true;\n                }\n            });\n            if (matchingColumns.length < 1) {\n                // Actor Id cannot be in the insert statement\n                if (idColumn._localId === actorIdColumn._localId) {\n                    isActorIdColumn = true;\n                    inStatementColumnIndex = jsonInsertValues.C.length;\n                    jsonInsertValues.C.push(actorIdColumn.index);\n                }\n                else {\n                    throw new Error(errorPrefix +\n                        `Could not find @Id column ${dbEntity.name}.${idColumn.name} in\r\n\t\t\t\t\tthe insert statement.  Non-generated @Id columns must be present in the Insert\r\n\t\t\t\t\tstatement (with exception of Actor ID).`);\n                }\n            }\n            for (let i = 0; i < values.length; i++) {\n                const entityValues = values[i];\n                const idValues = allIds[i];\n                let idValue;\n                if (isActorIdColumn) {\n                    idValue = actor._localId;\n                }\n                else {\n                    idValue = entityValues[inStatementColumnIndex];\n                    if (!idValue && idValue !== 0) {\n                        throw new Error(errorPrefix +\n                            `No value provided on insert for @Id '${dbEntity.name}.${idColumn.name}'.`);\n                    }\n                }\n                idValues[idColumn.index] = idValue;\n            }\n        }\n        // if (dbEntity.isAirEntity) {\n        // \tconst repositoryColumn  = dbEntity.columnMap[airEntity.FOREIGN_KEY]\n        // \tconst repositoryIdIndex = repositoryColumn.index\n        // \tfor (const entityValues of values) {\n        // \t\tconst repositoryId = entityValues[repositoryIdIndex]\n        // \t\tif (!repositoryId && repositoryId !== 0) {\n        // \t\t\tthrow new Error(`@Column({ name: 'REPOSITORY_LID'}) value is not specified on\n        // insert for '${dbEntity0.name}.${repositoryColumn.name}'.`) } } }\n        const generatedColumnIndexes = [];\n        // let numAddedColumns                    = 0\n        for (const generatedColumn of generatedColumns) {\n            // const matchingColumns = jsonInsertValues.C.filter(\n            // \tcolumnIndex => columnIndex === generatedColumn.index)\n            // if (!matchingColumns.length) {\n            // TODO: verify that it is OK to mutate the JsonInsertValues query\n            const generatedIdColumnIndex = jsonInsertValues.C.length;\n            generatedColumnIndexes.push(jsonInsertValues.C.length);\n            jsonInsertValues.C.push(generatedColumn.index);\n            // numAddedColumns++\n            continue;\n            // }\n            // const generatedIdColumnIndex = matchingColumns[0]\n            // generatedColumnIndexes.push(generatedIdColumnIndex)\n            for (const entityValues of values) {\n                const generatedValue = entityValues[generatedIdColumnIndex];\n                if (generatedValue || generatedValue === 0) {\n                    // Allowing negative integers for temporary identification\n                    // within the circular dependency management lookup\n                    if (generatedValue >= 0) {\n                        throw new Error(errorPrefix +\n                            `Already provided value '${entityValues[generatedColumn.index]}'\r\n\t\t\t\t\ton insert for @GeneratedValue '${dbEntity.name}.${generatedColumn.name}'.\r\n\t\t\t\t\tYou cannot explicitly provide values for @GeneratedValue columns'.`);\n                    }\n                }\n            }\n        }\n        // Populating generated values AFTER the checks\n        // to not waste sequence numbers on invalid input\n        // (thus reducing storage requirements in SqLite)\n        const numSequencesNeeded = generatedColumns.map(_ => values.length);\n        const generatedSequenceValues = await sequenceGenerator.generateSequenceNumbers(generatedColumns, numSequencesNeeded);\n        generatedColumns.forEach((dbColumn, generatedColumnIndex) => {\n            const generatedColumnSequenceValues = generatedSequenceValues[generatedColumnIndex];\n            const insertColumnIndex = generatedColumnIndexes[generatedColumnIndex];\n            // const columnIndex                   = dbColumn.index\n            values.forEach((entityValues, index) => {\n                const generatedValue = generatedColumnSequenceValues[index];\n                entityValues[insertColumnIndex] = generatedValue;\n                allIds[index][dbColumn.index] = generatedValue;\n            });\n        });\n        if (!dbEntity.isLocal) {\n            jsonInsertValues.C.push(sysWideOperationIdColumn.index);\n            values.forEach(entityValues => {\n                entityValues.push(systemWideOperationId);\n            });\n        }\n        if (!idColumns.length && !generatedColumns.length) {\n            return values.length;\n        }\n        // switch (idColumns.length) {\n        // \tcase 0: {\n        // \t\t// If there is just one @Generated column and no @Id columns\n        // \t\tif (generatedColumns.length == 1) {\n        // \t\t\tconst columnIndex = generatedColumns[0].index\n        // \t\t\treturn allIds.map(\n        // \t\t\t\trowIds => rowIds[columnIndex])\n        // \t\t}\n        // \t\tbreak\n        // \t}\n        // \tcase 1: {\n        // \t\t// If there is exactly 1 @Id column and no @Generated columns\n        // \t\t// or it is the @Generated column\n        // \t\tif (!generatedColumns.length\n        // \t\t\t|| (generatedColumns.length === 1\n        // \t\t\t\t&& idColumns[0].index === generatedColumns[0].index)) {\n        // \t\t\tconst columnIndex = idColumns[0].index\n        // \t\t\treturn allIds.map(\n        // \t\t\t\trowIds => rowIds[columnIndex])\n        // \t\t}\n        // \t\tbreak\n        // \t}\n        // }\n        return allIds;\n    }\n    ensureAirEntityIdValues(actor, dbEntity, jsonInsertValues, errorPrefix, transaction, context) {\n        const actorIdColumn = dbEntity.idColumnMap[airEntity.ACTOR_LID];\n        const actorRecordIdColumn = dbEntity.idColumnMap[airEntity.ACTOR_RECORD_ID];\n        const repositoryIdColumn = dbEntity.idColumnMap[airEntity.REPOSITORY_LID];\n        const sysWideOperationIdColumn = dbEntity.columnMap[airEntity.SYSTEM_WIDE_OPERATION_ID];\n        let repositoryIdColumnQueryIndex;\n        let foundActorIdColumn = false;\n        let foundActorRecordIdColumn = false;\n        let foundSystemWideOperationIdColumn = false;\n        for (let i = 0; i < jsonInsertValues.C.length; i++) {\n            const columnIndex = jsonInsertValues.C[i];\n            switch (columnIndex) {\n                case actorIdColumn.index:\n                    foundActorIdColumn = true;\n                    if (context.isSaveOperation) {\n                        // Save operations validate Actor ealier and set it on the entity objects\n                        break;\n                    }\n                    if (!transaction.isSync) {\n                        throw new Error(errorPrefix +\n                            `You cannot explicitly provide an ACTOR_LID value for Repository entities.`);\n                    }\n                    break;\n                case actorRecordIdColumn.index:\n                    foundActorRecordIdColumn = true;\n                    if (!transaction.isSync) {\n                        throw new Error(errorPrefix +\n                            `You cannot explicitly provide an ACTOR_RECORD_ID value for Repository entities.`);\n                    }\n                    break;\n                case sysWideOperationIdColumn.index:\n                    foundSystemWideOperationIdColumn = true;\n                    if (!transaction.isSync) {\n                        throw new Error(`Error inserting into '${dbEntity.name}'.\r\nYou cannot explicitly provide a SYSTEM_WIDE_OPERATION_ID value for Repository entities.`);\n                    }\n                    break;\n                case repositoryIdColumn.index:\n                    repositoryIdColumnQueryIndex = i;\n                    break;\n            }\n        }\n        const missingRepositoryIdErrorMsg = errorPrefix +\n            `Error inserting into '${dbEntity.name}'.\r\nYou must provide a valid REPOSITORY_LID value for Repository entities.`;\n        if (repositoryIdColumnQueryIndex === undefined) {\n            throw new Error(missingRepositoryIdErrorMsg);\n        }\n        if (transaction.isSync) {\n            if (!foundActorIdColumn) {\n                throw new Error(errorPrefix +\n                    `ACTOR_LID must be provided for sync operations.`);\n            }\n            if (!foundActorRecordIdColumn) {\n                throw new Error(errorPrefix +\n                    `ACTOR_RECORD_ID must be provided for sync operations.`);\n            }\n            if (!foundSystemWideOperationIdColumn) {\n                throw new Error(errorPrefix +\n                    `SYSTEM_WIDE_OPERATION_ID must be provided for sync operations.`);\n            }\n        }\n        for (const entityValues of jsonInsertValues.V) {\n            if (entityValues.length !== jsonInsertValues.C.length) {\n                throw new Error(errorPrefix +\n                    `Number of columns (${jsonInsertValues.C.length}) does not match number of values (${entityValues.length}).\r\n\t\t\t\t`);\n            }\n            let repositoryId = entityValues[repositoryIdColumnQueryIndex];\n            if (typeof repositoryId !== 'number'\n                || !Number.isInteger(repositoryId)\n                || repositoryId < 1) {\n                throw new Error(missingRepositoryIdErrorMsg);\n            }\n            for (let i = 0; i < entityValues.length; i++) {\n                switch (i) {\n                    case repositoryIdColumnQueryIndex:\n                        continue;\n                }\n                const value = entityValues[i];\n                const columnIndex = jsonInsertValues.C[i];\n                const dbColumn = dbEntity.columns[columnIndex];\n                if (dbColumn.notNull && value === null) {\n                    throw new Error(errorPrefix +\n                        `Column '${dbColumn.name}' is NOT NULL\r\nand cannot have NULL values.`);\n                }\n            }\n            if (!context.isSaveOperation && !transaction.isSync) {\n                // Save operation set Actor ealier (at the entity level, to be returned back to client)\n                entityValues[actorIdColumn.index] = actor._localId;\n            }\n        }\n        return {\n            actorIdColumn,\n            sysWideOperationIdColumn\n        };\n    }\n    /**\n     *\n     * All repository records must have _localIds when inserted.  Currently AP doesn't support\n     * inserting from SELECT and in the values provided id's must either be explicitly\n     * specified or already provided. For all repository entities all _localIds must be\n     * auto-generated.\n     *\n     * @param {DbEntity} dbEntity\n     * @param {PortableQuery} portableQuery\n     * @returns {Promise<void>}\n     */\n    async addInsertHistory(dbEntity, portableQuery, actor, systemWideOperationId, transaction, rootTransaction, context) {\n        const jsonInsertValues = portableQuery.jsonQuery;\n        let operationsByRepo = [];\n        let repoTransHistories = [];\n        const repositoryIdIndex = dbEntity.columnMap[airEntity.REPOSITORY_LID].index;\n        const actorIdIndex = dbEntity.columnMap[airEntity.ACTOR_LID].index;\n        const actorRecordIdIndex = dbEntity.columnMap[airEntity.ACTOR_RECORD_ID].index;\n        let repositoryIdColumnNumber;\n        let actorIdColumnNumber;\n        let actorRecordIdColumnNumber;\n        for (const columnNumber in jsonInsertValues.C) {\n            const columnIndex = jsonInsertValues.C[columnNumber];\n            switch (columnIndex) {\n                case repositoryIdIndex:\n                    repositoryIdColumnNumber = columnNumber;\n                    break;\n                case actorIdIndex:\n                    actorIdColumnNumber = columnNumber;\n                    break;\n                case actorRecordIdIndex:\n                    actorRecordIdColumnNumber = columnNumber;\n                    break;\n            }\n        }\n        // Rows may belong to different repositories\n        for (const row of jsonInsertValues.V) {\n            const repositoryId = row[repositoryIdColumnNumber];\n            // const repo           = await repoManager.getRepository(repositoryId)\n            let repositoryTransactionHistory = repoTransHistories[repositoryId];\n            if (!repositoryTransactionHistory) {\n                repositoryTransactionHistory = await this.historyManager\n                    .getNewRepositoryTransactionHistory(transaction.transactionHistory, repositoryId, context);\n            }\n            let operationHistory = operationsByRepo[repositoryId];\n            if (!operationHistory) {\n                operationHistory = this.repositoryTransactionHistoryDuo.startOperation(repositoryTransactionHistory, systemWideOperationId, ChangeType.INSERT_VALUES, dbEntity, actor, rootTransaction);\n                operationsByRepo[repositoryId] = operationHistory;\n            }\n            const _actorRecordId = row[actorRecordIdColumnNumber];\n            const actorId = row[actorIdColumnNumber];\n            const recordHistory = this.operationHistoryDuo.startRecordHistory(operationHistory, actorId, _actorRecordId);\n            for (const columnNumber in jsonInsertValues.C) {\n                if (columnNumber === repositoryIdColumnNumber\n                    || columnNumber === actorIdColumnNumber\n                    || columnNumber === actorRecordIdColumnNumber) {\n                    continue;\n                }\n                const columnIndex = jsonInsertValues.C[columnNumber];\n                const dbColumn = dbEntity.columns[columnIndex];\n                const newValue = row[columnNumber];\n                this.recordHistoryDuo.addNewValue(recordHistory, dbColumn, newValue);\n            }\n        }\n        // for (const repositoryId in operationsByRepo) {\n        // \tconst repoTransHistory = await\n        // \t\tthis.currentTransHistory.getRepositoryTransaction(\n        // \t\t\trepositoryId, null, null, null, repoTransHistoryDuo);\n        // \trepoTransHistory.endGroupMutation(operationsByRepo[repositoryId]);\n        // }\n    }\n};\n__decorate([\n    Inject()\n], InsertManager.prototype, \"airportDatabase\", void 0);\n__decorate([\n    Inject()\n], InsertManager.prototype, \"historyManager\", void 0);\n__decorate([\n    Inject()\n], InsertManager.prototype, \"operationHistoryDuo\", void 0);\n__decorate([\n    Inject()\n], InsertManager.prototype, \"recordHistoryDuo\", void 0);\n__decorate([\n    Inject()\n], InsertManager.prototype, \"repositoryTransactionHistoryDuo\", void 0);\n__decorate([\n    Inject()\n], InsertManager.prototype, \"sequenceGenerator\", void 0);\nInsertManager = __decorate([\n    Injected()\n], InsertManager);\nexport { InsertManager };\n//# sourceMappingURL=InsertManager.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ACTOR_PROPERTY_NAME, REPOSITORY_PROPERTY_NAME, USER_ACCOUNT_PROPERTY_NAME } from '@airport/air-traffic-control';\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { ensureChildArray, EntityRelationType, QueryResultType } from '@airport/ground-control';\n;\nlet QueryManager = class QueryManager {\n    async find(portableQuery, context, cachedSqlQueryId) {\n        await this.ensureRepositoryPresenceAndCurrentState(context);\n        const entityArray = await this.storeDriver.find(portableQuery, {}, context, cachedSqlQueryId);\n        await this.populateEntityGuidEntitiesAndUserAccounts(portableQuery, entityArray);\n        return entityArray;\n    }\n    async findOne(portableQuery, context, cachedSqlQueryId) {\n        await this.ensureRepositoryPresenceAndCurrentState(context);\n        const entity = await this.storeDriver.findOne(portableQuery, {}, context, cachedSqlQueryId);\n        await this.populateEntityGuidEntitiesAndUserAccounts(portableQuery, [entity]);\n        return entity;\n    }\n    search(portableQuery, context, cachedSqlQueryId) {\n        return this.observableQueryAdapter.wrapInObservable(portableQuery, () => {\n            return this.storeDriver.find(portableQuery, {}, context)\n                .then((result) => {\n                return this.populateEntityGuidEntitiesAndUserAccounts(portableQuery, result);\n            });\n        });\n    }\n    searchOne(portableQuery, context, cachedSqlQueryId) {\n        return this.observableQueryAdapter.wrapInObservable(portableQuery, () => {\n            return this.storeDriver.findOne(portableQuery, {}, context)\n                .then((result) => {\n                return this.populateEntityGuidEntitiesAndUserAccounts(portableQuery, [result])[0];\n            });\n        });\n    }\n    async ensureRepositoryPresenceAndCurrentState(context) {\n        if (context.repository && context.repository.source && context.repository.GUID) {\n            await this.repositoryLoader.loadRepository(context.repository.source, context.repository.GUID, context);\n        }\n    }\n    async populateEntityGuidEntitiesAndUserAccounts(portableQuery, entities) {\n        if (portableQuery.queryResultType !== QueryResultType.ENTITY_GRAPH\n            && portableQuery.queryResultType !== QueryResultType.ENTITY_TREE) {\n            return;\n        }\n        const dbEntity = this.airportDatabase.applications[portableQuery.applicationIndex]\n            .currentVersion[0].applicationVersion.entities[portableQuery.tableIndex];\n        const entityMapByRepositoryLocalId = new Map();\n        const entityMapByActorRecordId = new Map();\n        const actorsToRetrieveUserAccountForByLocalId = new Map();\n        this.markEntities(entities, new Set(), entityMapByRepositoryLocalId, entityMapByActorRecordId, actorsToRetrieveUserAccountForByLocalId, dbEntity);\n        await this.populateActorsAndUserAccounts(entityMapByActorRecordId, actorsToRetrieveUserAccountForByLocalId);\n        await this.populateRepositories(entityMapByRepositoryLocalId);\n        return entities;\n    }\n    markEntities(currentEntities, processedEntitySet, entityMapByRepositoryLocalId, entityMapByActorRecordId, actorsToRetrieveUserAccountForByLocalId, dbEntity) {\n        for (const entity of currentEntities) {\n            // const previouslyFoundEntity = entitiesByOperationIndex[operationUniqueId]\n            if (processedEntitySet.has(entity)) {\n                continue;\n            }\n            processedEntitySet.add(entity);\n            for (const dbProperty of dbEntity.properties) {\n                let propertyValue = entity[dbProperty.name];\n                if (!propertyValue) {\n                    continue;\n                }\n                if (dbProperty.relation && dbProperty.relation.length) {\n                    const dbRelation = dbProperty.relation[0];\n                    let relatedEntities = propertyValue;\n                    switch (dbRelation.relationType) {\n                        case EntityRelationType.MANY_TO_ONE:\n                            if (this.processRepositoryOrActor(dbProperty, propertyValue, entityMapByRepositoryLocalId, entityMapByActorRecordId, actorsToRetrieveUserAccountForByLocalId)) {\n                                continue;\n                            }\n                            relatedEntities = [propertyValue];\n                            break;\n                        case EntityRelationType.ONE_TO_MANY:\n                            break;\n                    }\n                    this.markEntities(relatedEntities, processedEntitySet, entityMapByRepositoryLocalId, entityMapByActorRecordId, actorsToRetrieveUserAccountForByLocalId, dbRelation.relationEntity);\n                }\n            }\n        }\n    }\n    processRepositoryOrActor(dbProperty, propertyValue, entityMapByRepositoryLocalId, entityMapByActorLocalId, actorsToRetrieveUserAccountForByLocalId) {\n        let isActor = true;\n        switch (dbProperty.name) {\n            case ACTOR_PROPERTY_NAME:\n                break;\n            case REPOSITORY_PROPERTY_NAME:\n                isActor = false;\n                break;\n            default:\n                return false;\n        }\n        if (!propertyValue._localId) {\n            throw new Error(`Actor entity does not have a _localId`);\n        }\n        if (propertyValue.GUID) {\n            if (!isActor) {\n                return true;\n            }\n            if (!propertyValue[USER_ACCOUNT_PROPERTY_NAME]) {\n                actorsToRetrieveUserAccountForByLocalId.set(propertyValue._localId, propertyValue);\n            }\n            return true;\n        }\n        if (isActor) {\n            ensureChildArray(entityMapByActorLocalId, propertyValue._localId)\n                .push(propertyValue);\n        }\n        else {\n            ensureChildArray(entityMapByRepositoryLocalId, propertyValue._localId)\n                .push(propertyValue);\n        }\n        return true;\n    }\n    async populateActorsAndUserAccounts(entityMapByActorRecordId, actorsToRetrieveUserAccountForByLocalId) {\n        const actorIdSet = new Set();\n        for (const actorLocalId of entityMapByActorRecordId.keys()) {\n            actorIdSet.add(actorLocalId);\n        }\n        for (const actorLocalId of actorsToRetrieveUserAccountForByLocalId.keys()) {\n            actorIdSet.add(actorLocalId);\n        }\n        const actorLocalIds = Array.from(actorIdSet);\n        const actors = await this.actorDao.findWithUserAccountBy_LocalIdIn(actorLocalIds);\n        for (const actor of actors) {\n            const entitiesWithoutActorObject = entityMapByActorRecordId.get(actor._localId);\n            if (entitiesWithoutActorObject) {\n                for (const entity of entitiesWithoutActorObject) {\n                    entity.actor = actor;\n                }\n            }\n            const actorWithoutUserAccountObject = actorsToRetrieveUserAccountForByLocalId.get(actor._localId);\n            if (actorWithoutUserAccountObject) {\n                actorWithoutUserAccountObject.userAccount = actor.userAccount;\n            }\n        }\n    }\n    async populateRepositories(entityMapByRepositoryLocalId) {\n        const repositoryLocalIds = Array.from(entityMapByRepositoryLocalId.keys());\n        const repositories = await this.repositoryDao\n            .findWithOwnerBy_LocalIdIn(repositoryLocalIds);\n        for (const repository of repositories) {\n            const entiesWithoutRepositoryObject = entityMapByRepositoryLocalId.get(repository._localId);\n            for (const entity of entiesWithoutRepositoryObject) {\n                entity.repository = repository;\n            }\n        }\n    }\n};\n__decorate([\n    Inject()\n], QueryManager.prototype, \"actorDao\", void 0);\n__decorate([\n    Inject()\n], QueryManager.prototype, \"airportDatabase\", void 0);\n__decorate([\n    Inject()\n], QueryManager.prototype, \"observableQueryAdapter\", void 0);\n__decorate([\n    Inject()\n], QueryManager.prototype, \"repositoryDao\", void 0);\n__decorate([\n    Inject()\n], QueryManager.prototype, \"repositoryLoader\", void 0);\n__decorate([\n    Inject()\n], QueryManager.prototype, \"storeDriver\", void 0);\nQueryManager = __decorate([\n    Injected()\n], QueryManager);\nexport { QueryManager };\n//# sourceMappingURL=QueryManager.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { INTERNAL_APP, INTERNAL_DOMAIN } from '@airport/ground-control';\nimport { Q } from '@airport/holding-pattern/lib/to_be_generated/runtime-index';\nimport { AbstractMutationManager } from './AbstractMutationManager';\nlet TransactionManager = class TransactionManager extends AbstractMutationManager {\n    /**\n     * Initializes the EntityManager at server load time.\n     * @returns {Promise<void>}\n     */\n    async initialize(dbName, context) {\n        return await this.storeDriver.initialize(dbName, context);\n        // await this.dataStore.initialize(dbName)\n        // await this.repositoryManager.initialize();\n    }\n    getInProgressTransactionById(transactionId) {\n        return this.terminalStore.getTransactionManager()\n            .transactionInProgressMap.get(transactionId);\n    }\n    isServer(context) {\n        return this.terminalStore.getIsServer();\n    }\n    async transactInternal(transactionalCallback, context) {\n        await this.transact({\n            application: INTERNAL_APP,\n            domain: INTERNAL_DOMAIN,\n            methodName: null,\n            objectName: null\n        }, transactionalCallback, context);\n    }\n    async transact(credentials, transactionalCallback, context) {\n        if (context.transaction) {\n            // Nested transact() calls in internal operations\n            // do not create nested transactions\n            await transactionalCallback(context.transaction, context);\n            return;\n        }\n        const transaction = await this.startTransaction(credentials, context);\n        try {\n            await transactionalCallback(transaction, context);\n            await this.commit(credentials, context);\n        }\n        catch (e) {\n            console.error(e);\n            await this.rollback(credentials, context);\n            throw e;\n        }\n    }\n    async startTransaction(credentials, context) {\n        if (context.transaction) {\n            return;\n        }\n        const transactionManagerStore = this.terminalStore.getTransactionManager();\n        let parentTransaction;\n        if (credentials.transactionId) {\n            parentTransaction = transactionManagerStore\n                .transactionInProgressMap.get(credentials.transactionId);\n            if (!parentTransaction) {\n                throw new Error(`\r\nRecieved a startTransaction call (@Api call) with parent transaction id:\r\n\t${credentials.transactionId}\r\nBut, there is no such transaction in progress.`);\n            }\n            if (parentTransaction.id !==\n                credentials.transactionId) {\n                throw new Error(`\r\nIn-progress transaction id does not match the passed in transaction id:\r\n${credentials.transactionId}`);\n            }\n            this.checkForCircularDependencies(parentTransaction, credentials);\n        }\n        else {\n            /*\n             * NOTE: Current policy is to NOT limit the number of transactions\n             * a domain can initiate.  In the future, specifically for the\n             * client-side Turbase, it may make sence to limit the number\n             * of transactions to 1 per tab.  This can be accomplished by\n             * generating a unique id on the nested client iframe of an\n             * application.\n             */\n            /*\nthrow new Error(`\n    Domain:\n        ${credentials.domain}\n    Application:\n        ${credentials.application}\ninitialized multiple transactions at the same time.\nOnly one concurrent transaction is allowed per application.`)\n            */\n            if (!this.isServer(context)\n                && transactionManagerStore.transactionInProgressMap.size > 0) {\n                // Delay the start of the transaction\n                return new Promise((resolve, reject) => {\n                    // Add the transaction to the queue of pending transactions\n                    transactionManagerStore.pendingTransactionQueue.unshift({\n                        context,\n                        credentials,\n                        reject,\n                        resolve\n                    });\n                });\n            }\n        }\n        const transaction = await this.internalStartTransaction(credentials, parentTransaction, context);\n        if (!parentTransaction) {\n            const rootTransaction = transaction;\n            rootTransaction.numberOfOperations = 0;\n            // Internal calls don't maintain rootTransaction and can create more than\n            // one repository at a time.  APIs exposed externally will never be top\n            // level transactions\n            if (transaction.actor.application.domain.name !== INTERNAL_DOMAIN) {\n                const userSession = await this.terminalSessionManager.getUserSession();\n                userSession.currentRootTransaction = rootTransaction;\n            }\n        }\n        return transaction;\n    }\n    async internalStartTransaction(credentials, parentTransaction, context) {\n        const transactionManagerStore = this.terminalStore.getTransactionManager();\n        const transaction = await this.storeDriver\n            .setupTransaction(context, parentTransaction);\n        await this.storeDriver.startTransaction(transaction, context);\n        transaction.credentials = credentials;\n        await this.setupTransaction(credentials, transaction, parentTransaction, transactionManagerStore, context);\n        return transaction;\n    }\n    async rollback(credentials, context) {\n        const transaction = this.getTransactionFromContextOrCredentials(credentials, context);\n        let parentTransaction = transaction.parentTransaction;\n        await transaction.rollback(null, context);\n        const transactionCleared = await this.clearTransaction(transaction, parentTransaction, credentials, context);\n        if (!parentTransaction) {\n            await this.clearUserSessionRootTransaction(transaction);\n        }\n        if (transactionCleared) {\n            await this.resumeParentOrPendingTransaction(parentTransaction, context);\n        }\n    }\n    getTransactionFromContextOrCredentials(credentials, context) {\n        let transaction = context.transaction;\n        if (!transaction) {\n            if (!credentials.transactionId) {\n                throw new Error(`\r\nNo Transaction Id is passed in Credentials for a transactional operation.\r\n\t\t\t\t`);\n            }\n            const transactionManagerStore = this.terminalStore\n                .getTransactionManager();\n            transaction = transactionManagerStore.transactionInProgressMap.get(credentials.transactionId);\n            if (!transaction) {\n                throw new Error(`\r\nCould not find Transaction: ${credentials.transactionId} in Transactons in-progress.\r\nNOTE: nested/child transactions must be commited or rolled back before their\r\nparent transactions.\r\n\t\t\t\t`);\n            }\n            context.transaction = transaction;\n        }\n        let ancestorTransaction = transaction;\n        for (; ancestorTransaction.parentTransaction; ancestorTransaction = ancestorTransaction.parentTransaction) {\n        }\n        context.rootTransaction = ancestorTransaction;\n        return transaction;\n    }\n    async resumeParentOrPendingTransaction(parentTransaction, context) {\n        const transactionManagerStore = this.terminalStore.getTransactionManager();\n        if (parentTransaction) {\n            await this.setupTransaction(parentTransaction.credentials, parentTransaction, parentTransaction.parentTransaction, transactionManagerStore, context);\n        }\n        else if (transactionManagerStore.pendingTransactionQueue.length) {\n            const pendingTransaction = transactionManagerStore.pendingTransactionQueue.pop();\n            const transaction = await this.internalStartTransaction(pendingTransaction.credentials, null, pendingTransaction.context);\n            pendingTransaction.resolve(transaction);\n        }\n    }\n    async commit(credentials, context) {\n        const transaction = this.getTransactionFromContextOrCredentials(credentials, context);\n        let parentTransaction = transaction.parentTransaction;\n        try {\n            if (parentTransaction) {\n                if (!context.doNotRecordHistory) {\n                    this.copyTransactionHistoryToParentTransaction(transaction, parentTransaction);\n                }\n            }\n            else {\n                // This is the root transaction, save it's history, along with any nested transactions\n                if (!context.doNotRecordHistory) {\n                    await this.saveRepositoryHistory(transaction, context);\n                }\n            }\n            this.activeQueries.rerunQueries();\n            await transaction.commit(null, context);\n            let transactionHistory = transaction.transactionHistory;\n            if (!context.doNotRecordHistory) {\n                if (!parentTransaction && transactionHistory.allRecordHistory.length) {\n                    await this.synchronizationOutManager.synchronizeOut(transactionHistory.repositoryTransactionHistories);\n                }\n            }\n            if (!parentTransaction) {\n                await this.clearUserSessionRootTransaction(transaction);\n            }\n        }\n        finally {\n            if (await this.clearTransaction(transaction, parentTransaction, credentials, context)) {\n                // Right now transactions are tied to @Api() calls,\n                // If an @Api() fails to commit the parent @Api() call should resume\n                // it's transaction or the next \n                await this.resumeParentOrPendingTransaction(parentTransaction, context);\n            }\n        }\n    }\n    async clearUserSessionRootTransaction(transaction) {\n        // Internal calls don't maintain rootTransaction and can create more than\n        // one repository at a time.  APIs exposed externally will never be top\n        // level transactions\n        if (transaction.actor.application.domain.name === INTERNAL_DOMAIN) {\n            return;\n        }\n        const userSession = await this.terminalSessionManager.getUserSession();\n        userSession.currentRootTransaction = null;\n    }\n    copyTransactionHistoryToParentTransaction(transaction, parentTransaction) {\n        let childTransactionHistory = transaction.transactionHistory;\n        let parentTransactionHistory = parentTransaction.transactionHistory;\n        for (const operationHistory of childTransactionHistory.allOperationHistory) {\n            const repositoryId = operationHistory.repositoryTransactionHistory.repository._localId;\n            const parentRepositoryTransactionRecord = parentTransactionHistory\n                .repositoryTransactionHistoryMap[repositoryId];\n            if (parentRepositoryTransactionRecord) {\n                operationHistory.repositoryTransactionHistory = parentRepositoryTransactionRecord;\n            }\n            else {\n                parentTransactionHistory.repositoryTransactionHistoryMap[repositoryId]\n                    = operationHistory.repositoryTransactionHistory;\n                parentTransactionHistory.repositoryTransactionHistories\n                    .push(operationHistory.repositoryTransactionHistory);\n            }\n        }\n        parentTransactionHistory.allOperationHistory = parentTransactionHistory\n            .allOperationHistory.concat(childTransactionHistory.allOperationHistory);\n        parentTransactionHistory.allRecordHistory = parentTransactionHistory\n            .allRecordHistory.concat(childTransactionHistory.allRecordHistory);\n        parentTransactionHistory.allRecordHistoryNewValues = parentTransactionHistory\n            .allRecordHistoryNewValues.concat(childTransactionHistory.allRecordHistoryNewValues);\n        parentTransactionHistory.allRecordHistoryOldValues = parentTransactionHistory\n            .allRecordHistoryOldValues.concat(childTransactionHistory.allRecordHistoryOldValues);\n    }\n    checkForCircularDependencies(transaction, credentials) {\n        if (credentials.domain === INTERNAL_DOMAIN) {\n            return;\n        }\n        do {\n            if (this.isSameSource(transaction, credentials)) {\n                let callHerarchy = this.getApiName(credentials);\n                let hierarchyTransaction = transaction;\n                do {\n                    callHerarchy = `${this.getApiName(hierarchyTransaction.initiator)} ->\r\n${callHerarchy}`;\n                } while (hierarchyTransaction = hierarchyTransaction.parentTransaction);\n                throw new Error(`Circular API call detected:\r\n\t\t\t\t\r\n${callHerarchy}\r\n\r\n\t\t\t\t`);\n            }\n        } while (transaction = transaction.parentTransaction);\n    }\n    async setupTransaction(credentials, transaction, parentTransaction, transactionManagerStore, context) {\n        context.transaction = transaction;\n        credentials.transactionId = transaction.id;\n        if (!context.doNotRecordHistory) {\n            transaction.transactionHistory = this.transactionHistoryDuo.getNewRecord();\n        }\n        transactionManagerStore.transactionInProgressMap.set(transaction.id, transaction);\n        if (parentTransaction) {\n            transactionManagerStore.transactionInProgressMap.delete(parentTransaction.id);\n            let ancestorTransaction = transaction;\n            for (; ancestorTransaction.parentTransaction; ancestorTransaction = ancestorTransaction.parentTransaction) {\n            }\n            context.rootTransaction = ancestorTransaction;\n        }\n        else {\n            transactionManagerStore.rootTransactionInProgressMap.set(transaction.id, transaction);\n            context.rootTransaction = transaction;\n        }\n    }\n    isSameSource(transaction, credentials) {\n        const initiator = transaction.initiator;\n        return initiator.domain === credentials.domain\n            && initiator.application === credentials.application\n            && initiator.objectName === credentials.objectName\n            && initiator.methodName === credentials.methodName;\n    }\n    getApiName(nameContainer) {\n        return `${nameContainer.domain}.${nameContainer.application}.${nameContainer.objectName}.${nameContainer.methodName}`;\n    }\n    async clearTransaction(transaction, parentTransaction, credentials, context) {\n        const transactionManagerStore = this.terminalStore\n            .getTransactionManager();\n        transactionManagerStore.transactionInProgressMap.delete(transaction.id);\n        if (!parentTransaction) {\n            transactionManagerStore.rootTransactionInProgressMap.delete(transaction.id);\n        }\n        context.transaction = null;\n        credentials.transactionId = null;\n        return true;\n    }\n    async saveRepositoryHistory(transaction, context) {\n        let transactionHistory = transaction.transactionHistory;\n        if (!transactionHistory.allRecordHistory.length) {\n            return false;\n        }\n        let applicationMap = transactionHistory.applicationMap;\n        const transactionHistoryIds = await this.idGenerator.generateTransactionHistory_LocalIds(transactionHistory.repositoryTransactionHistories.length, transactionHistory.allOperationHistory.length, transactionHistory.allRecordHistory.length);\n        applicationMap.ensureEntity(Q.TransactionHistory.__driver__.dbEntity, true);\n        transactionHistory._localId = transactionHistoryIds.transactionHistory_LocalId;\n        await this.doInsertValues(transaction, Q.TransactionHistory, [transactionHistory], context);\n        applicationMap.ensureEntity(Q.RepositoryTransactionHistory.__driver__.dbEntity, true);\n        transactionHistory.repositoryTransactionHistories.forEach((repositoryTransactionHistory, index) => {\n            repositoryTransactionHistory._localId = transactionHistoryIds.repositoryHistory_LocalIds[index];\n            repositoryTransactionHistory.transactionHistory = transactionHistory;\n        });\n        await this.doInsertValues(transaction, Q.RepositoryTransactionHistory, transactionHistory.repositoryTransactionHistories, context);\n        applicationMap.ensureEntity(Q.OperationHistory.__driver__.dbEntity, true);\n        transactionHistory.allOperationHistory.forEach((operationHistory, index) => {\n            operationHistory._localId = transactionHistoryIds.operationHistory_LocalIds[index];\n        });\n        await this.doInsertValues(transaction, Q.OperationHistory, transactionHistory.allOperationHistory, context);\n        applicationMap.ensureEntity(Q.RecordHistory.__driver__.dbEntity, true);\n        transactionHistory.allRecordHistory.forEach((recordHistory, index) => {\n            recordHistory._localId = transactionHistoryIds.recordHistory_LocalIds[index];\n        });\n        await this.doInsertValues(transaction, Q.RecordHistory, transactionHistory.allRecordHistory, context);\n        if (transactionHistory.allRecordHistoryNewValues.length) {\n            applicationMap.ensureEntity(Q.RecordHistoryNewValue.__driver__.dbEntity, true);\n            await this.doInsertValues(transaction, Q.RecordHistoryNewValue, transactionHistory.allRecordHistoryNewValues, context);\n        }\n        if (transactionHistory.allRecordHistoryOldValues.length) {\n            applicationMap.ensureEntity(Q.RecordHistoryOldValue.__driver__.dbEntity, true);\n            await this.doInsertValues(transaction, Q.RecordHistoryOldValue, transactionHistory.allRecordHistoryOldValues, context);\n        }\n        return true;\n    }\n};\n__decorate([\n    Inject()\n], TransactionManager.prototype, \"activeQueries\", void 0);\n__decorate([\n    Inject()\n], TransactionManager.prototype, \"idGenerator\", void 0);\n__decorate([\n    Inject()\n], TransactionManager.prototype, \"storeDriver\", void 0);\n__decorate([\n    Inject()\n], TransactionManager.prototype, \"synchronizationOutManager\", void 0);\n__decorate([\n    Inject()\n], TransactionManager.prototype, \"terminalSessionManager\", void 0);\n__decorate([\n    Inject()\n], TransactionManager.prototype, \"terminalStore\", void 0);\n__decorate([\n    Inject()\n], TransactionManager.prototype, \"transactionHistoryDuo\", void 0);\nTransactionManager = __decorate([\n    Injected()\n], TransactionManager);\nexport { TransactionManager };\n//# sourceMappingURL=TransactionManager.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { getSysWideOpId, } from '@airport/air-traffic-control';\nimport { SheetQuery } from '@airport/tarmaq-query';\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { ChangeType, ensureChildArray, ensureChildMap, QueryResultType, airEntity, } from '@airport/ground-control';\nlet UpdateManager = class UpdateManager {\n    async updateValues(portableQuery, actor, transaction, rootTransaction, context) {\n        const dbEntity = this.airportDatabase.applications[portableQuery.applicationIndex]\n            .currentVersion[0].applicationVersion.entities[portableQuery.tableIndex];\n        const errorPrefix = `Error updating '${dbEntity.name}'\r\n`;\n        const internalFragments = {\n            SET: []\n        };\n        let recordHistoryMap;\n        let repositorySheetSelectInfo;\n        let systemWideOperationId;\n        if (!dbEntity.isLocal && !transaction.isSync) {\n            systemWideOperationId = await getSysWideOpId(this.airportDatabase, this.sequenceGenerator);\n            // TODO: For entity queries an additional query really shouldn't be needed\n            // Specifically for entity queries, we got the new values, just record them\n            // This will require an additional operation on the first update\n            // where the original values of the record are saved\n            // This eats up more disk space but saves on operations that need\n            // to be performed (one less query)\n            [recordHistoryMap, repositorySheetSelectInfo]\n                = await this.addUpdateHistory(portableQuery, actor, systemWideOperationId, errorPrefix, transaction, rootTransaction, context);\n            internalFragments.SET.push({\n                column: repositorySheetSelectInfo.systemWideOperationIdColumn,\n                value: systemWideOperationId\n            });\n        }\n        const numUpdatedRows = await transaction\n            .updateWhere(portableQuery, internalFragments, context);\n        if (!dbEntity.isLocal && !transaction.isSync) {\n            const previousDbEntity = context.dbEntity;\n            context.dbEntity = dbEntity;\n            // TODO: Entity based updates already have all of the new values being\n            // updated, detect the type of update and if entity just pull out\n            // the new values from them\n            await this.addNewValueHistory(portableQuery.jsonQuery, recordHistoryMap, systemWideOperationId, repositorySheetSelectInfo, errorPrefix, transaction, context);\n            context.dbEntity = previousDbEntity;\n        }\n        return numUpdatedRows;\n    }\n    async addUpdateHistory(portableQuery, actor, systemWideOperationId, errorPrefix, transaction, rootTransaction, context) {\n        if (!context.dbEntity.isAirEntity) {\n            throw new Error(errorPrefix +\n                `Cannot add update history for a non-AirEntity`);\n        }\n        const qEntity = this.airportDatabase\n            .qApplications[context.dbEntity.applicationVersion.application.index][context.dbEntity.name];\n        const jsonUpdate = portableQuery.jsonQuery;\n        const getSheetSelectFromSetClauseResult = this.applicationUtils.getSheetSelectFromSetClause(context.dbEntity, qEntity, jsonUpdate.S, errorPrefix);\n        const sheetQuery = new SheetQuery(null);\n        const jsonSelectClause = sheetQuery.nonDistinctSelectClauseToJSON(getSheetSelectFromSetClauseResult.selectClause, this.queryUtils, this.fieldUtils, this.relationManager);\n        const jsonSelect = {\n            S: jsonSelectClause,\n            F: [jsonUpdate.U],\n            W: jsonUpdate.W,\n        };\n        const portableSelect = {\n            applicationIndex: portableQuery.applicationIndex,\n            tableIndex: portableQuery.tableIndex,\n            jsonQuery: jsonSelect,\n            queryResultType: QueryResultType.SHEET,\n            parameterMap: portableQuery.parameterMap,\n            // values: portableQuery.values,\n        };\n        const recordsToUpdate = await transaction.find(portableSelect, {}, context);\n        const { recordsByRepositoryId, repositoryIdSet } = this.groupRecordsByRepository(recordsToUpdate, getSheetSelectFromSetClauseResult);\n        const repositoryIds = Array.from(repositoryIdSet);\n        const recordHistoryMapByRecordId = {};\n        for (const repositoryId of repositoryIds) {\n            // const repository                         = repositories.get(repositoryId)\n            const recordHistoryMapForRepository = {};\n            recordHistoryMapByRecordId[repositoryId] = recordHistoryMapForRepository;\n            const repositoryTransactionHistory = await this.historyManager.getNewRepositoryTransactionHistory(transaction.transactionHistory, repositoryId, context);\n            const operationHistory = this.repositoryTransactionHistoryDuo.startOperation(repositoryTransactionHistory, systemWideOperationId, ChangeType.UPDATE_ROWS, context.dbEntity, actor, rootTransaction);\n            const recordsForRepositoryId = recordsByRepositoryId[repositoryId];\n            for (const recordToUpdate of recordsForRepositoryId) {\n                const actorId = recordToUpdate[getSheetSelectFromSetClauseResult.actorIdColumnIndex];\n                const recordHistoryMapForActor = ensureChildMap(recordHistoryMapForRepository, actorId);\n                const _actorRecordId = recordToUpdate[getSheetSelectFromSetClauseResult.actorRecordIdColumnIndex];\n                const recordHistory = this.operationHistoryDuo.startRecordHistory(operationHistory, actorId, _actorRecordId);\n                recordHistoryMapForActor[_actorRecordId] = recordHistory;\n                for (let i = 0; i < recordToUpdate.length; i++) {\n                    switch (i) {\n                        case getSheetSelectFromSetClauseResult.actorIdColumnIndex:\n                        case getSheetSelectFromSetClauseResult.actorRecordIdColumnIndex:\n                        case getSheetSelectFromSetClauseResult.repositoryIdColumnIndex:\n                            continue;\n                    }\n                    const dbColumn = getSheetSelectFromSetClauseResult\n                        .selectClause[i].dbColumn;\n                    const value = recordToUpdate[i];\n                    this.recordHistoryDuo.addOldValue(recordHistory, dbColumn, value);\n                }\n            }\n        }\n        return [recordHistoryMapByRecordId, getSheetSelectFromSetClauseResult];\n    }\n    async addNewValueHistory(jsonUpdate, recordHistoryMapByRecordId, systemWideOperationId, repositorySheetSelectInfo, errorPrefix, transaction, context) {\n        const qEntity = this.airportDatabase.qApplications[context.dbEntity.applicationVersion.application.index][context.dbEntity.name];\n        const sheetQuery = new SheetQuery({\n            FROM: [\n                qEntity\n            ],\n            SELECT: [],\n            WHERE: qEntity[airEntity.systemWideOperationId]\n                .equals(systemWideOperationId)\n        });\n        let portableSelect = this.queryFacade.getPortableQuery(sheetQuery, QueryResultType.SHEET, context);\n        const resultSetIndexByColumnIndex = new Map();\n        const selectDbColumns = [];\n        let i = 0;\n        for (const qField of repositorySheetSelectInfo.selectClause) {\n            const dbColumn = qField.dbColumn;\n            selectDbColumns.push(dbColumn);\n            resultSetIndexByColumnIndex.set(dbColumn.index, i);\n            i++;\n        }\n        const internalFragments = {\n            SELECT: selectDbColumns\n        };\n        const updatedRecords = await transaction.find(portableSelect, internalFragments, context);\n        const { recordsByRepositoryId, repositoryIdSet } = this.groupRecordsByRepository(updatedRecords, repositorySheetSelectInfo);\n        for (const repositoryId of repositoryIdSet) {\n            const recordsForRepositoryId = recordsByRepositoryId[repositoryId];\n            for (const updatedRecord of recordsForRepositoryId) {\n                const repositoryId = updatedRecord[resultSetIndexByColumnIndex.get(repositorySheetSelectInfo.repositoryIdColumnIndex)];\n                const actorId = updatedRecord[resultSetIndexByColumnIndex.get(repositorySheetSelectInfo.actorIdColumnIndex)];\n                const _actorRecordId = updatedRecord[resultSetIndexByColumnIndex.get(repositorySheetSelectInfo.actorRecordIdColumnIndex)];\n                const recordHistory = recordHistoryMapByRecordId[repositoryId][actorId][_actorRecordId];\n                for (const columnName in jsonUpdate.S) {\n                    const dbColumn = context.dbEntity.columnMap[columnName];\n                    const value = updatedRecord[resultSetIndexByColumnIndex.get(dbColumn.index)];\n                    if (value === undefined) {\n                        throw new Error(errorPrefix + `Values cannot be 'undefined'.`);\n                    }\n                    if (dbColumn.notNull && value === null) {\n                        throw new Error(errorPrefix + `Column '${dbColumn.entity.name}'.'${dbColumn.name}' is NOT NULL\r\n\t\t\t\t\t\tand cannot have NULL values.`);\n                    }\n                    this.recordHistoryDuo.addNewValue(recordHistory, dbColumn, value);\n                }\n            }\n        }\n    }\n    groupRecordsByRepository(records, repositorySheetSelectInfo) {\n        const recordsByRepositoryId = {};\n        const repositoryIdSet = new Set();\n        for (const recordToUpdate of records) {\n            const repositoryId = recordToUpdate[repositorySheetSelectInfo.repositoryIdColumnIndex];\n            repositoryIdSet.add(repositoryId);\n            const recordsForRepositoryId = ensureChildArray(recordsByRepositoryId, repositoryId);\n            recordsForRepositoryId.push(recordToUpdate);\n        }\n        return {\n            recordsByRepositoryId,\n            repositoryIdSet\n        };\n    }\n};\n__decorate([\n    Inject()\n], UpdateManager.prototype, \"airportDatabase\", void 0);\n__decorate([\n    Inject()\n], UpdateManager.prototype, \"applicationUtils\", void 0);\n__decorate([\n    Inject()\n], UpdateManager.prototype, \"fieldUtils\", void 0);\n__decorate([\n    Inject()\n], UpdateManager.prototype, \"historyManager\", void 0);\n__decorate([\n    Inject()\n], UpdateManager.prototype, \"operationHistoryDuo\", void 0);\n__decorate([\n    Inject()\n], UpdateManager.prototype, \"queryFacade\", void 0);\n__decorate([\n    Inject()\n], UpdateManager.prototype, \"queryUtils\", void 0);\n__decorate([\n    Inject()\n], UpdateManager.prototype, \"recordHistoryDuo\", void 0);\n__decorate([\n    Inject()\n], UpdateManager.prototype, \"relationManager\", void 0);\n__decorate([\n    Inject()\n], UpdateManager.prototype, \"repositoryTransactionHistoryDuo\", void 0);\n__decorate([\n    Inject()\n], UpdateManager.prototype, \"sequenceGenerator\", void 0);\nUpdateManager = __decorate([\n    Injected()\n], UpdateManager);\nexport { UpdateManager };\n//# sourceMappingURL=UpdateManager.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nlet CascadeGraphVerifier = class CascadeGraphVerifier {\n    verify(root, context) {\n        if (!(root instanceof Array)) {\n            root = [root];\n        }\n        // TODO: validate the rules specified in the graph\n        // The graph will be defined via a @Save({\n        //\t...RULES\n        //})\n        // decorator\n        return root;\n    }\n};\nCascadeGraphVerifier = __decorate([\n    Injected()\n], CascadeGraphVerifier);\nexport { CascadeGraphVerifier };\n//# sourceMappingURL=CascadeGraphVerifier.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ACTOR_PROPERTY_NAME, REPOSITORY_PROPERTY_NAME } from '@airport/air-traffic-control';\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { ensureChildArray, EntityRelationType } from '@airport/ground-control';\n/*\n * Takes a (potentially) interconnected entity graph and returns\n * an array of entities to be operated on, in a order that is valid\n * for insertion (with all needed new _localIds being inserted in an order\n * that will work).\n */\nlet DependencyGraphResolver = class DependencyGraphResolver {\n    getOperationsInOrder(entities, context) {\n        const unorderedDependencies = this.getEntitiesToPersist(entities, [], [], context);\n        this.resolveCircularDependencies(unorderedDependencies, context);\n        const orderedDependencies = this.orderEntitiesToPersist(unorderedDependencies, context);\n        const operationNodes = this.optimizePersistOperations(orderedDependencies, context);\n        return this.ensureUpdatesAreGroupedCorrectly(operationNodes, context);\n    }\n    getEntitiesToPersist(entities, operatedOnEntities, operatedOnPassThroughs, context, dependsOn, dependency, deleteByCascade = false) {\n        let allProcessedNodes = [];\n        const dbEntity = context.dbEntity;\n        for (const entity of entities) {\n            /*\n             * A passed in graph has either entities to be saved or\n             * entity stubs that are needed structurally to get to\n             * other entities (or parentIds in case part of an id\n             * actually resides in a nested object that that object\n             * has no associated operations or child entities of\n             * it's own).\n             */\n            const { isCreate, isDelete, isParentSchemaId, isPassThrough, isStub, isUpdate } = this.entityStateManager\n                .getEntityStateTypeAsFlags(entity, dbEntity);\n            if (isStub) {\n                // No processing is needed\n                continue;\n            }\n            const operationUniqueId = this.entityStateManager.getOperationUniqueId(entity);\n            if (deleteByCascade && (isCreate || isUpdate)) {\n                throw new Error(`Cannot do a Create or Update operation on an entity that will be\r\ndeleted by cascading rules.  Entity: ${dbEntity.name}.\r\nEntity \"${this.entityStateManager.getUniqueIdFieldName()}\":  ${operationUniqueId}`);\n            }\n            let dependencyGraphNode;\n            if (isPassThrough) {\n                if (operatedOnPassThroughs[operationUniqueId]) {\n                    continue;\n                }\n                else {\n                    operatedOnPassThroughs[operationUniqueId] = true;\n                }\n            }\n            else {\n                dependencyGraphNode = operatedOnEntities[operationUniqueId];\n                let isExistingNode = false;\n                if (dependencyGraphNode) {\n                    isExistingNode = true;\n                }\n                else if (!isParentSchemaId && !deleteByCascade) {\n                    dependencyGraphNode = {\n                        circleTraversedFor: {},\n                        dbEntity,\n                        dependsOnByOUID: [],\n                        dependsOn: [],\n                        entity,\n                        isCreate,\n                        isDelete\n                    };\n                    allProcessedNodes.push(dependencyGraphNode);\n                    operatedOnEntities[operationUniqueId] = dependencyGraphNode;\n                }\n                if (!isParentSchemaId && !isDelete) {\n                    if (dependsOn && !isDelete) {\n                        const dependsOnOUID = this.entityStateManager.getOperationUniqueId(dependsOn.entity);\n                        if (!dependencyGraphNode.dependsOnByOUID[dependsOnOUID]\n                            && this.entityStateManager\n                                .getOperationUniqueId(dependencyGraphNode.entity) !== dependsOnOUID) {\n                            dependencyGraphNode.dependsOnByOUID[dependsOnOUID] = dependsOn;\n                            dependencyGraphNode.dependsOn.push(dependsOn);\n                        }\n                    }\n                    if (dependency) {\n                        if (!dependencyGraphNode.dependsOnByOUID[operationUniqueId]\n                            && this.entityStateManager\n                                .getOperationUniqueId(dependency.entity) !== operationUniqueId) {\n                            dependency.dependsOnByOUID[operationUniqueId] = dependencyGraphNode;\n                            dependency.dependsOn.push(dependencyGraphNode);\n                        }\n                    }\n                }\n                if (isExistingNode) {\n                    continue;\n                }\n            }\n            for (const dbProperty of context.dbEntity.properties) {\n                let relatedEntities;\n                let propertyValue = entity[dbProperty.name];\n                if (!propertyValue || typeof propertyValue !== 'object'\n                    || !(dbProperty.relation && dbProperty.relation.length)) {\n                    continue;\n                }\n                let fromDependencyForChild = null;\n                let isDependency = false;\n                let childDeleteByCascade = deleteByCascade || isDelete;\n                const dbRelation = dbProperty.relation[0];\n                switch (dbRelation.relationType) {\n                    // Relation is an entity that this entity depends on\n                    case EntityRelationType.MANY_TO_ONE:\n                        childDeleteByCascade = false;\n                        // TODO: see if there is a cleaner way to escape nested Actor and Repository records\n                        if (dbEntity.isAirEntity && (dbProperty.name === REPOSITORY_PROPERTY_NAME\n                            || dbProperty.name === ACTOR_PROPERTY_NAME)\n                            && !propertyValue[this.entityStateManager.getStateFieldName()]) {\n                            continue;\n                        }\n                        const parentState = this.entityStateManager\n                            .getEntityStateTypeAsFlags(propertyValue, dbRelation.relationEntity);\n                        if (parentState.isParentSchemaId) {\n                            continue;\n                        }\n                        if (parentState.isDelete) {\n                            if (isPassThrough) {\n                                // Automatically delete all contained records\n                                this.entityStateManager.markForDeletion(entity);\n                            }\n                            else if (!isDelete) {\n                                throw new Error(`Cannot delete an entity without removing all references to it.\r\n\t\t\t\t\t\t\t\tFound a reference in ${dbEntity.name}.${dbProperty.name}.\r\n\t\t\t\t\t\t\t\tEntity \"${this.entityStateManager.getUniqueIdFieldName()}\":  ${operationUniqueId}`);\n                            }\n                            else {\n                                // Prune this entry\n                                if (!deleteByCascade) {\n                                    if (dependency) {\n                                        dependency.dependsOn.pop();\n                                    }\n                                    allProcessedNodes.pop();\n                                }\n                                deleteByCascade = true;\n                            }\n                        }\n                        if (parentState.isCreate) {\n                            isDependency = true;\n                        }\n                        // Do not persist actor or repository, they\n                        // are created separately\n                        relatedEntities = [propertyValue];\n                        break;\n                    // Relation is an array of entities that depend in this entity\n                    case EntityRelationType.ONE_TO_MANY:\n                        if (isCreate) {\n                            fromDependencyForChild = dependencyGraphNode;\n                        }\n                        // Nested deletions wil be automatically pruned in recursive calls\n                        relatedEntities = propertyValue;\n                        break;\n                }\n                if (relatedEntities) {\n                    const dbEntity = dbRelation.relationEntity;\n                    const previousDbEntity = context.dbEntity;\n                    context.dbEntity = dbEntity;\n                    const childDependencyLinkedNodes = this.getEntitiesToPersist(relatedEntities, operatedOnEntities, operatedOnPassThroughs, context, fromDependencyForChild, !isParentSchemaId && !isDelete && isDependency ? dependencyGraphNode : null, childDeleteByCascade);\n                    allProcessedNodes = allProcessedNodes.concat(childDependencyLinkedNodes);\n                    context.dbEntity = previousDbEntity;\n                }\n            } // for properties\n        } // for entities\n        return allProcessedNodes;\n    }\n    resolveCircularDependencies(unorderedDependencies, context) {\n        for (const node of unorderedDependencies) {\n            const nodeOUID = this.entityStateManager.getOperationUniqueId(node.entity);\n            this.resolveCircularDependenciesForNode(node, nodeOUID, node, context);\n        }\n    }\n    resolveCircularDependenciesForNode(node, nodeOUID, currentlyTraversedNode, context, nodePath = []) {\n        if (!currentlyTraversedNode.dependsOn\n            || currentlyTraversedNode.circleTraversedFor[nodeOUID]) {\n            return;\n        }\n        currentlyTraversedNode.circleTraversedFor[nodeOUID] = true;\n        for (let i = currentlyTraversedNode.dependsOn.length - 1; i >= 0; i--) {\n            const dependency = currentlyTraversedNode.dependsOn[i];\n            const dependencyOUID = this.entityStateManager\n                .getOperationUniqueId(dependency.entity);\n            if (dependencyOUID === nodeOUID) {\n                let entityPath = [];\n                for (let pathNode of nodePath) {\n                    let entityLongName = pathNode.dbEntity.applicationVersion.application.name + ':' + pathNode.dbEntity.name;\n                    entityPath.push(entityLongName);\n                }\n                let entityLongName = dependency.dbEntity.applicationVersion.application.name + ':' + dependency.dbEntity.name;\n                entityPath.push(entityLongName);\n                entityLongName = nodePath[0].dbEntity.applicationVersion.application.name + ':' + nodePath[0].dbEntity.name;\n                throw new Error(`Found a circular dependency in\r\n\t\t\t\t\t${entityPath.join(' -> ')}\r\n\t\t\t\t\t`);\n            }\n            nodePath.push(dependency);\n            this.resolveCircularDependenciesForNode(node, nodeOUID, dependency, context, nodePath);\n            nodePath.pop();\n        }\n    }\n    orderEntitiesToPersist(unorderedDependencies, context) {\n        let orderedNodes = [];\n        let processedNodes = [];\n        while (orderedNodes.length < unorderedDependencies.length) {\n            for (const node of unorderedDependencies) {\n                const entityUid = this.entityStateManager\n                    .getOperationUniqueId(node.entity);\n                if (processedNodes[entityUid]) {\n                    continue;\n                }\n                let nodeProcessed = true;\n                for (const dependency of node.dependsOn) {\n                    const dependencyUid = this.entityStateManager\n                        .getOperationUniqueId(dependency.entity);\n                    // If a dependency is not yet processed (and is possibly has\n                    // other dependencies of it's own)\n                    if (!processedNodes[dependencyUid]) {\n                        nodeProcessed = false;\n                        break;\n                    }\n                }\n                if (nodeProcessed) {\n                    processedNodes[entityUid] = node;\n                    orderedNodes.push(node);\n                }\n            }\n        }\n        return orderedNodes;\n    }\n    // Group alike operations together, where possible\n    optimizePersistOperations(orderedDependencies, context) {\n        let operationNodes = [];\n        let processedNodes = [];\n        let operationsByApplication_Index = [];\n        for (const node of orderedDependencies) {\n            const dbEntity = node.dbEntity;\n            const applicationOperationNodes = ensureChildArray(operationsByApplication_Index, dbEntity.applicationVersion.application.index);\n            let entityOperations = applicationOperationNodes[dbEntity.index];\n            if (!entityOperations) {\n                entityOperations = {\n                    create: [],\n                    delete: [],\n                    update: []\n                };\n                applicationOperationNodes[dbEntity.index] = entityOperations;\n            }\n            let operations = [];\n            if (node.isCreate) {\n                operations = entityOperations.create;\n            }\n            else if (node.isDelete) {\n                operations = entityOperations.delete;\n            }\n            else {\n                operations = entityOperations.update;\n            }\n            let operation;\n            if (!operations.length) {\n                operation = {\n                    dbEntity,\n                    entities: [],\n                    isCreate: node.isCreate,\n                    isDelete: node.isDelete,\n                };\n                operations.push(operation);\n                operationNodes.push(operation);\n            }\n            else {\n                operation = operations[operations.length - 1];\n            }\n            // For each node traverse its dependencies\n            // if it has dependencies that haven't been processed yet\n            // then it can't be combined with an earlier alike operation\n            // on the same entity\n            let canBeCombined = true;\n            for (const dependency of node.dependsOn) {\n                const dependencyUid = this.entityStateManager\n                    .getOperationUniqueId(dependency.entity);\n                const operationUniqueId = this.entityStateManager.getOperationUniqueId(dependency.entity);\n                if (!processedNodes[dependencyUid]) {\n                    canBeCombined = false;\n                    break;\n                }\n            }\n            if (!canBeCombined && operation.entities.length) {\n                operation = {\n                    dbEntity,\n                    entities: [],\n                    isCreate: node.isCreate,\n                    isDelete: node.isDelete,\n                };\n                operations.push(operation);\n                operationNodes.push(operation);\n            }\n            operation.entities.push(node.entity);\n        }\n        return operationNodes;\n    }\n    /**\n     *\n     * @param operationNodes\n     * @param context\n     */\n    ensureUpdatesAreGroupedCorrectly(operationNodes, context) {\n        // TODO: group related updates ONLY if all updates field values are\n        // the same\n        // throw new Error('Not Implemented.')\n        return operationNodes;\n    }\n};\n__decorate([\n    Inject()\n], DependencyGraphResolver.prototype, \"entityStateManager\", void 0);\nDependencyGraphResolver = __decorate([\n    Injected()\n], DependencyGraphResolver);\nexport { DependencyGraphResolver };\n//# sourceMappingURL=DependencyGraphResolver.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { EntityRelationType } from '@airport/ground-control';\n/**\n * Takes a serialized object tree and reconstructs a (potentially)\n * interlinked object graph.\n */\nlet EntityGraphReconstructor = class EntityGraphReconstructor {\n    restoreEntityGraph(root, context) {\n        const entitiesByOperationIndex = [];\n        const processedEntitySet = new Set();\n        const rootCopy = this.linkEntityGraph(root, entitiesByOperationIndex, processedEntitySet, false, context);\n        for (let i = 1; i < entitiesByOperationIndex.length; i++) {\n            const entity = entitiesByOperationIndex[i];\n            if (!entity) {\n                throw new Error(`Missing entity for\r\n\"${this.entityStateManager.getUniqueIdFieldName()}\": ${i}`);\n            }\n        }\n        context.lastOUID = entitiesByOperationIndex.length - 1;\n        return rootCopy;\n    }\n    linkEntityGraph(currentEntities, entitiesByOperationIndex, processedEntitySet, isParentEntity, context) {\n        const dbEntity = context.dbEntity;\n        const results = [];\n        for (const entity of currentEntities) {\n            if (!entity) {\n                throw new Error(`Null root entities and @OneToMany arrays with null entities are not allowed`);\n            }\n            const operationUniqueId = this.entityStateManager.getOperationUniqueId(entity);\n            if (!operationUniqueId || typeof operationUniqueId !== 'number'\n                || operationUniqueId < 1) {\n                throw new Error(`Invalid entity Unique Id Field\r\n\"${this.entityStateManager.getUniqueIdFieldName()}\": ${operationUniqueId}.`);\n            }\n            const previouslyFoundEntity = entitiesByOperationIndex[operationUniqueId];\n            if (processedEntitySet.has(entity)) {\n                if (!previouslyFoundEntity) {\n                    throw new Error(`Entity has been processed but is not found by operationUniqueId`);\n                }\n                results.push(previouslyFoundEntity);\n                continue;\n            }\n            processedEntitySet.add(entity);\n            /*\n             * A passed in graph has either entities to be saved or\n             * entity stubs that are needed structurally to get to\n             * other entities.\n             */\n            let { isParentSchemaId, isStub } = this.entityStateManager\n                .getEntityStateTypeAsFlags(entity, dbEntity);\n            let entityCopy;\n            if (previouslyFoundEntity) {\n                if (!this.entityStateManager.isStub(previouslyFoundEntity)) {\n                    if (!isStub) {\n                        throw new Error(`More than 1 non-Stub object found in input\r\nfor \"${this.entityStateManager.getUniqueIdFieldName()}\": ${operationUniqueId}`);\n                    }\n                }\n                else {\n                    if (!isStub) {\n                        this.entityStateManager.copyEntityState(entity, previouslyFoundEntity);\n                    }\n                }\n                entityCopy = previouslyFoundEntity;\n            }\n            else {\n                entityCopy = {};\n                entityCopy[this.entityStateManager.getUniqueIdFieldName()]\n                    = operationUniqueId;\n                entityCopy[this.entityStateManager.getStateFieldName()]\n                    = this.entityStateManager.getEntityState(entity);\n                this.entityStateManager.copyEntityState(entity, entityCopy);\n                entitiesByOperationIndex[operationUniqueId]\n                    = entityCopy;\n            }\n            if (isParentEntity) {\n                this.entityStateManager.markAsOfParentSchema(entityCopy);\n                isParentSchemaId = true;\n            }\n            for (const dbProperty of dbEntity.properties) {\n                let propertyValue = entity[dbProperty.name];\n                if (propertyValue === undefined) {\n                    continue;\n                }\n                if (dbProperty.relation && dbProperty.relation.length) {\n                    let isParentRelation = false;\n                    const dbRelation = dbProperty.relation[0];\n                    let relatedEntities = propertyValue;\n                    let isManyToOne = false;\n                    this.assertRelationValueIsAnObject(propertyValue, dbProperty);\n                    switch (dbRelation.relationType) {\n                        case EntityRelationType.MANY_TO_ONE:\n                            isManyToOne = true;\n                            this.assertManyToOneNotArray(propertyValue, dbProperty);\n                            relatedEntities = [propertyValue];\n                            break;\n                        case EntityRelationType.ONE_TO_MANY:\n                            this.assertOneToManyIsArray(propertyValue, dbProperty);\n                            if (isParentSchemaId) {\n                                throw new Error(`Parent Ids may not contain any @OneToMany relations`);\n                            }\n                            break;\n                        default:\n                            throw new Error(`Unexpected relation type ${dbRelation.relationType}\r\nfor ${dbEntity.name}.${dbProperty.name}`);\n                    } // switch dbRelation.relationType\n                    const previousDbEntity = context.dbEntity;\n                    const previousDbApplication = previousDbEntity.applicationVersion.application;\n                    const propertyDbApplication = dbRelation.relationEntity.applicationVersion.application;\n                    if (propertyDbApplication.domain.name !== 'air'\n                        && previousDbApplication.fullName !== propertyDbApplication.fullName) {\n                        // If a child entity is in a different application it won't be processed\n                        // the calling application should call the API of the other application\n                        // explicitly so that the application logic may be run\n                        isParentRelation = true;\n                    }\n                    context.dbEntity = dbRelation.relationEntity;\n                    let propertyCopyValue;\n                    if (propertyValue) {\n                        propertyCopyValue = this.linkEntityGraph(relatedEntities, entitiesByOperationIndex, processedEntitySet, isParentRelation, context);\n                        if (isManyToOne) {\n                            propertyCopyValue = propertyCopyValue[0];\n                            if (isParentSchemaId) {\n                                if (!this.entityStateManager.isParentSchemaId(propertyCopyValue)\n                                    && !this.entityStateManager.isPassThrough(propertyCopyValue)) {\n                                    throw new Error(`Parent Ids may only contain @ManyToOne relations\r\nthat are themselves Parent Ids or Pass-Though objects.`);\n                                }\n                            }\n                        }\n                        else {\n                            if (isParentSchemaId) {\n                                throw new Error(`Parent Ids may NOT contain @OneToMany colletions.`);\n                            }\n                        } // if (isManyToOne\n                        // if !isManyToOne - nothing to do\n                    } // if (propertyValue\n                    propertyValue = propertyCopyValue;\n                    context.dbEntity = previousDbEntity;\n                } // if (dbProperty.relation\n                else {\n                    if (!dbProperty.isId) {\n                        if (isStub) {\n                            throw new Error(`Deletes and Stubs may only contain @Id properties or relations.`);\n                        }\n                        else if (isParentSchemaId || isParentEntity) {\n                            // Do not add non-id entities to operation specific copies of objects\n                            // if this entity is a PARENT_SCHEMA_ID (is from another schema)\n                            continue;\n                        }\n                    }\n                } // else (dbProperty.relation\n                entityCopy[dbProperty.name] = propertyValue;\n            } // for (const dbProperty\n            results.push(entityCopy);\n        } // for (const entity\n        return results;\n    }\n    assertRelationValueIsAnObject(relationValue, dbProperty) {\n        if (relationValue !== null && relationValue !== undefined &&\n            (typeof relationValue != 'object' || relationValue instanceof Date)) {\n            throw new Error(`Unexpected value in relation property: ${dbProperty.name}, \r\n\t\t\t\tof entity ${dbProperty.entity.name}`);\n        }\n    }\n    assertManyToOneNotArray(relationValue, dbProperty) {\n        if (relationValue instanceof Array) {\n            throw new Error(`@ManyToOne relation cannot be an array. Relation property: ${dbProperty.name}, \r\nof entity ${dbProperty.entity.name}`);\n        }\n    }\n    assertOneToManyIsArray(relationValue, dbProperty) {\n        if (relationValue !== null\n            && relationValue !== undefined\n            && !(relationValue instanceof Array)) {\n            throw new Error(`@OneToMany relation must be an array. Relation property: ${dbProperty.name}, \r\nof entity ${dbProperty.entity.name}\\``);\n        }\n    }\n};\n__decorate([\n    Inject()\n], EntityGraphReconstructor.prototype, \"entityStateManager\", void 0);\nEntityGraphReconstructor = __decorate([\n    Injected()\n], EntityGraphReconstructor);\nexport { EntityGraphReconstructor };\n//# sourceMappingURL=EntityGraphReconstructor.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { AND, Delete, InsertValues, OR, UpdateProperties, } from '@airport/tarmaq-query';\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { EntityRelationType } from '@airport/ground-control';\n/**\n * Created by Papa on 11/15/2016.\n */\nlet OperationManager = class OperationManager {\n    /**\n     * Transactional context must have been started by the time this method is called.\n     *\n     * @param qEntity\n     * @param entity\n     */\n    async performSave(entities, actor, transaction, rootTransaction, context) {\n        let entityGraph;\n        context.isSaveOperation = true;\n        if (context.internal) {\n            if (entities instanceof Array) {\n                entityGraph = entities;\n            }\n            else {\n                entityGraph = [entities];\n            }\n        }\n        else {\n            const verifiedTree = this.cascadeGraphVerifier\n                .verify(entities, context);\n            entityGraph = this.entityGraphReconstructor\n                .restoreEntityGraph(verifiedTree, context);\n        }\n        const missingRepositoryRecords = [];\n        const topLevelObjectRepositories = [];\n        this.structuralEntityValidator.validate(entityGraph, [], missingRepositoryRecords, topLevelObjectRepositories, context);\n        if (missingRepositoryRecords.length) {\n            if (!topLevelObjectRepositories.length) {\n                throw new Error(`There are entities without an assigned repository and no top level object\r\npassed to '...Dao.save(...)' has a repository assigned`);\n            }\n            if (topLevelObjectRepositories.length > 1) {\n                throw new Error(`When there are entities without an assigned repository\r\n(when passed to '...Dao.save(...)') there may only be one (and same) repository assigned\r\nin top level objects (that are passed into '...Dao.save(...)')`);\n            }\n            const repository = topLevelObjectRepositories[0];\n            for (const missingRepositoryRecord of missingRepositoryRecords) {\n                missingRepositoryRecord.record[missingRepositoryRecord.repositoryPropertyName]\n                    = repository;\n            }\n        }\n        const operations = this.dependencyGraphResolver\n            .getOperationsInOrder(entityGraph, context);\n        const rootDbEntity = context.dbEntity;\n        let saveActor = {\n            _localId: actor._localId,\n            GUID: actor.GUID,\n            userAccount: actor.userAccount ? {\n                _localId: actor.userAccount._localId\n            } : null\n        };\n        let newRepository;\n        if (context.rootTransaction.newRepository) {\n            newRepository = {\n                _localId: context.rootTransaction.newRepository._localId,\n                createdAt: context.rootTransaction.newRepository.createdAt,\n                GUID: context.rootTransaction.newRepository.GUID,\n                ageSuitability: context.rootTransaction.newRepository.ageSuitability,\n                source: context.rootTransaction.newRepository.source,\n                ownerActor: {\n                    _localId: actor._localId,\n                    GUID: actor.GUID,\n                    userAccount: actor.userAccount ? {\n                        _localId: actor.userAccount._localId\n                    } : null\n                }\n            };\n        }\n        const saveResult = {\n            actor: saveActor,\n            created: {},\n            deleted: {},\n            newRepository,\n            repositoryIdParts: {\n                source: newRepository.source,\n                GUID: newRepository.GUID\n            },\n            updated: {},\n        };\n        for (const operation of operations) {\n            context.dbEntity = operation.dbEntity;\n            if (operation.isCreate) {\n                await this.internalCreate(operation.entities, actor, transaction, rootTransaction, saveResult, context, true);\n            }\n            else if (operation.isDelete) {\n                await this.internalDelete(operation.entities, actor, transaction, rootTransaction, saveResult, context);\n            }\n            else {\n                await this.internalUpdate(operation.entities, actor, transaction, rootTransaction, saveResult, context);\n            }\n        }\n        context.dbEntity = rootDbEntity;\n        return saveResult;\n    }\n    async internalCreate(entities, actor, transaction, rootTransaction, saveResult, context, ensureGeneratedValues) {\n        const qEntity = this.airportDatabase.qApplications[context.dbEntity.applicationVersion.application.index][context.dbEntity.name];\n        let rawInsert = {\n            INSERT_INTO: qEntity,\n            columns: this.qMetadataUtils.getAllInsertableColumns(qEntity),\n            VALUES: []\n        };\n        let columnIndexesInValues = [];\n        rawInsert.columns.forEach((qField, index) => {\n            columnIndexesInValues[qField.dbColumn.index] = index;\n        });\n        for (const entity of entities) {\n            entity.createdAt = new Date();\n        }\n        for (const entity of entities) {\n            let valuesFragment = [];\n            for (const dbProperty of context.dbEntity.properties) {\n                let newValue = entity[dbProperty.name];\n                if (newValue === undefined) {\n                    newValue = null;\n                }\n                if (dbProperty.relation && dbProperty.relation.length) {\n                    const dbRelation = dbProperty.relation[0];\n                    switch (dbRelation.relationType) {\n                        case EntityRelationType.MANY_TO_ONE:\n                            this.applicationUtils.forEachColumnOfRelation(dbRelation, entity, (dbColumn, columnValue, _propertyNameChains) => {\n                                if (dbColumn.isGenerated) {\n                                    return;\n                                }\n                                valuesFragment[columnIndexesInValues[dbColumn.index]]\n                                    = columnValue === undefined ? null : columnValue;\n                            }, false);\n                            break;\n                        case EntityRelationType.ONE_TO_MANY:\n                            break;\n                        default:\n                            throw new Error(`Unknown relationType '${dbRelation.relationType}' \r\n\t\t\t\t\t\tfor '${context.dbEntity.name}.${dbProperty.name}'.`);\n                    }\n                }\n                else {\n                    let column = dbProperty.propertyColumns[0].column;\n                    if (!column.isGenerated) {\n                        valuesFragment[columnIndexesInValues[column.index]] = newValue;\n                    }\n                }\n            }\n            rawInsert.VALUES.push(valuesFragment);\n        }\n        const insertValues = new InsertValues(rawInsert);\n        if (rawInsert.VALUES.length) {\n            const generatedColumns = context.dbEntity.columns.filter(column => column.isGenerated);\n            if (generatedColumns.length && ensureGeneratedValues) {\n                const portableQuery = this.queryFacade\n                    .getPortableQuery(insertValues, null, context);\n                const idsAndGeneratedValues = await this.insertManager\n                    .insertValuesGetLocalIds(portableQuery, actor, transaction, rootTransaction, context);\n                for (let i = 0; i < entities.length; i++) {\n                    const entity = entities[i];\n                    const entitySaveResult = {};\n                    saveResult.created[this.entityStateManager.getOperationUniqueId(entity)] = entitySaveResult;\n                    for (const generatedColumn of generatedColumns) {\n                        // Return index for generated column values is: DbColumn.index\n                        const generatedPropertyName = generatedColumn.propertyColumns[0].property.name;\n                        const generatedPropertyValue = idsAndGeneratedValues[i][generatedColumn.index];\n                        entity[generatedPropertyName] = generatedPropertyValue;\n                        entitySaveResult[generatedPropertyName] = generatedPropertyValue;\n                    }\n                }\n            }\n            else {\n                const portableQuery = this.queryFacade\n                    .getPortableQuery(insertValues, null, context);\n                await this.insertManager.insertValues(portableQuery, actor, transaction, rootTransaction, context, ensureGeneratedValues);\n                for (let i = 0; i < entities.length; i++) {\n                    const entity = entities[i];\n                    saveResult.created[this.entityStateManager.getOperationUniqueId(entity)] = true;\n                }\n            }\n        }\n    }\n    /**\n     * On an UPDATE operation, can a nested create contain an update?\n     * Via:\n     *  OneToMany:\n     *    Yes, if the child entity is itself in the update cache\n     *  ManyToOne:\n     *    Cascades do not travel across ManyToOne\n     */\n    async internalUpdate(entities, actor, transaction, rootTransaction, saveResult, context) {\n        const qEntity = this.airportDatabase.qApplications[context.dbEntity.applicationVersion.application.index][context.dbEntity.name];\n        for (const entity of entities) {\n            const setFragment = {};\n            const idWhereFragments = [];\n            let runUpdate = false;\n            const originalEntity = this.entityStateManager.getOriginalValues(entity);\n            if (!originalEntity) {\n                continue;\n            }\n            for (const dbProperty of context.dbEntity.properties) {\n                const updatedValue = entity[dbProperty.name];\n                if (!dbProperty.relation || !dbProperty.relation.length) {\n                    const originalValue = originalEntity[dbProperty.name];\n                    if (dbProperty.isId) {\n                        // For an id property, the value is guaranteed to be the same (and not empty) -\n                        // cannot entity-update id fields\n                        idWhereFragments.push(qEntity[dbProperty.name]\n                            .equals(updatedValue));\n                    }\n                    else if (!this.utils.valuesEqual(originalValue, updatedValue)) {\n                        setFragment[dbProperty.name] = updatedValue;\n                        saveResult.updated[this.entityStateManager.getOperationUniqueId(entity)] = true;\n                        runUpdate = true;\n                    }\n                }\n                else {\n                    const dbRelation = dbProperty.relation[0];\n                    switch (dbRelation.relationType) {\n                        case EntityRelationType.MANY_TO_ONE:\n                            let propertyOriginalValue = originalEntity[dbProperty.name];\n                            this.applicationUtils.forEachColumnOfRelation(dbRelation, entity, (_dbColumn, value, propertyNameChains) => {\n                                let originalColumnValue = propertyOriginalValue;\n                                let columnValue = value;\n                                let valuePropertyNameChain = value;\n                                for (const childPropertyName of propertyNameChains[0]) {\n                                    if (originalColumnValue instanceof Object\n                                        && originalColumnValue[childPropertyName]) {\n                                        originalColumnValue = originalColumnValue[childPropertyName];\n                                    }\n                                    else {\n                                        originalColumnValue = null;\n                                    }\n                                    if (columnValue instanceof Object\n                                        && columnValue[childPropertyName]) {\n                                        columnValue = columnValue[childPropertyName];\n                                        valuePropertyNameChain.push(childPropertyName);\n                                    }\n                                    else {\n                                        columnValue = null;\n                                    }\n                                }\n                                if (dbProperty.isId) {\n                                    let idQProperty = qEntity;\n                                    for (const propertyNameLink of propertyNameChains[0]) {\n                                        idQProperty = idQProperty[propertyNameLink];\n                                    }\n                                    // For an id property, the value is guaranteed to be the same (and not\n                                    // empty) - cannot entity-update id fields\n                                    idWhereFragments.push(idQProperty.equals(value));\n                                }\n                                else if (!this.utils.valuesEqual(originalColumnValue, columnValue)) {\n                                    let currentSetFragment = setFragment;\n                                    for (let i = 0; i < valuePropertyNameChain.length - 1; i++) {\n                                        const childPropertyName = valuePropertyNameChain[i];\n                                        if (!currentSetFragment[childPropertyName]) {\n                                            currentSetFragment[childPropertyName] = {};\n                                        }\n                                        currentSetFragment = currentSetFragment[childPropertyName];\n                                    }\n                                    currentSetFragment[valuePropertyNameChain.length - 1] = columnValue;\n                                    saveResult.updated[this.entityStateManager.getOperationUniqueId(entity)] = true;\n                                    runUpdate = true;\n                                }\n                            }, dbProperty.isId);\n                            break;\n                        case EntityRelationType.ONE_TO_MANY:\n                            break;\n                        default:\n                            throw new Error(`Unknown relationType '${dbRelation.relationType}' \r\n\t\t\t\t\t\tfor '${context.dbEntity.name}.${dbProperty.name}'.`);\n                    }\n                }\n            }\n            if (runUpdate) {\n                let whereFragment;\n                if (idWhereFragments.length > 1) {\n                    whereFragment = AND(...idWhereFragments);\n                }\n                else {\n                    whereFragment = idWhereFragments[0];\n                }\n                const rawUpdate = {\n                    UPDATE: qEntity,\n                    SET: setFragment,\n                    WHERE: whereFragment\n                };\n                const update = new UpdateProperties(rawUpdate);\n                const portableQuery = this.queryFacade.getPortableQuery(update, null, context);\n                await this.updateManager.updateValues(portableQuery, actor, transaction, rootTransaction, context);\n            }\n        }\n    }\n    async internalDelete(entities, actor, transaction, rootTransaction, saveResult, context) {\n        const dbEntity = context.dbEntity;\n        const qEntity = this.airportDatabase.qApplications[dbEntity.applicationVersion.application.index][dbEntity.name];\n        const idWhereFragments = [];\n        const valuesMapByColumn = [];\n        let entityIdWhereClauses = [];\n        for (const entity of entities) {\n            for (let propertyName in entity) {\n                if (!entity.hasOwnProperty(propertyName)) {\n                    continue;\n                }\n                const dbProperty = dbEntity.propertyMap[propertyName];\n                // Skip transient fields\n                if (!dbProperty) {\n                    continue;\n                }\n                const deletedValue = entity[propertyName];\n                let dbRelation;\n                if (dbProperty.relation && dbProperty.relation.length) {\n                    dbRelation = dbProperty.relation[0];\n                }\n                if (!dbRelation) {\n                    if (dbProperty.isId) {\n                        // For an id property, the value is guaranteed to be the same (and not empty) -\n                        // cannot entity-update id fields\n                        idWhereFragments.push(qEntity[propertyName].equals(deletedValue));\n                    }\n                }\n                else {\n                    switch (dbRelation.relationType) {\n                        case EntityRelationType.MANY_TO_ONE:\n                            this.applicationUtils.forEachColumnOfRelation(dbRelation, dbEntity, (dbColumn, value, propertyNameChains) => {\n                                if (dbProperty.isId && valuesMapByColumn[dbColumn.index] === undefined) {\n                                    let idQProperty = qEntity;\n                                    for (const propertyNameLink of propertyNameChains[0]) {\n                                        idQProperty = idQProperty[propertyNameLink];\n                                    }\n                                    // For an id property, the value is guaranteed to be the same (and not\n                                    // empty) - cannot entity-update id fields\n                                    idWhereFragments.push(idQProperty.equals(value));\n                                }\n                            }, false);\n                            break;\n                        case EntityRelationType.ONE_TO_MANY:\n                            break;\n                        default:\n                            throw new Error(`Unknown relationType '${dbRelation.relationType}' \r\n\t\t\t\t\t\tfor '${dbEntity.name}.${dbProperty.name}'.`);\n                    }\n                }\n            }\n            if (idWhereFragments.length > 1) {\n                entityIdWhereClauses.push(AND(...idWhereFragments));\n            }\n            else {\n                entityIdWhereClauses.push(idWhereFragments[0]);\n            }\n            saveResult.deleted[this.entityStateManager.getOperationUniqueId(entity)] = true;\n        }\n        let WHERE;\n        if (entityIdWhereClauses.length === 1) {\n            WHERE = entityIdWhereClauses[0];\n        }\n        else {\n            WHERE = OR(...entityIdWhereClauses);\n        }\n        let rawDelete = {\n            DELETE_FROM: qEntity,\n            WHERE\n        };\n        let deleteWhere = new Delete(rawDelete);\n        let portableQuery = this.queryFacade.getPortableQuery(deleteWhere, null, context);\n        await this.deleteManager.deleteWhere(portableQuery, actor, transaction, rootTransaction, context);\n    }\n};\n__decorate([\n    Inject()\n], OperationManager.prototype, \"airportDatabase\", void 0);\n__decorate([\n    Inject()\n], OperationManager.prototype, \"applicationUtils\", void 0);\n__decorate([\n    Inject()\n], OperationManager.prototype, \"cascadeGraphVerifier\", void 0);\n__decorate([\n    Inject()\n], OperationManager.prototype, \"deleteManager\", void 0);\n__decorate([\n    Inject()\n], OperationManager.prototype, \"dependencyGraphResolver\", void 0);\n__decorate([\n    Inject()\n], OperationManager.prototype, \"entityGraphReconstructor\", void 0);\n__decorate([\n    Inject()\n], OperationManager.prototype, \"entityStateManager\", void 0);\n__decorate([\n    Inject()\n], OperationManager.prototype, \"insertManager\", void 0);\n__decorate([\n    Inject()\n], OperationManager.prototype, \"qMetadataUtils\", void 0);\n__decorate([\n    Inject()\n], OperationManager.prototype, \"queryFacade\", void 0);\n__decorate([\n    Inject()\n], OperationManager.prototype, \"repositoryManager\", void 0);\n__decorate([\n    Inject()\n], OperationManager.prototype, \"structuralEntityValidator\", void 0);\n__decorate([\n    Inject()\n], OperationManager.prototype, \"updateManager\", void 0);\n__decorate([\n    Inject()\n], OperationManager.prototype, \"utils\", void 0);\nOperationManager = __decorate([\n    Injected()\n], OperationManager);\nexport { OperationManager };\n//# sourceMappingURL=OperationManager.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { EntityRelationType, EntityState, SQLDataType } from '@airport/ground-control';\nlet StructuralEntityValidator = class StructuralEntityValidator {\n    validate(records, operatedOnEntityIndicator, missingRepositoryRecords, topLevelObjectRepositories, context, depth = 1, fromOneToMany = false, parentRelationProperty = null, rootRelationRecord = null, parentRelationRecord = null) {\n        const dbEntity = context.dbEntity;\n        if (!dbEntity.idColumns.length) {\n            throw new Error(`Cannot run 'save' for entity '${dbEntity.name}' with no @Id(s).\r\n\t\t\t\t\tPlease use non-entity operations (like 'insert' or 'updateWhere') instead.`);\n        }\n        let haveRootRelationRecord = !!rootRelationRecord;\n        const levelObjectRepositoryMapByGUID = new Map();\n        for (const record of records) {\n            if (!haveRootRelationRecord) {\n                rootRelationRecord = record;\n            }\n            const { isCreate, isParentSchemaId, isPassThrough, isStub } = this.entityStateManager.getEntityStateTypeAsFlags(record, dbEntity);\n            if (isParentSchemaId) {\n                // No processing is needed (already covered by id check)\n                continue;\n            }\n            const operationUniqueId = this.entityStateManager.getOperationUniqueId(record);\n            const entityOperatedOn = !!operatedOnEntityIndicator[operationUniqueId];\n            if (entityOperatedOn) {\n                continue;\n            }\n            operatedOnEntityIndicator[operationUniqueId] = true;\n            let newRepositoryNeeded = false;\n            for (const dbProperty of dbEntity.properties) {\n                let propertyValue = record[dbProperty.name];\n                if (propertyValue === undefined && !isStub) {\n                    propertyValue = null;\n                    record[dbProperty.name] = propertyValue;\n                }\n                /*\n                 * It is possible for the @Id's of an entity to be in\n                 * a @ManyToOne, so we need to check\n                 */\n                if (dbProperty.relation && dbProperty.relation.length) {\n                    const dbRelation = dbProperty.relation[0];\n                    let relatedEntities = null;\n                    let relationIsOneToMany = false;\n                    let isRelationNullable = true;\n                    switch (dbRelation.relationType) {\n                        case EntityRelationType.MANY_TO_ONE:\n                            // Id columns are for the parent (currently processed) entity and must be\n                            // checked as part of this entity\n                            if (dbProperty.isId) {\n                                let isMissingRepositoryProperty = false;\n                                this.applicationUtils.forEachColumnOfRelation(dbRelation, record, (dbColumn, columnValue, _propertyNameChains) => {\n                                    if (dbColumn.notNull) {\n                                        isRelationNullable = false;\n                                    }\n                                    if (this.isRepositoryColumnAndNewRepositoryNeed(dbEntity, dbProperty, dbColumn, isCreate, record, columnValue, context)) {\n                                        isMissingRepositoryProperty = true;\n                                    }\n                                    else if (this.applicationUtils.isRepositoryId(dbColumn.name)) {\n                                        const repository = record[dbProperty.name];\n                                        if (!repository._localId || !repository.GUID) {\n                                            throw new Error(`Repository must have a _localId and GUID assigned:\r\nhence, it must an existing repository that exists locally.`);\n                                        }\n                                        if (!levelObjectRepositoryMapByGUID.has(repository.GUID)) {\n                                            levelObjectRepositoryMapByGUID.set(repository.GUID, repository);\n                                            if (depth == 1) {\n                                                topLevelObjectRepositories.push(repository);\n                                            }\n                                        }\n                                    }\n                                }, false);\n                                if (isMissingRepositoryProperty) {\n                                    // TODO: document that creating a new repository will automatically\n                                    // populate it in all objects passed to save that don't have a\n                                    // repository record reference\n                                    // TODO: document that if no new repository record is created\n                                    // then a top level object must have a repository record reference.\n                                    // Then all nested records without a repository record reference\n                                    // will have that repository assigned\n                                    if (!context.rootTransaction.newRepository) {\n                                        newRepositoryNeeded = true;\n                                        missingRepositoryRecords.push({\n                                            record,\n                                            repositoryPropertyName: dbProperty.name\n                                        });\n                                    }\n                                    else {\n                                        record[dbProperty.name] = context.rootTransaction.newRepository;\n                                    }\n                                }\n                            }\n                            if (fromOneToMany) {\n                                const parentOneToManyElems = parentRelationProperty.relation[0].oneToManyElems;\n                                const parentMappedBy = parentOneToManyElems ? parentOneToManyElems.mappedBy : null;\n                                const mappedBy = dbRelation.manyToOneElems ? dbRelation.manyToOneElems.mappedBy : null;\n                                // NOTE: 'actor' or the 'repository' properties may be automatically populated\n                                // in the entity by this.validateRelationColumn\n                                if (parentMappedBy === dbProperty.name\n                                    || mappedBy === parentRelationProperty.name) {\n                                    // Always fix to the parent record\n                                    record[dbProperty.name] = parentRelationRecord;\n                                    // if (!propertyValue && !entity[dbProperty.name]) {\n                                    // \t// The @ManyToOne side of the relationship is missing, add it\n                                    // \tentity[dbProperty.name] = parentRelationEntity\n                                    // }\n                                }\n                            }\n                            if (propertyValue) {\n                                if (propertyValue) {\n                                    relatedEntities = [propertyValue];\n                                }\n                                else if (!isRelationNullable) {\n                                    throw new Error(`Non-nullable relation ${dbEntity.name}.${dbProperty.name} does not have value assigned`);\n                                }\n                                else {\n                                    console.warn(`Probably OK: Nullable @ManyToOne ${dbEntity.name}.${dbProperty.name} does not have anything assigned.`);\n                                }\n                            }\n                            break;\n                        case EntityRelationType.ONE_TO_MANY:\n                            relationIsOneToMany = true;\n                            relatedEntities = propertyValue;\n                            break;\n                        default:\n                            throw new Error(`Unexpected relation type ${dbRelation.relationType}\r\nfor ${dbEntity.name}.${dbProperty.name}`);\n                    } // switch dbRelation.relationType\n                    if (relatedEntities && relatedEntities.length) {\n                        const previousDbEntity = context.dbEntity;\n                        context.dbEntity = dbRelation.relationEntity;\n                        this.validate(relatedEntities, operatedOnEntityIndicator, missingRepositoryRecords, topLevelObjectRepositories, context, depth + 1, relationIsOneToMany, dbProperty, rootRelationRecord, record);\n                        context.dbEntity = previousDbEntity;\n                    }\n                } // if (dbProperty.relation // If is a relation property\n                else {\n                    const dbColumn = dbProperty.propertyColumns[0].column;\n                    if (dbProperty.isId) {\n                        const isIdColumnEmpty = this.applicationUtils.isIdEmpty(propertyValue);\n                        this.ensureIdValue(dbEntity, dbProperty, dbColumn, isCreate, isIdColumnEmpty);\n                    }\n                    else {\n                        if (isStub || isParentSchemaId) {\n                            if (propertyValue !== undefined) {\n                                throw new Error(`Unexpected non-@Id value Stub|ParentSchemaId|Deleted record.\r\nProperty: ${dbEntity.name}.${dbProperty.name}, with \"${this.entityStateManager.getUniqueIdFieldName()}\":  ${operationUniqueId}`);\n                            }\n                        }\n                    }\n                    this.ensureNonRelationalValue(dbProperty, dbColumn, propertyValue);\n                } // else (dbProperty.relation  // If not a relation property\n            } // for (const dbProperty of dbEntity.properties)\n            if (!isPassThrough && !isStub && !isParentSchemaId) {\n                this.ensureRepositoryValidity(record, rootRelationRecord, parentRelationRecord, dbEntity, parentRelationProperty, isCreate, fromOneToMany, newRepositoryNeeded, context);\n            }\n        } // for (const record of entities)\n    }\n    ensureRepositoryValidity(record, rootRelationRecord, parentRelationRecord, dbEntity, parentRelationProperty, isCreate, fromOneToMany, newRepositoryNeeded, context) {\n        if (!dbEntity.isAirEntity) {\n            return;\n        }\n        if (!parentRelationRecord) {\n            const originalValues = this.entityStateManager.getOriginalValues(record);\n            if (newRepositoryNeeded && originalValues && originalValues.repository\n                && originalValues.actor && originalValues._actorRecordId) {\n                const airEntity = record;\n                airEntity.originalRepository = originalValues.repository;\n                this.entityStateManager.markAsStub(airEntity.originalRepository);\n                airEntity.originalActor = originalValues.actor;\n                this.entityStateManager.markAsStub(airEntity.originalActor);\n                airEntity.originalActorRecordId = originalValues._actorRecordId;\n            }\n            return;\n        }\n        // If a new repository is created for this record\n        if (newRepositoryNeeded) {\n            // \t\t\tthrow new Error(`Error creating a new repository in a nested record:\n            // In Entity: ${dbEntity.name}\n            // That is a child of ${parentRelationProperty.entity.name} via ${parentRelationProperty.entity.name}.${parentRelationProperty.name}\n            // ->\n            // When creating a new repository the top level record should be of the newly created repository.\n            // `)\n            // no further checks needed\n            return;\n        }\n        // One to many get traversed as well, if it's in the input graph/tree\n        // it is assumed to be part of the same repository\n        // if (fromOneToMany) {\n        // \treturn\n        // }\n        let airEntity = record;\n        // If the repositories of parent record and child record match\n        if (rootRelationRecord.repository._localId === airEntity.repository._localId) {\n            // no further checks needed\n            return;\n        }\n        if (isCreate) {\n            throw new Error(`A newly created ${dbEntity.name} via ${dbEntity.name} record for repository _localId ${airEntity.repository._localId} (GUID: ${airEntity.repository.GUID})\r\nis being assigned to repository _localId ${airEntity.repository._localId} (GUID: ${airEntity.repository.GUID})\r\n\tThis is because it is being referenced via ${parentRelationProperty.entity.name}.${parentRelationProperty.name},\r\n\tfrom a record of repository _localId ${airEntity.repository._localId} (GUID: ${airEntity.repository.GUID})\r\n\t\r\n\tIf you are manually creating a copy of a record in another repository, there is no need,\r\n\tAIRport automatically copies all records refrenced via @ManyToOne()s into the created/modified\r\n\trepository.\r\n\r\n\tOtherwise, did you mean to set this record's repository to the same one as the referencing record?`);\n        }\n        // If it doesn't then it is a reference to another repository - switch\n        // the record to the parent repository and set the originalRepositoryValue\n        airEntity.originalRepository = airEntity.repository;\n        airEntity.repository = rootRelationRecord.repository;\n        // Aslo set originalActor and originalActorRecordId to look up the original record\n        airEntity.originalActor = airEntity.actor;\n        airEntity.originalActorRecordId = airEntity._actorRecordId;\n        // reset 'actor' and clear '_actorRecordId' to prevents unique constraint\n        // violation if multiple databases flip to the same exact record (independently)\n        airEntity.actor = context.actor;\n        delete airEntity._actorRecordId;\n        // Flip the state of this record to EntityState.CREATE this record now\n        // has to be created in the referencing repository\n        airEntity[this.entityStateManager.getStateFieldName()] = EntityState.CREATE;\n        // NOTE: If the child record is not provided and it's an optional\n        // @ManyToOne() it will be treated as if no record is there.  That is\n        // probaby the only correct way to handle it and a warning is\n        // shown to the user in this case\n    }\n    isRepositoryColumnAndNewRepositoryNeed(dbEntity, dbProperty, dbColumn, isCreate, entity, columnValue, context) {\n        if (!dbColumn.idIndex && dbColumn.idIndex !== 0) {\n            return;\n        }\n        const isIdColumnEmpty = this.applicationUtils.isIdEmpty(columnValue);\n        if (!dbEntity.isAirEntity) {\n            this.ensureIdValue(dbEntity, dbProperty, dbColumn, isCreate, isIdColumnEmpty);\n            return false;\n        }\n        if (!isIdColumnEmpty) {\n            if (isCreate) {\n                if (this.applicationUtils.isActorId(dbColumn.name)) {\n                    throw new Error(`Actor cannot be passed in for create Operations`);\n                }\n            }\n            return false;\n        }\n        if (!isCreate) {\n            throw new Error(`Ids must be populated in entities for non-Create operations`);\n        }\n        if (this.applicationUtils.isRepositoryId(dbColumn.name)) {\n            // Repository was not provided - use context's 'newRepository'\n            return true;\n        }\n        else if (this.applicationUtils.isActorId(dbColumn.name)) {\n            // Use context's 'actor'\n            entity[dbProperty.name] = context.actor;\n            return false;\n        }\n        else if (this.applicationUtils.isActorRecordId(dbColumn.name)) {\n            return false;\n        }\n        throw new Error(`Unexpected @Id column '${dbColumn.name}' in a AirEntity.`);\n    }\n    ensureIdValue(dbEntity, dbProperty, dbColumn, isCreate, isIdColumnEmpty) {\n        if (dbColumn.isGenerated) {\n            if (isCreate && !isIdColumnEmpty) {\n                throw new Error(`@GeneratedValue() @Id() ${dbEntity.name}.${dbProperty.name},\r\ncolumn:  ${dbColumn.name}\r\nmust NOT have a value for entity Insert operation.`);\n            }\n            else if (!isCreate && isIdColumnEmpty) {\n                throw new Error(`@GeneratedValue() @Id() ${dbEntity.name}.${dbProperty.name} \r\ncolumn:  ${dbColumn.name}\r\nmust have a value for entity non-Insert operations.`);\n            }\n        }\n        else if (isIdColumnEmpty) {\n            throw new Error(`non-@GeneratedValue() @Id() ${dbEntity.name}.${dbProperty.name},\r\ncolumn:  ${dbColumn.name}\r\nmust always have a value for all entity operations.`);\n        }\n    }\n    ensureNonRelationalValue(dbProperty, dbColumn, value) {\n        if (value === undefined || value === null) {\n            return;\n        }\n        switch (dbColumn.type) {\n            case SQLDataType.ANY:\n                break;\n            case SQLDataType.BOOLEAN:\n                if (typeof value !== 'boolean') {\n                    this.throwUnexpectedProperty(dbProperty, dbColumn, value);\n                }\n                break;\n            case SQLDataType.DATE:\n                if (typeof value !== 'object' || !(value instanceof Date)) {\n                    this.throwUnexpectedProperty(dbProperty, dbColumn, value);\n                }\n                break;\n            case SQLDataType.JSON:\n                if (typeof value !== 'object' || value instanceof Date) {\n                    this.throwUnexpectedProperty(dbProperty, dbColumn, value);\n                }\n                break;\n            case SQLDataType.NUMBER:\n                if (typeof value !== 'number') {\n                    this.throwUnexpectedProperty(dbProperty, dbColumn, value);\n                }\n                break;\n            case SQLDataType.STRING:\n                if (typeof value !== 'string') {\n                    this.throwUnexpectedProperty(dbProperty, dbColumn, value);\n                }\n                break;\n        }\n    }\n    throwUnexpectedProperty(dbProperty, dbColumn, value) {\n        throw new Error(`Unexpected property value '${value.toString()}' in property '${dbProperty.entity.name}.${dbProperty.name}'\r\n\t\t(column: '${dbColumn.name}').`);\n    }\n};\n__decorate([\n    Inject()\n], StructuralEntityValidator.prototype, \"applicationUtils\", void 0);\n__decorate([\n    Inject()\n], StructuralEntityValidator.prototype, \"entityStateManager\", void 0);\nStructuralEntityValidator = __decorate([\n    Injected()\n], StructuralEntityValidator);\nexport { StructuralEntityValidator };\n//# sourceMappingURL=StructuralEntityValidator.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { EntityState, SQLDataType } from \"@airport/ground-control\";\n// TODO: figure out if this is needed - originally written for deserializing\n// Client-side query parameters.  Since then moved to Isolates and generic\n// API calls.  Probably should be used in go-tower to deserialize all of the\n// method argiments passed it (and won't be tied to a query of any kind, API\n// interface is generic, unless already known to contain entity objects.)\nlet QueryParameterDeserializer = class QueryParameterDeserializer {\n    deserialize(parameters, query, entityStateManager) {\n        if (parameters.length !== query.jsonQuery.parameters.length) {\n            throw new Error(`Wrong number of parameters for ${query.dbEntity.name}.${query.jsonQuery.queryName}\r\n            Received:  ${parameters.length}\r\n            Expecting: ${query.jsonQuery.parameters.length}\r\n            `);\n        }\n        const deserializedParameters = [];\n        for (let i = 0; i < parameters.length; i++) {\n            const deserializedParameter = this.deserializeParameter(parameters[i], query.jsonQuery.parameters[i], i + 1, query, entityStateManager);\n            deserializedParameters.push(deserializedParameter);\n        }\n        return deserializedParameters;\n    }\n    deserializeParameter(parameter, jsonQueryParameter, parameterIndex, query, entityStateManager) {\n        switch (jsonQueryParameter.type) {\n            case SQLDataType.BOOLEAN:\n                this.checkTypeOfParameter(parameter, 'boolean', parameterIndex, query);\n                break;\n            case SQLDataType.DATE:\n                if (!(parameter instanceof Object)\n                    || parameter[entityStateManager.getStateFieldName()] !== EntityState.RESULT_DATE\n                    || !parameter.value) {\n                    throw new Error(`Invalid Serialized Date format for:\r\n                    ${query.dbEntity.name}.${query.jsonQuery.queryName}\r\n                    parameter #: ${parameterIndex}\r\n        got: ${JSON.stringify(parameter)}\r\n                    `);\n                }\n                try {\n                    return new Date(parameter);\n                }\n                catch (e) {\n                    throw new Error(`Invalid Serialized Date format for:\r\n                    ${query.dbEntity.name}.${query.jsonQuery.queryName}\r\n                    parameter #: ${parameterIndex}\r\n        got: ${JSON.stringify(parameter)}\r\n                    `);\n                }\n                break;\n            case SQLDataType.NUMBER:\n                this.checkTypeOfParameter(parameter, 'number', parameterIndex, query);\n                break;\n            case SQLDataType.STRING:\n                this.checkTypeOfParameter(parameter, 'string', parameterIndex, query);\n                break;\n            default:\n                throw new Error(`Unsupported parameter type for:\r\n                ${query.dbEntity.name}.${query.jsonQuery.queryName}\r\n                parameter #: ${parameterIndex}\r\n    got: ${jsonQueryParameter.type}\r\n                `);\n        }\n        return parameter;\n    }\n    checkTypeOfParameter(parameter, expectedParameterType, parameterIndex, query) {\n        const typeOfParameter = typeof parameter;\n        if (typeOfParameter !== expectedParameterType) {\n            throw new Error(`Expecting a '${expectedParameterType}' parameter for:\r\n            ${query.dbEntity.name}.${query.jsonQuery.queryName}\r\n            parameter #: ${parameterIndex}\r\ngot: ${typeOfParameter}\r\n            `);\n        }\n    }\n};\nQueryParameterDeserializer = __decorate([\n    Injected()\n], QueryParameterDeserializer);\nexport { QueryParameterDeserializer };\n//# sourceMappingURL=QueryParameterDeserializer.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { EntityState, SQLDataType } from '@airport/ground-control';\n// TODO: figure out if this is needed - originally written for serializing\n// query resuts returned to the client.  Since then moved to Isolates and\n// generic API calls.  Probably should be used in go-tower to serialize\n// the values returned (and won't be tied to a query of any kind, API\n// interface is generic, unless already known to contain entity objects.)\nlet QueryResultsSerializer = class QueryResultsSerializer {\n    serialize(entity, dbEntity, entityStateManager, applicationUtils) {\n        const operation = {\n            lookupTable: [],\n            sequence: 0,\n            stubLookupTable: []\n        };\n        let serializedEntity;\n        if (entity instanceof Array) {\n            serializedEntity = entity.map(anEntity => this.doSerialize(anEntity, dbEntity, operation, entityStateManager, applicationUtils));\n        }\n        else {\n            serializedEntity = this.doSerialize(entity, dbEntity, operation, entityStateManager, applicationUtils);\n        }\n        for (let i = 1; i < operation.lookupTable.length; i++) {\n            delete operation.lookupTable[i][entityStateManager.getUniqueIdFieldName()];\n        }\n        return serializedEntity;\n    }\n    doSerialize(entity, dbEntity, operation, entityStateManager, applicationUtils) {\n        // TODO: add support for non-create operations\n        let operationUniqueId = entityStateManager.getOperationUniqueId(entity);\n        if (operationUniqueId) {\n            return operation.stubLookupTable[operationUniqueId];\n        }\n        operationUniqueId = ++operation.sequence;\n        let entityStub = {};\n        entityStub[entityStateManager.getUniqueIdFieldName()] = operationUniqueId;\n        entityStub[entityStateManager.getStateFieldName()] = EntityState.STUB;\n        operation.stubLookupTable[operationUniqueId] = entityStub;\n        let entityCopy = {};\n        operation.lookupTable[operationUniqueId] = entity;\n        entityCopy[entityStateManager.getUniqueIdFieldName()] = operationUniqueId;\n        // TODO: Test this - used to be assigned to EntitState.RESULT, which is removed\n        entityCopy[entityStateManager.getStateFieldName()]\n            = entity[entityStateManager.getStateFieldName()];\n        for (const dbProperty of dbEntity.properties) {\n            let property = entity[dbProperty.name];\n            if (applicationUtils.isEmpty(property)) {\n                continue;\n            }\n            let propertyCopy;\n            if (dbProperty.relation) {\n                const dbRelation = dbProperty.relation[0];\n                if (property instanceof Array) {\n                    propertyCopy = property.map(manyObject => {\n                        this.doSerialize(manyObject, dbRelation.relationEntity, operation, entityStateManager, applicationUtils);\n                    });\n                }\n                else {\n                    propertyCopy = this.doSerialize(property, dbRelation.relationEntity, operation, entityStateManager, applicationUtils);\n                }\n            }\n            else {\n                switch (dbProperty.propertyColumns[0].column.type) {\n                    case SQLDataType.JSON:\n                        // \tif (property instanceof Array) {\n                        // \t\tpropertyCopy = {\n                        // \t\t\tvalue: property\n                        // \t\t}\n                        // \t\tpropertyCopy[entityStateManager.getStateFieldName()]\n                        // \t\t\t= EntityState.RESULT_JSON_ARRAY\n                        // \t} else {\n                        // \t\tpropertyCopy = property\n                        // \t\tpropertyCopy[entityStateManager.getStateFieldName()]\n                        // \t\t\t= EntityState.RESULT_JSON\n                        // \t}\n                        throw new Error(`@Json() properties cannot be serialized.`);\n                        break;\n                    case SQLDataType.DATE:\n                        propertyCopy = {\n                            value: property.toISOString()\n                        };\n                        propertyCopy[entityStateManager.getStateFieldName()]\n                            = EntityState.DATE;\n                        break;\n                    case SQLDataType.ANY:\n                    case SQLDataType.BOOLEAN:\n                    case SQLDataType.NUMBER:\n                    case SQLDataType.STRING:\n                        propertyCopy = property;\n                        break;\n                    default:\n                        throw new Error(`Unsupported data type for property ${dbEntity.applicationVersion.application.name}.${dbEntity.name}.${dbProperty.name}`);\n                }\n            }\n            entityCopy[dbProperty.name] = propertyCopy;\n        }\n        return entityCopy;\n    }\n};\nQueryResultsSerializer = __decorate([\n    Injected()\n], QueryResultsSerializer);\nexport { QueryResultsSerializer };\n//# sourceMappingURL=QueryResultsSerializer.js.map","/**\n * Created by Papa on 6/30/2016.\n */\nvar startTime = new Date().getTime();\n// Invoke the random algorithm (?change the seed?)\nMath.random();\nexport class PlatformUtils {\n    static async getNewDatabaseId() {\n        return new Date().getTime().toString(36) + await this.createNonce(7, true);\n    }\n    static async createNonce(length, sleep) {\n        var text = \"\";\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n        // Sleep a random number of milliseconds to ensure different random characters\n        await this.randomize();\n        for (var i = 0; i < length; i++) {\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n        return text;\n    }\n    static async randomize() {\n        for (let i = 0; i < startTime % 1000; i++) {\n            Math.random();\n        }\n        /*\n        return new Promise((\n            resolve,\n            reject\n        ) => {\n            setTimeout(() => {\n                resolve();\n            }, startTime % 1000);\n        });\n        */\n    }\n}\n//# sourceMappingURL=PlatformUtils.js.map","import { lib } from \"@airport/direction-indicator\";\nexport const arrivalsNDepartures = lib('arrivals-n-departures');\nexport const REQUEST_MANAGER = arrivalsNDepartures.token({\n    class: null,\n    interface: 'RequestManager',\n    token: 'REQUEST_MANAGER'\n});\nexport const OPERATION_DESERIALIZER = arrivalsNDepartures.token({\n    class: null,\n    interface: 'IOperationDeserializer',\n    token: 'OPERATION_DESERIALIZER'\n});\nexport const QUERY_PARAMETER_DESERIALIZER = arrivalsNDepartures.token({\n    class: null,\n    interface: 'IQueryParameterDeserializer',\n    token: 'QUERY_PARAMETER_DESERIALIZER'\n});\nexport const QUERY_RESULTS_SERIALIZER = arrivalsNDepartures.token({\n    class: null,\n    interface: 'IQueryResultsSerializer',\n    token: 'QUERY_RESULTS_SERIALIZER'\n});\n//# sourceMappingURL=tokens.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nlet ActiveQueries = class ActiveQueries {\n    constructor() {\n        this.queries = new Map();\n    }\n    add(portableQuery, cachedSqlQuery) {\n        this.queries.set(portableQuery, cachedSqlQuery);\n    }\n    remove(portableQuery) {\n        this.queries.delete(portableQuery);\n    }\n    markQueriesToRerun(applicationMap) {\n        this.queries.forEach((cachedSqlQuery) => {\n            if (applicationMap.intersects(cachedSqlQuery.sqlQuery.getFieldMap())) {\n                cachedSqlQuery.rerun = true;\n            }\n        });\n    }\n    rerunQueries( //\n    ) {\n        // Add a bit of a wait to let any query-subscribed screens that are closing after\n        // a mutation operation to un-subscribe from those queries.\n        setTimeout(() => {\n            this.queries.forEach((cachedSqlQuery) => {\n                if (cachedSqlQuery.rerun) {\n                    cachedSqlQuery.rerun = false;\n                    cachedSqlQuery.runQuery();\n                }\n            });\n        }, 100);\n    }\n};\nActiveQueries = __decorate([\n    Injected()\n], ActiveQueries);\nexport { ActiveQueries };\n//# sourceMappingURL=ActiveQueries.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from \"@airport/direction-indicator\";\nimport { Subject } from \"rxjs\";\nlet ObservableQueryAdapter = class ObservableQueryAdapter {\n    wrapInObservable(portableQuery, queryCallback) {\n        // TODO: checking for presence of a repository in in an observable\n        // await this.ensureRepositoryPresenceAndCurrentState(context)\n        let resultsSubject = new Subject();\n        // FIXME: Remove the query for the list of cached queries, that are checked every\n        //       time a mutation operation is run\n        // let resultsSubject                 = new Subject<E>(() => {\n        // \tif (resultsSubject.subscriptions.length < 1) {\n        // \t\t\t\t\t// Remove the query for the list of cached queries, that are checked every\n        // \t\t\t\t\t// time a mutation operation is run\n        // \t\t\t\t\tthis.activeQueries.remove(portableQuery)\n        // \t}\n        // });\n        let cachedSqlQuery = {\n            portableQuery,\n            resultsSubject: resultsSubject,\n            runQuery: () => {\n                queryCallback().then(augmentedResult => {\n                    resultsSubject.next(augmentedResult);\n                });\n            }\n        };\n        this.activeQueries.add(portableQuery, cachedSqlQuery);\n        cachedSqlQuery.runQuery();\n        return resultsSubject;\n    }\n};\n__decorate([\n    Inject()\n], ObservableQueryAdapter.prototype, \"activeQueries\", void 0);\nObservableQueryAdapter = __decorate([\n    Injected()\n], ObservableQueryAdapter);\nexport { ObservableQueryAdapter };\n//# sourceMappingURL=ObservableQueryAdapter.js.map","import { lib } from \"@airport/direction-indicator\";\nimport { ActiveQueries } from \"./ActiveQueries\";\nimport { ObservableQueryAdapter } from \"./ObservableQueryAdapter\";\nconst flightNumber = lib('flight-number');\nexport const ACTIVE_QUERIES = flightNumber.token({\n    class: ActiveQueries,\n    interface: 'IActiveQueries',\n    token: 'ACTIVE_QUERIES'\n});\nexport const OBSERVABLE_QUERY_ADAPTER = flightNumber.token({\n    class: ObservableQueryAdapter,\n    interface: 'IObservableQueryAdapter',\n    token: 'OBSERVABLE_QUERY_ADAPTER'\n});\nOBSERVABLE_QUERY_ADAPTER.setDependencies({\n    activeQueries: ACTIVE_QUERIES\n});\n//# sourceMappingURL=tokens.js.map","import { SortOrder } from '@airport/ground-control';\nimport { AbstractEntityOrderByParser } from './AbstractEntityOrderByParser';\n/**\n * Created by Papa on 10/16/2016.\n */\n/**\n * Will hierarchically order the results of the query using breadth-first processing.\n * Within a given entity will take into account the sort order specified in the Order By\n * clause.\n */\nexport class EntityOrderByParser extends AbstractEntityOrderByParser {\n    /**\n     * Using the following algorithm\n     * http://stackoverflow.com/questions/2549541/performing-breadth-first-search-recursively\n     * :\n     BinarySearchTree.prototype.breadthFirst = function() {\n      var result = '',\n      queue = [],\n      current = this.root;\n      if (!current) return null;\n      queue.push(current);\n      while (current = queue.shift()) {\n            result += current.value + ' ';\n            current.left && queue.push(current.left);\n            current.right && queue.push(current.right);\n        }\n      return result;\n     }\n     *\n     * @param joinTree\n     * @param qEntityMapByAlias\n     * @returns {string}\n     */\n    getOrderByFragment(joinTree, qEntityMapByAlias, context) {\n        let orderByFragments = [];\n        let orderBy = [];\n        if (this.orderBy) {\n            orderBy = this.orderBy.slice();\n        }\n        const selectFragmentQueue = [];\n        let currentSelectFragment = this.rootSelectClauseFragment;\n        selectFragmentQueue.push(currentSelectFragment);\n        const joinNodeQueue = [];\n        let currentJoinNode = joinTree;\n        joinNodeQueue.push(currentJoinNode);\n        // Perform breadth-first SELECT clause traversal\n        while ((currentSelectFragment = selectFragmentQueue.shift())\n            && (currentJoinNode = joinNodeQueue.shift())) {\n            const tableAlias = this.relationManager.getAlias(currentJoinNode.jsonRelation);\n            const dbEntity = qEntityMapByAlias[tableAlias].__driver__.dbEntity;\n            const currentEntityOrderBy = [];\n            let parentNodeFound;\n            orderBy = orderBy.filter((orderByField) => {\n                if (parentNodeFound) {\n                    return true;\n                }\n                const orderByDbEntity = this.airportDatabase.applications[orderByField.si]\n                    .currentVersion[0].applicationVersion.entities[orderByField.ti];\n                const dbColumn = orderByDbEntity.columns[orderByField.ci];\n                if (this.isForParentNode(currentJoinNode, orderByField)) {\n                    throw new Error(`Found out of order entry in Order By \r\n\t\t\t\t\t[${orderByDbEntity.applicationVersion.application.name} - ${orderByDbEntity.name}.${dbColumn.name}].\r\n\t\t\t\t\tEntries must be ordered hierarchically, in breadth-first order.`);\n                }\n                if (orderByField.si !== dbEntity.applicationVersion.application.index || orderByField.ti !== dbEntity.index) {\n                    return true;\n                }\n                this.qValidator.validateReadProperty(dbColumn);\n                orderByField.fa = `${tableAlias}.${dbColumn.name}`;\n                currentEntityOrderBy.push(orderByField);\n                return false;\n            });\n            // NOTE: Order by Ids is necessary to correctly reconstruct \n            // the entity graph\n            const allColumnsToSortBy = [];\n            const idColumnsToSortBy = [];\n            // By now the SELECT clause is guaranteed to have:\n            // Either all ID columns defined on the entity (if @Id columns are defined)\n            // Or ALL of the columns on the entity (if no @Id columns are defined)\n            for (const propertyName in currentSelectFragment) {\n                const dbProperty = dbEntity.propertyMap[propertyName];\n                if (dbProperty.relation && dbProperty.relation.length) {\n                    for (const dbPropertyColumn of dbProperty.propertyColumns) {\n                        const dbColumn = dbPropertyColumn.column;\n                        allColumnsToSortBy.push(dbColumn.name);\n                        if (dbProperty.isId) {\n                            idColumnsToSortBy.push(dbColumn.name);\n                        }\n                    }\n                    if (!currentJoinNode.childNodes.length) {\n                        continue;\n                    }\n                    const dbRelation = dbProperty.relation[0];\n                    const dbEntity = dbRelation.relationEntity;\n                    const matchingNodes = currentJoinNode.childNodes.filter(childNode => {\n                        const jsonRelation = childNode.jsonRelation;\n                        return jsonRelation.si === dbEntity.applicationVersion.application.index\n                            && jsonRelation.ti === dbEntity.index;\n                    });\n                    if (!matchingNodes.length) {\n                        return;\n                    }\n                    selectFragmentQueue.push(this.rootSelectClauseFragment[propertyName]);\n                    const childJoinNode = currentJoinNode.getEntityRelationChildNode(dbRelation);\n                    joinNodeQueue.push(childJoinNode);\n                }\n                else {\n                    const dbColumn = dbProperty.propertyColumns[0].column;\n                    allColumnsToSortBy.push(dbColumn.name);\n                    // Tentatively add column to the list of columnIndexes to sort by\n                    if (dbProperty.isId) {\n                        idColumnsToSortBy.push(dbColumn.name);\n                    }\n                }\n            }\n            let entityOrderByFragments = this.buildOrderByFragmentForEntity(tableAlias, allColumnsToSortBy, idColumnsToSortBy, currentEntityOrderBy, qEntityMapByAlias);\n            orderByFragments = orderByFragments.concat(entityOrderByFragments);\n        }\n        if (orderBy.length) {\n            throw new Error(`\r\n\t\t\tFound entries in ORDER_BY for tables not found in SELECT clause.  \r\n\t\t\tEntries must be ordered hierarchically, in breadth-first order.`);\n        }\n        return orderByFragments.join(', ');\n    }\n    buildOrderByFragmentForEntity(tableAlias, allColumnsToSortBy, idColumnsToSortBy, currentEntityOrderBy, qEntityMapByAlias) {\n        const finalOrderByColumnsFragments = [];\n        const inputOrderByPropertyNameSet = {};\n        const dbEntity = qEntityMapByAlias[tableAlias].__driver__.dbEntity;\n        // First add the fields specified in the Order By clause for this entity\n        currentEntityOrderBy.forEach((orderByField) => {\n            finalOrderByColumnsFragments.push(orderByField);\n            const columnName = dbEntity.columns[orderByField.ci].name;\n            inputOrderByPropertyNameSet[columnName] = true;\n        });\n        if (idColumnsToSortBy.length) {\n            // Then if the ID column is present in the result set, just order by id\n            for (const idColumnName of idColumnsToSortBy) {\n                if (!inputOrderByPropertyNameSet[idColumnName]) {\n                    finalOrderByColumnsFragments.push({\n                        fa: `${tableAlias}.${idColumnName}`,\n                        so: SortOrder.ASCENDING\n                    });\n                }\n            }\n        }\n        else {\n            allColumnsToSortBy.forEach((columnName) => {\n                if (!inputOrderByPropertyNameSet[columnName]) {\n                    finalOrderByColumnsFragments.push({\n                        fa: `${tableAlias}.${columnName}`,\n                        so: SortOrder.ASCENDING\n                    });\n                }\n            });\n        }\n        return this.getCommonOrderByFragment(finalOrderByColumnsFragments);\n    }\n    isForParentNode(joinTreeNode, orderByField) {\n        do {\n            joinTreeNode = joinTreeNode.parentNode;\n            if (!joinTreeNode) {\n                return false;\n            }\n            if (orderByField.si === joinTreeNode.jsonRelation.si\n                && orderByField.ti === joinTreeNode.jsonRelation.ti) {\n                return true;\n            }\n        } while (joinTreeNode.parentNode);\n        return false;\n    }\n}\n//# sourceMappingURL=EntityOrderByParser.js.map","import { SortOrder } from '@airport/ground-control';\nexport class AbstractEntityOrderByParser {\n    constructor(rootSelectClauseFragment, airportDatabase, qValidator, relationManager, orderBy) {\n        this.rootSelectClauseFragment = rootSelectClauseFragment;\n        this.airportDatabase = airportDatabase;\n        this.qValidator = qValidator;\n        this.relationManager = relationManager;\n        this.orderBy = orderBy;\n    }\n    getCommonOrderByFragment(orderByFields) {\n        return orderByFields.map((orderByField) => {\n            switch (orderByField.so) {\n                case SortOrder.ASCENDING:\n                    return `${orderByField.fa} ASC`;\n                case SortOrder.DESCENDING:\n                    return `${orderByField.fa} DESC`;\n            }\n        })\n            .join(', ');\n    }\n}\n//# sourceMappingURL=AbstractEntityOrderByParser.js.map","import { SortOrder } from '@airport/ground-control';\n/**\n * Created by Papa on 10/16/2016.\n */\n/**\n * Will order the results exactly as specified in the Order By clause\n */\nexport class ExactOrderByParser {\n    constructor(validator) {\n        this.validator = validator;\n    }\n    getOrderByFragment(rootSelectClauseFragment, orderBy) {\n        return orderBy.map((orderByField) => {\n            this.validator.validateAliasedFieldAccess(orderByField.fa);\n            switch (orderByField.so) {\n                case SortOrder.ASCENDING:\n                    return `${orderByField.fa} ASC`;\n                case SortOrder.DESCENDING:\n                    return `${orderByField.fa} DESC`;\n            }\n        })\n            .join(', ');\n    }\n}\n//# sourceMappingURL=ExactOrderByParser.js.map","import { SortOrder } from '@airport/ground-control';\n/**\n * Created by Papa on 11/8/2016.\n */\n/**\n * Will hierarchically order the results of the query using breadth-first processing.\n * Within a given sub-SELECT facade will take into account the sort order specified in the Order\n * By clause.\n */\nexport class MappedOrderByParser {\n    constructor(validator) {\n        this.validator = validator;\n    }\n    /**\n     * Using the following algorithm\n     * http://stackoverflow.com/questions/2549541/performing-breadth-first-search-recursively\n     * :\n     BinarySearchTree.prototype.breadthFirst = function() {\n      var result = '',\n      queue = [],\n      current = this.root;\n\n      if (!current) return null;\n      queue.push(current);\n\n      while (current = queue.shift()) {\n            result += current.value + ' ';\n            current.left && queue.push(current.left);\n            current.right && queue.push(current.right);\n        }\n      return result;\n     }\n     *\n     * @param joinTree\n     * @param qEntityMapByAlias\n     * @returns {string}\n     */\n    getOrderByFragment(rootSelectClauseFragment, originalOrderBy) {\n        let orderByFragments = [];\n        let orderBy = [];\n        if (originalOrderBy) {\n            orderBy = originalOrderBy.slice();\n        }\n        let selectFragmentQueue = [];\n        let currentSelectFragment = rootSelectClauseFragment;\n        selectFragmentQueue.push(currentSelectFragment);\n        // Breadth first traversal using a queue\n        while (currentSelectFragment = selectFragmentQueue.shift()) {\n            let currentSelectFragmentFieldSet = {};\n            for (let propertyName in currentSelectFragment) {\n                let field = currentSelectFragment[propertyName];\n                if (!field.appliedFunctions) {\n                    selectFragmentQueue.push(field);\n                    continue;\n                }\n                currentSelectFragmentFieldSet[field.fa] = true;\n            }\n            let currentEntityOrderBy = [];\n            // First add the fields specified in the query Order By clause for this entity, in the\n            // order they are specified\n            orderBy = orderBy.filter((orderByField) => {\n                if (!currentSelectFragmentFieldSet[orderByField.fa]) {\n                    return true;\n                }\n                delete currentSelectFragmentFieldSet[orderByField.fa];\n                currentEntityOrderBy.push(orderByField);\n                return false;\n            });\n            // Then add all the rest of the fields for this entity, we are maintaining the tree\n            // structure of the result\n            for (let alias in currentSelectFragmentFieldSet) {\n                currentEntityOrderBy.push({\n                    fa: alias,\n                    so: SortOrder.ASCENDING\n                });\n            }\n            let entityOrderByFragments = this.buildOrderByFragmentForEntity(currentEntityOrderBy);\n            orderByFragments = orderByFragments.concat(entityOrderByFragments);\n        }\n        if (orderBy.length) {\n            throw new Error(`Found entries in ORDER_BY for tables not found in SELECT clause.  Entries must be ordered hierarchically, in breadth-first order.`);\n        }\n        return orderByFragments.join(', ');\n    }\n    buildOrderByFragmentForEntity(orderByFields) {\n        return orderByFields.map((orderByField) => {\n            this.validator.validateAliasedFieldAccess(orderByField.fa);\n            switch (orderByField.so) {\n                case SortOrder.ASCENDING:\n                    return `${orderByField.fa} ASC`;\n                case SortOrder.DESCENDING:\n                    return `${orderByField.fa} DESC`;\n            }\n        });\n    }\n}\n//# sourceMappingURL=MappedOrderByParser.js.map","import { ensureChildArray, ensureChildMap } from '@airport/ground-control';\n// For MtO mapping in bridged queries\nexport class GraphMtoMapper {\n    constructor() {\n        // Map of all objects that have a given MtO reference\n        // [] MtO reference Application Entity Index\n        // [] MtO reference Entity Index\n        this.mtoStubReferenceMap = [];\n    }\n    addMtoReference(mtoStubReference, mtoEntityIdValue) {\n        const mtoDbEntity = mtoStubReference.mtoDbEntity;\n        let mtoEntitiesForTypeMap = ensureChildMap(ensureChildArray(this.mtoStubReferenceMap, mtoDbEntity.applicationVersion.application.index), mtoDbEntity.index);\n        let mtosForEntity = ensureChildMap(mtoEntitiesForTypeMap, mtoEntityIdValue);\n        mtosForEntity[mtoStubReference.mtoRelationField] = mtoStubReference;\n    }\n    populateMtos(entityMap) {\n        for (const applicationIndex in this.mtoStubReferenceMap) {\n            const mtoEntitiesForApplicationMap = this.mtoStubReferenceMap[applicationIndex];\n            for (const entityIndex in mtoEntitiesForApplicationMap) {\n                const mtoEntitiesForTypeMap = mtoEntitiesForApplicationMap[entityIndex];\n                for (let mtoEntityId in mtoEntitiesForTypeMap) {\n                    let mtosForEntity = mtoEntitiesForTypeMap[mtoEntityId];\n                    for (let mtoPropertyName in mtosForEntity) {\n                        let mtoStubReference = mtosForEntity[mtoPropertyName];\n                        let otmDbEntity = mtoStubReference.otmDbEntity;\n                        if (!entityMap[otmDbEntity.applicationVersion.application.index]) {\n                            continue;\n                        }\n                        let otmEntitiesForTypeMap = entityMap[otmDbEntity.applicationVersion.application.index][otmDbEntity.index];\n                        if (!otmEntitiesForTypeMap) {\n                            continue;\n                        }\n                        let otmEntity = otmEntitiesForTypeMap[mtoStubReference.otmEntityId];\n                        if (!otmEntity) {\n                            continue;\n                        }\n                        mtoStubReference.mtoParentObject[mtoStubReference.mtoRelationField] = otmEntity;\n                    }\n                }\n            }\n        }\n    }\n}\n//# sourceMappingURL=GraphMtoMapper.js.map","import { ensureChildArray, ensureChildMap } from '@airport/ground-control';\n// For OtM mapping in bridged queries\nexport class GraphOtmMapper {\n    constructor() {\n        // Map of MtO referred objects by OtM references\n        // [] OTM Reference Entity Application Index\n        // [] OTM Reference Entity Index\n        this.mtoEntityReferenceMap = [];\n        // Map of objects with OtM references by\n        // [] OtM reference Application Entity Index\n        // [] OtM reference Entity Index\n        this.otmEntityReferenceMap = [];\n    }\n    addMtoReference(mtoStubReference, mtoEntityId, dbEntity, context) {\n        // If the @OneToMany({ mappedBy: ... }) is missing, there is nothing to map to\n        if (!mtoStubReference.otmEntityField) {\n            return;\n        }\n        // Add into mtoEntityReferenceMap\n        const otmDbEntity = mtoStubReference.otmDbEntity;\n        let mtoEntityReferenceMapForEntity = ensureChildMap(ensureChildArray(this.mtoEntityReferenceMap, otmDbEntity.applicationVersion.application.index), otmDbEntity.index);\n        let mapForOtmEntity = mtoEntityReferenceMapForEntity[mtoStubReference.otmEntityId];\n        if (!mapForOtmEntity) {\n            mapForOtmEntity = {};\n            mtoEntityReferenceMapForEntity[mtoStubReference.otmEntityId] = mapForOtmEntity;\n        }\n        let mtoCollection = mapForOtmEntity[mtoStubReference.otmEntityField];\n        if (!mtoCollection) {\n            mtoCollection = [];\n            mapForOtmEntity[mtoStubReference.otmEntityField]\n                = mtoCollection;\n        }\n        mtoCollection.push(mtoStubReference.mtoParentObject);\n    }\n    addOtmReference(otmStubReference, otmEntityIdValue) {\n        // Add into otoEntityReferenceMap\n        const otmDbEntity = otmStubReference.otmDbEntity;\n        let mtoEntityReferenceMapForEntity = ensureChildMap(ensureChildArray(this.otmEntityReferenceMap, otmDbEntity.applicationVersion.application.index), otmDbEntity.index);\n        let otmRecordByPropertyName = mtoEntityReferenceMapForEntity[otmEntityIdValue];\n        if (!otmRecordByPropertyName) {\n            otmRecordByPropertyName = {};\n            mtoEntityReferenceMapForEntity[otmEntityIdValue] = otmRecordByPropertyName;\n        }\n        otmRecordByPropertyName[otmStubReference.otmPropertyName] = otmStubReference.otmObject;\n    }\n    populateOtms(entityMap) {\n        for (const applicationIndex in this.mtoEntityReferenceMap) {\n            const mtoEntityReferenceMapForApplication = this.mtoEntityReferenceMap[applicationIndex];\n            for (const entityIndex in mtoEntityReferenceMapForApplication) {\n                const mtoEntityReferenceMapForEntity = mtoEntityReferenceMapForApplication[entityIndex];\n                // If there are no entities of this type in query results, just keep the stubs\n                if (!entityMap[applicationIndex]) {\n                    continue;\n                }\n                let entityOfTypeMap = entityMap[applicationIndex][entityIndex];\n                // If there are no entities of this type in query results, just keep the stubs\n                if (!entityOfTypeMap) {\n                    continue;\n                }\n                // If there are no OTM for this type in query results, no mapping needs to happen\n                if (!this.otmEntityReferenceMap[applicationIndex]) {\n                    continue;\n                }\n                let entityWithOtmMap = this.otmEntityReferenceMap[applicationIndex][entityIndex];\n                // If there are no OTM for this type in query results, no mapping needs to happen\n                if (!entityWithOtmMap) {\n                    continue;\n                }\n                for (let otmEntityId in mtoEntityReferenceMapForEntity) {\n                    let referencedEntitiesByPropertyMap = mtoEntityReferenceMapForEntity[otmEntityId];\n                    let otmRecordByPropertyName = entityWithOtmMap[otmEntityId];\n                    // If there are no OtMs for this entity, no mapping needs to happen\n                    if (!otmRecordByPropertyName) {\n                        continue;\n                    }\n                    for (let otmProperty in referencedEntitiesByPropertyMap) {\n                        let otmEntity = otmRecordByPropertyName[otmProperty];\n                        // If OtM entity doesn't have this collection, no mapping needs to happen\n                        if (!otmEntity) {\n                            continue;\n                        }\n                        let referencedEntityArray = referencedEntitiesByPropertyMap[otmProperty];\n                        let otmCollection = otmEntity[otmProperty];\n                        // If @OneToMany isn't set yet\n                        if (!otmCollection) {\n                            otmEntity[otmProperty] = referencedEntityArray;\n                        }\n                        else {\n                            for (let referencedEntity of referencedEntityArray) {\n                                otmCollection.push(referencedEntity);\n                            }\n                        }\n                        otmRecordByPropertyName[otmProperty] = otmEntity[otmProperty].slice();\n                    }\n                }\n            }\n        }\n    }\n}\n//# sourceMappingURL=GraphOtmMapper.js.map","/**\n * Created by Papa on 10/16/2016.\n */\nexport class GraphQueryConfiguration {\n    constructor() {\n        // This is for conflicts on OneToMany references\n        this.strict = true;\n        this.mapped = true;\n        // Always fail on no ID - bridged entities must have IDs\n        // failOnNoId: boolean = true;\n        // Assume there are no conflicts on ManyToOneReferences\n        //failOnManyToOneConflicts: boolean = true;\n    }\n}\nexport class AbstractObjectResultParser {\n    constructor(applicationUtils, entityStateManager, utils) {\n        this.applicationUtils = applicationUtils;\n        this.entityStateManager = entityStateManager;\n        this.utils = utils;\n    }\n    addManyToOneStub(resultObject, propertyName, relationInfos, context) {\n        let manyToOneStub = {};\n        this.entityStateManager.isStub(manyToOneStub);\n        resultObject[propertyName] = manyToOneStub;\n        let haveAllIds = true;\n        relationInfos.forEach((relationInfo) => {\n            if (this.applicationUtils.isIdEmpty(relationInfo.value)) {\n                haveAllIds = false;\n                return;\n            }\n            let lastObject;\n            let currentObject = manyToOneStub;\n            let currentIndex = 1;\n            const propertyNameChain = relationInfo.propertyNameChains[0];\n            while (currentIndex < propertyNameChain.length) {\n                // If there is no object in context, create one\n                if (!currentObject) {\n                    currentObject = {};\n                    this.entityStateManager.markAsStub(currentObject);\n                    lastObject[propertyNameChain[currentIndex - 1]] = currentObject;\n                }\n                // If it's not a leaf (more objects in the chain exist)\n                if (currentIndex < propertyNameChain.length - 1) {\n                    lastObject = currentObject;\n                    currentObject = lastObject[propertyNameChain[currentIndex]];\n                }\n                else {\n                    // Otherwise, just assign the value\n                    currentObject[propertyNameChain[currentIndex]] = relationInfo.value;\n                }\n                currentIndex++;\n            }\n        });\n        return haveAllIds;\n    }\n}\n//# sourceMappingURL=IEntityResultParser.js.map","import { ensureChildArray, ensureChildMap, EntityRelationType } from '@airport/ground-control';\nimport { GraphMtoMapper } from './GraphMtoMapper';\nimport { GraphOtmMapper } from './GraphOtmMapper';\nimport { AbstractObjectResultParser } from './IEntityResultParser';\n/**\n * Created by Papa on 10/16/2016.\n */\n/**\n * The goal of this parser to to bridge all entity references and arrive at an\n * inter-connected graph (where possible).\n */\nexport class EntityGraphResultParser extends AbstractObjectResultParser {\n    constructor(config, rootDbEntity, applicationUtils, entityStateManager, utils) {\n        super(applicationUtils, entityStateManager, utils);\n        this.config = config;\n        this.rootDbEntity = rootDbEntity;\n        // Keys can only be strings or numbers | TODO: change to JS Maps, if needed\n        this.entityMapByApplicationAndTableIndexes = [];\n        // One-To-Many & MtO temp stubs (before entityId is available)\n        this.otmStubBuffer = [];\n        this.mtoStubBuffer = [];\n        // Used in ENTITY_FLATTENED queries\n        this.currentResultRow = [];\n        this.otmMapper = new GraphOtmMapper();\n        this.mtoMapper = new GraphMtoMapper();\n    }\n    addEntity(entityAlias, dbEntity, context) {\n        return this.applicationUtils.getNewEntity(dbEntity);\n    }\n    addProperty(entityAlias, resultObject, dataType, propertyName, propertyValue) {\n        resultObject[propertyName] = propertyValue;\n        return this.utils.objectExists(propertyValue);\n    }\n    bufferManyToOneStub(entityAlias, dbEntity, resultObject, propertyName, relationDbEntity, relationInfos, context) {\n        const oneToManyStubAdded = this.addManyToOneStub(resultObject, propertyName, relationInfos, context);\n        if (oneToManyStubAdded) {\n            const relatedEntityId = this.applicationUtils.getIdKey(resultObject[propertyName], relationDbEntity);\n            this.bufferManyToOne(dbEntity, propertyName, relationDbEntity, relatedEntityId);\n        }\n    }\n    bufferBlankManyToOneStub(entityAlias, resultObject, propertyName) {\n        resultObject[propertyName] = null;\n        // Nothing to do for bridged parser - bridging will map blanks, where possible\n    }\n    bufferManyToOneObject(entityAlias, dbEntity, resultObject, propertyName, relationDbEntity, childResultObject, context) {\n        resultObject[propertyName] = childResultObject;\n        const relatedEntityId = this.applicationUtils.getIdKey(resultObject[propertyName], relationDbEntity);\n        this.bufferManyToOne(dbEntity, propertyName, relationDbEntity, relatedEntityId);\n    }\n    bufferBlankManyToOneObject(entityAlias, resultObject, propertyName) {\n        resultObject[propertyName] = null;\n        // Nothing to do for bridged parser - bridging will map blanks, where possible\n    }\n    bufferOneToManyStub(otmDbEntity, otmPropertyName) {\n        this.bufferOneToMany(otmDbEntity, otmPropertyName);\n    }\n    bufferOneToManyCollection(entityAlias, resultObject, otmDbEntity, propertyName, relationDbEntity, childResultObject, context) {\n        this.bufferOneToMany(otmDbEntity, propertyName);\n        resultObject[propertyName] = [childResultObject];\n    }\n    bufferBlankOneToMany(entityAlias, resultObject, otmEntityName, propertyName, relationDbEntity, context) {\n        resultObject[propertyName] = [];\n    }\n    flushEntity(entityAlias, dbEntity, selectClauseFragment, entityIdValue, resultObject, context) {\n        if (!entityIdValue) {\n            throw new Error(`No Id provided for entity \r\n\t\t\t'${dbEntity.applicationVersion.application.name}.${dbEntity.name}'`);\n        }\n        let currentEntity = this.getEntityToFlush(dbEntity, selectClauseFragment, entityIdValue, resultObject, context);\n        this.flushRelationStubBuffers(entityIdValue, currentEntity, dbEntity, context);\n        return currentEntity;\n    }\n    flushRow() {\n        // Nothing to do, bridged queries don't rely on rows changing\n    }\n    bridge(parsedResults, selectClauseFragment, context) {\n        this.mtoMapper.populateMtos(this.entityMapByApplicationAndTableIndexes);\n        this.otmMapper.populateOtms(this.entityMapByApplicationAndTableIndexes);\n        // merge any out of order entity references (there shouldn't be any)\n        return parsedResults;\n    }\n    bufferManyToOne(dbEntity, propertyName, relationDbEntity, relatedEntityId) {\n        let otmEntityField;\n        for (const dbRelation of relationDbEntity.relations) {\n            switch (dbRelation.relationType) {\n                case EntityRelationType.ONE_TO_MANY:\n                    break;\n                case EntityRelationType.MANY_TO_ONE:\n                    continue;\n                default:\n                    throw new Error(`Unknown EntityRelationType: ${dbRelation.relationType}`);\n            }\n            if (dbRelation.oneToManyElems && dbRelation.oneToManyElems.mappedBy) {\n                if (dbEntity._localId === dbRelation.relationEntity._localId\n                    || dbRelation.oneToManyElems.mappedBy === propertyName) {\n                    otmEntityField = dbRelation.property.name;\n                }\n            }\n        }\n        this.mtoStubBuffer.push({\n            otmEntityId: relatedEntityId,\n            otmDbEntity: relationDbEntity,\n            otmEntityField: otmEntityField,\n            mtoDbEntity: dbEntity,\n            mtoRelationField: propertyName,\n            mtoParentObject: null\n        });\n    }\n    bufferOneToMany(otmDbEntity, otmPropertyName) {\n        this.otmStubBuffer.push({\n            otmDbEntity: otmDbEntity,\n            otmPropertyName: otmPropertyName,\n            otmObject: null\n        });\n    }\n    getEntityToFlush(dbEntity, selectClauseFragment, idValue, resultObject, context) {\n        if (!idValue) {\n            throw new Error(`Entity ID not specified for entity \r\n\t\t\t'${dbEntity.applicationVersion.application.name}.${dbEntity.name}'.`);\n        }\n        let entityMapForName = ensureChildMap(ensureChildArray(this.entityMapByApplicationAndTableIndexes, dbEntity.applicationVersion.application.index), dbEntity.index);\n        let existingEntity = entityMapForName[idValue];\n        let currentEntity = this.mergeEntities(existingEntity, resultObject, dbEntity, selectClauseFragment, context);\n        entityMapForName[idValue] = currentEntity;\n        return currentEntity;\n    }\n    // Must merge the one-to-many relationships returned as part of the result tree\n    /**\n     * Merge entities with of the same class and with the same Id\n     *\n     * @param source\n     * @param target\n     * @param qEntity\n     * @param selectClauseFragment\n     * @param entityPropertyTypeMap\n     * @param entityRelationMap\n     * @returns {any}\n     */\n    mergeEntities(source, target, dbEntity, selectClauseFragment, context) {\n        if (!source || target === source) {\n            return target;\n        }\n        const id = this.applicationUtils.getIdKey(target, dbEntity);\n        for (let propertyName in selectClauseFragment) {\n            if (selectClauseFragment[propertyName] === undefined) {\n                continue;\n            }\n            const dbProperty = dbEntity.propertyMap[propertyName];\n            // Merge properties (conflicts detected at query parsing time):\n            if (!dbProperty.relation || !dbProperty.relation.length) {\n                // If source property doesn't exist\n                if (this.applicationUtils.isEmpty(source[propertyName])) {\n                    // set the source property to value of target\n                    source[propertyName] = target[propertyName];\n                }\n                // Else if target property doesn't exist, keep the source value\n                // Else, assume that properties must be the same\n            }\n            // Merge relations\n            else {\n                const childSelectClauseFragment = selectClauseFragment[propertyName];\n                // For stubs (conflicts detected at query parsing time)\n                if (childSelectClauseFragment == null) {\n                    // For Many-to-One stubs, assume they are are the same and don't detect\n                    // conflicts, just merge\n                    source[propertyName] = target[propertyName];\n                    // Don't process One-to-Many stubs yet (not all related MTOs may have been\n                    // collected).\n                }\n                // For actual objects\n                else {\n                    const dbRelation = dbProperty.relation[0];\n                    const childDbEntity = dbRelation.relationEntity;\n                    switch (dbRelation.relationType) {\n                        case EntityRelationType.MANY_TO_ONE:\n                            // Many-to-One (conflicts detected at query parsing time)\n                            // If source is missing this mapping and target has it\n                            if (source[propertyName] === undefined && target[propertyName] !== undefined) {\n                                // set the source property to value of target\n                                source[propertyName] = target[propertyName];\n                            }\n                            // Else if target property doesn't exist, keep the source value\n                            // Assume that the child objects have already been merged themselves and\n                            // don't process\n                            break;\n                        case EntityRelationType.ONE_TO_MANY:\n                            let sourceArray = source[propertyName];\n                            const targetArray = target[propertyName];\n                            // Because parseQueryResult is depth-first, all child objects have already\n                            // been processed\n                            // TODO: this will probably fail, since the merged in array should always\n                            // have only one entity in it because it is created for a single result set\n                            // row.\n                            if (this.config && this.config.strict) {\n                                if ((!sourceArray && targetArray)\n                                    || (!targetArray && sourceArray)\n                                    || sourceArray.length != targetArray.length) {\n                                    throw new Error(`One-to-Many child arrays don't match for \r\n\t\t\t\t\t\t\t\t\t'${dbEntity.name}.${dbProperty.name}', Id: ${id}`);\n                                }\n                            }\n                            const sourceSet = {};\n                            if (sourceArray) {\n                                sourceArray.forEach((sourceChild) => {\n                                    const sourceChildIdValue = this.applicationUtils.getIdKey(sourceChild, childDbEntity);\n                                    sourceSet[sourceChildIdValue] = sourceChild;\n                                });\n                            }\n                            else {\n                                sourceArray = [];\n                                source[propertyName] = sourceArray;\n                            }\n                            if (targetArray) {\n                                targetArray.forEach((targetChild) => {\n                                    const targetChildIdValue = this.applicationUtils.getIdKey(targetChild, childDbEntity);\n                                    if (this.config && this.config.strict && !sourceSet[targetChildIdValue]) {\n                                        throw new Error(`One-to-Many child arrays don't match for \r\n\t\t\t\t\t\t\t\t\t\t'${dbEntity.name}.${dbProperty.name}', Id: ${id}`);\n                                    }\n                                    // If target child array has a value that source doesn't\n                                    if (!sourceSet[targetChildIdValue]) {\n                                        // add it to source (preserve order)\n                                        sourceArray.push(targetChild);\n                                    }\n                                });\n                            }\n                            // So instead just do\n                            // for(let targetObject in targetArray) {\n                            //\t\tsourceArray.push(targetArray)\n                            //}\n                            break;\n                        default:\n                            throw new Error(`Unknown relation type '${dbRelation.relationType}' for \r\n\t\t\t\t\t\t\t'${dbEntity.name}.${dbProperty.name}'`);\n                    }\n                }\n            }\n        }\n        return source;\n    }\n    flushRelationStubBuffers(entityIdValue, currentEntity, dbEntity, context) {\n        let otmStubBuffer = this.otmStubBuffer;\n        this.otmStubBuffer = [];\n        otmStubBuffer.forEach((otmStub) => {\n            otmStub.otmObject = currentEntity;\n            this.otmMapper.addOtmReference(otmStub, entityIdValue);\n        });\n        let mtoStubBuffer = this.mtoStubBuffer;\n        this.mtoStubBuffer = [];\n        mtoStubBuffer.forEach((mtoStub) => {\n            mtoStub.mtoParentObject = currentEntity;\n            this.otmMapper.addMtoReference(mtoStub, entityIdValue, dbEntity, context);\n            this.mtoMapper.addMtoReference(mtoStub, entityIdValue);\n        });\n    }\n}\n//# sourceMappingURL=EntityGraphResultParser.js.map","import { SQLDataType } from '@airport/ground-control';\nimport { AbstractObjectResultParser } from './entity/IEntityResultParser';\n/**\n * Created by Papa on 10/16/2016.\n */\n/**\n * The goal of this Parser is to determine which objects in the current row are the same\n * as they were in the previous row.  If the objects are the same this parser will merge\n * them.\n */\nexport class TreeResultParser extends AbstractObjectResultParser {\n    constructor() {\n        super(...arguments);\n        this.currentRowObjectMap = {};\n        this.objectEqualityMap = {};\n        this.lastRowObjectMap = {};\n        this.currentObjectOneToManys = {};\n    }\n    addProperty(entityAlias, resultObject, dataType, propertyName, propertyValue) {\n        resultObject[propertyName] = propertyValue;\n        if (this.isDifferentOrDoesntExist(entityAlias, resultObject, propertyName)) {\n            return this.utils.objectExists(propertyValue);\n        }\n        // Both last and current objects must exist here\n        let lastObject = this.lastRowObjectMap[entityAlias];\n        // Both of the properties are truthy\n        switch (dataType) {\n            case SQLDataType.DATE:\n                this.objectEqualityMap[entityAlias] = (lastObject[propertyName].getTime() === resultObject[propertyName].getTime());\n                break;\n            default:\n                this.objectEqualityMap[entityAlias] = (lastObject[propertyName] === resultObject[propertyName]);\n                break;\n        }\n        return true;\n    }\n    flushRow() {\n        this.lastRowObjectMap = this.currentRowObjectMap;\n        this.currentRowObjectMap = {};\n    }\n    isDifferentOrDoesntExist(entityAlias, resultObject, propertyName) {\n        // If we already know that this is a new facade, no need to keep on checking\n        if (!this.objectEqualityMap[entityAlias]) {\n            return true;\n        }\n        let lastObject = this.lastRowObjectMap[entityAlias];\n        // If there was no last facade\n        if (!lastObject) {\n            this.objectEqualityMap[entityAlias] = false;\n            return true;\n        }\n        if (!resultObject) {\n            return true;\n        }\n        // Types are guaranteed to be the same, so:\n        // If the last property is not there or is falsy\n        if (!lastObject[propertyName]) {\n            this.objectEqualityMap[entityAlias] = !resultObject[propertyName];\n            return true;\n        } // If the current property is not there or is falsy\n        else if (!resultObject[propertyName]) {\n            this.objectEqualityMap[entityAlias] = !lastObject[propertyName];\n            return true;\n        }\n        return false;\n    }\n    addOneToManyCollection(entityAlias, resultObject, propertyName) {\n        let currentOtmCollection = resultObject[propertyName];\n        this.currentObjectOneToManys[propertyName] = currentOtmCollection;\n        if (this.isDifferentOrDoesntExist(entityAlias, resultObject, propertyName)) {\n            return;\n        }\n        let lastObject = this.lastRowObjectMap[entityAlias];\n        let lastOtmCollection = lastObject[propertyName];\n        // Now both arrays are guaranteed to exist\n        // TODO: verify assumption below:\n        // For @OneToMany collections, if existence of last child facade changes it must be a\n        // new facade\n        if (!lastOtmCollection.length) {\n            if (currentOtmCollection.length) {\n                this.objectEqualityMap[entityAlias] = false;\n            }\n        }\n        else if (!currentOtmCollection.length) {\n            if (lastOtmCollection.length) {\n                this.objectEqualityMap[entityAlias] = false;\n            }\n        }\n        // Otherwise if it still exists\n    }\n    mergeEntity(entityAlias, resultObject) {\n        let isSameObjectAsLastRow = this.objectEqualityMap[entityAlias];\n        this.objectEqualityMap[entityAlias] = true;\n        let oneToManys = this.currentObjectOneToManys;\n        this.currentObjectOneToManys = {};\n        // If it's a new facade\n        if (!isSameObjectAsLastRow) {\n            return resultObject;\n        }\n        // All equality checks have passed - this is the same exact facade as last time\n        resultObject = this.lastRowObjectMap[entityAlias];\n        this.currentRowObjectMap[entityAlias] = resultObject;\n        // All @ManyToOnes have been merged automatically (because they are entities\n        // themselves)\n        // For @OneToManys:\n        // If the current one it the same as the last one of the ones in the last entity then\n        // it's the same otherwise its new and should be added to the collection\n        for (let oneToManyProperty in oneToManys) {\n            let currentOneToMany = oneToManys[oneToManyProperty];\n            if (currentOneToMany && currentOneToMany.length) {\n                // There will always be only one current record, since this is done per result\n                // set row\n                let currentMto = currentOneToMany[0];\n                let existingOneToMany = resultObject[oneToManyProperty];\n                if (!existingOneToMany || !existingOneToMany.length) {\n                    resultObject[oneToManyProperty] = currentOneToMany;\n                }\n                // Otherwise if the last facade doesn't match then its a new one\n                else if (existingOneToMany[existingOneToMany.length - 1] !== currentMto) {\n                    existingOneToMany.push(currentMto);\n                }\n            }\n        }\n        return resultObject;\n    }\n}\n//# sourceMappingURL=TreeResultParser.js.map","import { TreeResultParser } from '../TreeResultParser';\n/**\n * Created by Papa on 10/16/2016.\n */\n/**\n * The goal of this Parser is to determine which objects in the current row are the same\n * as they were in the previous row.  If the objects are the same this parser will merge\n * them.\n */\nexport class EntityTreeResultParser extends TreeResultParser {\n    constructor() {\n        super(...arguments);\n        this.currentRowObjectMap = {};\n        this.objectEqualityMap = {};\n        this.lastRowObjectMap = {};\n        this.currentObjectOneToManys = {};\n    }\n    addEntity(entityAlias, dbEntity, context) {\n        let resultObject = this.applicationUtils.getNewEntity(dbEntity);\n        this.currentRowObjectMap[entityAlias] = resultObject;\n        if (this.objectEqualityMap[entityAlias] !== undefined) {\n            this.objectEqualityMap[entityAlias] = true;\n        }\n        return resultObject;\n    }\n    bufferManyToOneStub(entityAlias, dbEntity, resultObject, propertyName, relationDbEntity, relationInfos, context) {\n        this.addManyToOneStub(resultObject, propertyName, relationInfos, context);\n        this.addManyToOneReference(entityAlias, resultObject, propertyName);\n    }\n    bufferBlankManyToOneStub(entityAlias, resultObject, propertyName) {\n        resultObject[propertyName] = null;\n        this.addManyToOneReference(entityAlias, resultObject, propertyName);\n    }\n    bufferManyToOneObject(entityAlias, dbEntity, resultObject, propertyName, relationDbEntity, childResultObject, context) {\n        resultObject[propertyName] = childResultObject;\n        if (this.isDifferentOrDoesntExist(entityAlias, resultObject, propertyName)) {\n            return;\n        }\n        // Both last and current objects must exist here\n        let lastObject = this.lastRowObjectMap[entityAlias];\n        // @ManyToOne objects will have been merged by now, just check if its the same facade\n        this.objectEqualityMap[entityAlias] = lastObject[propertyName] === resultObject[propertyName];\n    }\n    bufferBlankManyToOneObject(entityAlias, resultObject, propertyName) {\n        resultObject[propertyName] = null;\n        this.addManyToOneReference(entityAlias, null, propertyName);\n    }\n    bufferOneToManyStub(otmDbEntity, otmPropertyName) {\n        throw new Error(`@OneToMany stubs not allowed in QueryResultType.HIERARCHICAL`);\n    }\n    bufferOneToManyCollection(entityAlias, resultObject, otmDbEntity, propertyName, relationDbEntity, childResultObject, context) {\n        resultObject[propertyName] = [childResultObject];\n        this.addOneToManyCollection(entityAlias, resultObject, propertyName);\n    }\n    bufferBlankOneToMany(entityAlias, resultObject, otmEntityName, propertyName, relationDbEntity, context) {\n        resultObject[propertyName] = [];\n        this.addOneToManyCollection(entityAlias, resultObject, propertyName);\n    }\n    flushEntity(entityAlias, dbEntity, selectClauseFragment, entityId, resultObject, context) {\n        return this.mergeEntity(entityAlias, resultObject);\n    }\n    bridge(parsedResults, selectClauseFragment, context) {\n        // Nothing to be done, hierarchical queries are not bridged\n        return parsedResults;\n    }\n    addManyToOneReference(entityAlias, resultObject, propertyName) {\n        if (this.isDifferentOrDoesntExist(entityAlias, resultObject, propertyName)) {\n            return;\n        }\n        // Both last and current objects must exist here\n        let lastMtoStub = this.lastRowObjectMap[entityAlias][propertyName];\n        let currentMtoStub = resultObject[propertyName];\n        this.objectEqualityMap[entityAlias] = this.utils.valuesEqual(lastMtoStub, currentMtoStub, true);\n    }\n}\n//# sourceMappingURL=EntityTreeResultParser.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { QueryResultType } from '@airport/ground-control';\nimport { EntityGraphResultParser } from './EntityGraphResultParser';\nimport { EntityTreeResultParser } from './EntityTreeResultParser';\nlet ObjectResultParserFactory = class ObjectResultParserFactory {\n    getObjectResultParser(queryResultType, config, rootDbEntity) {\n        switch (queryResultType) {\n            case QueryResultType.ENTITY_GRAPH:\n                return new EntityGraphResultParser(config, rootDbEntity, this.applicationUtils, this.entityStateManager, this.utils);\n            case QueryResultType.ENTITY_TREE:\n                return new EntityTreeResultParser(this.applicationUtils, this.entityStateManager, this.utils);\n            default:\n                throw new Error(`ObjectQueryParser not supported for QueryResultType: ${queryResultType}`);\n        }\n    }\n};\n__decorate([\n    Inject()\n], ObjectResultParserFactory.prototype, \"applicationUtils\", void 0);\n__decorate([\n    Inject()\n], ObjectResultParserFactory.prototype, \"entityStateManager\", void 0);\n__decorate([\n    Inject()\n], ObjectResultParserFactory.prototype, \"utils\", void 0);\nObjectResultParserFactory = __decorate([\n    Injected()\n], ObjectResultParserFactory);\nexport { ObjectResultParserFactory };\n//# sourceMappingURL=ObjectResultParserFactory.js.map","import { TreeResultParser } from './TreeResultParser';\n/**\n * Created by Papa on 11/8/2016.\n */\nexport class TreeQueryResultParser extends TreeResultParser {\n    addEntity(entityAlias) {\n        let resultObject = {};\n        this.currentRowObjectMap[entityAlias] = resultObject;\n        return resultObject;\n    }\n    bufferOneToManyCollection(entityAlias, resultObject, propertyName, childResultObject) {\n        resultObject[propertyName] = [childResultObject];\n        this.addOneToManyCollection(entityAlias, resultObject, propertyName);\n    }\n    flushEntity(entityAlias, resultObject) {\n        return this.mergeEntity(entityAlias, resultObject);\n    }\n}\n//# sourceMappingURL=TreeQueryResultParser.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { JSONClauseObjectType, OperationCategory, ApplicationMap, SqlOperator } from '@airport/ground-control';\n/**\n * Created by Papa on 10/2/2016.\n */\nexport var ClauseType;\n(function (ClauseType) {\n    ClauseType[\"MAPPED_SELECT_CLAUSE\"] = \"MAPPED_SELECT_CLAUSE\";\n    ClauseType[\"NON_MAPPED_SELECT_CLAUSE\"] = \"NON_MAPPED_SELECT_CLAUSE\";\n    ClauseType[\"WHERE_CLAUSE\"] = \"WHERE_CLAUSE\";\n    ClauseType[\"FUNCTION_CALL\"] = \"FUNCTION_CALL\";\n})(ClauseType || (ClauseType = {}));\nlet SQLWhereBase = class SQLWhereBase {\n    constructor(dbEntity, dialect, airportDatabase, applicationUtils, entityStateManager, qMetadataUtils, qValidator, sqlQueryAdapter, storeDriver, subStatementSqlGenerator, utils, context) {\n        this.dbEntity = dbEntity;\n        this.dialect = dialect;\n        this.airportDatabase = airportDatabase;\n        this.applicationUtils = applicationUtils;\n        this.entityStateManager = entityStateManager;\n        this.qMetadataUtils = qMetadataUtils;\n        this.qValidator = qValidator;\n        this.sqlQueryAdapter = sqlQueryAdapter;\n        this.storeDriver = storeDriver;\n        this.subStatementSqlGenerator = subStatementSqlGenerator;\n        this.utils = utils;\n        this.context = context;\n        this.parameterReferences = [];\n        this.fieldMap = new ApplicationMap();\n        this.qEntityMapByAlias = {};\n        this.jsonRelationMapByAlias = {};\n    }\n    getParameters(parameterMap, //,\n    context) {\n        // let populatedParameterMap: {[parameterAlias: string]: boolean} = {};\n        return this.parameterReferences\n            /*\n             .parameterReferences.filter(( parameterReference ) => {\n             if (!populatedParameterMap[parameterReference]) {\n             populatedParameterMap[parameterReference] = true;\n             return true;\n             }\n             return false;\n             })\n             */\n            .map((parameterReference) => {\n            let parameter = parameterMap[parameterReference];\n            if (!parameter) {\n                const isReference = parameterReference === null || ['number', 'string'].indexOf(typeof parameterReference) > -1;\n                if (isReference) {\n                    // if (!valuesArray) {\n                    return parameterReference;\n                    // } else if (typeof parameterReference === 'number') {\n                    // \treturn sqlAdaptor.getValue(valuesArray[parameterReference])\n                    // }\n                }\n                throw new Error(`No parameter found for alias '${parameterReference}'`);\n            }\n            return this.sqlQueryAdapter.getParameterValue(parameter);\n        });\n    }\n    getFunctionCallValue(rawValue, context) {\n        return this.getFieldValue(rawValue, ClauseType.FUNCTION_CALL, null, context);\n    }\n    getFieldFunctionValue(aField, defaultCallback, context) {\n        let aValue = aField.v;\n        if (this.isParameterReference(aValue)) {\n            let stringValue = aValue;\n            this.parameterReferences.push(stringValue);\n            aValue = this.sqlQueryAdapter.getParameterReference(this.parameterReferences, stringValue);\n        }\n        else {\n            aValue = this.getFieldValue(aValue, ClauseType.FUNCTION_CALL, defaultCallback, context);\n        }\n        aValue = this.sqlQueryAdapter.getFunctionAdaptor()\n            .getFunctionCalls(aField, aValue, this.qEntityMapByAlias, this, context);\n        this.qValidator.addFunctionAlias(aField.fa);\n        return aValue;\n    }\n    getFieldValue(clauseField, clauseType, defaultCallback, context) {\n        let columnName;\n        if (!clauseField) {\n            throw new Error(`Missing Clause Field definition`);\n        }\n        if (clauseField instanceof Array) {\n            return clauseField\n                .map((clauseFieldMember) => this.getFieldValue(clauseFieldMember, clauseType, defaultCallback, context))\n                .join(', ');\n        }\n        if (clauseType !== ClauseType.MAPPED_SELECT_CLAUSE && !clauseField.ot) {\n            throw new Error(`Object Type is not defined in JSONClauseField`);\n        }\n        const aField = clauseField;\n        let qEntity;\n        switch (clauseField.ot) {\n            case JSONClauseObjectType.FIELD_FUNCTION:\n                return this.getFieldFunctionValue(aField, defaultCallback, context);\n            case JSONClauseObjectType.DISTINCT_FUNCTION:\n                throw new Error(`Distinct function cannot be nested.`);\n            case JSONClauseObjectType.EXISTS_FUNCTION: {\n                if (clauseType !== ClauseType.WHERE_CLAUSE) {\n                    throw new Error(`Exists can only be used as a top function in a WHERE clause.`);\n                }\n                const { parameterReferences, subQuerySql } = this.subStatementSqlGenerator.getTreeQuerySql(aField.v, this.dialect, context);\n                if (parameterReferences.length) {\n                    this.parameterReferences = this.parameterReferences.concat(parameterReferences);\n                }\n                return `EXISTS(${subQuerySql})`;\n            }\n            case JSONClauseObjectType.FIELD: {\n                qEntity = this.qEntityMapByAlias[aField.ta];\n                this.qValidator.validateReadQEntityProperty(aField.si, aField.ti, aField.ci);\n                columnName = this.getEntityPropertyColumnName(qEntity, aField.ci, context);\n                this.addField(aField.si, aField.ti, aField.ci);\n                return this.getComplexColumnFragment(aField, columnName, context);\n            }\n            case JSONClauseObjectType.FIELD_QUERY: {\n                let jsonFieldSqlSubQuery = aField.fieldSubQuery;\n                if (aField.S) {\n                    jsonFieldSqlSubQuery = aField;\n                }\n                const { parameterReferences, subQuerySql } = this.subStatementSqlGenerator.getFieldQuerySql(jsonFieldSqlSubQuery, this.dialect, this.qEntityMapByAlias, context);\n                if (parameterReferences.length) {\n                    this.parameterReferences = this.parameterReferences.concat(parameterReferences);\n                }\n                this.qValidator.addSubQueryAlias(aField.fa);\n                return `(${subQuerySql})`;\n            }\n            case JSONClauseObjectType.MANY_TO_ONE_RELATION: {\n                qEntity = this.qEntityMapByAlias[aField.ta];\n                this.qValidator.validateReadQEntityManyToOneRelation(aField.si, aField.ti, aField.ci);\n                columnName = this.getEntityManyToOneColumnName(qEntity, aField.ci, context);\n                this.addField(aField.si, aField.ti, aField.ci);\n                return this.getComplexColumnFragment(aField, columnName, context);\n            }\n            // must be a nested object\n            default: {\n                if (clauseType !== ClauseType.MAPPED_SELECT_CLAUSE) {\n                    `Nested objects only allowed in the mapped SELECT clause.`;\n                }\n                return defaultCallback();\n            }\n        }\n    }\n    applyOperator(operator, rValue) {\n        switch (operator) {\n            case SqlOperator.EQUALS:\n                return ` = ${rValue}`;\n            case SqlOperator.GREATER_THAN:\n                return ` > ${rValue}`;\n            case SqlOperator.GREATER_THAN_OR_EQUALS:\n                return ` >= ${rValue}`;\n            case SqlOperator.IS_NOT_NULL:\n                return ` IS NOT NULL`;\n            case SqlOperator.IS_NULL:\n                return ` IS NULL`;\n            case SqlOperator.IN:\n                return ` IN (${rValue})`;\n            case SqlOperator.LESS_THAN:\n                return ` < ${rValue}`;\n            case SqlOperator.LESS_THAN_OR_EQUALS:\n                return ` <= ${rValue}`;\n            case SqlOperator.NOT_EQUALS:\n                return ` != ${rValue}`;\n            case SqlOperator.NOT_IN:\n                return ` NOT IN (${rValue})`;\n            case SqlOperator.LIKE:\n                return ` LIKE ${rValue}`;\n            default:\n                throw new Error(`Unsupported operator ${operator}`);\n        }\n    }\n    getWHEREFragment(operation, nestingPrefix, context) {\n        let whereFragment = '';\n        if (!operation) {\n            throw new Error(`An operation is missing in WHERE or HAVING clause`);\n        }\n        nestingPrefix = `${nestingPrefix}\\t`;\n        switch (operation.c) {\n            case OperationCategory.LOGICAL:\n                return this.getLogicalWhereFragment(operation, nestingPrefix, context);\n            case OperationCategory.BOOLEAN:\n            case OperationCategory.DATE:\n            case OperationCategory.NUMBER:\n            case OperationCategory.STRING:\n            case OperationCategory.UNTYPED:\n                let valueOperation = operation;\n                let lValueSql = this.getFieldValue(valueOperation.l, ClauseType.WHERE_CLAUSE, null, context);\n                let rValueSql = this.getFieldValue(valueOperation.r, ClauseType.WHERE_CLAUSE, null, context);\n                let rValueWithOperator = this.applyOperator(valueOperation.o, rValueSql);\n                whereFragment += `${lValueSql}${rValueWithOperator}`;\n                break;\n            case OperationCategory.FUNCTION:\n                let functionOperation = operation;\n                whereFragment = this.getFieldValue(functionOperation.ob, ClauseType.WHERE_CLAUSE, null, context);\n                // exists function and maybe others\n                break;\n        }\n        return whereFragment;\n    }\n    getEntityPropertyColumnName(qEntity, columnIndex, context) {\n        const dbEntity = this.qMetadataUtils.getDbEntity(qEntity);\n        return dbEntity.columns[columnIndex].name;\n    }\n    addFieldFromColumn(dbColumn) {\n        const dbEntity = dbColumn.propertyColumns[0].property.entity;\n        this.addField(dbEntity.applicationVersion._localId, dbEntity.index, dbColumn.index);\n    }\n    addField(applicationIndex, tableIndex, columnIndex) {\n        this.fieldMap.ensure(applicationIndex, tableIndex)\n            .ensure(columnIndex);\n    }\n    warn(warning) {\n        console.log(warning);\n    }\n    getSimpleColumnFragment(tableAlias, columnName) {\n        return `${tableAlias}.${columnName}`;\n    }\n    getComplexColumnFragment(value, columnName, context) {\n        let selectSqlFragment = `${value.ta}.${columnName}`;\n        selectSqlFragment = this.sqlQueryAdapter.getFunctionAdaptor()\n            .getFunctionCalls(value, selectSqlFragment, this.qEntityMapByAlias, this, context);\n        return selectSqlFragment;\n    }\n    getEntityManyToOneColumnName(qEntity, columnIndex, context) {\n        return this.getEntityPropertyColumnName(qEntity, columnIndex, context);\n    }\n    getLogicalWhereFragment(operation, nestingPrefix, context) {\n        let operator;\n        switch (operation.o) {\n            case SqlOperator.AND:\n                operator = 'AND';\n                break;\n            case SqlOperator.OR:\n                operator = 'OR';\n                break;\n            case SqlOperator.NOT:\n                const whereFragment = this.getWHEREFragment(operation.v, nestingPrefix, context);\n                return ` NOT (${whereFragment})`;\n            default:\n                throw new Error(`Unknown logical operator: ${operation.o}`);\n        }\n        let childOperations = operation.v;\n        if (!(childOperations instanceof Array)) {\n            throw new Error(`Expecting an array of child operations as a value for operator ${operator}, \r\n\t\t\t\tin the WHERE Clause.`);\n        }\n        let whereFragment = childOperations.map((childOperation) => {\n            return this.getWHEREFragment(childOperation, nestingPrefix, context);\n        })\n            .join(`\\n${nestingPrefix}${operator} `);\n        return `( ${whereFragment} )`;\n    }\n    isParameterReference(value) {\n        if (value === null) {\n            return false;\n        }\n        if (value === undefined || value === '' || value === NaN) {\n            throw new Error(`Invalid query value: ${value}`);\n        }\n        switch (typeof value) {\n            case 'boolean':\n            case 'number':\n                throw new Error(`Unexpected primitive instance, expecting parameter alias.`);\n            case 'string':\n                return true;\n        }\n        if (value instanceof Date) {\n            throw new Error(`Unexpected date instance, expecting parameter alias.`);\n        }\n        return false;\n    }\n};\nSQLWhereBase = __decorate([\n    Injected()\n], SQLWhereBase);\nexport { SQLWhereBase };\n//# sourceMappingURL=SQLWhereBase.js.map","import { QEntity } from '@airport/tarmaq-query';\nimport { SQLWhereBase } from './SQLWhereBase';\n/**\n * Created by Papa on 10/2/2016.\n */\nexport class SQLNoJoinQuery extends SQLWhereBase {\n    constructor(dbEntity, dialect, airportDatabase, applicationUtils, entityStateManager, qMetadataUtils, qValidator, relationManager, sqlQueryAdapter, storeDriver, subStatementSqlGenerator, utils, context) {\n        super(dbEntity, dialect, airportDatabase, applicationUtils, entityStateManager, qMetadataUtils, qValidator, sqlQueryAdapter, storeDriver, subStatementSqlGenerator, utils, context);\n        this.relationManager = relationManager;\n    }\n    getTableFragment(fromRelation, context, addAs = true) {\n        if (!fromRelation) {\n            throw new Error(`Expecting exactly one table in UPDATE/DELETE clause`);\n        }\n        if (fromRelation.ri || fromRelation.jt) {\n            throw new Error(`Table in UPDATE/DELETE clause cannot be joined`);\n        }\n        const firstDbEntity = this.airportDatabase.applications[fromRelation.si]\n            .currentVersion[0].applicationVersion.entities[fromRelation.ti];\n        let tableName = this.storeDriver.getEntityTableName(firstDbEntity, context);\n        if (fromRelation.si !== this.dbEntity.applicationVersion.application.index\n            || fromRelation.ti !== this.dbEntity.index) {\n            throw new Error(`Unexpected table in UPDATE/DELETE clause: \r\n\t\t\t'${tableName}',\r\n\t\t\texpecting: '${this.dbEntity.applicationVersion.application.name}.${this.dbEntity.name}'`);\n        }\n        const firstQEntity = new QEntity(firstDbEntity, this.applicationUtils, this.relationManager);\n        const tableAlias = this.relationManager.getAlias(fromRelation);\n        this.qEntityMapByAlias[tableAlias] = firstQEntity;\n        let fromFragment = `\\t${tableName}`;\n        if (addAs) {\n            fromFragment += ` AS ${tableAlias}`;\n        }\n        return fromFragment;\n    }\n}\n//# sourceMappingURL=SQLNoJoinQuery.js.map","import { SQLNoJoinQuery } from './SQLNoJoinQuery';\n/**\n * Created by Papa on 10/2/2016.\n */\nexport class SQLDelete extends SQLNoJoinQuery {\n    constructor(jsonDelete, dialect, airportDatabase, applicationUtils, entityStateManager, qMetadataUtils, qValidator, relationManager, sqlQueryAdapter, storeDriver, subStatementSqlGenerator, utils, context) {\n        super(airportDatabase.applications[jsonDelete.DF.si].currentVersion[0]\n            .applicationVersion.entities[jsonDelete.DF.ti], dialect, airportDatabase, applicationUtils, entityStateManager, qMetadataUtils, qValidator, relationManager, sqlQueryAdapter, storeDriver, subStatementSqlGenerator, utils, context);\n        this.jsonDelete = jsonDelete;\n    }\n    toSQL(context) {\n        let fromFragment = this.getTableFragment(this.jsonDelete.DF, context);\n        let whereFragment = '';\n        let jsonQuery = this.jsonDelete;\n        if (jsonQuery.W) {\n            whereFragment = this.getWHEREFragment(jsonQuery.W, '', context);\n            whereFragment = `\r\nWHERE\r\n${whereFragment}`;\n            // TODO: following might be needed for some RDBMS, does not work for SqLite\n            // Replace the root entity alias reference with the table name\n            // let tableAlias = this.relationManager.getAlias(this.jsonDelete.DF)\n            // let tableName = this.storeDriver.getEntityTableName(this.qEntityMapByAlias[tableAlias].__driver__.dbEntity, context)\n            // whereFragment = whereFragment.replace(new RegExp(`${tableAlias}`, 'g'), tableName)\n        }\n        return `DELETE\r\nFROM\r\n${fromFragment}${whereFragment}`;\n    }\n}\n//# sourceMappingURL=SQLDelete.js.map","import { SQLNoJoinQuery } from './SQLNoJoinQuery';\nimport { ClauseType } from './SQLWhereBase';\n/**\n * Created by Papa on 11/17/2016.\n */\nexport class SQLInsertValues extends SQLNoJoinQuery {\n    constructor(jsonInsertValues, dialect, airportDatabase, applicationUtils, entityStateManager, qMetadataUtils, qValidator, relationManager, sqlQueryAdapter, storeDriver, subStatementSqlGenerator, utils, context\n    // repository?: IRepository\n    ) {\n        super(airportDatabase.applications[jsonInsertValues.II.si].currentVersion[0]\n            .applicationVersion.entities[jsonInsertValues.II.ti], dialect, airportDatabase, applicationUtils, entityStateManager, qMetadataUtils, qValidator, relationManager, sqlQueryAdapter, storeDriver, subStatementSqlGenerator, utils, context);\n        this.jsonInsertValues = jsonInsertValues;\n    }\n    toSQL(context) {\n        if (!this.jsonInsertValues.II) {\n            throw new Error(`Expecting exactly one table in INSERT INTO clause`);\n        }\n        this.qValidator.validateInsertQEntity(this.dbEntity);\n        let tableFragment = this.getTableFragment(this.jsonInsertValues.II, context, false);\n        let columnsFragment = this.getColumnsFragment(this.dbEntity, this.jsonInsertValues.C);\n        let valuesFragment = this.getValuesFragment(this.jsonInsertValues.V, context);\n        return `INSERT INTO\r\n${tableFragment} ${columnsFragment}\r\nVALUES\r\n${valuesFragment}\r\n`;\n    }\n    getColumnsFragment(dbEntity, columns) {\n        if (!columns.length) {\n            return '';\n        }\n        const columnNames = columns.map(columnIndex => dbEntity.columns[columnIndex].name);\n        return `( ${columnNames.join(', \\n')} )`;\n    }\n    getValuesFragment(valuesClauseFragment, context) {\n        let allValuesFragment = valuesClauseFragment.map((valuesArray) => {\n            let valuesFragment = valuesArray.map((value) => {\n                if (value === null || ['number', 'string'].indexOf(typeof value) > -1) {\n                    this.parameterReferences.push(value);\n                    return this.sqlQueryAdapter.getParameterReference(this.parameterReferences, value);\n                }\n                else if (value === undefined) {\n                    throw new Error(`An 'undefined' value was provided when inserting into: ${this.dbEntity.applicationVersion.application.name}.${this.dbEntity.name}`);\n                }\n                else {\n                    const fieldValue = this.getFieldValue(value, ClauseType.WHERE_CLAUSE, null, context);\n                    return `\\n${fieldValue}\\n`;\n                }\n            });\n            return `(${valuesFragment.join(',')})`;\n        });\n        return allValuesFragment.join(',\\n');\n    }\n}\n//# sourceMappingURL=SQLInsertValues.js.map","import { EntityRelationType, SqlOperator } from '@airport/ground-control';\nimport { SQLWhereBase } from './SQLWhereBase';\n/**\n * Created by Papa on 8/20/2016.\n */\nexport var SQLDialect;\n(function (SQLDialect) {\n    SQLDialect[\"MYSQL\"] = \"MYSQL\";\n    SQLDialect[\"POSTGRESQL\"] = \"POSTGRESQL\";\n    SQLDialect[\"SQLITE\"] = \"SQLITE\";\n})(SQLDialect || (SQLDialect = {}));\nexport class EntityDefaults {\n    constructor() {\n        this.map = {};\n    }\n    getForAlias(alias) {\n        let defaultsForAlias = this.map[alias];\n        if (!defaultsForAlias) {\n            defaultsForAlias = {};\n            this.map[alias] = defaultsForAlias;\n        }\n        return defaultsForAlias;\n    }\n}\n/**\n * String based SQL query.\n */\nexport class SQLQuery extends SQLWhereBase {\n    constructor(jsonQuery, dbEntity, dialect, queryResultType, airportDatabase, applicationUtils, entityStateManager, qMetadataUtils, qValidator, relationManager, sqlQueryAdapter, storeDriver, subStatementSqlGenerator, utils, context) {\n        super(dbEntity, dialect, airportDatabase, applicationUtils, entityStateManager, qMetadataUtils, qValidator, sqlQueryAdapter, storeDriver, subStatementSqlGenerator, utils, context);\n        this.jsonQuery = jsonQuery;\n        this.queryResultType = queryResultType;\n        this.relationManager = relationManager;\n        this.entityDefaults = new EntityDefaults();\n    }\n    getFieldMap() {\n        return this.fieldMap;\n    }\n    getEntityApplicationRelationFromJoin(leftQEntity, rightQEntity, entityRelation, parentRelation, currentAlias, parentAlias, joinTypeString, errorPrefix, context) {\n        const allJoinOnColumns = [];\n        const leftDbEntity = leftQEntity.__driver__.dbEntity;\n        const rightDbEntity = rightQEntity.__driver__.dbEntity;\n        const dbRelation = leftDbEntity.relations[entityRelation.ri];\n        let relationColumns;\n        switch (dbRelation.relationType) {\n            case EntityRelationType.MANY_TO_ONE:\n                relationColumns = dbRelation.manyRelationColumns;\n                break;\n            case EntityRelationType.ONE_TO_MANY:\n                if (dbRelation.oneRelationColumns && dbRelation.oneRelationColumns.length) {\n                    relationColumns = dbRelation.oneRelationColumns;\n                }\n                else {\n                    const matchingRelations = dbRelation.relationEntity.relations.filter(manySideRelation => manySideRelation.relationEntity._localId == leftDbEntity._localId\n                        && manySideRelation.manyToOneElems\n                        && manySideRelation.manyToOneElems !== true\n                        && manySideRelation.manyToOneElems.mappedBy === dbRelation.property.name);\n                    if (matchingRelations.length) {\n                        relationColumns = matchingRelations[0].manyRelationColumns;\n                    }\n                }\n                break;\n            default:\n                throw new Error(`Unknown relation type ${dbRelation.relationType} \r\non '${leftDbEntity.applicationVersion.application.name}.${leftDbEntity.name}.${dbRelation.property.name}'.`);\n        }\n        for (const relationColumn of relationColumns) {\n            let ownColumnName;\n            let referencedColumnName;\n            switch (dbRelation.relationType) {\n                case EntityRelationType.MANY_TO_ONE:\n                    ownColumnName = relationColumn.manyColumn.name;\n                    referencedColumnName = relationColumn.oneColumn.name;\n                    break;\n                case EntityRelationType.ONE_TO_MANY:\n                    ownColumnName = relationColumn.oneColumn.name;\n                    referencedColumnName = relationColumn.manyColumn.name;\n                    break;\n                default:\n                    throw new Error(`Unknown relation type ${dbRelation.relationType} \r\non '${leftDbEntity.applicationVersion.application.name}.${leftDbEntity.name}.${dbRelation.property.name}'.`);\n            }\n            allJoinOnColumns.push({\n                leftColumn: ownColumnName,\n                rightColumn: referencedColumnName\n            });\n        }\n        let onClause = allJoinOnColumns.map(joinOnColumn => ` ${parentAlias}.${joinOnColumn.leftColumn} = ${currentAlias}.${joinOnColumn.rightColumn}`)\n            .join('\\n\\t\\t\\tAND');\n        if (entityRelation.joinWhereClause) {\n            const whereClause = this.getWHEREFragment(entityRelation.joinWhereClause, '\\t\\t', context);\n            const joinWhereOperator = entityRelation.joinWhereClauseOperator === SqlOperator.AND ? 'AND' : 'OR';\n            onClause = `${onClause}\r\n\t\t\t${joinWhereOperator} ${whereClause}`;\n        }\n        const tableName = this.storeDriver.getEntityTableName(rightDbEntity, context);\n        const fromFragment = `\\n\\t${joinTypeString} ${tableName} ${currentAlias}\\n\\t\\tON ${onClause}`;\n        return fromFragment;\n    }\n}\n//# sourceMappingURL=SQLQuery.js.map","import { JSONClauseObjectType } from '@airport/ground-control';\nimport { SQLNoJoinQuery } from './SQLNoJoinQuery';\nimport { ClauseType } from './SQLWhereBase';\n/**\n * Created by Papa on 10/2/2016.\n */\nexport class SQLUpdate extends SQLNoJoinQuery {\n    constructor(jsonUpdate, dialect, airportDatabase, applicationUtils, entityStateManager, qMetadataUtils, qValidator, relationManager, sqlQueryAdapter, storeDriver, subStatementSqlGenerator, utils, context) {\n        super(airportDatabase.applications[jsonUpdate.U.si].currentVersion[0]\n            .applicationVersion.entities[jsonUpdate.U.ti], dialect, airportDatabase, applicationUtils, entityStateManager, qMetadataUtils, qValidator, relationManager, sqlQueryAdapter, storeDriver, subStatementSqlGenerator, utils, context);\n        this.jsonUpdate = jsonUpdate;\n    }\n    toSQL(internalFragments, context) {\n        if (!this.jsonUpdate.U) {\n            throw new Error(`Expecting exactly one table in UPDATE clause`);\n        }\n        let updateFragment = this.getTableFragment(this.jsonUpdate.U, context);\n        let setFragment = this.getSetFragment(this.jsonUpdate.S, context);\n        if (internalFragments.SET && internalFragments.SET.length) {\n            setFragment += ',' + internalFragments.SET.map(internalSetFragment => `\r\n\t${internalSetFragment.column.name} = ${internalSetFragment.value}`)\n                .join(',');\n        }\n        let whereFragment = '';\n        let jsonQuery = this.jsonUpdate;\n        if (jsonQuery.W) {\n            whereFragment = this.getWHEREFragment(jsonQuery.W, '', context);\n            whereFragment = `WHERE\r\n${whereFragment}`;\n            // TODO: following might be needed for some RDBMS, does not work for SqLite\n            // Replace the root entity alias reference with the table name\n            // let tableAlias = this.relationManager.getAlias(this.jsonUpdate.U)\n            // let tableName  = this.storeDriver.getEntityTableName(this.qEntityMapByAlias[tableAlias].__driver__.dbEntity, context)\n            // whereFragment  = whereFragment.replace(new RegExp(`${tableAlias}`, 'g'), tableName)\n        }\n        return `UPDATE\r\n${updateFragment}\r\nSET\r\n${setFragment}\r\n${whereFragment}`;\n    }\n    getSetFragment(setClauseFragment, context) {\n        let setFragments = [];\n        for (let columnName in setClauseFragment) {\n            let value = setClauseFragment[columnName];\n            // Skip undefined values\n            if (value === undefined) {\n                continue;\n            }\n            this.qValidator.validateUpdateColumn(this.dbEntity.columnMap[columnName]);\n            this.addSetFragment(columnName, value, setFragments, context);\n        }\n        return setFragments.join(', \\n');\n    }\n    addSetFragment(columnName, value, setFragments, context) {\n        let fieldValue;\n        if (typeof value === 'number') {\n            this.parameterReferences.push(value);\n            fieldValue = this.sqlQueryAdapter.getParameterReference(this.parameterReferences, value);\n        }\n        else {\n            fieldValue = this.getFieldValue(value, ClauseType.WHERE_CLAUSE, null, context);\n        }\n        setFragments.push(`\\t${columnName} = ${fieldValue}`);\n    }\n    isManyToOneRelation(value) {\n        return typeof value === 'object'\n            && value.ot === JSONClauseObjectType.MANY_TO_ONE_RELATION;\n    }\n    addManyToOneMappings(parentMapping) {\n        let mappings = [];\n        const value = parentMapping.value;\n        if (typeof value === 'object' &&\n            (!value.ot\n                || value.ot === JSONClauseObjectType.MANY_TO_ONE_RELATION)) {\n            for (const key in value) {\n                if (key === 'ot'\n                    && value[key] === JSONClauseObjectType.MANY_TO_ONE_RELATION) {\n                    continue;\n                }\n                const mapping = {\n                    tableIndex: parentMapping.tableIndex,\n                    propertyChain: parentMapping.propertyChain.concat([key]),\n                    value: value[key]\n                };\n                const childMappings = this.addManyToOneMappings(mapping);\n                mappings = mappings.concat(childMappings);\n            }\n        }\n        else {\n            mappings.push(parentMapping);\n        }\n        return mappings;\n    }\n}\n//# sourceMappingURL=SQLUpdate.js.map","export class SqlFunctionField {\n    constructor(jsonClauseField) {\n        this.jsonClauseField = jsonClauseField;\n        // Test\n    }\n    getValue(sqlValueProvider, context) {\n        return sqlValueProvider.getFieldFunctionValue(this.jsonClauseField, null, context);\n    }\n}\n//# sourceMappingURL=SqlFunctionField.js.map","import { JoinTreeNode, QBooleanField, QDateField, QNumberField, QStringField, QTree, } from '@airport/tarmaq-query';\nimport { JoinType, JSONClauseObjectType, JSONRelationType, SortOrder, SQLDataType } from '@airport/ground-control';\nimport { SQLQuery } from './core/SQLQuery';\nimport { SqlFunctionField } from './SqlFunctionField';\n/**\n * Created by Papa on 10/28/2016.\n */\nexport class NonEntitySQLQuery extends SQLQuery {\n    constructor(jsonQuery, dialect, queryResultType, airportDatabase, applicationUtils, entityStateManager, qMetadataUtils, qValidator, relationManager, sqlQueryAdapter, storeDriver, subStatementQueryGenerator, utils, context) {\n        super(jsonQuery, null, dialect, queryResultType, airportDatabase, applicationUtils, entityStateManager, qMetadataUtils, qValidator, relationManager, sqlQueryAdapter, storeDriver, subStatementQueryGenerator, utils, context);\n    }\n    addQEntityMapByAlias(sourceMap) {\n        for (let alias in sourceMap) {\n            this.qEntityMapByAlias[alias] = sourceMap[alias];\n        }\n    }\n    toSQL(internalFragments, context) {\n        let jsonQuery = this.jsonQuery;\n        let joinNodeMap = {};\n        this.joinTrees = this.buildFromJoinTree(jsonQuery.F, joinNodeMap, context);\n        let selectFragment = this.getSELECTFragment(false, jsonQuery.S, internalFragments, context);\n        let fromFragment = this.getFROMFragments(this.joinTrees, context);\n        let whereFragment = '';\n        if (jsonQuery.W) {\n            whereFragment = `\r\nWHERE\r\n\t${this.getWHEREFragment(jsonQuery.W, '', context)}`;\n        }\n        let groupByFragment = '';\n        if (jsonQuery.GB && jsonQuery.GB.length) {\n            groupByFragment = `\r\nGROUP BY\r\n\t${this.getGroupByFragment(jsonQuery.GB)}`;\n        }\n        let havingFragment = '';\n        if (jsonQuery.H) {\n            havingFragment = `\r\nHAVING\r\n\t${this.getWHEREFragment(jsonQuery.H, '', context)}`;\n        }\n        let orderByFragment = '';\n        if (jsonQuery.OB && jsonQuery.OB.length) {\n            orderByFragment = `\r\nORDER BY\r\n\t${this.orderByParser.getOrderByFragment(jsonQuery.S, jsonQuery.OB)}`;\n        }\n        let offsetFragment = '';\n        if (jsonQuery.O) {\n            offsetFragment = this.sqlQueryAdapter.getOffsetFragment(jsonQuery.O);\n        }\n        let limitFragment = '';\n        if (jsonQuery.L) {\n            offsetFragment = this.sqlQueryAdapter.getLimitFragment(jsonQuery.L);\n        }\n        return `SELECT\r\n\t${selectFragment}\r\nFROM\r\n${fromFragment}${whereFragment}${groupByFragment}${havingFragment}${orderByFragment}${offsetFragment}${limitFragment}\r\n${this.storeDriver.getSelectQuerySuffix(this.jsonQuery, context)}`;\n    }\n    buildFromJoinTree(joinRelations, joinNodeMap, context) {\n        let jsonTrees = [];\n        let jsonTree;\n        // For entity queries it is possible to have a query with no from clause, in this case\n        // make the query entity the root tree node\n        if (joinRelations.length < 1) {\n            throw new Error(`FROM clause must have entries for non-Entity queries`);\n        }\n        let firstRelation = joinRelations[0];\n        switch (firstRelation.rt) {\n            case JSONRelationType.SUB_QUERY_ROOT:\n            case JSONRelationType.ENTITY_ROOT:\n                break;\n            default:\n                throw new Error(`First table in FROM clause cannot be joined`);\n        }\n        let alias = this.relationManager.getAlias(firstRelation);\n        this.qValidator.validateReadFromEntity(firstRelation);\n        let firstEntity = this.relationManager.createRelatedQEntity(firstRelation, context);\n        this.qEntityMapByAlias[alias] = firstEntity;\n        jsonTree = new JoinTreeNode(firstRelation, [], null);\n        jsonTrees.push(jsonTree);\n        joinNodeMap[alias] = jsonTree;\n        for (let i = 1; i < joinRelations.length; i++) {\n            let rightEntity;\n            let joinRelation = joinRelations[i];\n            if (!joinRelation.jt) {\n                throw new Error(`Table ${i + 1} in FROM clause is missing joinType`);\n            }\n            this.qValidator.validateReadFromEntity(joinRelation);\n            alias = this.relationManager.getAlias(joinRelation);\n            switch (joinRelation.rt) {\n                case JSONRelationType.SUB_QUERY_ROOT:\n                    let view = this.addFieldsToView(joinRelation, alias, context);\n                    this.qEntityMapByAlias[alias] = view;\n                    continue;\n                case JSONRelationType.ENTITY_ROOT:\n                    // Non-Joined table\n                    let nonJoinedEntity = this.relationManager.createRelatedQEntity(joinRelation, context);\n                    this.qEntityMapByAlias[alias] = nonJoinedEntity;\n                    let anotherTree = new JoinTreeNode(joinRelation, [], null);\n                    if (joinNodeMap[alias]) {\n                        throw new Error(`Alias '${alias}' used more than once in the FROM clause.`);\n                    }\n                    jsonTrees.push(anotherTree);\n                    joinNodeMap[alias] = anotherTree;\n                    continue;\n                case JSONRelationType.ENTITY_APPLICATION_RELATION:\n                    if (!joinRelation.ri) {\n                        throw new Error(`Table ${i + 1} in FROM clause is missing relationPropertyName`);\n                    }\n                    rightEntity = this.relationManager.createRelatedQEntity(joinRelation, context);\n                    break;\n                case JSONRelationType.SUB_QUERY_JOIN_ON:\n                    if (!joinRelation.joinWhereClause) {\n                        this.warn(`View ${i + 1} in FROM clause is missing joinWhereClause`);\n                    }\n                    rightEntity = this.addFieldsToView(joinRelation, alias, context);\n                    break;\n                case JSONRelationType.ENTITY_JOIN_ON:\n                    if (!joinRelation.joinWhereClause) {\n                        this.warn(`Table ${i + 1} in FROM clause is missing joinWhereClause`);\n                    }\n                    rightEntity = this.relationManager.createRelatedQEntity(joinRelation, context);\n                    break;\n                default:\n                    throw new Error(`Unknown JSONRelationType ${joinRelation.rt}`);\n            }\n            let parentAlias = this.relationManager.getParentAlias(joinRelation);\n            if (!joinNodeMap[parentAlias]) {\n                throw new Error(`Missing parent entity for alias ${parentAlias}, on table ${i + 1} in FROM clause. \r\n\t\t\t\t\tNOTE: sub-queries in FROM clause cannot reference parent FROM tables.`);\n            }\n            let leftNode = joinNodeMap[parentAlias];\n            let rightNode = new JoinTreeNode(joinRelation, [], leftNode);\n            leftNode.addChildNode(rightNode);\n            this.qValidator.validateReadFromEntity(joinRelation);\n            this.qEntityMapByAlias[alias] = rightEntity;\n            if (!rightEntity) {\n                throw new Error(`Could not find entity ${joinRelation.ti} for table ${i + 1} in FROM clause`);\n            }\n            if (joinNodeMap[alias]) {\n                throw new Error(`Alias '${alias}' used more than once in the FROM clause.`);\n            }\n            joinNodeMap[alias] = rightNode;\n        }\n        return jsonTrees;\n    }\n    addFieldsToView(viewJoinRelation, viewAlias, context) {\n        let view = new QTree(viewJoinRelation.fromClausePosition, null);\n        this.addFieldsToViewForSelect(view, viewAlias, viewJoinRelation.subQuery.S, 'f', null, context);\n        return view;\n    }\n    /**\n     * Just build the shell fields for the external API of the view, don't do anything else.\n     * @param view\n     * @param select\n     * @param fieldPrefix\n     */\n    addFieldsToViewForSelect(view, viewAlias, select, fieldPrefix, forFieldQueryAlias, context) {\n        let fieldIndex = 0;\n        let hasDistinctClause = false;\n        for (let fieldName in select) {\n            let alias = `${fieldPrefix}${++fieldIndex}`;\n            let fieldJson = select[fieldName];\n            // If its a nested SELECT\n            if (!fieldJson.ot) {\n                this.addFieldsToViewForSelect(view, viewAlias, fieldJson, `${alias}_`, null, context);\n            }\n            else {\n                let aliasToSet = forFieldQueryAlias ? forFieldQueryAlias : alias;\n                hasDistinctClause = hasDistinctClause && this.addFieldToViewForSelect(view, viewAlias, fieldPrefix, fieldJson, aliasToSet, forFieldQueryAlias, context);\n            }\n        }\n        if (fieldIndex > 1) {\n            if (hasDistinctClause) {\n                throw new Error(`DISTINCT clause must be the only property at its level`);\n            }\n            if (forFieldQueryAlias) {\n                throw new Error(`Field queries can have only one field in SELECT clause`);\n            }\n        }\n    }\n    addFieldToViewForSelect(view, viewAlias, fieldPrefix, fieldJson, alias, forFieldQueryAlias = null, context) {\n        let hasDistinctClause = false;\n        let dbEntity;\n        let dbProperty;\n        let dbColumn;\n        switch (fieldJson.ot) {\n            case JSONClauseObjectType.FIELD_FUNCTION:\n                view[alias] = new SqlFunctionField(fieldJson);\n                throw new Error('Not implemented');\n            case JSONClauseObjectType.EXISTS_FUNCTION:\n                throw new Error(`Exists function cannot be used in SELECT clause.`);\n            case JSONClauseObjectType.FIELD:\n                dbEntity = this.airportDatabase.applications[fieldJson.si].currentVersion[0]\n                    .applicationVersion.entities[fieldJson.ti];\n                dbProperty = dbEntity.properties[fieldJson.pi];\n                dbColumn = dbEntity.columns[fieldJson.ci];\n                switch (fieldJson.dt) {\n                    case SQLDataType.BOOLEAN:\n                        view[alias] = new QBooleanField(dbColumn, dbProperty, view);\n                        break;\n                    case SQLDataType.DATE:\n                        view[alias] = new QDateField(dbColumn, dbProperty, view);\n                        break;\n                    case SQLDataType.NUMBER:\n                        view[alias] = new QNumberField(dbColumn, dbProperty, view);\n                        break;\n                    case SQLDataType.STRING:\n                        view[alias] = new QStringField(dbColumn, dbProperty, view);\n                        break;\n                    // case SQLDataType.ANY:\n                    // \tview[alias] = new QUntypedField(dbColumn, dbProperty,\n                    // \t\tview as IQEntityInternal<any>)\n                    // \tbreak\n                    default:\n                        throw new Error(`Unknown SQLDataType: ${fieldJson.dt}.`);\n                }\n                break;\n            case JSONClauseObjectType.FIELD_QUERY:\n                let fieldQuery = fieldJson;\n                this.addFieldToViewForSelect(view, viewAlias, fieldPrefix, fieldQuery.S, alias, alias, context);\n                break;\n            case JSONClauseObjectType.DISTINCT_FUNCTION:\n                this.addFieldsToViewForSelect(view, viewAlias, fieldJson.v, fieldPrefix, forFieldQueryAlias, context);\n                hasDistinctClause = true;\n                break;\n            case JSONClauseObjectType.MANY_TO_ONE_RELATION:\n                throw new Error(`@ManyToOne fields cannot be directly in a SELECT clause.\r\n\t\t\t\t\tPlease select a non-relational field within the relation.`);\n            // let relation =\n            // <QField<any>><any>QMetadataUtils.getRelationByColumnIndex(this.dbFacade.getQEntityByIndex(fieldJson.ti),\n            // fieldJson.ci); view[alias] = relation.getInstance(view); break;\n            default:\n                throw new Error(`Unexpected type property on JSONClauseField: ${fieldJson.ot}.`);\n        }\n        return hasDistinctClause;\n    }\n    getFieldSelectFragment(value, clauseType, nestedObjectCallBack, fieldIndex, context) {\n        let columnSelectSqlFragment = this.getFieldValue(value, clauseType, \n        // Nested object processing\n        nestedObjectCallBack, context);\n        if (value.fa !== undefined) {\n            columnSelectSqlFragment += ` as ${value.fa}`;\n        }\n        if (fieldIndex === 0) {\n            return `\\n\\t${columnSelectSqlFragment}`;\n        }\n        else {\n            return `,\\n\\t${columnSelectSqlFragment}`;\n        }\n    }\n    getFROMFragments(joinTrees, context) {\n        return joinTrees.map(joinTree => this.getFROMFragment(null, joinTree, context))\n            .join('\\n');\n    }\n    getFROMFragment(parentTree, currentTree, context) {\n        let fromFragment = '\\t';\n        let currentRelation = currentTree.jsonRelation;\n        let currentAlias = this.relationManager.getAlias(currentRelation);\n        let qEntity = this.qEntityMapByAlias[currentAlias];\n        if (!parentTree) {\n            switch (currentRelation.rt) {\n                case JSONRelationType.ENTITY_ROOT:\n                    fromFragment += `${this.storeDriver.getEntityTableName(qEntity.__driver__.dbEntity, context)} ${currentAlias}`;\n                    break;\n                case JSONRelationType.SUB_QUERY_ROOT:\n                    let viewRelation = currentRelation;\n                    const { parameterReferences, subQuerySql } = this.subStatementSqlGenerator.getTreeQuerySql(viewRelation.subQuery, this.dialect, context);\n                    if (parameterReferences.length) {\n                        this.parameterReferences = this.parameterReferences.concat(parameterReferences);\n                    }\n                    fromFragment += `(${subQuerySql}) ${currentAlias}`;\n                    break;\n                default:\n                    throw new Error(`Top level FROM entries must be Entity or Sub-Query root`);\n            }\n        }\n        else {\n            let parentRelation = parentTree.jsonRelation;\n            let parentAlias = this.relationManager.getAlias(parentRelation);\n            let leftEntity = this.qEntityMapByAlias[parentAlias];\n            let rightEntity = this.qEntityMapByAlias[currentAlias];\n            let joinTypeString;\n            switch (currentRelation.jt) {\n                case JoinType.FULL_JOIN:\n                    joinTypeString = 'FULL JOIN';\n                    break;\n                case JoinType.INNER_JOIN:\n                    joinTypeString = 'INNER JOIN';\n                    break;\n                case JoinType.LEFT_JOIN:\n                    joinTypeString = 'LEFT JOIN';\n                    break;\n                case JoinType.RIGHT_JOIN:\n                    joinTypeString = 'RIGHT JOIN';\n                default:\n                    throw new Error(`Unsupported join type: ${currentRelation.jt}`);\n            }\n            let errorPrefix = 'Error building FROM: ';\n            let joinOnClause;\n            switch (currentRelation.rt) {\n                case JSONRelationType.ENTITY_JOIN_ON:\n                    let joinRelation = currentRelation;\n                    joinOnClause = this.getWHEREFragment(joinRelation.joinWhereClause, '\\t', context);\n                    fromFragment += `\\t${joinTypeString} ${this.storeDriver.getEntityTableName(qEntity.__driver__.dbEntity, context)} ${currentAlias} ON\\n${joinOnClause}`;\n                    break;\n                case JSONRelationType.ENTITY_APPLICATION_RELATION:\n                    fromFragment += this.getEntityApplicationRelationFromJoin(leftEntity, rightEntity, currentRelation, parentRelation, currentAlias, parentAlias, joinTypeString, errorPrefix, context);\n                    break;\n                case JSONRelationType.SUB_QUERY_JOIN_ON:\n                    let viewJoinRelation = currentRelation;\n                    const { parameterReferences, subQuerySql } = this.subStatementSqlGenerator.getTreeQuerySql(viewJoinRelation.subQuery, this.dialect, context);\n                    if (parameterReferences.length) {\n                        this.parameterReferences = this.parameterReferences.concat(parameterReferences);\n                    }\n                    joinOnClause = this.getWHEREFragment(viewJoinRelation.joinWhereClause, '\\t', context);\n                    fromFragment += `${joinTypeString} (${subQuerySql}) ${currentAlias} ON\\n${joinOnClause}`;\n                    break;\n                default:\n                    throw new Error(`Nested FROM entries must be Entity JOIN ON\r\n\t\t\t\t\tor Application Relation, or Sub-Query JOIN ON`);\n            }\n        }\n        for (let i = 0; i < currentTree.childNodes.length; i++) {\n            let childTreeNode = currentTree.childNodes[i];\n            fromFragment += this.getFROMFragment(currentTree, childTreeNode, context);\n        }\n        return fromFragment;\n    }\n    getGroupByFragment(groupBy) {\n        return groupBy.map((groupByField) => {\n            this.qValidator.validateAliasedFieldAccess(groupByField.fa);\n            return `${groupByField.fa}`;\n        })\n            .join(', ');\n    }\n    getOrderByFragment(orderBy) {\n        return orderBy.map((orderByField) => {\n            this.qValidator.validateAliasedFieldAccess(orderByField.fa);\n            switch (orderByField.so) {\n                case SortOrder.ASCENDING:\n                    return `${orderByField.fa} ASC`;\n                case SortOrder.DESCENDING:\n                    return `${orderByField.fa} DESC`;\n            }\n        })\n            .join(', ');\n    }\n}\n//# sourceMappingURL=NonEntitySQLQuery.js.map","import { JSONClauseObjectType, QueryResultType } from '@airport/ground-control';\nimport { ExactOrderByParser } from '../orderBy/ExactOrderByParser';\nimport { ClauseType } from './core/SQLWhereBase';\nimport { NonEntitySQLQuery } from './NonEntitySQLQuery';\n/**\n * Created by Papa on 10/29/2016.\n */\nexport class FieldSQLQuery extends NonEntitySQLQuery {\n    constructor(jsonQuery, dialect, airportDatabase, applicationUtils, entityStateManager, qMetadataUtils, qValidator, relationManager, sqlQueryAdapter, storeDriver, subStatementQueryGenerator, utils, context) {\n        super(jsonQuery, dialect, QueryResultType.FIELD, airportDatabase, applicationUtils, entityStateManager, qMetadataUtils, qValidator, relationManager, sqlQueryAdapter, storeDriver, subStatementQueryGenerator, utils, context);\n        this.orderByParser = new ExactOrderByParser(qValidator);\n    }\n    async parseQueryResults(results, internalFragments, queryResultType, context, bridgedQueryConfiguration) {\n        let parsedResults = [];\n        if (!results || !results.length) {\n            return parsedResults;\n        }\n        parsedResults = [];\n        let lastResult;\n        results.forEach((result) => {\n            let parsedResult = this.parseQueryResult(this.jsonQuery.S, result, [0]);\n            parsedResults.push(parsedResult);\n        });\n        return parsedResults;\n    }\n    getSELECTFragment(nested, selectClauseFragment, internalFragments, context) {\n        if (!selectClauseFragment) {\n            throw new Error(`SELECT clause is not defined for a Field Query`);\n        }\n        {\n            let distinctClause = selectClauseFragment;\n            if (distinctClause.ot == JSONClauseObjectType.DISTINCT_FUNCTION) {\n                let distinctSelect = this.getSELECTFragment(nested, distinctClause.appliedFunctions[0].p[0], internalFragments, context);\n                return `DISTINCT ${distinctSelect}`;\n            }\n        }\n        let field = selectClauseFragment;\n        let fieldIndex = 0;\n        let selectSqlFragment = this.getFieldSelectFragment(field, ClauseType.NON_MAPPED_SELECT_CLAUSE, null, fieldIndex++, context);\n        return selectSqlFragment;\n    }\n    parseQueryResult(selectClauseFragment, resultRow, nextFieldIndex) {\n        let field = selectClauseFragment;\n        let propertyValue = this.sqlQueryAdapter.getResultCellValue(resultRow, field.fa, nextFieldIndex[0], field.dt, null);\n        nextFieldIndex[0]++;\n        return propertyValue;\n    }\n}\n//# sourceMappingURL=FieldSQLQuery.js.map","import { JSONClauseObjectType, QueryResultType } from '@airport/ground-control';\nimport { AliasCache } from '@airport/tarmaq-query';\nimport { MappedOrderByParser } from '../orderBy/MappedOrderByParser';\nimport { TreeQueryResultParser } from '../result/TreeQueryResultParser';\nimport { ClauseType } from './core/SQLWhereBase';\nimport { NonEntitySQLQuery } from './NonEntitySQLQuery';\nimport { SqlFunctionField } from './SqlFunctionField';\n/**\n * Created by Papa on 10/28/2016.\n */\nexport class TreeSQLQuery extends NonEntitySQLQuery {\n    constructor(jsonQuery, dialect, airportDatabase, applicationUtils, entityStateManager, qMetadataUtils, qValidator, relationManager, sqlQueryAdapter, storeDriver, subStatementQueryGenerator, utils, context) {\n        super(jsonQuery, dialect, QueryResultType.TREE, airportDatabase, applicationUtils, entityStateManager, qMetadataUtils, qValidator, relationManager, sqlQueryAdapter, storeDriver, subStatementQueryGenerator, utils, context);\n        this.queryParser = new TreeQueryResultParser(applicationUtils, entityStateManager, utils);\n        this.orderByParser = new MappedOrderByParser(qValidator);\n    }\n    /**\n     * Entities get merged if they are right next to each other in the result set.  If they\n     * are not, they are treated as separate entities - hence, your sort order matters.\n     *\n     * @param results\n     * @returns {any[]}\n     */\n    async parseQueryResults(results, internalFragments, queryResultType, context, bridgedQueryConfiguration) {\n        let parsedResults = [];\n        if (!results || !results.length) {\n            return parsedResults;\n        }\n        parsedResults = [];\n        let lastResult;\n        results.forEach((result) => {\n            let aliasCache = new AliasCache();\n            let parsedResult = this.parseQueryResult(this.jsonQuery.S, result, [0], aliasCache, aliasCache.getFollowingAlias());\n            if (!lastResult) {\n                parsedResults.push(parsedResult);\n            }\n            else if (lastResult !== parsedResult) {\n                lastResult = parsedResult;\n                parsedResults.push(parsedResult);\n            }\n            this.queryParser.flushRow();\n        });\n        return parsedResults;\n    }\n    getSELECTFragment(nested, selectClauseFragment, internalFragments, context) {\n        const distinctClause = selectClauseFragment;\n        if (distinctClause.ot == JSONClauseObjectType.DISTINCT_FUNCTION) {\n            if (nested) {\n                throw new Error(`Cannot have DISTINCT specified in a nested SELECT clause`);\n            }\n            const distinctSelect = this.getSELECTFragment(nested, distinctClause.appliedFunctions[0].p[0], internalFragments, context);\n            return `DISTINCT ${distinctSelect}`;\n        }\n        let numProperties = 0;\n        for (let propertyName in selectClauseFragment) {\n            if (propertyName === '*') {\n                throw new Error(`'*' operator isn't yet implemented in mapped queries`);\n            }\n            if (propertyName === 'id') {\n                throw new Error(`'id' operator isn't yet implemented in mapped queries`);\n            }\n            numProperties++;\n        }\n        if (numProperties === 0) {\n            if (nested) {\n                throw new Error(`Mapped query must have fields in a nested-SELECT clause`);\n            }\n            else {\n                return '*';\n            }\n        }\n        let fieldIndex = 0;\n        let selectSqlFragment = '';\n        for (let propertyName in selectClauseFragment) {\n            const value = selectClauseFragment[propertyName];\n            // Skip undefined values\n            if (value === undefined) {\n                continue;\n            }\n            if (value instanceof SqlFunctionField) {\n                selectSqlFragment += value.getValue(this, context);\n                continue;\n            }\n            selectSqlFragment += this.getFieldSelectFragment(value, ClauseType.MAPPED_SELECT_CLAUSE, () => {\n                return this.getSELECTFragment(true, value, internalFragments, context);\n            }, fieldIndex++, context);\n        }\n        return selectSqlFragment;\n    }\n    parseQueryResult(selectClauseFragment, resultRow, nextFieldIndex, aliasCache, entityAlias) {\n        // Return blanks, primitives and Dates directly\n        if (!resultRow || !(resultRow instanceof Object) || resultRow instanceof Date) {\n            return resultRow;\n        }\n        {\n            let distinctClause = selectClauseFragment;\n            if (distinctClause.ot == JSONClauseObjectType.DISTINCT_FUNCTION) {\n                return this.parseQueryResult(distinctClause.appliedFunctions[0].p[0], resultRow, nextFieldIndex, aliasCache, entityAlias);\n            }\n        }\n        let resultObject = this.queryParser.addEntity(entityAlias);\n        for (let propertyName in selectClauseFragment) {\n            if (selectClauseFragment[propertyName] === undefined) {\n                continue;\n            }\n            let jsonClauseField = selectClauseFragment[propertyName];\n            let dataType = jsonClauseField.dt;\n            // Must be a sub-query\n            if (!dataType) {\n                let childResultObject = this.parseQueryResult(jsonClauseField, resultRow, nextFieldIndex, aliasCache, aliasCache.getFollowingAlias());\n                this.queryParser.bufferOneToManyCollection(entityAlias, resultObject, propertyName, childResultObject);\n            }\n            else {\n                let propertyValue = this.sqlQueryAdapter.getResultCellValue(resultRow, jsonClauseField.fa, nextFieldIndex[0], dataType, null);\n                this.queryParser.addProperty(entityAlias, resultObject, dataType, propertyName, propertyValue);\n            }\n            nextFieldIndex[0]++;\n        }\n        return this.queryParser.flushEntity(entityAlias, resultObject);\n    }\n}\n//# sourceMappingURL=TreeSQLQuery.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { FieldSQLQuery } from '../FieldSQLQuery';\nimport { TreeSQLQuery } from '../TreeSQLQuery';\nlet SubStatementSqlGenerator = class SubStatementSqlGenerator {\n    getTreeQuerySql(jsonTreeQuery, dialect, context) {\n        let mappedSqlQuery = new TreeSQLQuery(jsonTreeQuery, dialect, this.airportDatabase, this.applicationUtils, this.entityStateManager, this.qMetadataUtils, this.qValidator, this.relationManager, this.sqlQueryAdapter, this.storeDriver, this, this.utils, context);\n        const subQuerySql = mappedSqlQuery.toSQL({}, context);\n        const parameterReferences = mappedSqlQuery.parameterReferences;\n        return {\n            parameterReferences,\n            subQuerySql\n        };\n    }\n    getFieldQuerySql(jsonFieldSqlSubQuery, dialect, qEntityMapByAlias, context) {\n        let fieldSqlQuery = new FieldSQLQuery(jsonFieldSqlSubQuery, dialect, this.airportDatabase, this.applicationUtils, this.entityStateManager, this.qMetadataUtils, this.qValidator, this.relationManager, this.sqlQueryAdapter, this.storeDriver, this, this.utils, context);\n        fieldSqlQuery.addQEntityMapByAlias(qEntityMapByAlias);\n        const subQuerySql = fieldSqlQuery.toSQL({}, context);\n        const parameterReferences = fieldSqlQuery.parameterReferences;\n        return {\n            parameterReferences,\n            subQuerySql\n        };\n    }\n};\n__decorate([\n    Inject()\n], SubStatementSqlGenerator.prototype, \"airportDatabase\", void 0);\n__decorate([\n    Inject()\n], SubStatementSqlGenerator.prototype, \"applicationUtils\", void 0);\n__decorate([\n    Inject()\n], SubStatementSqlGenerator.prototype, \"entityStateManager\", void 0);\n__decorate([\n    Inject()\n], SubStatementSqlGenerator.prototype, \"qMetadataUtils\", void 0);\n__decorate([\n    Inject()\n], SubStatementSqlGenerator.prototype, \"qValidator\", void 0);\n__decorate([\n    Inject()\n], SubStatementSqlGenerator.prototype, \"relationManager\", void 0);\n__decorate([\n    Inject()\n], SubStatementSqlGenerator.prototype, \"sqlQueryAdapter\", void 0);\n__decorate([\n    Inject()\n], SubStatementSqlGenerator.prototype, \"storeDriver\", void 0);\n__decorate([\n    Inject()\n], SubStatementSqlGenerator.prototype, \"utils\", void 0);\nSubStatementSqlGenerator = __decorate([\n    Injected()\n], SubStatementSqlGenerator);\nexport { SubStatementSqlGenerator };\n//# sourceMappingURL=SubStatementSqlGenerator.js.map","import { EntityRelationType, EntityState, JoinType, JSONRelationType } from '@airport/ground-control';\nimport { AliasCache, getErrorMessageSelectStatement, isID, isN, isY, JoinTreeNode, Y } from '@airport/tarmaq-query';\nimport { EntityOrderByParser } from '../orderBy/EntityOrderByParser';\nimport { SQLQuery } from './core/SQLQuery';\n/**\n * Created by Papa on 10/16/2016.\n */\n/**\n * Represents SQL String query with Entity tree Select clause.\n */\nexport class EntitySQLQuery extends SQLQuery {\n    constructor(jsonQuery, dbEntity, dialect, queryResultType, airportDatabase, applicationUtils, entityStateManager, objectResultParserFactory, qMetadataUtils, qValidator, relationManager, sqlQueryAdapter, storeDriver, subStatementSqlGenerator, utils, context, graphQueryConfiguration) {\n        super(jsonQuery, dbEntity, dialect, queryResultType, airportDatabase, applicationUtils, entityStateManager, qMetadataUtils, qValidator, relationManager, sqlQueryAdapter, storeDriver, subStatementSqlGenerator, utils, context);\n        this.objectResultParserFactory = objectResultParserFactory;\n        this.graphQueryConfiguration = graphQueryConfiguration;\n        this.columnAliases = new AliasCache();\n        if (graphQueryConfiguration && this.graphQueryConfiguration.strict !== undefined) {\n            throw new Error(`\"strict\" configuration is not yet implemented for \r\n\t\t\tQueryResultType.ENTITY_GRAPH`);\n        }\n        this.finalSelectTree = this.setupSelectFields(this.jsonQuery.S, dbEntity, context);\n        this.orderByParser = new EntityOrderByParser(this.finalSelectTree, airportDatabase, qValidator, relationManager, jsonQuery.OB);\n    }\n    toSQL(internalFragments, context) {\n        let joinNodeMap = {};\n        this.joinTree = this.buildFromJoinTree(this.jsonQuery.F, joinNodeMap, context);\n        let selectFragment = this.getSELECTFragment(this.dbEntity, this.finalSelectTree, this.joinTree, context);\n        let fromFragment = this.getFROMFragment(null, this.joinTree, context);\n        let whereFragment = '';\n        let jsonQuery = this.jsonQuery;\n        if (jsonQuery.W) {\n            whereFragment = `\r\nWHERE\r\n${this.getWHEREFragment(jsonQuery.W, '', context)}`;\n        }\n        let orderByFragment = '';\n        if (jsonQuery.OB && jsonQuery.OB.length) {\n            orderByFragment = `\r\nORDER BY\r\n${this.orderByParser.getOrderByFragment(this.joinTree, this.qEntityMapByAlias, context)}`;\n        }\n        return `SELECT\r\n\t${selectFragment}\r\nFROM\r\n${fromFragment}${whereFragment}${orderByFragment}\r\n${this.storeDriver.getSelectQuerySuffix(this.jsonQuery, context)}`;\n    }\n    /**\n     * If bridging is not applied:\n     *\n     * Entities get merged if they are right next to each other in the result set.  If they\n     * are not, they are treated as separate entities - hence, your sort order matters.\n     *\n     * If bridging is applied - all entities get merged - your sort order does not matter.\n     * Might as well disallow sort order for bridged queries (or re-sort in memory)?\n     *\n     * @param results\n     * @returns {any[]}\n     */\n    async parseQueryResults(results, internalFragments, queryResultType, context, bridgedQueryConfiguration) {\n        this.queryParser = this.objectResultParserFactory.getObjectResultParser(this.queryResultType, this.graphQueryConfiguration, this.dbEntity);\n        let parsedResults = [];\n        if (!results || !results.length) {\n            return parsedResults;\n        }\n        parsedResults = [];\n        let lastResult;\n        for (let i = 0; i < results.length; i++) {\n            let result = results[i];\n            let entityAlias = this.relationManager.getAlias(this.joinTree.jsonRelation);\n            this.columnAliases.reset();\n            let parsedResult = this.parseQueryResult(this.finalSelectTree, entityAlias, this.joinTree, result, [0], context);\n            if (!lastResult) {\n                parsedResults.push(parsedResult);\n            }\n            else if (lastResult !== parsedResult) {\n                parsedResults.push(parsedResult);\n            }\n            lastResult = parsedResult;\n            this.queryParser.flushRow();\n        }\n        return this.queryParser.bridge(parsedResults, this.jsonQuery.S, context);\n    }\n    buildFromJoinTree(joinRelations, joinNodeMap, context) {\n        let jsonTree;\n        // For entity queries it is possible to have a query with no from clause, in this case\n        // make the query entity the root tree node\n        if (joinRelations.length < 1) {\n            let onlyJsonRelation = {\n                currentChildIndex: 0,\n                ti: this.dbEntity.index,\n                fromClausePosition: [],\n                jt: null,\n                ri: null,\n                rt: JSONRelationType.ENTITY_ROOT,\n                rep: 'r_',\n                si: this.dbEntity.applicationVersion._localId\n            };\n            joinRelations.push(onlyJsonRelation);\n        }\n        let firstRelation = joinRelations[0];\n        switch (firstRelation.rt) {\n            case JSONRelationType.ENTITY_ROOT:\n                break;\n            case JSONRelationType.SUB_QUERY_ROOT:\n            case JSONRelationType.SUB_QUERY_JOIN_ON:\n                throw new Error(`Entity query's FROM clause cannot contain sub-queries`);\n            case JSONRelationType.ENTITY_JOIN_ON:\n                throw new Error(`Entity queries cannot use JOIN ON`);\n            default:\n                throw new Error(`First table in FROM clause cannot be result of a join`);\n        }\n        // if (firstRelation.rt !== JSONRelationType.ENTITY_ROOT) {\n        // \tthrow new Error(`First table in FROM clause cannot be joined`)\n        // }\n        let alias = this.relationManager.getAlias(firstRelation);\n        let firstEntity = this.relationManager.createRelatedQEntity(firstRelation, context);\n        this.qEntityMapByAlias[alias] = firstEntity;\n        this.jsonRelationMapByAlias[alias] = firstRelation;\n        // In entity queries the first entity must always be the same as the query entity\n        const firstDbEntity = firstEntity.__driver__.dbEntity;\n        // if (firstEntity.constructor != this.rootQEntity.constructor) {\n        if (firstDbEntity.applicationVersion.application.index !== this.dbEntity.applicationVersion.application.index || firstDbEntity.index !== this.dbEntity.index) {\n            throw new Error(`ERROR: Unexpected first table in FROM clause: \r\n\t\t\t'${firstDbEntity.applicationVersion.application.name}.${firstDbEntity.name}',\r\n\t\t\texpecting:\r\n\t\t\t'${this.dbEntity.applicationVersion.application.name}.${this.dbEntity.name}'`);\n        }\n        jsonTree = new JoinTreeNode(firstRelation, [], null);\n        joinNodeMap[alias] = jsonTree;\n        for (let i = 1; i < joinRelations.length; i++) {\n            let joinRelation = joinRelations[i];\n            switch (joinRelation.rt) {\n                case JSONRelationType.ENTITY_ROOT:\n                    throw new Error(`All Entity query tables after the first must be joined`);\n                case JSONRelationType.SUB_QUERY_JOIN_ON:\n                    throw new Error(`Entity queries FROM clause cannot contain sub-queries`);\n                case JSONRelationType.ENTITY_JOIN_ON:\n                    throw new Error(`Entity queries cannot use JOIN ON`);\n                default:\n                    break;\n            }\n            if (!joinRelation.ri && joinRelation.ri !== 0) {\n                throw new Error(`Table ${i + 1} in FROM clause is missing \r\n\t\t\t\trelationPropertyName`);\n            }\n            let parentAlias = this.relationManager.getParentAlias(joinRelation);\n            if (!joinNodeMap[parentAlias]) {\n                throw new Error(`Missing parent entity for alias ${parentAlias}, \r\n\t\t\t\ton table ${i + 1} in FROM clause`);\n            }\n            let leftNode = joinNodeMap[parentAlias];\n            let rightNode = new JoinTreeNode(joinRelation, [], leftNode);\n            leftNode.addChildNode(rightNode);\n            alias = this.relationManager.getAlias(joinRelation);\n            let rightEntity = this.relationManager.createRelatedQEntity(joinRelation, context);\n            this.qEntityMapByAlias[alias] = rightEntity;\n            this.jsonRelationMapByAlias[alias] = firstRelation;\n            if (!rightEntity) {\n                throw new Error(`Could not find entity ${joinRelation.ti} for \r\n\t\t\t\ttable ${i + 1} in FROM clause`);\n            }\n            if (joinNodeMap[alias]) {\n                throw new Error(`Alias '${alias}' used more than once in the FROM clause.`);\n            }\n            joinNodeMap[alias] = rightNode;\n        }\n        return jsonTree;\n    }\n    parseQueryResult(selectClauseFragment, entityAlias, currentJoinNode, resultRow, nextColumnIndex, context) {\n        // Return blanks, primitives and Dates directly\n        if (!resultRow || !(resultRow instanceof Object) || resultRow instanceof Date) {\n            return resultRow;\n        }\n        let numNonNullColumns = 0;\n        let qEntity = this.qEntityMapByAlias[entityAlias];\n        const dbEntity = qEntity.__driver__.dbEntity;\n        let resultObject = this.queryParser.addEntity(entityAlias, dbEntity, context);\n        for (let propertyName in selectClauseFragment) {\n            const dbProperty = dbEntity.propertyMap[propertyName];\n            if (!dbProperty.relation || !dbProperty.relation.length) {\n                const columnAlias = this.columnAliases.getFollowingAlias();\n                const defaultValue = this.entityDefaults.getForAlias(entityAlias)[propertyName];\n                const dbColumn = dbProperty.propertyColumns[0].column;\n                const propertyValue = this.sqlQueryAdapter.getResultCellValue(resultRow, columnAlias, nextColumnIndex[0], dbColumn.type, defaultValue);\n                if (this.queryParser.addProperty(entityAlias, resultObject, dbColumn.type, propertyName, propertyValue)) {\n                    numNonNullColumns++;\n                }\n                nextColumnIndex[0]++;\n            }\n            else {\n                const childSelectClauseFragment = selectClauseFragment[propertyName];\n                const dbRelation = dbProperty.relation[0];\n                const childDbEntity = dbRelation.relationEntity;\n                if (childSelectClauseFragment === null || childSelectClauseFragment.__state__ === EntityState.STUB) {\n                    switch (dbRelation.relationType) {\n                        case EntityRelationType.MANY_TO_ONE:\n                            let haveRelationValues = false;\n                            let relationInfos = [];\n                            this.applicationUtils.forEachColumnTypeOfRelation(dbRelation, (dbColumn, propertyNameChains) => {\n                                const columnAlias = this.columnAliases.getFollowingAlias();\n                                let value = this.sqlQueryAdapter.getResultCellValue(resultRow, columnAlias, nextColumnIndex[0], dbColumn.type, null);\n                                relationInfos.push({\n                                    propertyNameChains: propertyNameChains,\n                                    sqlDataType: dbColumn.type,\n                                    value\n                                });\n                                if (this.utils.objectExists(value)) {\n                                    haveRelationValues = true;\n                                    numNonNullColumns++;\n                                }\n                                nextColumnIndex[0]++;\n                            });\n                            if (haveRelationValues) {\n                                this.queryParser.bufferManyToOneStub(entityAlias, dbEntity, resultObject, propertyName, childDbEntity, relationInfos, context);\n                            }\n                            else {\n                                this.queryParser.bufferBlankManyToOneStub(entityAlias, resultObject, propertyName, relationInfos);\n                            }\n                            break;\n                        case EntityRelationType.ONE_TO_MANY:\n                            this.queryParser.bufferOneToManyStub(dbEntity, propertyName);\n                            break;\n                        default:\n                            throw new Error(`Unknown relation type '${dbRelation.relationType}' for \r\n\t\t\t\t\t\t\t\t'${dbEntity.name}.${dbProperty.name}'`);\n                    }\n                }\n                else {\n                    const childJoinNode = currentJoinNode.getEntityRelationChildNode(dbRelation);\n                    const childEntityAlias = this.relationManager.getAlias(childJoinNode.jsonRelation);\n                    const relationQEntity = this.qEntityMapByAlias[childEntityAlias];\n                    const relationDbEntity = relationQEntity.__driver__.dbEntity;\n                    let childResultObject = this.parseQueryResult(childSelectClauseFragment, childEntityAlias, childJoinNode, resultRow, nextColumnIndex, context);\n                    switch (dbRelation.relationType) {\n                        case EntityRelationType.MANY_TO_ONE:\n                            if (childResultObject) {\n                                this.queryParser.bufferManyToOneObject(entityAlias, dbEntity, resultObject, propertyName, relationDbEntity, childResultObject, context);\n                            }\n                            else {\n                                this.queryParser.bufferBlankManyToOneObject(entityAlias, resultObject, propertyName);\n                            }\n                            break;\n                        case EntityRelationType.ONE_TO_MANY:\n                            if (childResultObject) {\n                                this.queryParser.bufferOneToManyCollection(entityAlias, resultObject, dbEntity, propertyName, relationDbEntity, childResultObject, context);\n                            }\n                            else {\n                                this.queryParser.bufferBlankOneToMany(entityAlias, resultObject, dbEntity.name, propertyName, relationDbEntity, context);\n                            }\n                            break;\n                        default:\n                            throw new Error(`Unknown relation type '${dbRelation.relationType}' for \r\n\t\t\t\t\t\t\t\t'${dbEntity.name}.${dbProperty.name}'`);\n                    }\n                }\n            }\n        }\n        if (numNonNullColumns === 0) {\n            return null;\n        }\n        let idValue = this.applicationUtils.getIdKey(resultObject, dbEntity);\n        return this.queryParser.flushEntity(entityAlias, dbEntity, selectClauseFragment, idValue, resultObject, context);\n    }\n    /**\n     * Verify that the entity SELECT clause is valid (has _localIds) and fill in clauses\n     * that are blank (defined as {}).\n     *\n     *\n     * {\n     *  id1: Y,\n     *  id2: {\n     *    subId1: Y\n     *  },\n     *  other1: Y\n     * }\n     *\n     * If no properties are specified all properties are included.\n     *\n     * @param selectClauseFragment\n     * @param {DbEntity} dbEntity\n     * @returns {any}\n     */\n    setupSelectFields(selectClauseFragment, dbEntity, context, parentDbProperty) {\n        let retrieveAllOwnFields = true;\n        let selectFragment;\n        if (!selectClauseFragment || selectClauseFragment instanceof Array) {\n            let ofProperty = '';\n            if (parentDbProperty) {\n                ofProperty = `(of '${parentDbProperty.entity.name}.${parentDbProperty.name}') `;\n            }\n            throw new Error(`'${dbEntity.name}' Entity SELECT clause ${ofProperty}must be specified as an Object.`);\n        }\n        else if (isID(selectFragment)) {\n            selectFragment = {};\n            retrieveAllOwnFields = false;\n        }\n        else {\n            selectFragment = { ...selectClauseFragment };\n        }\n        let allFieldsSpecified = false;\n        if (selectFragment.__allFields__ === true || selectFragment['*'] === true\n            || (selectFragment['*'] && selectFragment['*'].airportSelectField === true)) {\n            allFieldsSpecified = true;\n            delete selectFragment.__allFields__;\n            delete selectFragment['*'];\n        }\n        const entityDefinitionHasIds = !!dbEntity.idColumns.length;\n        for (const propertyName in selectFragment) {\n            if (!allFieldsSpecified) {\n                retrieveAllOwnFields = false;\n            }\n            const dbProperty = dbEntity.propertyMap[propertyName];\n            if (!dbProperty) {\n                throw new Error(`Entity property '${dbEntity.name}.${propertyName}' does not exist.`);\n            }\n            const value = selectFragment[propertyName];\n            if (value === undefined || value === null || isN(value)) {\n                if (dbProperty.isId) {\n                    throw new Error(`@Id properties cannot be excluded from entity queries.`);\n                }\n                if (!entityDefinitionHasIds) {\n                    throw new Error(`Cannot exclude property '${propertyName}' from SELECT clause \r\n\t\t\t\t\tfor '${dbEntity.name}' Entity - entity has no @Id so all properties must be included.`);\n                }\n                delete selectFragment[propertyName];\n                continue;\n            }\n            // Need to differentiate between properties that contain only\n            // foreign key _localIds and properties\n            if (dbProperty.relation && dbProperty.relation.length) {\n                selectFragment[propertyName] = this.setupSelectFields(value, dbProperty.relation[0].relationEntity, context, dbProperty);\n                // } else {\n                // \t//  At least one non-relational field is in the original SELECT clause\n                // \tretrieveAllOwnFields = false\n            }\n            else if (!isY(value)) {\n                selectFragment[propertyName] = Y;\n            }\n        }\n        //  For {} SELECT causes, entities with no @Id, retrieve the entire object.\n        // Otherwise make sure all @Id columns are specified.\n        for (const dbProperty of dbEntity.properties) {\n            if (entityDefinitionHasIds && !dbProperty.isId && !retrieveAllOwnFields) {\n                continue;\n            }\n            const allowDefaults = entityDefinitionHasIds && !dbProperty.isId;\n            if (dbProperty.relation && dbProperty.relation.length) {\n                const dbRelation = dbProperty.relation[0];\n                switch (dbRelation.relationType) {\n                    case EntityRelationType.ONE_TO_MANY:\n                        break;\n                    case EntityRelationType.MANY_TO_ONE:\n                        // If SELECT fragment for the child entity is already defined, do not overwrite it\n                        if (selectFragment[dbProperty.name]) {\n                            break;\n                        }\n                        const manyToOneRelation = {};\n                        this.entityStateManager.markAsStub(manyToOneRelation);\n                        selectFragment[dbProperty.name] = manyToOneRelation;\n                        // applicationUtils.addRelationToEntitySelectClause(dbRelation, selectFragment,\n                        // allowDefaults)\n                        break;\n                    default:\n                        throw new Error(`Unknown relation type: '${dbRelation.relationType}' \r\n\t\t\t\t\t\ton '${dbEntity.name}.${dbProperty.name}'.`);\n                }\n            }\n            else {\n                const value = selectFragment[dbProperty.name];\n                if (value !== undefined && value !== null) {\n                    if (!allowDefaults && !isY(value)) {\n                        throw new Error(`${entityDefinitionHasIds ? '@Id properties' : 'Entities without @Id'} \r\n\t\t\t\t\t\tcannot have default SELECT values.`);\n                    }\n                }\n                else {\n                    selectFragment[dbProperty.name] = Y;\n                }\n            }\n        }\n        return selectFragment;\n    }\n    getSELECTFragment(dbEntity, selectClauseFragment, joinTree, context, parentProperty) {\n        const tableAlias = this.relationManager.getAlias(joinTree.jsonRelation);\n        let selectSqlFragments = [];\n        let isStubProperty = this.entityStateManager.isStub(selectClauseFragment);\n        const defaults = this.entityDefaults.getForAlias(tableAlias);\n        for (let propertyName in selectClauseFragment) {\n            if (propertyName === '__state__') {\n                continue;\n            }\n            const value = selectClauseFragment[propertyName];\n            if (!isY(value)) {\n                defaults[propertyName] = value;\n            }\n            const dbProperty = dbEntity.propertyMap[propertyName];\n            if (dbProperty.relation && dbProperty.relation.length) {\n                const dbRelation = dbProperty.relation[0];\n                if (this.entityStateManager.isStub(selectClauseFragment[propertyName])) {\n                    for (const relationColumn of dbRelation.manyRelationColumns) {\n                        const dbColumn = relationColumn.manyColumn;\n                        this.addFieldFromColumn(dbColumn);\n                        const columnSelect = this.getSimpleColumnFragment(tableAlias, dbColumn.name);\n                        selectSqlFragments.push(`${columnSelect} ${this.columnAliases.getFollowingAlias()}`);\n                    }\n                }\n                else {\n                    const subSelectFragments = this.getSELECTFragment(dbRelation.relationEntity, selectClauseFragment[propertyName], joinTree.getEntityRelationChildNode(dbRelation), context, dbProperty);\n                    selectSqlFragments = selectSqlFragments.concat(subSelectFragments);\n                }\n            }\n            else {\n                const dbColumn = dbProperty.propertyColumns[0].column;\n                this.addFieldFromColumn(dbColumn);\n                const columnSelect = this.getSimpleColumnFragment(tableAlias, dbColumn.name);\n                selectSqlFragments.push(`${columnSelect} ${this.columnAliases.getFollowingAlias()}`);\n            }\n        }\n        return selectSqlFragments;\n    }\n    getFROMFragment(parentTree, currentTree, context) {\n        let fromFragment = '\\t';\n        let currentRelation = currentTree.jsonRelation;\n        let currentAlias = this.relationManager.getAlias(currentRelation);\n        let qEntity = this.qEntityMapByAlias[currentAlias];\n        if (!qEntity) {\n            throw new Error(`Select clause doesn't match the from clause.\r\nPlease make sure that all entities present in the SELECT: {...} clause\r\nare specified in the FROM: [...] clause, with the SAME nesting pattern as\r\nin the SELECT: {...} clause.  The non-matching SELECT clause is:\r\n\r\n${getErrorMessageSelectStatement(this.jsonQuery.S)}\r\n\r\n`);\n        }\n        let tableName = this.storeDriver.getEntityTableName(qEntity.__driver__.dbEntity, context);\n        if (!parentTree) {\n            fromFragment += `${tableName} ${currentAlias}`;\n        }\n        else {\n            let parentRelation = parentTree.jsonRelation;\n            let parentAlias = this.relationManager.getAlias(parentRelation);\n            let leftEntity = this.qEntityMapByAlias[parentAlias];\n            let rightEntity = this.qEntityMapByAlias[currentAlias];\n            let joinTypeString;\n            switch (currentRelation.jt) {\n                case JoinType.FULL_JOIN:\n                    throw new Error(`Full Joins are not allowed in Entity queries.`);\n                case JoinType.INNER_JOIN:\n                    joinTypeString = 'INNER JOIN';\n                    break;\n                case JoinType.LEFT_JOIN:\n                    joinTypeString = 'LEFT JOIN';\n                    break;\n                case JoinType.RIGHT_JOIN:\n                    throw new Error(`Right Joins are not allowed in Entity queries.`);\n                default:\n                    throw new Error(`Unsupported join type: ${currentRelation.jt}`);\n            }\n            let errorPrefix = 'Error building FROM: ';\n            switch (currentRelation.rt) {\n                case JSONRelationType.ENTITY_APPLICATION_RELATION:\n                    fromFragment += this.getEntityApplicationRelationFromJoin(leftEntity, rightEntity, currentRelation, parentRelation, currentAlias, parentAlias, joinTypeString, errorPrefix, context);\n                    break;\n                default:\n                    throw new Error(`Only Entity application relations are allowed in Entity query FROM clause.`);\n            }\n        }\n        for (let i = 0; i < currentTree.childNodes.length; i++) {\n            let childTreeNode = currentTree.childNodes[i];\n            fromFragment += this.getFROMFragment(currentTree, childTreeNode, context);\n        }\n        return fromFragment;\n    }\n}\n//# sourceMappingURL=EntitySQLQuery.js.map","import { JSONClauseObjectType, QueryResultType } from '@airport/ground-control';\nimport { ExactOrderByParser } from '../orderBy/ExactOrderByParser';\nimport { ClauseType } from './core/SQLWhereBase';\nimport { NonEntitySQLQuery } from './NonEntitySQLQuery';\n/**\n * Created by Papa on 10/16/2016.\n */\n/**\n * Represents SQL String query with flat (aka traditional) Select clause.\n */\nexport class SheetSQLQuery extends NonEntitySQLQuery {\n    constructor(jsonQuery, dialect, airportDatabase, applicationUtils, entityStateManager, qMetadataUtils, qValidator, relationManager, sqlQueryAdapter, storeDriver, subStatementQueryGenerator, utils, context) {\n        super(jsonQuery, dialect, QueryResultType.SHEET, airportDatabase, applicationUtils, entityStateManager, qMetadataUtils, qValidator, relationManager, sqlQueryAdapter, storeDriver, subStatementQueryGenerator, utils, context);\n        this.orderByParser = new ExactOrderByParser(qValidator);\n    }\n    async parseQueryResults(results, internalFragments, queryResultType, context, bridgedQueryConfiguration) {\n        let parsedResults = [];\n        if (!results || !results.length) {\n            return parsedResults;\n        }\n        parsedResults = [];\n        let lastResult;\n        results.forEach((result) => {\n            let parsedResult = this.parseQueryResult(this.jsonQuery.S, result, [0], internalFragments);\n            parsedResults.push(parsedResult);\n        });\n        return parsedResults;\n    }\n    getSELECTFragment(nested, selectClauseFragment, internalFragments, context) {\n        if (!selectClauseFragment) {\n            throw new Error(`SELECT clause is not defined for a Flat Query`);\n        }\n        {\n            let distinctClause = selectClauseFragment;\n            if (distinctClause.ot == JSONClauseObjectType.DISTINCT_FUNCTION) {\n                let distinctSelect = this.getSELECTFragment(nested, distinctClause.appliedFunctions[0].p[0], internalFragments, context);\n                return `DISTINCT ${distinctSelect}`;\n            }\n        }\n        if (!(selectClauseFragment instanceof Array)) {\n            throw new Error(`SELECT clause for a Flat Query must be an Array`);\n        }\n        let fieldIndex = 0;\n        let selectSqlFragment = selectClauseFragment.map((field) => {\n            return this.getFieldSelectFragment(field, ClauseType.NON_MAPPED_SELECT_CLAUSE, null, fieldIndex++, context);\n        })\n            .join('');\n        const selectClause = internalFragments.SELECT;\n        if (selectClause && selectClause.length) {\n            if (fieldIndex) {\n                selectSqlFragment += '\\n\\t,';\n            }\n            selectSqlFragment += selectClause\n                .map(dbColumn => `${dbColumn.name}`)\n                .join('\\n\\t,');\n        }\n        return selectSqlFragment;\n    }\n    parseQueryResult(selectClauseFragment, resultRow, nextFieldIndex, internalFragments) {\n        const resultsFromSelect = selectClauseFragment.map((field) => {\n            let propertyValue = this.sqlQueryAdapter.getResultCellValue(resultRow, field.fa, nextFieldIndex[0], field.dt, null);\n            nextFieldIndex[0]++;\n            return propertyValue;\n        });\n        const selectClause = internalFragments.SELECT;\n        if (selectClause && selectClause.length) {\n            for (const dbColumn of selectClause) {\n                let propertyValue = this.sqlQueryAdapter.getResultCellValue(resultRow, dbColumn.name, nextFieldIndex[0], dbColumn.type, null);\n                resultsFromSelect.push(propertyValue);\n                nextFieldIndex[0]++;\n            }\n        }\n        return resultsFromSelect;\n    }\n}\n//# sourceMappingURL=SheetSQLQuery.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { Q } from '@airport/holding-pattern';\n/**\n * Created by Papa on 9/2/2016.\n */\nlet IdGenerator = class IdGenerator {\n    constructor() {\n        this.transactionHistory_LocalIdColumns = [];\n    }\n    async init() {\n        this.populateTransactionHistory_LocalIdColumns().then();\n    }\n    populateTransactionHistory_LocalIdColumns() {\n        return new Promise((resolve, _reject) => {\n            this.doPopulateTransactionHistory_LocalIdColumns(resolve);\n        });\n    }\n    doPopulateTransactionHistory_LocalIdColumns(resolve) {\n        if (Q.__dbApplication__ && Q.__dbApplication__.currentVersion) {\n            const transactionHistoryDbEntity = this.getHoldingPatternDbEntity('TransactionHistory');\n            const repoTransHistoryDbEntity = this.getHoldingPatternDbEntity('RepositoryTransactionHistory');\n            const operationHistoryDbEntity = this.getHoldingPatternDbEntity('OperationHistory');\n            const recordHistoryDbEntity = this.getHoldingPatternDbEntity('RecordHistory');\n            this.transactionHistory_LocalIdColumns.push(transactionHistoryDbEntity.idColumns[0]);\n            this.transactionHistory_LocalIdColumns.push(repoTransHistoryDbEntity.idColumns[0]);\n            this.transactionHistory_LocalIdColumns.push(operationHistoryDbEntity.idColumns[0]);\n            this.transactionHistory_LocalIdColumns.push(recordHistoryDbEntity.idColumns[0]);\n            resolve();\n        }\n        else {\n            setTimeout(() => {\n                this.doPopulateTransactionHistory_LocalIdColumns(resolve);\n            }, 100);\n        }\n    }\n    async generateTransactionHistory_LocalIds(numRepositoryTransHistories, numOperationTransHistories, numRecordHistories) {\n        let generatedSequenceNumbers = await this.sequenceGenerator\n            .generateSequenceNumbers(this.transactionHistory_LocalIdColumns, [\n            1,\n            numRepositoryTransHistories,\n            numOperationTransHistories,\n            numRecordHistories\n        ]);\n        return {\n            operationHistory_LocalIds: generatedSequenceNumbers[2],\n            recordHistory_LocalIds: generatedSequenceNumbers[3],\n            repositoryHistory_LocalIds: generatedSequenceNumbers[1],\n            transactionHistory_LocalId: generatedSequenceNumbers[0][0]\n        };\n    }\n    async generateEntityIds() {\n    }\n    getHoldingPatternDbEntity(holdingPatternEntityName) {\n        return Q.__dbApplication__.currentVersion[0].applicationVersion\n            .entityMapByName[holdingPatternEntityName];\n    }\n};\n__decorate([\n    Inject()\n], IdGenerator.prototype, \"sequenceGenerator\", void 0);\nIdGenerator = __decorate([\n    Injected()\n], IdGenerator);\nexport { IdGenerator };\n//# sourceMappingURL=IdGenerator.js.map","/**\n * Created by Papa on 6/28/2016.\n */\nexport class RecordStateData {\n    constructor() {\n        this.accessed = {};\n        this.current = {};\n        this.initialized = {};\n        this.original = {};\n    }\n}\nexport var CurrentState;\n(function (CurrentState) {\n    CurrentState[\"CREATED\"] = \"CREATED\";\n    CurrentState[\"DELETED\"] = \"DELETED\";\n    CurrentState[\"UPDATED\"] = \"UPDATED\";\n})(CurrentState || (CurrentState = {}));\nexport class RecordState {\n    constructor() {\n        this.data = new RecordStateData();\n        this.initialized = false;\n        this.isDirty = false;\n        this.proxied = false;\n    }\n    create() {\n        this.currentState = CurrentState.CREATED;\n    }\n    delete() {\n        this.currentState = CurrentState.DELETED;\n    }\n    toJSON() {\n        // TODO: implement\n        return null;\n    }\n    update() {\n        this.currentState = CurrentState.UPDATED;\n    }\n}\n//# sourceMappingURL=RecordState.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { QueryResultType, SyncApplicationMap, } from '@airport/ground-control';\nimport { SQLDelete } from '../sql/core/SQLDelete';\nimport { SQLInsertValues } from '../sql/core/SQLInsertValues';\nimport { SQLUpdate } from '../sql/core/SQLUpdate';\nimport { EntitySQLQuery } from '../sql/EntitySQLQuery';\nimport { FieldSQLQuery } from '../sql/FieldSQLQuery';\nimport { SheetSQLQuery } from '../sql/SheetSQLQuery';\nimport { TreeSQLQuery } from '../sql/TreeSQLQuery';\nimport { doEnsureContext } from '@airport/tarmaq-dao';\n/**\n * Created by Papa on 9/9/2016.\n */\nlet SqlDriver = class SqlDriver {\n    supportsLocalTransactions(context) {\n        return true;\n    }\n    getEntityTableName(dbEntity, context) {\n        return this.getTableName(dbEntity.applicationVersion.application, dbEntity, context);\n    }\n    getTableName(application, table, context) {\n        let theTableName = table.name;\n        if (table.tableConfig && table.tableConfig.name) {\n            theTableName = table.tableConfig.name;\n        }\n        let fullApplication_Name;\n        if (application.fullName) {\n            fullApplication_Name = application.fullName;\n        }\n        else {\n            fullApplication_Name = this.dbApplicationUtils.getFullApplication_Name(application);\n        }\n        return this.composeTableName(fullApplication_Name, theTableName, context);\n    }\n    async internalSetupTransaction(transaction, context) {\n        await this.ensureContext(context);\n    }\n    async tearDownTransaction(transaction, context) {\n        if (transaction.childTransaction) {\n            this.tearDownTransaction(transaction.childTransaction, context);\n        }\n        if (transaction.parentTransaction) {\n            transaction.parentTransaction.childTransaction = null;\n            transaction.parentTransaction = null;\n        }\n    }\n    async startTransaction(transaction, context) {\n        await this.ensureContext(context);\n        try {\n            await this.internalStartTransaction(transaction);\n        }\n        catch (e) {\n            await this.tearDownTransaction(transaction, context);\n            console.error(e);\n            throw e;\n        }\n    }\n    async commit(transaction, context) {\n        await this.ensureContext(context);\n        try {\n            await this.internalCommit(transaction);\n        }\n        catch (e) {\n            console.error(e);\n            try {\n                await this.internalRollback(transaction);\n            }\n            catch (rollbackError) {\n                console.error(rollbackError);\n            }\n            throw e;\n        }\n        finally {\n            await this.tearDownTransaction(transaction, context);\n        }\n    }\n    async rollback(transaction, context) {\n        await this.ensureContext(context);\n        try {\n            await this.internalRollback(transaction);\n        }\n        catch (e) {\n            console.error(e);\n            // Do not re-throw the exception, rollback is final (at least for now)\n        }\n        finally {\n            await this.tearDownTransaction(transaction, context);\n        }\n    }\n    async insertValues(portableQuery, context, cachedSqlQueryId) {\n        const splitValues = this.splitValues(portableQuery.jsonQuery.V, context);\n        let numVals = 0;\n        for (const V of splitValues) {\n            let sqlInsertValues = new SQLInsertValues({\n                ...portableQuery.jsonQuery,\n                V\n            }, this.getDialect(context), this.airportDatabase, this.applicationUtils, this.entityStateManager, this.qMetadataUtils, this.qValidator, this.relationManager, this.sqlQueryAdapter, this, this.subStatementQueryGenerator, this.utils, context);\n            let sql = sqlInsertValues.toSQL(context);\n            let parameters = sqlInsertValues.getParameters(portableQuery.parameterMap, context);\n            numVals += await this.executeNative(sql, parameters, context);\n        }\n        return numVals;\n    }\n    async deleteWhere(portableQuery, context) {\n        let fieldMap = new SyncApplicationMap();\n        let sqlDelete = new SQLDelete(portableQuery.jsonQuery, this.getDialect(context), this.airportDatabase, this.applicationUtils, this.entityStateManager, this.qMetadataUtils, this.qValidator, this.relationManager, this.sqlQueryAdapter, this, this.subStatementQueryGenerator, this.utils, context);\n        let sql = sqlDelete.toSQL(context);\n        let parameters = sqlDelete.getParameters(portableQuery.parameterMap, context);\n        let numberOfAffectedRecords = await this.executeNative(sql, parameters, context);\n        this.activeQueries.markQueriesToRerun(fieldMap);\n        return numberOfAffectedRecords;\n    }\n    async updateWhere(portableQuery, internalFragments, context) {\n        let sqlUpdate = new SQLUpdate(portableQuery.jsonQuery, this.getDialect(context), this.airportDatabase, this.applicationUtils, this.entityStateManager, this.qMetadataUtils, this.qValidator, this.relationManager, this.sqlQueryAdapter, this, this.subStatementQueryGenerator, this.utils, context);\n        let sql = sqlUpdate.toSQL(internalFragments, context);\n        let parameters = sqlUpdate.getParameters(portableQuery.parameterMap, context);\n        return await this.executeNative(sql, parameters, context);\n    }\n    async find(portableQuery, internalFragments, context, cachedSqlQueryId) {\n        context = await this.ensureContext(context);\n        const sqlQuery = this.getSQLQuery(portableQuery, context);\n        const sql = sqlQuery.toSQL(internalFragments, context);\n        const parameters = sqlQuery.getParameters(portableQuery.parameterMap, context);\n        let results = await this.findNative(sql, parameters, context);\n        results = await sqlQuery.parseQueryResults(results, internalFragments, portableQuery.queryResultType, context);\n        return results;\n    }\n    getSQLQuery(portableQuery, context) {\n        let jsonQuery = portableQuery.jsonQuery;\n        let dialect = this.getDialect(context);\n        let resultType = portableQuery.queryResultType;\n        const QueryResType = QueryResultType;\n        switch (resultType) {\n            case QueryResType.ENTITY_GRAPH:\n            case QueryResType.ENTITY_TREE:\n                const dbEntity = this.airportDatabase.applications[portableQuery.applicationIndex]\n                    .currentVersion[0].applicationVersion.entities[portableQuery.tableIndex];\n                return new EntitySQLQuery(jsonQuery, dbEntity, dialect, resultType, this.airportDatabase, this.applicationUtils, this.entityStateManager, this.objectResultParserFactory, this.qMetadataUtils, this.qValidator, this.relationManager, this.sqlQueryAdapter, this, this.subStatementQueryGenerator, this.utils, context);\n            case QueryResType.FIELD:\n                return new FieldSQLQuery(jsonQuery, dialect, this.airportDatabase, this.applicationUtils, this.entityStateManager, this.qMetadataUtils, this.qValidator, this.relationManager, this.sqlQueryAdapter, this, this.subStatementQueryGenerator, this.utils, context);\n            case QueryResType.SHEET:\n                return new SheetSQLQuery(jsonQuery, dialect, this.airportDatabase, this.applicationUtils, this.entityStateManager, this.qMetadataUtils, this.qValidator, this.relationManager, this.sqlQueryAdapter, this, this.subStatementQueryGenerator, this.utils, context);\n            case QueryResType.TREE:\n                return new TreeSQLQuery(jsonQuery, dialect, this.airportDatabase, this.applicationUtils, this.entityStateManager, this.qMetadataUtils, this.qValidator, this.relationManager, this.sqlQueryAdapter, this, this.subStatementQueryGenerator, this.utils, context);\n            case QueryResType.RAW:\n            default:\n                throw new Error(`Unknown QueryResultType: ${resultType}`);\n        }\n    }\n    async findOne(portableQuery, internalFragments, context, cachedSqlQueryId) {\n        let results = await this.find(portableQuery, internalFragments, context);\n        if (results.length > 1) {\n            throw new Error(`Expecting a single result, got ${results.length}`);\n        }\n        if (results.length == 1) {\n            return results[0];\n        }\n        return null;\n    }\n    warn(message) {\n        console.log(message);\n    }\n    splitValues(values, context) {\n        const valuesInRow = values[0].length;\n        const numValues = values.length * valuesInRow;\n        if (numValues <= this.maxValues) {\n            return [values];\n        }\n        let numRowsPerBatch = Math.floor(this.maxValues / valuesInRow);\n        const splitValues = [];\n        for (let i = 0; i < values.length; i += numRowsPerBatch) {\n            const aSplitValues = values.slice(i, i + numRowsPerBatch);\n            splitValues.push(aSplitValues);\n        }\n        return splitValues;\n    }\n    async ensureContext(context) {\n        return doEnsureContext(context);\n    }\n};\n__decorate([\n    Inject()\n], SqlDriver.prototype, \"activeQueries\", void 0);\n__decorate([\n    Inject()\n], SqlDriver.prototype, \"airportDatabase\", void 0);\n__decorate([\n    Inject()\n], SqlDriver.prototype, \"applicationUtils\", void 0);\n__decorate([\n    Inject()\n], SqlDriver.prototype, \"dbApplicationUtils\", void 0);\n__decorate([\n    Inject()\n], SqlDriver.prototype, \"entityStateManager\", void 0);\n__decorate([\n    Inject()\n], SqlDriver.prototype, \"objectResultParserFactory\", void 0);\n__decorate([\n    Inject()\n], SqlDriver.prototype, \"qMetadataUtils\", void 0);\n__decorate([\n    Inject()\n], SqlDriver.prototype, \"qValidator\", void 0);\n__decorate([\n    Inject()\n], SqlDriver.prototype, \"relationManager\", void 0);\n__decorate([\n    Inject()\n], SqlDriver.prototype, \"sqlQueryAdapter\", void 0);\n__decorate([\n    Inject()\n], SqlDriver.prototype, \"subStatementQueryGenerator\", void 0);\n__decorate([\n    Inject()\n], SqlDriver.prototype, \"transactionManager\", void 0);\n__decorate([\n    Inject()\n], SqlDriver.prototype, \"utils\", void 0);\nSqlDriver = __decorate([\n    Injected()\n], SqlDriver);\nexport { SqlDriver };\n//# sourceMappingURL=SqlDriver.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nlet QValidator = class QValidator {\n    validateInsertQEntity(dbEntity) {\n    }\n    validateReadFromEntity(relation) {\n    }\n    validateReadProperty(dbColumn) {\n    }\n    validateUpdateProperty(propertyName, dbEntity) {\n    }\n    validateUpdateColumn(dbColumn) {\n    }\n    validateReadQEntityProperty(applicationIndex, tableIndex, columnIndex) {\n    }\n    validateReadQEntityManyToOneRelation(applicationIndex, tableIndex, columnIndex) {\n    }\n    addFunctionAlias(functionAlias) {\n    }\n    addSubQueryAlias(subQueryAlias) {\n    }\n    validateAliasedFieldAccess(fieldAlias) {\n    }\n};\nQValidator = __decorate([\n    Injected()\n], QValidator);\nexport { QValidator };\n//# sourceMappingURL=Validator.js.map","import { lib } from '@airport/direction-indicator';\nimport { SubStatementSqlGenerator } from './sql/core/SubStatementSqlGenerator';\nimport { ObjectResultParserFactory } from './result/entity/ObjectResultParserFactory';\nimport { IdGenerator } from './store/IdGenerator';\nimport { QValidator } from './validation/Validator';\nimport { SqlDriver } from './store/SqlDriver';\nimport { STORE_DRIVER, TRANSACTION_MANAGER } from '@airport/terminal-map';\nimport { DB_APPLICATION_UTILS, ENTITY_STATE_MANAGER, SEQUENCE_GENERATOR } from '@airport/ground-control';\nimport { AIRPORT_DATABASE, APPLICATION_UTILS, Q_METADATA_UTILS, RELATION_MANAGER, UTILS } from '@airport/air-traffic-control';\nimport { ACTIVE_QUERIES } from '@airport/flight-number';\nconst fuelHydrantSystem = lib('fuel-hydrant-system');\nexport const SUB_STATEMENT_SQL_GENERATOR = fuelHydrantSystem.token({\n    class: SubStatementSqlGenerator,\n    interface: 'ISubStatementSqlGenerator',\n    token: 'SUB_STATEMENT_SQL_GENERATOR'\n});\nexport const ID_GENERATOR = fuelHydrantSystem.token({\n    class: IdGenerator,\n    interface: 'IIdGenerator',\n    token: 'ID_GENERATOR'\n});\nexport const OBJECT_RESULT_PARSER_FACTORY = fuelHydrantSystem.token({\n    class: ObjectResultParserFactory,\n    interface: 'IObjectResultParserFactory',\n    token: 'OBJECT_RESULT_PARSER_FACTORY'\n});\nexport const Q_VALIDATOR = fuelHydrantSystem.token({\n    class: QValidator,\n    interface: 'IValidator',\n    token: 'Q_VALIDATOR'\n});\nexport const SQL_QUERY_ADAPTOR = fuelHydrantSystem.token({\n    class: null,\n    interface: 'ISQLQueryAdaptor',\n    token: 'SQL_QUERY_ADAPTOR'\n});\nexport const ABSTRACT_SQL_DRIVER = fuelHydrantSystem.token({\n    class: SqlDriver,\n    interface: 'class SqlDriver',\n    token: 'ABSTRACT_SQL_DRIVER'\n});\nID_GENERATOR.setDependencies({\n    sequenceGenerator: SEQUENCE_GENERATOR\n});\nOBJECT_RESULT_PARSER_FACTORY.setDependencies({\n    applicationUtils: APPLICATION_UTILS,\n    entityStateManager: ENTITY_STATE_MANAGER,\n    utils: UTILS\n});\nABSTRACT_SQL_DRIVER.setDependencies({\n    activeQueries: ACTIVE_QUERIES,\n    airportDatabase: AIRPORT_DATABASE,\n    applicationUtils: APPLICATION_UTILS,\n    dbApplicationUtils: DB_APPLICATION_UTILS,\n    entityStateManager: ENTITY_STATE_MANAGER,\n    objectResultParserFactory: OBJECT_RESULT_PARSER_FACTORY,\n    qMetadataUtils: Q_METADATA_UTILS,\n    qValidator: Q_VALIDATOR,\n    relationManager: RELATION_MANAGER,\n    sqlQueryAdapter: SQL_QUERY_ADAPTOR,\n    subStatementQueryGenerator: SUB_STATEMENT_SQL_GENERATOR,\n    transactionManager: TRANSACTION_MANAGER,\n    utils: UTILS\n});\nSUB_STATEMENT_SQL_GENERATOR.setDependencies({\n    airportDatabase: AIRPORT_DATABASE,\n    applicationUtils: APPLICATION_UTILS,\n    entityStateManager: ENTITY_STATE_MANAGER,\n    qMetadataUtils: Q_METADATA_UTILS,\n    qValidator: Q_VALIDATOR,\n    relationManager: RELATION_MANAGER,\n    sqlQueryAdapter: SQL_QUERY_ADAPTOR,\n    storeDriver: STORE_DRIVER,\n    utils: UTILS\n});\n//# sourceMappingURL=tokens.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet DebugSynchronizationAdapter = class DebugSynchronizationAdapter {\n    async getTransactionsForRepository(repositorySource, repositoryGUID, sinceSyncTimestamp) {\n        const response = await this.client.getRepositoryTransactions(repositorySource, repositoryGUID, sinceSyncTimestamp);\n        const messages = [];\n        // NOTE: syncTimestamp is populated here because file sharing mechanisms\n        // (IPFS) won't be able to modify the messages themselves\n        for (const fragment of response) {\n            if (fragment.repositoryGUID !== repositoryGUID) {\n                console.error(`Got a reponse fragment for repository ${fragment.repositoryGUID}.\r\n    Expecting message fragments for repository: ${repositoryGUID}`);\n                continue;\n            }\n            for (const message of fragment.messages) {\n                message.syncTimestamp = fragment.syncTimestamp;\n                messages.push(message);\n            }\n        }\n        return messages;\n    }\n    async sendTransactions(repositorySource, messagesByRepository) {\n        let allSent = true;\n        for (const [repositoryGUID, messages] of messagesByRepository) {\n            try {\n                if (!await this.sendTransactionsForRepository(repositorySource, repositoryGUID, messages)) {\n                    allSent = false;\n                }\n            }\n            catch (e) {\n                console.error(e);\n                allSent = false;\n            }\n        }\n        return allSent;\n    }\n    async sendTransactionsForRepository(repositorySource, repositoryGUID, messages) {\n        if (!messages || !messages.length) {\n            return false;\n        }\n        const syncTimestamp = await this.client.sendRepositoryTransactions(repositorySource, repositoryGUID, messages);\n        if (!syncTimestamp) {\n            return false;\n        }\n        for (const message of messages) {\n            message.syncTimestamp = syncTimestamp;\n        }\n        return true;\n    }\n};\n__decorate([\n    Inject()\n], DebugSynchronizationAdapter.prototype, \"client\", void 0);\nDebugSynchronizationAdapter = __decorate([\n    Injected()\n], DebugSynchronizationAdapter);\nexport { DebugSynchronizationAdapter };\n//# sourceMappingURL=DebugSynchronizationAdapter.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet SynchronizationAdapterLoader = class SynchronizationAdapterLoader {\n    async load(synchronizationSource) {\n        switch (synchronizationSource) {\n            case 'IPFS': {\n                throw new Error(`Not Implemented`);\n            }\n            case 'localhost:9000': {\n                return this.debugSynchronizationAdapter;\n            }\n            default:\n                throw new Error(`Unexpected synchronization source: ${synchronizationSource}`);\n        }\n    }\n};\n__decorate([\n    Inject()\n], SynchronizationAdapterLoader.prototype, \"debugSynchronizationAdapter\", void 0);\nSynchronizationAdapterLoader = __decorate([\n    Injected()\n], SynchronizationAdapterLoader);\nexport { SynchronizationAdapterLoader };\n//# sourceMappingURL=SynchronizationAdapterLoader.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet SyncInActorChecker = class SyncInActorChecker {\n    async ensureActors(message, context) {\n        try {\n            let actorGUIDs = [];\n            let messageActorIndexMap = new Map();\n            for (let i = 0; i < message.actors.length; i++) {\n                const actor = message.actors[i];\n                if (typeof actor.GUID !== 'string' || actor.GUID.length !== 36) {\n                    throw new Error(`Invalid 'terminal.GUID'`);\n                }\n                this.checkActorApplication(actor, message);\n                this.checkActorTerminal(actor, message);\n                this.checkActorUserAccount(actor, message);\n                actorGUIDs.push(actor.GUID);\n                messageActorIndexMap.set(actor.GUID, i);\n                // Make sure id field is not in the input\n                delete actor._localId;\n            }\n            const actors = await this.actorDao.findByGUIDs(actorGUIDs);\n            for (const actor of actors) {\n                const messageUserAccountIndex = messageActorIndexMap.get(actor.GUID);\n                message.actors[messageUserAccountIndex] = actor;\n            }\n            const missingActors = message.actors\n                .filter(messageActor => !messageActor._localId);\n            if (missingActors.length) {\n                await this.actorDao.insert(missingActors, context);\n            }\n        }\n        catch (e) {\n            console.error(e);\n            return false;\n        }\n        return true;\n    }\n    checkActorApplication(actor, message) {\n        if (typeof actor.application !== 'number') {\n            throw new Error(`Expecting \"in-message index\" (number)\r\n\t\t\tin 'actor.terminal'`);\n        }\n        const application = message.applications[actor.application];\n        if (!application) {\n            throw new Error(`Did not find actor.application with \"in-message index\" ${actor.application}`);\n        }\n        actor.application = application;\n    }\n    checkActorTerminal(actor, message) {\n        if (typeof actor.terminal !== 'number') {\n            throw new Error(`Expecting \"in-message index\" (number)\r\n\t\t\tin 'actor.terminal'`);\n        }\n        const terminal = message.terminals[actor.terminal];\n        if (!terminal) {\n            throw new Error(`Did not find actor.terminal with \"in-message index\" ${actor.terminal}`);\n        }\n        actor.terminal = terminal;\n    }\n    checkActorUserAccount(actor, message) {\n        if (typeof actor.userAccount !== 'number') {\n            throw new Error(`Expecting \"in-message index\" (number)\r\n\t\t\tin 'actor.userAccount'`);\n        }\n        const userAccount = message.userAccounts[actor.userAccount];\n        if (!userAccount) {\n            throw new Error(`Did not find actor.userAccount with \"in-message index\" ${actor.userAccount}`);\n        }\n        actor.userAccount = userAccount;\n    }\n};\n__decorate([\n    Inject()\n], SyncInActorChecker.prototype, \"actorDao\", void 0);\nSyncInActorChecker = __decorate([\n    Injected()\n], SyncInActorChecker);\nexport { SyncInActorChecker };\n//# sourceMappingURL=SyncInActorChecker.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ApplicationStatus } from '@airport/ground-control';\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet SyncInApplicationChecker = class SyncInApplicationChecker {\n    async ensureApplications(message, context) {\n        try {\n            let applicationCheckMap = await this.checkApplicationsAndDomains(message, context);\n            for (let i = 0; i < message.applications.length; i++) {\n                let application = message.applications[i];\n                message.applications[i] = applicationCheckMap\n                    .get(application.domain.name).get(application.name)\n                    .application;\n            }\n        }\n        catch (e) {\n            console.error(e);\n            return false;\n        }\n        return true;\n    }\n    async checkApplicationsAndDomains(message, context) {\n        const { allApplication_Names, domainCheckMap, domainNames, applicationCheckMap } = this.getNames(message);\n        const applications = await this.applicationDao\n            .findByDomain_NamesAndApplication_Names(domainNames, allApplication_Names);\n        for (let application of applications) {\n            let domainName = application.domain.name;\n            let applicationName = application.name;\n            for (let [_, applicationCheck] of applicationCheckMap.get(domainName)) {\n                if (applicationCheck.applicationName === applicationName) {\n                    let domainCheck = domainCheckMap.get(domainName);\n                    domainCheck.found = true;\n                    domainCheck.domain = application.domain;\n                    applicationCheck.found = true;\n                    applicationCheck.application = application;\n                }\n            }\n        }\n        let domainsToCreate = [];\n        for (let [name, domainCheck] of domainCheckMap) {\n            if (domainCheck.found) {\n                continue;\n            }\n            let domain = {\n                _localId: null,\n                name\n            };\n            domainCheck.domain = domain;\n            domainsToCreate.push(domain);\n        }\n        if (domainsToCreate.length) {\n            await this.domainDao.insert(domainsToCreate);\n        }\n        let applicationsToCreate = [];\n        for (let [domainName, applicationChecksByName] of applicationCheckMap) {\n            for (let [name, applicationCheck] of applicationChecksByName) {\n                if (applicationCheck.found) {\n                    continue;\n                }\n                let domain = domainCheckMap.get(domainName).domain;\n                let application = {\n                    domain,\n                    index: null,\n                    name,\n                    scope: 'private',\n                    status: ApplicationStatus.STUB,\n                    signature: 'localhost'\n                };\n                applicationCheck.application = application;\n                applicationsToCreate.push(application);\n            }\n        }\n        if (applicationsToCreate.length) {\n            await this.applicationDao.insert(applicationsToCreate, context);\n        }\n        return applicationCheckMap;\n    }\n    getNames(message) {\n        if (!message.applications || !(message.applications instanceof Array)) {\n            throw new Error(`Did not find applications in RepositorySynchronizationMessage.`);\n        }\n        const domainCheckMap = new Map();\n        const applicationCheckMap = new Map();\n        for (let application of message.applications) {\n            if (typeof application !== 'object') {\n                throw new Error(`Invalid ApplicationVersion.application`);\n            }\n            if (!application.name || typeof application.name !== 'string') {\n                throw new Error(`Invalid ApplicationVersion.Application.name`);\n            }\n            const domain = application.domain;\n            if (typeof domain !== 'object') {\n                throw new Error(`Invalid ApplicationVersion.Application.Domain`);\n            }\n            if (!domain.name || typeof domain.name !== 'string') {\n                throw new Error(`Invalid ApplicationVersion.Application.Domain.name`);\n            }\n            let applicationChecksForDomain = applicationCheckMap.get(domain.name);\n            if (!applicationChecksForDomain) {\n                applicationChecksForDomain = new Map();\n                applicationCheckMap.set(domain.name, applicationChecksForDomain);\n            }\n            if (!applicationChecksForDomain.has(application.name)) {\n                applicationChecksForDomain.set(application.name, {\n                    applicationName: application.name,\n                });\n            }\n            let domainCheck = domainCheckMap.get(domain.name);\n            if (!domainCheck) {\n                domainCheckMap.set(domain.name, {\n                    domainName: domain.name\n                });\n            }\n        }\n        const domainNames = [];\n        const allApplication_Names = [];\n        for (const [domainName, applicationChecksForDomainMap] of applicationCheckMap) {\n            domainNames.push(domainName);\n            for (let [applicationName, _] of applicationChecksForDomainMap) {\n                allApplication_Names.push(applicationName);\n            }\n        }\n        return {\n            allApplication_Names,\n            domainCheckMap,\n            domainNames,\n            applicationCheckMap\n        };\n    }\n};\n__decorate([\n    Inject()\n], SyncInApplicationChecker.prototype, \"applicationDao\", void 0);\n__decorate([\n    Inject()\n], SyncInApplicationChecker.prototype, \"domainDao\", void 0);\nSyncInApplicationChecker = __decorate([\n    Injected()\n], SyncInApplicationChecker);\nexport { SyncInApplicationChecker };\n//# sourceMappingURL=SyncInApplicationChecker.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet SyncInApplicationVersionChecker = class SyncInApplicationVersionChecker {\n    async ensureApplicationVersions(message, context) {\n        try {\n            let applicationCheckMap = await this.checkVersionsApplicationsDomains(message, context);\n            for (let i = 0; i < message.applicationVersions.length; i++) {\n                const applicationVersion = message.applicationVersions[i];\n                message.applicationVersions[i] = applicationCheckMap\n                    .get(applicationVersion.application.domain.name).get(applicationVersion.application.name)\n                    .applicationVersion;\n            }\n        }\n        catch (e) {\n            console.error(e);\n            return false;\n        }\n        return true;\n    }\n    async checkVersionsApplicationsDomains(message, context) {\n        const { allApplication_Names, domainNames, applicationVersionCheckMap } = this.getNames(message);\n        const applicationVersions = await this.applicationVersionDao.findByDomain_NamesAndApplication_Names(domainNames, allApplication_Names);\n        let lastDomain_Name;\n        let lastApplication_Name;\n        for (let applicationVersion of applicationVersions) {\n            let domainName = applicationVersion.application.domain.name;\n            let applicationName = applicationVersion.application.name;\n            if (lastDomain_Name !== domainName\n                && lastApplication_Name !== applicationName) {\n                let applicationVersionNumber = applicationVersion.integerVersion;\n                for (let [_, applicationCheck] of applicationVersionCheckMap.get(domainName)) {\n                    if (applicationCheck.applicationName === applicationName) {\n                        applicationCheck.found = true;\n                        if (applicationCheck.applicationVersionNumber > applicationVersionNumber) {\n                            throw new Error(`Installed application ${applicationName} for domain ${domainName}\r\n\tis at a lower version ${applicationVersionNumber} than needed in message ${applicationCheck.applicationVersionNumber}.`);\n                        }\n                        applicationCheck.applicationVersion = applicationVersion;\n                    }\n                }\n                lastDomain_Name = domainName;\n                lastApplication_Name = applicationName;\n            }\n        }\n        for (const [domainName, applicationChecks] of applicationVersionCheckMap) {\n            for (let [_, applicationCheck] of applicationChecks) {\n                if (!applicationCheck.found) {\n                    // TODO: download and install the application\n                    throw new Error(`Application ${applicationCheck.applicationName} for domain ${domainName} is not installed.`);\n                }\n            }\n        }\n        return applicationVersionCheckMap;\n    }\n    getNames(message) {\n        if (!message.applicationVersions || !(message.applicationVersions instanceof Array)) {\n            throw new Error(`Did not find applicationVersions in RepositorySynchronizationMessage.`);\n        }\n        const applicationVersionCheckMap = new Map();\n        for (let applicationVersion of message.applicationVersions) {\n            if (!applicationVersion.integerVersion || typeof applicationVersion.integerVersion !== 'number') {\n                throw new Error(`Invalid ApplicationVersion.integerVersion.`);\n            }\n            const application = message.applications[applicationVersion.application];\n            if (typeof application !== 'object') {\n                throw new Error(`Invalid ApplicationVersion.application`);\n            }\n            applicationVersion.application = application;\n            const domain = application.domain;\n            let applicationChecksForDomain = applicationVersionCheckMap.get(domain.name);\n            if (!applicationChecksForDomain) {\n                applicationChecksForDomain = new Map();\n                applicationVersionCheckMap.set(domain.name, applicationChecksForDomain);\n            }\n            if (!applicationChecksForDomain.has(application.name)) {\n                applicationChecksForDomain.set(application.name, {\n                    applicationName: application.name,\n                    applicationVersionNumber: applicationVersion.integerVersion\n                });\n            }\n        }\n        const domainNames = [];\n        const allApplication_Names = [];\n        for (const [domainName, applicationChecksForDomainMap] of applicationVersionCheckMap) {\n            domainNames.push(domainName);\n            for (let [applicationName, _] of applicationChecksForDomainMap) {\n                allApplication_Names.push(applicationName);\n            }\n        }\n        return {\n            allApplication_Names,\n            domainNames,\n            applicationVersionCheckMap\n        };\n    }\n};\n__decorate([\n    Inject()\n], SyncInApplicationVersionChecker.prototype, \"applicationVersionDao\", void 0);\nSyncInApplicationVersionChecker = __decorate([\n    Injected()\n], SyncInApplicationVersionChecker);\nexport { SyncInApplicationVersionChecker };\n//# sourceMappingURL=SyncInApplicationVersionChecker.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet SyncInChecker = class SyncInChecker {\n    /**\n     * Check the message and load all required auxiliary entities.\n     */\n    async checkMessage(message, context) {\n        // FIXME: replace as many DB lookups as possible with Terminal State lookups\n        if (!await this.syncInUserAccountChecker.ensureUserAccounts(message, context)) {\n            return false;\n        }\n        if (!await this.syncInTerminalChecker.ensureTerminals(message, context)) {\n            return false;\n        }\n        if (!await this.syncInApplicationChecker.ensureApplications(message, context)) {\n            return false;\n        }\n        if (!await this.syncInActorChecker.ensureActors(message, context)) {\n            return false;\n        }\n        if (!await this.syncInRepositoryChecker.ensureRepositories(message, context)) {\n            return false;\n        }\n        if (!await this.syncInApplicationVersionChecker.ensureApplicationVersions(message, context)) {\n            return false;\n        }\n        if (!await this.syncInDataChecker.checkData(message, context)) {\n            return false;\n        }\n        return true;\n    }\n};\n__decorate([\n    Inject()\n], SyncInChecker.prototype, \"syncInActorChecker\", void 0);\n__decorate([\n    Inject()\n], SyncInChecker.prototype, \"syncInApplicationChecker\", void 0);\n__decorate([\n    Inject()\n], SyncInChecker.prototype, \"syncInApplicationVersionChecker\", void 0);\n__decorate([\n    Inject()\n], SyncInChecker.prototype, \"syncInDataChecker\", void 0);\n__decorate([\n    Inject()\n], SyncInChecker.prototype, \"syncInRepositoryChecker\", void 0);\n__decorate([\n    Inject()\n], SyncInChecker.prototype, \"syncInTerminalChecker\", void 0);\n__decorate([\n    Inject()\n], SyncInChecker.prototype, \"syncInUserAccountChecker\", void 0);\nSyncInChecker = __decorate([\n    Injected()\n], SyncInChecker);\nexport { SyncInChecker };\n//# sourceMappingURL=SyncInChecker.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChangeType, airEntity } from '@airport/ground-control';\nimport { getSysWideOpIds } from '@airport/air-traffic-control';\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { RepositoryTransactionType } from '@airport/holding-pattern';\nlet SyncInDataChecker = class SyncInDataChecker {\n    /**\n     * Every dataMessage.data.repoTransHistories array must be sorted before entering\n     * this method.\n     *\n     * @param {IDataToTM[]} dataMessagesWithCompatibleApplications\n     * @returns {DataCheckResults}\n     */\n    async checkData(message, context) {\n        const history = message.history;\n        try {\n            if (!history || typeof history !== 'object') {\n                throw new Error(`Invalid RepositorySynchronizationMessage.history`);\n            }\n            if (typeof history.GUID !== 'string' || history.GUID.length !== 36) {\n                return false;\n            }\n            if (!history.operationHistory || !(history.operationHistory instanceof Array)) {\n                return false;\n            }\n            if (!history.saveTimestamp || typeof history.saveTimestamp !== 'number') {\n                throw new Error(`Invalid RepositorySynchronizationMessage.history.saveTimestamp`);\n            }\n            if (history.transactionHistory) {\n                throw new Error(`RepositorySynchronizationMessage.history.transactionHistory cannot be specified`);\n            }\n            if (history.repositoryTransactionType) {\n                throw new Error(`RepositorySynchronizationMessage.history.repositoryTransactionType cannot be specified`);\n            }\n            if (history.syncTimestamp) {\n                throw new Error(`RepositorySynchronizationMessage.history.syncTimestamp cannot be specified`);\n            }\n            // Repository is already set in SyncInRepositoryChecker\n            history.repositoryTransactionType = RepositoryTransactionType.REMOTE;\n            history.syncTimestamp = message.syncTimestamp;\n            delete history._localId;\n            const applicationEntityMap = await this.populateApplicationEntityMap(message);\n            await this.checkOperationHistories(message, applicationEntityMap, context);\n        }\n        catch (e) {\n            console.error(e);\n            return false;\n        }\n        return true;\n    }\n    async populateApplicationEntityMap(message) {\n        const applicationVersionsByIds = this.terminalStore.getAllApplicationVersionsByIds();\n        const applicationEntityMap = new Map();\n        for (const messageApplicationVersion of message.applicationVersions) {\n            const applicationVersion = applicationVersionsByIds[messageApplicationVersion._localId];\n            for (const applicationEntity of applicationVersion.entities) {\n                let entitiesForDomain = applicationEntityMap.get(applicationVersion.application.domain.name);\n                if (!entitiesForDomain) {\n                    entitiesForDomain = new Map();\n                    applicationEntityMap.set(applicationVersion.application.domain.name, entitiesForDomain);\n                }\n                let entitiesForApplication = entitiesForDomain.get(applicationVersion.application.name);\n                if (!entitiesForApplication) {\n                    entitiesForApplication = new Map();\n                    entitiesForDomain.set(applicationVersion.application.name, entitiesForApplication);\n                }\n                entitiesForApplication.set(applicationEntity.index, applicationEntity);\n            }\n        }\n        return applicationEntityMap;\n    }\n    async checkOperationHistories(message, applicationEntityMap, context) {\n        const history = message.history;\n        if (!(history.operationHistory instanceof Array) || !history.operationHistory.length) {\n            throw new Error(`Invalid RepositorySynchronizationMessage.history.operationHistory`);\n        }\n        const systemWideOperationIds = getSysWideOpIds(history.operationHistory.length, this.airportDatabase, this.sequenceGenerator);\n        let orderNumber = 0;\n        for (let i = 0; i < history.operationHistory.length; i++) {\n            const operationHistory = history.operationHistory[i];\n            if (typeof operationHistory !== 'object') {\n                throw new Error(`Invalid operationHistory`);\n            }\n            if (operationHistory.orderNumber) {\n                throw new Error(`RepositorySynchronizationMessage.history -> operationHistory.orderNumber cannot be specified,\r\n\t\t\t\tthe position of orderHistory record determines it's order`);\n            }\n            operationHistory.orderNumber = ++orderNumber;\n            switch (operationHistory.changeType) {\n                case ChangeType.DELETE_ROWS:\n                case ChangeType.INSERT_VALUES:\n                case ChangeType.UPDATE_ROWS:\n                    break;\n                default:\n                    throw new Error(`Invalid operationHistory.changeType: ${operationHistory.changeType}`);\n            }\n            if (typeof operationHistory.entity !== 'object') {\n                throw new Error(`Invalid operationHistory.entity`);\n            }\n            if (typeof operationHistory.entity.applicationVersion !== 'number') {\n                throw new Error(`Expecting \"in-message index\" (number)\r\n\t\t\t\t\tin 'operationHistory.entity.applicationVersion'`);\n            }\n            const actor = message.actors[operationHistory.actor];\n            if (!actor) {\n                throw new Error(`Cannot find Actor for \"in-message id\" RepositorySynchronizationMessage.history.actor`);\n            }\n            operationHistory.actor = actor;\n            const applicationVersion = message.applicationVersions[operationHistory.entity.applicationVersion];\n            if (!applicationVersion) {\n                throw new Error(`Invalid index into message.applicationVersions [${operationHistory.entity.applicationVersion}],\r\n\t\t\t\tin operationHistory.entity.applicationVersion`);\n            }\n            const applicationEntity = applicationEntityMap.get(applicationVersion.application.domain.name)\n                .get(applicationVersion.application.name).get(operationHistory.entity.index);\n            if (!applicationEntity) {\n                throw new Error(`Invalid operationHistory.entity.index: ${operationHistory.entity.index}`);\n            }\n            operationHistory.entity = applicationEntity;\n            if (operationHistory.repositoryTransactionHistory) {\n                throw new Error(`RepositorySynchronizationMessage.history -> operationHistory.repositoryTransactionHistory cannot be specified`);\n            }\n            operationHistory.repositoryTransactionHistory = history;\n            if (operationHistory.systemWideOperationId) {\n                throw new Error(`RepositorySynchronizationMessage.history -> operationHistory.systemWideOperationId cannot be specified`);\n            }\n            operationHistory.systemWideOperationId = systemWideOperationIds[i];\n            delete operationHistory._localId;\n            let originalRepositoryColumnIndex;\n            let originalActorColumnIndex;\n            let actorIdColumnMapByIndex = new Map();\n            let repositoryIdColumnMapByIndex = new Map();\n            for (const column of operationHistory.entity.columns) {\n                switch (column.name) {\n                    case airEntity.ORIGINAL_ACTOR_ID:\n                        actorIdColumnMapByIndex.set(column.index, column);\n                        originalActorColumnIndex = column.index;\n                        break;\n                    case airEntity.ORIGINAL_REPOSITORY_ID:\n                        repositoryIdColumnMapByIndex.set(column.index, column);\n                        originalRepositoryColumnIndex = column.index;\n                        break;\n                }\n                if (/.*_AID_[\\d]+$/.test(column.name)\n                    && column.manyRelationColumns.length) {\n                    actorIdColumnMapByIndex.set(column.index, column);\n                }\n                if (/.*_RID_[\\d]+$/.test(column.name)\n                    && column.manyRelationColumns.length) {\n                    repositoryIdColumnMapByIndex.set(column.index, column);\n                }\n            }\n            await this.checkRecordHistories(operationHistory, actorIdColumnMapByIndex, repositoryIdColumnMapByIndex, message, context);\n        }\n    }\n    async checkRecordHistories(operationHistory, actorIdColumnMapByIndex, repositoryIdColumnMapByIndex, message, context) {\n        const recordHistories = operationHistory.recordHistory;\n        if (!(recordHistories instanceof Array) || !recordHistories.length) {\n            throw new Error(`Inalid RepositorySynchronizationMessage.history -> operationHistory.recordHistory`);\n        }\n        for (const recordHistory of recordHistories) {\n            if (!recordHistory._actorRecordId || typeof recordHistory._actorRecordId !== 'number') {\n                throw new Error(`Invalid RepositorySynchronizationMessage.history -> operationHistory.recordHistory._actorRecordId`);\n            }\n            switch (operationHistory.changeType) {\n                case ChangeType.INSERT_VALUES:\n                    if (recordHistory.actor) {\n                        throw new Error(`Cannot specify RepositorySynchronizationMessage.history -> operationHistory.recordHistory.actor\r\nfor ChangeType.INSERT_VALUES`);\n                    }\n                    recordHistory.actor = operationHistory.actor;\n                    break;\n                case ChangeType.DELETE_ROWS:\n                case ChangeType.UPDATE_ROWS: {\n                    // If no actor is present on record level its the same actor that created the repositoryTransactionHistory\n                    if (recordHistory.actor === undefined) {\n                        recordHistory.actor = operationHistory.actor;\n                    }\n                    else {\n                        const actor = message.actors[recordHistory.actor];\n                        if (!actor) {\n                            throw new Error(`Did find Actor for \"in-message id\" in RepositorySynchronizationMessage.history -> operationHistory.actor`);\n                        }\n                        recordHistory.actor = actor;\n                    }\n                    break;\n                }\n            }\n            if (recordHistory.operationHistory) {\n                throw new Error(`RepositorySynchronizationMessage.history -> operationHistory.recordHistory.operationHistory cannot be specified`);\n            }\n            this.checkNewValues(recordHistory, actorIdColumnMapByIndex, repositoryIdColumnMapByIndex, operationHistory, message, context);\n            this.checkOldValues(recordHistory, actorIdColumnMapByIndex, repositoryIdColumnMapByIndex, operationHistory, message, context);\n            recordHistory.operationHistory = operationHistory;\n            delete recordHistory._localId;\n        }\n    }\n    checkNewValues(recordHistory, actorIdColumnMapByIndex, repositoryIdColumnMapByIndex, operationHistory, message, context) {\n        switch (operationHistory.changeType) {\n            case ChangeType.DELETE_ROWS:\n                if (recordHistory.newValues) {\n                    throw new Error(`Cannot specify RepositorySynchronizationMessage.history -> operationHistory.recordHistory.newValues\r\nfor ChangeType.DELETE_ROWS`);\n                }\n                return;\n            case ChangeType.INSERT_VALUES:\n            case ChangeType.UPDATE_ROWS:\n                if (!(recordHistory.newValues instanceof Array) || !recordHistory.newValues.length) {\n                    throw new Error(`Must specify RepositorySynchronizationMessage.history -> operationHistory.recordHistory.newValues\r\nfor ChangeType.INSERT_VALUES|UPDATE_ROWS`);\n                }\n                break;\n        }\n        for (const newValue of recordHistory.newValues) {\n            if (newValue.recordHistory) {\n                throw new Error(`Cannot specify RepositorySynchronizationMessage.history -> operationHistory.recordHistory.newValues.recordHistory`);\n            }\n            newValue.recordHistory = recordHistory;\n            if (typeof newValue.columnIndex !== 'number') {\n                throw new Error(`Invalid RepositorySynchronizationMessage.history -> operationHistory.recordHistory.newValues.columnIndex`);\n            }\n            if (typeof newValue.newValue === undefined) {\n                throw new Error(`Invalid RepositorySynchronizationMessage.history -> operationHistory.recordHistory.newValues.newValue`);\n            }\n        }\n        for (const newValue of recordHistory.newValues) {\n            const actorIdColumn = actorIdColumnMapByIndex.get(newValue.columnIndex);\n            if (actorIdColumn) {\n                const originalActor = message.actors[newValue.newValue];\n                if (!originalActor) {\n                    throw new Error(`Invalid RepositorySynchronizationMessage.history -> operationHistory.recordHistory.newValues.newValue\r\nValue is for ${actorIdColumn.name} and could find RepositorySynchronizationMessage.actors[${newValue.newValue}]`);\n                }\n                newValue.newValue = originalActor._localId;\n            }\n            const repositoryIdColumn = repositoryIdColumnMapByIndex.get(newValue.columnIndex);\n            if (repositoryIdColumn) {\n                if (newValue.newValue === -1) {\n                    newValue.newValue = message.history.repository._localId;\n                }\n                else {\n                    const originalRepository = message.referencedRepositories[newValue.newValue];\n                    if (!originalRepository) {\n                        throw new Error(`Invalid RepositorySynchronizationMessage.history -> operationHistory.recordHistory.newValues.newValue\r\n\tValue is for ${repositoryIdColumn.name} and could find RepositorySynchronizationMessage.referencedRepositories[${newValue.newValue}]`);\n                    }\n                    newValue.newValue = originalRepository._localId;\n                }\n            }\n        }\n    }\n    checkOldValues(recordHistory, actorIdColumnMapByIndex, repositoryIdColumnMapByIndex, operationHistory, message, context) {\n        switch (operationHistory.changeType) {\n            case ChangeType.DELETE_ROWS:\n            case ChangeType.INSERT_VALUES:\n                if (recordHistory.oldValues) {\n                    throw new Error(`Cannot specify RepositorySynchronizationMessage.history -> operationHistory.recordHistory.oldValues\r\nfor ChangeType.DELETE_ROWS|INSERT_VALUES`);\n                }\n                return;\n            case ChangeType.UPDATE_ROWS:\n                if (!(recordHistory.newValues instanceof Array) || !recordHistory.oldValues.length) {\n                    throw new Error(`Must specify RepositorySynchronizationMessage.history -> operationHistory.recordHistory.oldValues\r\nfor ChangeType.UPDATE_ROWS`);\n                }\n                break;\n        }\n        for (const oldValue of recordHistory.oldValues) {\n            if (oldValue.recordHistory) {\n                throw new Error(`Cannot specify RepositorySynchronizationMessage.history -> operationHistory.recordHistory.newValues.recordHistory`);\n            }\n            oldValue.recordHistory = recordHistory;\n            if (typeof oldValue.columnIndex !== 'number') {\n                throw new Error(`Invalid RepositorySynchronizationMessage.history -> operationHistory.recordHistory.oldValues.columnIndex`);\n            }\n            if (typeof oldValue.oldValue === undefined) {\n                throw new Error(`Invalid RepositorySynchronizationMessage.history -> operationHistory.recordHistory.oldValues.oldValue`);\n            }\n        }\n        for (const oldValue of recordHistory.oldValues) {\n            const actorIdColumn = actorIdColumnMapByIndex.get(oldValue.columnIndex);\n            if (actorIdColumn) {\n                const originalActor = message.actors[oldValue.oldValue];\n                if (!originalActor) {\n                    throw new Error(`Invalid RepositorySynchronizationMessage.history -> operationHistory.recordHistory.oldValues.oldValue\r\nValue is for ORIGINAL_ACTOR_ID and could find RepositorySynchronizationMessage.actors[${oldValue.oldValue}]`);\n                }\n                oldValue.oldValue = originalActor._localId;\n            }\n            const repositoryIdColumn = repositoryIdColumnMapByIndex.get(oldValue.columnIndex);\n            if (repositoryIdColumn) {\n                const originalRepository = message.referencedRepositories[oldValue.oldValue];\n                if (!originalRepository) {\n                    throw new Error(`Invalid RepositorySynchronizationMessage.history -> operationHistory.recordHistory.oldValues.oldValue\r\nValue is for ORIGINAL_REPOSITORY_ID and could find RepositorySynchronizationMessage.referencedRepositories[${oldValue.oldValue}]`);\n                }\n                oldValue.oldValue = originalRepository._localId;\n            }\n        }\n    }\n};\n__decorate([\n    Inject()\n], SyncInDataChecker.prototype, \"airportDatabase\", void 0);\n__decorate([\n    Inject()\n], SyncInDataChecker.prototype, \"sequenceGenerator\", void 0);\n__decorate([\n    Inject()\n], SyncInDataChecker.prototype, \"terminalStore\", void 0);\nSyncInDataChecker = __decorate([\n    Injected()\n], SyncInDataChecker);\nexport { SyncInDataChecker };\n//# sourceMappingURL=SyncInDataChecker.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet SyncInRepositoryChecker = class SyncInRepositoryChecker {\n    async ensureRepositories(message, context) {\n        try {\n            let repositoryGUIDs = [];\n            let messageRepositoryIndexMap = new Map();\n            for (let i = 0; i < message.referencedRepositories.length; i++) {\n                this.checkRepository(message.referencedRepositories[i], i, repositoryGUIDs, messageRepositoryIndexMap, message);\n            }\n            const history = message.history;\n            if (history.isRepositoryCreation) {\n                if (typeof history.repository !== 'object') {\n                    throw new Error(`Serialized RepositorySynchronizationMessage.history.repository should be an object\r\n\tif RepositorySynchronizationMessage.history.isRepositoryCreation === true`);\n                }\n                this.checkRepository(history.repository, null, repositoryGUIDs, messageRepositoryIndexMap, message);\n            }\n            else {\n                if (typeof history.repository !== 'string') {\n                    throw new Error(`Serialized RepositorySynchronizationMessage.history.repository should be a string\r\n\tif RepositorySynchronizationMessage.history.isRepositoryCreation === false`);\n                }\n                repositoryGUIDs.push(history.repository);\n            }\n            const repositories = await this.repositoryDao.findByGUIDs(repositoryGUIDs);\n            for (const repository of repositories) {\n                const messageUserAccountIndex = messageRepositoryIndexMap.get(repository.GUID);\n                if (messageUserAccountIndex || messageUserAccountIndex === 0) {\n                    message.referencedRepositories[messageUserAccountIndex] = repository;\n                }\n                else {\n                    // Populating ahead of potential insert is OK, object\n                    // gets modified with required state on an insert\n                    history.repository = repository;\n                }\n            }\n            const missingRepositories = message.referencedRepositories\n                .filter(messageRepository => !messageRepository._localId);\n            if (typeof history.repository !== 'object') {\n                throw new Error(`Repository with GUID ${history.repository} is not\r\n\t\t\t\t\tpresent and cannot be synced\r\n\tThis RepositorySynchronizationMessage is for an existing repository and that\r\n\trepository must already be loaded in this database for this message to be\r\n\tprocessed.`);\n            }\n            else if (!history.repository._localId) {\n                missingRepositories.push(history.repository);\n            }\n            if (missingRepositories.length) {\n                await this.repositoryDao.insert(missingRepositories, context);\n            }\n        }\n        catch (e) {\n            console.error(e);\n            return false;\n        }\n        return true;\n    }\n    checkRepository(repository, repositoryIndex, repositoryGUIDs, messageRepositoryIndexMap, message) {\n        if (typeof repository.ageSuitability !== 'number') {\n            throw new Error(`Invalid 'repository.ageSuitability'`);\n        }\n        if (!repository.createdAt || typeof repository.createdAt !== 'string') {\n            throw new Error(`Invalid 'repository.createdAt'`);\n        }\n        repository.createdAt = new Date(repository.createdAt);\n        if (typeof repository.immutable !== 'boolean') {\n            throw new Error(`Invalid 'repository.immutable'`);\n        }\n        if (!repository.source || typeof repository.source !== 'string') {\n            throw new Error(`Invalid 'repository.source'`);\n        }\n        if (typeof repository.GUID !== 'string' || repository.GUID.length !== 36) {\n            throw new Error(`Invalid 'repository.GUID'`);\n        }\n        if (typeof repository.owner !== 'number') {\n            throw new Error(`Expecting \"in-message index\" (number)\r\n\t\t\t\tin 'repository.owner'`);\n        }\n        const userAccount = message.userAccounts[repository.owner];\n        if (!userAccount) {\n            throw new Error(`Did not find repository.owner (UserAccount) with \"in-message index\" ${repository.owner}`);\n        }\n        repository.owner = userAccount;\n        repositoryGUIDs.push(repository.GUID);\n        if (typeof repositoryIndex === 'number') {\n            messageRepositoryIndexMap.set(repository.GUID, repositoryIndex);\n        }\n        // Make sure id field is not in the input\n        delete repository._localId;\n    }\n};\n__decorate([\n    Inject()\n], SyncInRepositoryChecker.prototype, \"repositoryDao\", void 0);\nSyncInRepositoryChecker = __decorate([\n    Injected()\n], SyncInRepositoryChecker);\nexport { SyncInRepositoryChecker };\n//# sourceMappingURL=SyncInRepositoryChecker.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet SyncInTerminalChecker = class SyncInTerminalChecker {\n    async ensureTerminals(message, context) {\n        try {\n            let terminalGUIDs = [];\n            let messageTerminalIndexMap = new Map();\n            for (let i = 0; i < message.terminals.length; i++) {\n                const terminal = message.terminals[i];\n                if (typeof terminal.owner !== 'number') {\n                    throw new Error(`Expecting \"in-message index\" (number)\r\n\t\t\t\t\tin 'terminal.owner' of RepositorySynchronizationMessage.terminals`);\n                }\n                if (typeof terminal.GUID !== 'string' || terminal.GUID.length !== 36) {\n                    throw new Error(`Invalid 'terminal.GUID' in RepositorySynchronizationMessage.terminals`);\n                }\n                if (terminal.isLocal !== undefined) {\n                    throw new Error(`'terminal.isLocal' cannot defined in RepositorySynchronizationMessage.terminals`);\n                }\n                terminal.isLocal = false;\n                const owner = message.userAccounts[terminal.owner];\n                if (!owner) {\n                    throw new Error(`Did not find userAccount for terminal.owner with \"in-message index\" ${terminal.owner}\r\n\t\t\t\t\t\tfor RepositorySynchronizationMessage.terminals`);\n                }\n                terminal.owner = owner;\n                terminalGUIDs.push(terminal.GUID);\n                messageTerminalIndexMap.set(terminal.GUID, i);\n                // Make sure id field is not in the input\n                delete terminal._localId;\n            }\n            const terminals = await this.terminalDao.findByGUIDs(terminalGUIDs);\n            for (const terminal of terminals) {\n                const messageUserAccountIndex = messageTerminalIndexMap.get(terminal.GUID);\n                message.terminals[messageUserAccountIndex] = terminal;\n            }\n            const missingTerminals = message.terminals\n                .filter(messageTerminal => !messageTerminal._localId);\n            if (missingTerminals.length) {\n                await this.addMissingTerminals(missingTerminals, context);\n            }\n        }\n        catch (e) {\n            console.error(e);\n            return false;\n        }\n        return true;\n    }\n    async addMissingTerminals(missingTerminals, context) {\n        for (const terminal of missingTerminals) {\n            terminal.isLocal = false;\n        }\n        await this.terminalDao.insert(missingTerminals, context);\n    }\n};\n__decorate([\n    Inject()\n], SyncInTerminalChecker.prototype, \"terminalDao\", void 0);\nSyncInTerminalChecker = __decorate([\n    Injected()\n], SyncInTerminalChecker);\nexport { SyncInTerminalChecker };\n//# sourceMappingURL=SyncInTerminalChecker.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet SyncInUserAccountChecker = class SyncInUserAccountChecker {\n    async ensureUserAccounts(message, context) {\n        try {\n            let userAccountGUIDs = [];\n            let messageUserAccountIndexMap = new Map();\n            for (let i = 0; i < message.userAccounts.length; i++) {\n                const userAccount = message.userAccounts[i];\n                if (typeof userAccount.GUID !== 'string' || userAccount.GUID.length !== 36) {\n                    throw new Error(`Invalid 'userAccount.GUID'`);\n                }\n                if (typeof userAccount.username !== 'string' || userAccount.username.length < 3) {\n                    throw new Error(`Invalid 'userAccount.username'`);\n                }\n                userAccountGUIDs.push(userAccount.GUID);\n                messageUserAccountIndexMap.set(userAccount.GUID, i);\n                // Make sure id field is not in the input\n                delete userAccount._localId;\n            }\n            const userAccounts = await this.userAccountDao.findByGUIDs(userAccountGUIDs);\n            for (const userAccount of userAccounts) {\n                const messageUserAccountIndex = messageUserAccountIndexMap.get(userAccount.GUID);\n                message.userAccounts[messageUserAccountIndex] = userAccount;\n            }\n            const missingUserAccounts = message.userAccounts.filter(messageUserAccount => !messageUserAccount._localId);\n            if (missingUserAccounts.length) {\n                await this.addMissingUserAccounts(missingUserAccounts, context);\n            }\n        }\n        catch (e) {\n            console.error(e);\n            return false;\n        }\n        return true;\n    }\n    async addMissingUserAccounts(missingUserAccounts, context) {\n        for (const userAccount of missingUserAccounts) {\n            if (!userAccount.username || typeof userAccount.username !== 'string') {\n                throw new Error(`Invalid UserAccount.username ${userAccount.username}`);\n            }\n        }\n        await this.userAccountDao.insert(missingUserAccounts, context);\n    }\n};\n__decorate([\n    Inject()\n], SyncInUserAccountChecker.prototype, \"userAccountDao\", void 0);\nSyncInUserAccountChecker = __decorate([\n    Injected()\n], SyncInUserAccountChecker);\nexport { SyncInUserAccountChecker };\n//# sourceMappingURL=SyncInUserAccountChecker.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbBoolean, DbNumber, DbString, Entity, GeneratedValue, Id, JoinColumn, ManyToOne, OneToMany, Table } from '@airport/tarmaq-entity';\nlet SynchronizationConflict = class SynchronizationConflict {\n};\n__decorate([\n    GeneratedValue(),\n    Id(),\n    DbNumber(),\n    Column({ name: 'SYNCHRONIZATION_CONFLICT_LID' })\n], SynchronizationConflict.prototype, \"_localId\", void 0);\n__decorate([\n    DbString()\n], SynchronizationConflict.prototype, \"type\", void 0);\n__decorate([\n    DbBoolean()\n], SynchronizationConflict.prototype, \"acknowledged\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'REPOSITORY_LID',\n        referencedColumnName: 'REPOSITORY_LID'\n    })\n], SynchronizationConflict.prototype, \"repository\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'OVERWRITTEN_RECORD_HISTORY_LID',\n        referencedColumnName: 'RECORD_HISTORY_LID'\n    })\n], SynchronizationConflict.prototype, \"overwrittenRecordHistory\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'OVERWRITING_RECORD_HISTORY_LID',\n        referencedColumnName: 'RECORD_HISTORY_LID'\n    })\n], SynchronizationConflict.prototype, \"overwritingRecordHistory\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'synchronizationConflict' })\n], SynchronizationConflict.prototype, \"values\", void 0);\nSynchronizationConflict = __decorate([\n    Entity(),\n    Table({ name: 'SYNCHRONIZATION_CONFLICT' })\n], SynchronizationConflict);\nexport { SynchronizationConflict };\n//# sourceMappingURL=SynchronizationConflict.js.map","export var SynchronizationConflict_Type;\n(function (SynchronizationConflict_Type) {\n    SynchronizationConflict_Type[\"LOCAL_UPDATE_REMOTELY_DELETED\"] = \"LOCAL_UPDATE_REMOTELY_DELETED\";\n    SynchronizationConflict_Type[\"REMOTE_CREATE_REMOTELY_DELETED\"] = \"REMOTE_CREATE_REMOTELY_DELETED\";\n    SynchronizationConflict_Type[\"REMOTE_UPDATE_LOCALLY_DELETED\"] = \"REMOTE_UPDATE_LOCALLY_DELETED\";\n    SynchronizationConflict_Type[\"REMOTE_UPDATE_LOCALLY_UPDATED\"] = \"REMOTE_UPDATE_LOCALLY_UPDATED\";\n})(SynchronizationConflict_Type || (SynchronizationConflict_Type = {}));\n//# sourceMappingURL=SynchronizationConflictType.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DbNumber, Entity, Id, JoinColumn, ManyToOne, Table } from '@airport/tarmaq-entity';\nlet SynchronizationConflictValues = class SynchronizationConflictValues {\n};\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({\n        name: 'SYNCHRONIZATION_CONFLICT_LID',\n        referencedColumnName: 'SYNCHRONIZATION_CONFLICT_LID'\n    })\n], SynchronizationConflictValues.prototype, \"synchronizationConflict\", void 0);\n__decorate([\n    Id(),\n    DbNumber()\n], SynchronizationConflictValues.prototype, \"columnIndex\", void 0);\nSynchronizationConflictValues = __decorate([\n    Entity(),\n    Table({ name: 'SYNCHRONIZATION_CONFLICT_VALUES' })\n], SynchronizationConflictValues);\nexport { SynchronizationConflictValues };\n//# sourceMappingURL=SynchronizationConflictValues.js.map","export var DataOrigin;\n(function (DataOrigin) {\n    DataOrigin[\"LOCAL\"] = \"LOCAL\";\n    DataOrigin[\"REMOTE\"] = \"REMOTE\";\n})(DataOrigin || (DataOrigin = {}));\n//# sourceMappingURL=DataOrigin.js.map","export var ApplicationChangeStatus;\n(function (ApplicationChangeStatus) {\n    ApplicationChangeStatus[\"CHANGE_NEEDED\"] = \"CHANGE_NEEDED\";\n    ApplicationChangeStatus[\"CHANGE_COMPLETED\"] = \"CHANGE_COMPLETED\";\n})(ApplicationChangeStatus || (ApplicationChangeStatus = {}));\n//# sourceMappingURL=ApplicationChangeStatus.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbNumber, Entity, GeneratedValue, Id, JoinColumn, ManyToOne, Table } from '@airport/tarmaq-entity';\n/**\n * Used to temporarily store updates during application remotely synced updates\n * to the local terminal.  Values are deleted right after the remote sync updates\n * are applied.\n */\nlet RecordUpdateStage = class RecordUpdateStage {\n};\n__decorate([\n    Id(),\n    GeneratedValue(),\n    Column({ name: 'RECORD_UPDATE_STAGE_LID' })\n], RecordUpdateStage.prototype, \"_localId\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'APPLICATION_VERSION_LID',\n        referencedColumnName: 'APPLICATION_VERSION_LID'\n    })\n], RecordUpdateStage.prototype, \"applicationVersion\", void 0);\n__decorate([\n    ManyToOne()\n    // FIXME: verify that these records don't make it into serialized\n    // repository ledger (and hence, that using local ids is safe)\n    ,\n    JoinColumn({\n        name: 'APPLICATION_ENTITY_LID',\n        referencedColumnName: 'APPLICATION_ENTITY_LID'\n    })\n], RecordUpdateStage.prototype, \"entity\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'REPOSITORY_LID',\n        referencedColumnName: 'REPOSITORY_LID'\n    })\n], RecordUpdateStage.prototype, \"repository\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'ACTOR_LID',\n        referencedColumnName: 'ACTOR_LID'\n    })\n], RecordUpdateStage.prototype, \"actor\", void 0);\n__decorate([\n    Column({ name: 'ACTOR_RECORD_ID' }),\n    DbNumber()\n], RecordUpdateStage.prototype, \"_actorRecordId\", void 0);\n__decorate([\n    ManyToOne()\n    // FIXME: verify that these records don't make it into serialized\n    // repository ledger (and hence, that using local ids is safe)\n    ,\n    JoinColumn({\n        name: 'APPLICATION_COLUMN_LID',\n        referencedColumnName: 'APPLICATION_COLUMN_LID'\n    })\n], RecordUpdateStage.prototype, \"column\", void 0);\n__decorate([\n    Column({ name: 'UPDATED_VALUE' })\n], RecordUpdateStage.prototype, \"updatedValue\", void 0);\nRecordUpdateStage = __decorate([\n    Entity(),\n    Table({ name: 'RECORD_UPDATE_STAGE' })\n], RecordUpdateStage);\nexport { RecordUpdateStage };\n//# sourceMappingURL=RecordUpdateStage.js.map","import { airApi } from '@airport/aviation-communication';\nimport { RecordUpdateStage, SynchronizationConflict, SynchronizationConflictValues } from '../ddl/ddl';\nconst __constructors__ = {\n    RecordUpdateStage: RecordUpdateStage,\n    SynchronizationConflict: SynchronizationConflict,\n    SynchronizationConflictValues: SynchronizationConflictValues\n};\nexport const Q_APPLICATION = {\n    __constructors__,\n    domain: 'air',\n    name: '@airport/layover'\n};\nexport const Q = Q_APPLICATION;\nexport function diSet(dbEntityId) {\n    return airApi.dS(Q.__dbApplication__, dbEntityId);\n}\nexport function duoDiSet(dbEntityId) {\n    return airApi.ddS(Q.__dbApplication__, dbEntityId);\n}\nairApi.setQApplication(Q_APPLICATION);\n//# sourceMappingURL=qApplication.js.map","import { Dao, DaoQueryDecorators, } from '@airport/tarmaq-dao';\r\nimport { Q, duoDiSet, } from './qApplication';\r\n// Application Q object Dependency Injection readiness detection Dao\r\nexport class SQDIDao extends Dao {\r\n    constructor(dbEntityId) {\r\n        super(dbEntityId, Q);\r\n    }\r\n}\r\nexport class BaseRecordUpdateStageDao extends SQDIDao {\r\n    constructor() {\r\n        super(0);\r\n    }\r\n    static Save(config) {\r\n        return Dao.BaseSave(config);\r\n    }\r\n    static diSet() {\r\n        return duoDiSet(0);\r\n    }\r\n}\r\nBaseRecordUpdateStageDao.Find = new DaoQueryDecorators();\r\nBaseRecordUpdateStageDao.FindOne = new DaoQueryDecorators();\r\nBaseRecordUpdateStageDao.Search = new DaoQueryDecorators();\r\nBaseRecordUpdateStageDao.SearchOne = new DaoQueryDecorators();\r\nexport class BaseSynchronizationConflictDao extends SQDIDao {\r\n    constructor() {\r\n        super(2);\r\n    }\r\n    static Save(config) {\r\n        return Dao.BaseSave(config);\r\n    }\r\n    static diSet() {\r\n        return duoDiSet(2);\r\n    }\r\n}\r\nBaseSynchronizationConflictDao.Find = new DaoQueryDecorators();\r\nBaseSynchronizationConflictDao.FindOne = new DaoQueryDecorators();\r\nBaseSynchronizationConflictDao.Search = new DaoQueryDecorators();\r\nBaseSynchronizationConflictDao.SearchOne = new DaoQueryDecorators();\r\nexport class BaseSynchronizationConflictValuesDao extends SQDIDao {\r\n    constructor() {\r\n        super(1);\r\n    }\r\n    static Save(config) {\r\n        return Dao.BaseSave(config);\r\n    }\r\n    static diSet() {\r\n        return duoDiSet(1);\r\n    }\r\n}\r\nBaseSynchronizationConflictValuesDao.Find = new DaoQueryDecorators();\r\nBaseSynchronizationConflictValuesDao.FindOne = new DaoQueryDecorators();\r\nBaseSynchronizationConflictValuesDao.Search = new DaoQueryDecorators();\r\nBaseSynchronizationConflictValuesDao.SearchOne = new DaoQueryDecorators();\r\n//# sourceMappingURL=baseDaos.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { BaseSynchronizationConflictDao, Q } from '../../generated/generated';\nlet SynchronizationConflictDao = class SynchronizationConflictDao extends BaseSynchronizationConflictDao {\n    async insert(synchronizationConflicts, context) {\n        let sc;\n        const VALUES = [];\n        for (const synchronizationConflict of synchronizationConflicts) {\n            VALUES.push([\n                synchronizationConflict.type,\n                synchronizationConflict.acknowledged,\n                synchronizationConflict.repository._localId,\n                synchronizationConflict.overwrittenRecordHistory._localId,\n                synchronizationConflict.overwritingRecordHistory._localId\n            ]);\n        }\n        const ids = await this.db.insertValuesGenerateIds({\n            INSERT_INTO: sc = Q.SynchronizationConflict,\n            columns: [\n                sc.type,\n                sc.acknowledged,\n                sc.repository._localId,\n                sc.overwrittenRecordHistory._localId,\n                sc.overwritingRecordHistory._localId\n            ],\n            VALUES\n        }, context);\n        for (let i = 0; i < synchronizationConflicts.length; i++) {\n            let synchronizationConflict = synchronizationConflicts[i];\n            synchronizationConflict._localId = ids[i][0];\n        }\n    }\n};\nSynchronizationConflictDao = __decorate([\n    Injected()\n], SynchronizationConflictDao);\nexport { SynchronizationConflictDao };\n//# sourceMappingURL=SynchronizationConflictDao.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { BaseSynchronizationConflictValuesDao, Q } from '../../generated/generated';\nlet SynchronizationConflictValuesDao = class SynchronizationConflictValuesDao extends BaseSynchronizationConflictValuesDao {\n    async insert(synchronizationConflictValues, context) {\n        let scv;\n        const VALUES = [];\n        for (const synchronizationConflictValue of synchronizationConflictValues) {\n            VALUES.push([\n                synchronizationConflictValue.synchronizationConflict._localId,\n                synchronizationConflictValue.columnIndex\n            ]);\n        }\n        await this.db.insertValues({\n            INSERT_INTO: scv = Q.SynchronizationConflictValues,\n            columns: [\n                scv.synchronizationConflict._localId,\n                scv.columnIndex\n            ],\n            VALUES\n        }, context);\n    }\n};\nSynchronizationConflictValuesDao = __decorate([\n    Injected()\n], SynchronizationConflictValuesDao);\nexport { SynchronizationConflictValuesDao };\n//# sourceMappingURL=SynchronizationConflictValuesDao.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Thrown when service is registered without type.\n */\nvar MissingProvidedServiceTypeError = /** @class */ (function (_super) {\n    __extends(MissingProvidedServiceTypeError, _super);\n    function MissingProvidedServiceTypeError(identifier) {\n        var _this = _super.call(this, \"Cannot determine a class of the requesting service \\\"\" + identifier + \"\\\"\") || this;\n        _this.name = \"ServiceNotFoundError\";\n        Object.setPrototypeOf(_this, MissingProvidedServiceTypeError.prototype);\n        return _this;\n    }\n    return MissingProvidedServiceTypeError;\n}(Error));\nexports.MissingProvidedServiceTypeError = MissingProvidedServiceTypeError;\n\n//# sourceMappingURL=MissingProvidedServiceTypeError.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Used to create unique typed service identifier.\n * Useful when service has only interface, but don't have a class.\n */\nvar Token = /** @class */ (function () {\n    /**\n     * @param name Token name, optional and only used for debugging purposes.\n     */\n    function Token(name) {\n        this.name = name;\n    }\n    return Token;\n}());\nexports.Token = Token;\n\n//# sourceMappingURL=Token.js.map\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Token_1 = require(\"../Token\");\n/**\n * Thrown when requested service was not found.\n */\nvar ServiceNotFoundError = /** @class */ (function (_super) {\n    __extends(ServiceNotFoundError, _super);\n    function ServiceNotFoundError(identifier) {\n        var _this = _super.call(this) || this;\n        _this.name = \"ServiceNotFoundError\";\n        if (typeof identifier === \"string\") {\n            _this.message = \"Service \\\"\" + identifier + \"\\\" was not found, looks like it was not registered in the container. \" +\n                (\"Register it by calling Container.set(\\\"\" + identifier + \"\\\", ...) before using service.\");\n        }\n        else if (identifier instanceof Token_1.Token && identifier.name) {\n            _this.message = \"Service \\\"\" + identifier.name + \"\\\" was not found, looks like it was not registered in the container. \" +\n                \"Register it by calling Container.set before using service.\";\n        }\n        else if (identifier instanceof Token_1.Token) {\n            _this.message = \"Service with a given token was not found, looks like it was not registered in the container. \" +\n                \"Register it by calling Container.set before using service.\";\n        }\n        Object.setPrototypeOf(_this, ServiceNotFoundError.prototype);\n        return _this;\n    }\n    return ServiceNotFoundError;\n}(Error));\nexports.ServiceNotFoundError = ServiceNotFoundError;\n\n//# sourceMappingURL=ServiceNotFoundError.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Container_1 = require(\"./Container\");\nvar MissingProvidedServiceTypeError_1 = require(\"./error/MissingProvidedServiceTypeError\");\nvar ServiceNotFoundError_1 = require(\"./error/ServiceNotFoundError\");\nvar Token_1 = require(\"./Token\");\n/**\n * TypeDI can have multiple containers.\n * One container is ContainerInstance.\n */\nvar ContainerInstance = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function ContainerInstance(id) {\n        // -------------------------------------------------------------------------\n        // Private Properties\n        // -------------------------------------------------------------------------\n        /**\n         * All registered services.\n         */\n        this.services = [];\n        this.id = id;\n    }\n    /**\n     * Checks if the service with given name or type is registered service container.\n     * Optionally, parameters can be passed in case if instance is initialized in the container for the first time.\n     */\n    ContainerInstance.prototype.has = function (identifier) {\n        return !!this.findService(identifier);\n    };\n    /**\n     * Retrieves the service with given name or type from the service container.\n     * Optionally, parameters can be passed in case if instance is initialized in the container for the first time.\n     */\n    ContainerInstance.prototype.get = function (identifier) {\n        var globalContainer = Container_1.Container.of(undefined);\n        var service = globalContainer.findService(identifier);\n        var scopedService = this.findService(identifier);\n        if (service && service.global === true)\n            return this.getServiceValue(identifier, service);\n        if (scopedService)\n            return this.getServiceValue(identifier, scopedService);\n        if (service && this !== globalContainer) {\n            var clonedService = Object.assign({}, service);\n            clonedService.value = undefined;\n            var value = this.getServiceValue(identifier, clonedService);\n            this.set(identifier, value);\n            return value;\n        }\n        return this.getServiceValue(identifier, service);\n    };\n    /**\n     * Gets all instances registered in the container of the given service identifier.\n     * Used when service defined with multiple: true flag.\n     */\n    ContainerInstance.prototype.getMany = function (id) {\n        var _this = this;\n        return this.filterServices(id).map(function (service) { return _this.getServiceValue(id, service); });\n    };\n    /**\n     * Sets a value for the given type or service name in the container.\n     */\n    ContainerInstance.prototype.set = function (identifierOrServiceMetadata, value) {\n        var _this = this;\n        if (identifierOrServiceMetadata instanceof Array) {\n            identifierOrServiceMetadata.forEach(function (v) { return _this.set(v); });\n            return this;\n        }\n        if (typeof identifierOrServiceMetadata === \"string\" || identifierOrServiceMetadata instanceof Token_1.Token) {\n            return this.set({ id: identifierOrServiceMetadata, value: value });\n        }\n        if (typeof identifierOrServiceMetadata === \"object\" && identifierOrServiceMetadata.service) {\n            return this.set({ id: identifierOrServiceMetadata.service, value: value });\n        }\n        if (identifierOrServiceMetadata instanceof Function) {\n            return this.set({ type: identifierOrServiceMetadata, id: identifierOrServiceMetadata, value: value });\n        }\n        // const newService: ServiceMetadata<any, any> = arguments.length === 1 && typeof identifierOrServiceMetadata === \"object\"  && !(identifierOrServiceMetadata instanceof Token) ? identifierOrServiceMetadata : undefined;\n        var newService = identifierOrServiceMetadata;\n        var service = this.findService(newService.id);\n        if (service && service.multiple !== true) {\n            Object.assign(service, newService);\n        }\n        else {\n            this.services.push(newService);\n        }\n        return this;\n    };\n    /**\n     * Removes services with a given service identifiers (tokens or types).\n     */\n    ContainerInstance.prototype.remove = function () {\n        var _this = this;\n        var ids = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            ids[_i] = arguments[_i];\n        }\n        ids.forEach(function (id) {\n            _this.filterServices(id).forEach(function (service) {\n                _this.services.splice(_this.services.indexOf(service), 1);\n            });\n        });\n        return this;\n    };\n    /**\n     * Completely resets the container by removing all previously registered services from it.\n     */\n    ContainerInstance.prototype.reset = function () {\n        this.services = [];\n        return this;\n    };\n    // -------------------------------------------------------------------------\n    // Private Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Filters registered service in the with a given service identifier.\n     */\n    ContainerInstance.prototype.filterServices = function (identifier) {\n        return this.services.filter(function (service) {\n            if (service.id)\n                return service.id === identifier;\n            if (service.type && identifier instanceof Function)\n                return service.type === identifier || identifier.prototype instanceof service.type;\n            return false;\n        });\n    };\n    /**\n     * Finds registered service in the with a given service identifier.\n     */\n    ContainerInstance.prototype.findService = function (identifier) {\n        return this.services.find(function (service) {\n            if (service.id) {\n                if (identifier instanceof Object &&\n                    service.id instanceof Token_1.Token &&\n                    identifier.service instanceof Token_1.Token) {\n                    return service.id === identifier.service;\n                }\n                return service.id === identifier;\n            }\n            if (service.type && identifier instanceof Function)\n                return service.type === identifier; // todo: not sure why it was here || identifier.prototype instanceof service.type;\n            return false;\n        });\n    };\n    /**\n     * Gets service value.\n     */\n    ContainerInstance.prototype.getServiceValue = function (identifier, service) {\n        var _a;\n        // find if instance of this object already initialized in the container and return it if it is\n        if (service && service.value !== undefined)\n            return service.value;\n        // if named service was requested and its instance was not found plus there is not type to know what to initialize,\n        // this means service was not pre-registered and we throw an exception\n        if ((!service || !service.type) &&\n            (!service || !service.factory) &&\n            (typeof identifier === \"string\" || identifier instanceof Token_1.Token))\n            throw new ServiceNotFoundError_1.ServiceNotFoundError(identifier);\n        // at this point we either have type in service registered, either identifier is a target type\n        var type = undefined;\n        if (service && service.type) {\n            type = service.type;\n        }\n        else if (service && service.id instanceof Function) {\n            type = service.id;\n        }\n        else if (identifier instanceof Function) {\n            type = identifier;\n            // } else if (identifier instanceof Object && (identifier as { service: Token<any> }).service instanceof Token) {\n            //     type = (identifier as { service: Token<any> }).service;\n        }\n        // if service was not found then create a new one and register it\n        if (!service) {\n            if (!type)\n                throw new MissingProvidedServiceTypeError_1.MissingProvidedServiceTypeError(identifier);\n            service = { type: type };\n            this.services.push(service);\n        }\n        // setup constructor parameters for a newly initialized service\n        var paramTypes = type && Reflect && Reflect.getMetadata ? Reflect.getMetadata(\"design:paramtypes\", type) : undefined;\n        var params = paramTypes ? this.initializeParams(type, paramTypes) : [];\n        // if factory is set then use it to create service instance\n        var value;\n        if (service.factory) {\n            // filter out non-service parameters from created service constructor\n            // non-service parameters can be, lets say Car(name: string, isNew: boolean, engine: Engine)\n            // where name and isNew are non-service parameters and engine is a service parameter\n            params = params.filter(function (param) { return param !== undefined; });\n            if (service.factory instanceof Array) {\n                // use special [Type, \"create\"] syntax to allow factory services\n                // in this case Type instance will be obtained from Container and its method \"create\" will be called\n                value = (_a = this.get(service.factory[0]))[service.factory[1]].apply(_a, params);\n            }\n            else { // regular factory function\n                value = service.factory.apply(service, params.concat([this]));\n            }\n        }\n        else { // otherwise simply create a new object instance\n            if (!type)\n                throw new MissingProvidedServiceTypeError_1.MissingProvidedServiceTypeError(identifier);\n            params.unshift(null);\n            // \"extra feature\" - always pass container instance as the last argument to the service function\n            // this allows us to support javascript where we don't have decorators and emitted metadata about dependencies\n            // need to be injected, and user can use provided container to get instances he needs\n            params.push(this);\n            value = new (type.bind.apply(type, params))();\n        }\n        if (service && !service.transient && value)\n            service.value = value;\n        if (type)\n            this.applyPropertyHandlers(type, value);\n        return value;\n    };\n    /**\n     * Initializes all parameter types for a given target service class.\n     */\n    ContainerInstance.prototype.initializeParams = function (type, paramTypes) {\n        var _this = this;\n        return paramTypes.map(function (paramType, index) {\n            var paramHandler = Container_1.Container.handlers.find(function (handler) { return handler.object === type && handler.index === index; });\n            if (paramHandler)\n                return paramHandler.value(_this);\n            if (paramType && paramType.name && !_this.isTypePrimitive(paramType.name)) {\n                return _this.get(paramType);\n            }\n            return undefined;\n        });\n    };\n    /**\n     * Checks if given type is primitive (e.g. string, boolean, number, object).\n     */\n    ContainerInstance.prototype.isTypePrimitive = function (param) {\n        return [\"string\", \"boolean\", \"number\", \"object\"].indexOf(param.toLowerCase()) !== -1;\n    };\n    /**\n     * Applies all registered handlers on a given target class.\n     */\n    ContainerInstance.prototype.applyPropertyHandlers = function (target, instance) {\n        var _this = this;\n        Container_1.Container.handlers.forEach(function (handler) {\n            if (typeof handler.index === \"number\")\n                return;\n            if (handler.object.constructor !== target && !(target.prototype instanceof handler.object.constructor))\n                return;\n            instance[handler.propertyName] = handler.value(_this);\n        });\n    };\n    return ContainerInstance;\n}());\nexports.ContainerInstance = ContainerInstance;\n\n//# sourceMappingURL=ContainerInstance.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ContainerInstance_1 = require(\"./ContainerInstance\");\n/**\n * Service container.\n */\nvar Container = /** @class */ (function () {\n    function Container() {\n    }\n    // -------------------------------------------------------------------------\n    // Public Static Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Gets a separate container instance for the given instance id.\n     */\n    Container.of = function (instanceId) {\n        if (instanceId === undefined)\n            return this.globalInstance;\n        var container = this.instances.find(function (instance) { return instance.id === instanceId; });\n        if (!container) {\n            container = new ContainerInstance_1.ContainerInstance(instanceId);\n            this.instances.push(container);\n        }\n        return container;\n    };\n    /**\n     * Checks if the service with given name or type is registered service container.\n     * Optionally, parameters can be passed in case if instance is initialized in the container for the first time.\n     */\n    Container.has = function (identifier) {\n        return this.globalInstance.has(identifier);\n    };\n    /**\n     * Retrieves the service with given name or type from the service container.\n     * Optionally, parameters can be passed in case if instance is initialized in the container for the first time.\n     */\n    Container.get = function (identifier) {\n        return this.globalInstance.get(identifier);\n    };\n    /**\n     * Gets all instances registered in the container of the given service identifier.\n     * Used when service defined with multiple: true flag.\n     */\n    Container.getMany = function (id) {\n        return this.globalInstance.getMany(id);\n    };\n    /**\n     * Sets a value for the given type or service name in the container.\n     */\n    Container.set = function (identifierOrServiceMetadata, value) {\n        this.globalInstance.set(identifierOrServiceMetadata, value);\n        return this;\n    };\n    /**\n     * Removes services with a given service identifiers (tokens or types).\n     */\n    Container.remove = function () {\n        var _a;\n        var ids = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            ids[_i] = arguments[_i];\n        }\n        (_a = this.globalInstance).remove.apply(_a, ids);\n        return this;\n    };\n    /**\n     * Completely resets the container by removing all previously registered services and handlers from it.\n     */\n    Container.reset = function (containerId) {\n        if (containerId) {\n            var instance = this.instances.find(function (instance) { return instance.id === containerId; });\n            if (instance) {\n                instance.reset();\n                this.instances.splice(this.instances.indexOf(instance), 1);\n            }\n        }\n        else {\n            this.globalInstance.reset();\n            this.instances.forEach(function (instance) { return instance.reset(); });\n        }\n        return this;\n    };\n    /**\n     * Registers a new handler.\n     */\n    Container.registerHandler = function (handler) {\n        this.handlers.push(handler);\n        return this;\n    };\n    /**\n     * Helper method that imports given services.\n     */\n    Container.import = function (services) {\n        return this;\n    };\n    // -------------------------------------------------------------------------\n    // Private Static Properties\n    // -------------------------------------------------------------------------\n    /**\n     * Global container instance.\n     */\n    Container.globalInstance = new ContainerInstance_1.ContainerInstance(undefined);\n    /**\n     * Other containers created using Container.of method.\n     */\n    Container.instances = [];\n    /**\n     * All registered handlers.\n     */\n    Container.handlers = [];\n    return Container;\n}());\nexports.Container = Container;\n\n//# sourceMappingURL=Container.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Container_1 = require(\"../Container\");\nvar Token_1 = require(\"../Token\");\n/**\n * Marks class as a service that can be injected using container.\n */\nfunction Service(optionsOrServiceName, maybeFactory) {\n    if (arguments.length === 2 || (optionsOrServiceName instanceof Function)) {\n        var serviceId = { service: new Token_1.Token() };\n        var dependencies_1 = arguments.length === 2 ? optionsOrServiceName : [];\n        var factory_1 = arguments.length === 2 ? maybeFactory : optionsOrServiceName;\n        Container_1.Container.set({\n            id: serviceId.service,\n            factory: function (container) {\n                var params = dependencies_1.map(function (dependency) { return container.get(dependency); });\n                return factory_1.apply(void 0, params);\n            }\n        });\n        return serviceId;\n    }\n    else {\n        return function (target) {\n            var service = {\n                type: target\n            };\n            if (typeof optionsOrServiceName === \"string\" || optionsOrServiceName instanceof Token_1.Token) {\n                service.id = optionsOrServiceName;\n                service.multiple = optionsOrServiceName.multiple;\n                service.global = optionsOrServiceName.global || false;\n                service.transient = optionsOrServiceName.transient;\n            }\n            else if (optionsOrServiceName) { // ServiceOptions\n                service.id = optionsOrServiceName.id;\n                service.factory = optionsOrServiceName.factory;\n                service.multiple = optionsOrServiceName.multiple;\n                service.global = optionsOrServiceName.global || false;\n                service.transient = optionsOrServiceName.transient;\n            }\n            Container_1.Container.set(service);\n        };\n    }\n}\nexports.Service = Service;\n\n//# sourceMappingURL=Service.js.map\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Thrown when DI cannot inject value into property decorated by @Inject decorator.\n */\nvar CannotInjectError = /** @class */ (function (_super) {\n    __extends(CannotInjectError, _super);\n    function CannotInjectError(target, propertyName) {\n        var _this = _super.call(this, \"Cannot inject value into \\\"\" + target.constructor.name + \".\" + propertyName + \"\\\". \" +\n            \"Please make sure you setup reflect-metadata properly and you don't use interfaces without service tokens as injection value.\") || this;\n        _this.name = \"ServiceNotFoundError\";\n        Object.setPrototypeOf(_this, CannotInjectError.prototype);\n        return _this;\n    }\n    return CannotInjectError;\n}(Error));\nexports.CannotInjectError = CannotInjectError;\n\n//# sourceMappingURL=CannotInjectError.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Container_1 = require(\"../Container\");\nvar Token_1 = require(\"../Token\");\nvar CannotInjectError_1 = require(\"../error/CannotInjectError\");\n/**\n * Injects a service into a class property or constructor parameter.\n */\nfunction Inject(typeOrName) {\n    return function (target, propertyName, index) {\n        if (!typeOrName)\n            typeOrName = function () { return Reflect.getMetadata(\"design:type\", target, propertyName); };\n        Container_1.Container.registerHandler({\n            object: target,\n            propertyName: propertyName,\n            index: index,\n            value: function (containerInstance) {\n                var identifier;\n                if (typeof typeOrName === \"string\") {\n                    identifier = typeOrName;\n                }\n                else if (typeOrName instanceof Token_1.Token) {\n                    identifier = typeOrName;\n                }\n                else {\n                    identifier = typeOrName();\n                }\n                if (identifier === Object)\n                    throw new CannotInjectError_1.CannotInjectError(target, propertyName);\n                return containerInstance.get(identifier);\n            }\n        });\n    };\n}\nexports.Inject = Inject;\n\n//# sourceMappingURL=Inject.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Container_1 = require(\"../Container\");\nvar Token_1 = require(\"../Token\");\nvar CannotInjectError_1 = require(\"../error/CannotInjectError\");\n/**\n * Injects a service into a class property or constructor parameter.\n */\nfunction InjectMany(typeOrName) {\n    return function (target, propertyName, index) {\n        if (!typeOrName)\n            typeOrName = function () { return Reflect.getMetadata(\"design:type\", target, propertyName); };\n        Container_1.Container.registerHandler({\n            object: target,\n            propertyName: propertyName,\n            index: index,\n            value: function (containerInstance) {\n                var identifier;\n                if (typeof typeOrName === \"string\") {\n                    identifier = typeOrName;\n                }\n                else if (typeOrName instanceof Token_1.Token) {\n                    identifier = typeOrName;\n                }\n                else {\n                    identifier = typeOrName();\n                }\n                if (identifier === Object)\n                    throw new CannotInjectError_1.CannotInjectError(target, propertyName);\n                return containerInstance.getMany(identifier);\n            }\n        });\n    };\n}\nexports.InjectMany = InjectMany;\n\n//# sourceMappingURL=InjectMany.js.map\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Container_1 = require(\"./Container\");\n__export(require(\"./decorators/Service\"));\n__export(require(\"./decorators/Inject\"));\n__export(require(\"./decorators/InjectMany\"));\nvar Container_2 = require(\"./Container\");\nexports.Container = Container_2.Container;\nvar ContainerInstance_1 = require(\"./ContainerInstance\");\nexports.ContainerInstance = ContainerInstance_1.ContainerInstance;\nvar Token_1 = require(\"./Token\");\nexports.Token = Token_1.Token;\nexports.default = Container_1.Container;\n\n//# sourceMappingURL=index.js.map\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ACTOR_PROPERTY_NAME, ACTOR_RECORD_ID_PROPERTY_NAME, REPOSITORY_PROPERTY_NAME } from '@airport/air-traffic-control';\nimport { Injected } from '@airport/direction-indicator';\nimport { AND, field, OR, } from '@airport/tarmaq-query';\nimport { Inject } from 'typedi';\nimport { BaseRecordUpdateStageDao, Q } from '../generated/generated';\nlet RecordUpdateStageDao = class RecordUpdateStageDao extends BaseRecordUpdateStageDao {\n    async insertValues(values) {\n        const rus = Q.RecordUpdateStage;\n        const columns = [\n            rus.applicationVersion._localId,\n            rus.entity._localId,\n            rus.repository._localId,\n            rus.actor._localId,\n            rus._actorRecordId,\n            rus.column._localId,\n            rus.updatedValue\n        ];\n        return await this.db.insertValuesGenerateIds({\n            INSERT_INTO: rus,\n            columns,\n            VALUES: values\n        }, {\n            generateOnSync: true\n        });\n    }\n    async updateEntityWhereIds(applicationIndex, applicationVersionId, tableIndex, idMap, updatedColumnIndexes) {\n        const dbEntity = this.airportDatabase.applications[applicationIndex].currentVersion[0]\n            .applicationVersion.entities[tableIndex];\n        const qEntity = this.airportDatabase.qApplications[applicationIndex][dbEntity.name];\n        const repositoryEquals = [];\n        for (const [repositoryId, idsForRepository] of idMap) {\n            const actorEquals = [];\n            for (const [actorId, idsForActor] of idsForRepository) {\n                actorEquals.push(AND(qEntity[ACTOR_PROPERTY_NAME]._localId.equals(actorId), qEntity[ACTOR_RECORD_ID_PROPERTY_NAME].IN(Array.from(idsForActor))));\n            }\n            repositoryEquals.push(AND(qEntity[REPOSITORY_PROPERTY_NAME]._localId.equals(repositoryId), OR(...actorEquals)));\n        }\n        const setClause = {};\n        for (const columnIndex of updatedColumnIndexes) {\n            const column = dbEntity.columns[columnIndex];\n            let columnRus = Q.RecordUpdateStage;\n            let columnSetClause = field({\n                FROM: [\n                    columnRus\n                ],\n                SELECT: columnRus.updatedValue,\n                WHERE: AND(columnRus.applicationVersion._localId.equals(applicationVersionId), columnRus.entity._localId.equals(dbEntity.index), columnRus.repository._localId.equals(qEntity.repository._localId), columnRus.actor._localId.equals(qEntity.actor._localId), columnRus._actorRecordId.equals(qEntity._actorRecordId), columnRus.column._localId.equals(column.index))\n            });\n            setClause[column.name] = columnSetClause;\n        }\n        await this.db.updateColumnsWhere({\n            UPDATE: qEntity,\n            SET: setClause,\n            WHERE: OR(...repositoryEquals)\n        });\n    }\n    async delete( //\n    ) {\n        return await this.db.deleteWhere({\n            DELETE_FROM: Q.RecordUpdateStage\n        });\n    }\n};\n__decorate([\n    Inject()\n], RecordUpdateStageDao.prototype, \"airportDatabase\", void 0);\nRecordUpdateStageDao = __decorate([\n    Injected()\n], RecordUpdateStageDao);\nexport { RecordUpdateStageDao };\n//# sourceMappingURL=RecordUpdateStageDao.js.map","import { AIRPORT_DATABASE } from '@airport/air-traffic-control';\nimport { lib } from '@airport/direction-indicator';\nimport { SynchronizationConflictDao } from \"./dao/conflict/SynchronizationConflictDao\";\nimport { SynchronizationConflictValuesDao } from \"./dao/conflict/SynchronizationConflictValuesDao\";\nimport { RecordUpdateStageDao } from \"./dao/RecordUpdateStageDao\";\nconst movingWalkway = lib('layover');\nexport const RECORD_UPDATE_STAGE_DAO = movingWalkway.token({\n    class: RecordUpdateStageDao,\n    interface: 'IRecordUpdateStageDao',\n    token: 'RECORD_UPDATE_STAGE_DAO'\n});\nexport const SYNCHRONIZATION_CONFLICT_DAO = movingWalkway.token({\n    class: SynchronizationConflictDao,\n    interface: 'ISynchronizationConflictDao',\n    token: 'SYNCHRONIZATION_CONFLICT_DAO'\n});\nexport const SYNCHRONIZATION_CONFLICT_VALUES_DAO = movingWalkway.token({\n    class: SynchronizationConflictValuesDao,\n    interface: 'ISynchronizationConflictValuesDao',\n    token: 'SYNCHRONIZATION_CONFLICT_VALUES_DAO'\n});\nRECORD_UPDATE_STAGE_DAO.setDependencies({\n    airportDatabase: AIRPORT_DATABASE\n});\n//# sourceMappingURL=tokens.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { getSysWideOpIds } from '@airport/air-traffic-control';\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { ChangeType, ensureChildArray, ensureChildJsMap, ensureChildJsSet } from '@airport/ground-control';\nimport { SynchronizationConflict_Type } from '@airport/layover';\nlet Stage1SyncedInDataProcessor = class Stage1SyncedInDataProcessor {\n    /**\n     * In stage one:\n     *\n     *  1)  Unique create/update/delete statement datastructures are generated\n     *  2)  Synchronization conflict datastructure is generated\n     *\n     * @param {Map<repositoryLocalId, ISyncRepoTransHistory[]>} repositoryTransactionHistoryMapByrepositoryLocalId\n     * @param {Map<Actor_LocalId, IActor>} actorMayById\n     * @returns {Promise<void>}\n     */\n    async performStage1DataProcessing(repositoryTransactionHistoryMapByrepositoryLocalId, actorMayById, context) {\n        await this.populateSystemWideOperationIds(repositoryTransactionHistoryMapByrepositoryLocalId);\n        const changedRecordIds = new Map();\n        // query for all local operations on records in a repository (since the earliest\n        // received change time).  Get the\n        // changes by repository _localIds or by the actual tables and records in those tables\n        // that will be updated or deleted.\n        for (const [repositoryLocalId, repoTransHistoriesForRepo] of repositoryTransactionHistoryMapByrepositoryLocalId) {\n            const changedRecordsForRepo = {\n                actorRecordIdsByLocalIds: new Map(),\n                firstChangeTime: new Date().getTime() + 10000000000\n            };\n            changedRecordIds.set(repositoryLocalId, changedRecordsForRepo);\n            for (const repoTransHistory of repoTransHistoriesForRepo) {\n                // determine the earliest change time of incoming history records\n                const saveMillis = repoTransHistory.saveTimestamp;\n                if (saveMillis\n                    < changedRecordsForRepo.firstChangeTime) {\n                    changedRecordsForRepo.firstChangeTime = repoTransHistory.saveTimestamp;\n                }\n                for (const operationHistory of repoTransHistory.operationHistory) {\n                    // Collect the Actor related localIds\n                    const idsForEntity = ensureChildJsMap(changedRecordsForRepo.actorRecordIdsByLocalIds, operationHistory.entity._localId);\n                    for (const recordHistory of operationHistory.recordHistory) {\n                        // Collect the Actor related localIds\n                        ensureChildJsSet(idsForEntity, recordHistory.actor._localId)\n                            .add(recordHistory._actorRecordId);\n                        // add a map of new values\n                        const newValueMap = new Map();\n                        recordHistory.newValueMap = newValueMap;\n                        for (const newValue of recordHistory.newValues) {\n                            newValueMap.set(newValue.columnIndex, newValue);\n                        }\n                    }\n                }\n            }\n        }\n        const allRepoTransHistoryMapByRepoId = new Map();\n        const allRemoteRecordDeletions = this.getDeletedRecordIdsAndPopulateAllHistoryMap(allRepoTransHistoryMapByRepoId, repositoryTransactionHistoryMapByrepositoryLocalId);\n        // find local history for the matching repositories and corresponding time period\n        const localRepoTransHistoryMapByrepositoryLocalId = await this.repositoryTransactionHistoryDao\n            .findAllLocalChangesForRecordIds(changedRecordIds);\n        const allLocalRecordDeletions = this.getDeletedRecordIdsAndPopulateAllHistoryMap(allRepoTransHistoryMapByRepoId, localRepoTransHistoryMapByrepositoryLocalId, true);\n        // Find all actors that modified the locally recorded history, which are not already\n        // in the actorMapById collect actors not already in cache\n        const newlyFoundActorSet = new Set();\n        for (const [repositoryLocalId, repositoryTransactionHistoriesForRepository] of localRepoTransHistoryMapByrepositoryLocalId) {\n            for (const repositoryTransactionHistory of repositoryTransactionHistoriesForRepository) {\n                for (const operationHistory of repositoryTransactionHistory.operationHistory) {\n                    const actorId = operationHistory.actor._localId;\n                    if (actorMayById.get(actorId) === undefined) {\n                        newlyFoundActorSet.add(actorId);\n                    }\n                }\n            }\n        }\n        if (newlyFoundActorSet.size) {\n            // cache remaining actors\n            const newActors = await this.actorDao.findWithDetailsAndGlobalIdsByIds(Array.from(newlyFoundActorSet));\n            for (const newActor of newActors) {\n                actorMayById.set(newActor._localId, newActor);\n            }\n        }\n        // sort all repository histories in processing order\n        for (const [repositoryLocalId, repoTransHistoriesForRepository] of allRepoTransHistoryMapByRepoId) {\n            this.repositoryTransactionHistoryDuo\n                .sortRepoTransHistories(repoTransHistoriesForRepository, actorMayById);\n        }\n        const recordCreations = new Map();\n        const recordUpdates = new Map();\n        const recordDeletions = new Map();\n        const syncConflictMapByRepoId = new Map();\n        // FIXME: add code to ensure that remote records coming in are performed only\n        // by the actors that claim the operation AND that the records created are\n        // created only by the actors that perform the operation (actorIds match)\n        for (const [repositoryLocalId, repoTransHistoriesForRepo] of allRepoTransHistoryMapByRepoId) {\n            for (const repoTransHistory of repoTransHistoriesForRepo) {\n                for (const operationHistory of repoTransHistory.operationHistory) {\n                    switch (operationHistory.changeType) {\n                        case ChangeType.INSERT_VALUES:\n                            this.processCreation(repositoryLocalId, operationHistory, repoTransHistory.isLocal, recordCreations, recordUpdates, recordDeletions, allRemoteRecordDeletions, allLocalRecordDeletions, syncConflictMapByRepoId);\n                            break;\n                        case ChangeType.UPDATE_ROWS:\n                            this.processUpdate(repositoryLocalId, operationHistory, repoTransHistory.isLocal, recordCreations, recordUpdates, allRemoteRecordDeletions, allLocalRecordDeletions, syncConflictMapByRepoId);\n                            break;\n                        case ChangeType.DELETE_ROWS:\n                            this.processDeletion(repositoryLocalId, operationHistory, recordCreations, recordUpdates, recordDeletions, allLocalRecordDeletions);\n                            break;\n                    }\n                }\n            }\n        }\n        return {\n            recordCreations,\n            recordDeletions,\n            recordUpdates,\n            syncConflictMapByRepoId\n        };\n    }\n    async populateSystemWideOperationIds(repositoryTransactionHistoryMapByrepositoryLocalId) {\n        let numSystemWideOperationIds = 0;\n        for (const [_, repoTransHistoriesForRepo] of repositoryTransactionHistoryMapByrepositoryLocalId) {\n            for (const repositoryTransactionHistory of repoTransHistoriesForRepo) {\n                numSystemWideOperationIds += repositoryTransactionHistory\n                    .operationHistory.length;\n            }\n        }\n        const systemWideOperationIds = await getSysWideOpIds(numSystemWideOperationIds, this.airportDatabase, this.sequenceGenerator);\n        let i = 0;\n        for (const [_, repoTransHistoriesForRepo] of repositoryTransactionHistoryMapByrepositoryLocalId) {\n            for (const repositoryTransactionHistory of repoTransHistoriesForRepo) {\n                for (const operationHistory of repositoryTransactionHistory.operationHistory) {\n                    operationHistory.systemWideOperationId = systemWideOperationIds[i];\n                    i++;\n                }\n            }\n        }\n    }\n    ensureRecordHistoryLocalId(recordHistory, actorRecordLocalIdSetByActor, _actorRecordId = recordHistory._actorRecordId) {\n        ensureChildJsMap(actorRecordLocalIdSetByActor, recordHistory.actor._localId)\n            .set(_actorRecordId, recordHistory._localId);\n    }\n    getDeletedRecordIdsAndPopulateAllHistoryMap(allRepoTransHistoryMapByRepoId, repositoryTransactionHistoryMapByRepoId, isLocal = false) {\n        const recordDeletions = new Map();\n        for (const [repositoryLocalId, repoTransHistories] of repositoryTransactionHistoryMapByRepoId) {\n            this.mergeArraysInMap(allRepoTransHistoryMapByRepoId, repositoryLocalId, repoTransHistories);\n            for (const repoTransHistory of repoTransHistories) {\n                repoTransHistory.isLocal = isLocal;\n                for (const operationHistory of repoTransHistory.operationHistory) {\n                    switch (operationHistory.changeType) {\n                        case ChangeType.DELETE_ROWS:\n                            for (const recordHistory of operationHistory.recordHistory) {\n                                this.ensureRecordHistoryLocalId(recordHistory, this.syncInUtils\n                                    .ensureRecordMapForRepoInTable(repositoryLocalId, operationHistory, recordDeletions));\n                            }\n                            break;\n                    }\n                }\n            }\n        }\n        return recordDeletions;\n    }\n    mergeArraysInMap(map, key, array) {\n        let targetArray = map.get(key);\n        if (!targetArray) {\n            targetArray = array;\n        }\n        else {\n            targetArray = targetArray.concat(array);\n        }\n        map.set(key, targetArray);\n    }\n    /*\n    NOTE: local creates are not inputted into this processing.\n     */\n    processCreation(repositoryLocalId, operationHistory, isLocal, recordCreations, recordUpdates, recordDeletions, allRemoteRecordDeletions, allLocalRecordDeletions, syncConflictMapByRepoId) {\n        const recordUpdatesForRepoInTable = this.getRecordsForRepoInTable(repositoryLocalId, operationHistory, recordUpdates);\n        const recordDeletesForRepoInTable = this.getRecordsForRepoInTable(repositoryLocalId, operationHistory, recordDeletions);\n        const allRemoteRecordDeletesForRepoInTable = this.getRecordsForRepoInTable(repositoryLocalId, operationHistory, allRemoteRecordDeletions);\n        const allLocalRecordDeletesForRepoInTable = this.getRecordsForRepoInTable(repositoryLocalId, operationHistory, allLocalRecordDeletions);\n        const insertsForEntityInRepo = this.syncInUtils.ensureRecordMapForRepoInTable(repositoryLocalId, operationHistory, recordCreations);\n        for (const recordHistory of operationHistory.recordHistory) {\n            if (this.getRecord(recordHistory, insertsForEntityInRepo)) {\n                throw new Error(`A record is being created more than once.\r\n\t\t\t\t\t${this.getRecordInfo(repositoryLocalId, operationHistory, recordHistory)}\r\n\t\t\t\t\tThis is not possible if every remote change is only processed once.\r\n\t\t\t\t\t`);\n            }\n            if (isLocal) {\n                throw new Error(`Remotely mutated record is being created locally.\r\n\t\t\t\t\t${this.getRecordInfo(repositoryLocalId, operationHistory, recordHistory)}\r\n\t\t\t\t\tThis is not possible if changes are never sent to originating TMs.\r\n\t\t\t\t\t`);\n            }\n            if (this.hasRecordId(recordHistory, recordDeletesForRepoInTable)) {\n                throw new Error(`\r\n\t\t\t\tRemotely created record is being deleted remotely before it's been created.\r\n\t\t\t\t\t${this.getRecordInfo(repositoryLocalId, operationHistory, recordHistory)}\r\n\t\t\t\t\tThis is not possible if all server clocks are synced.\r\n\t\t\t\t\t`);\n            }\n            if (this.getRecordHistoryLocalId(recordHistory, allLocalRecordDeletesForRepoInTable)) {\n                throw new Error(`Remotely created record is being deleted locally.\r\n\t\t\t\t\t${this.getRecordInfo(repositoryLocalId, operationHistory, recordHistory)}\r\n\t\t\t\t\tThis is not possible if every remote change is only processed once.\r\n\t\t\t\t\t`);\n            }\n            const remoteDeleteRecordHistoryLocalId = this.getRecordHistoryLocalId(recordHistory, allRemoteRecordDeletesForRepoInTable);\n            if (remoteDeleteRecordHistoryLocalId) {\n                // remotely created record has been remotely deleted\n                this.addSyncConflict(SynchronizationConflict_Type.REMOTE_CREATE_REMOTELY_DELETED, repositoryLocalId, recordHistory, {\n                    _localId: remoteDeleteRecordHistoryLocalId\n                }, syncConflictMapByRepoId);\n                // If the record has been deleted, do not process the create\n                continue;\n            }\n            const createdRecord = this.ensureColumnValueMap(recordHistory, insertsForEntityInRepo);\n            if (this.getRecord(recordHistory, recordUpdatesForRepoInTable)) {\n                throw new Error(`Remotely created record is being updated BEFORE it is created.\r\n\t\t\t\t\t${this.getRecordInfo(repositoryLocalId, operationHistory, recordHistory)}\r\n\t\t\t\t\tThis is not possible if all server clocks are synced.\r\n\t\t\t\t\t`);\n            }\n            // Record the creation of the record\n            for (const newValue of recordHistory.newValues) {\n                createdRecord.set(newValue.columnIndex, newValue.newValue);\n            }\n        }\n    }\n    /*\n    NOTE: local updates to records NOT in incoming changes do not get inputted into\n    this processing.\n     */\n    processUpdate(repositoryLocalId, operationHistory, isLocal, recordCreations, recordUpdates, allRemoteRecordDeletions, allLocalRecordDeletions, syncConflictMapByRepoId) {\n        const recordCreationsForRepoInTable = this.getRecordsForRepoInTable(repositoryLocalId, operationHistory, recordCreations);\n        const allRemoteRecordDeletesForRepoInTable = this.getRecordsForRepoInTable(repositoryLocalId, operationHistory, allRemoteRecordDeletions);\n        const allLocalRecordDeletesForRepoInTable = this.getRecordsForRepoInTable(repositoryLocalId, operationHistory, allLocalRecordDeletions);\n        const updatesForEntityInRepo = this.syncInUtils.ensureRecordMapForRepoInTable(repositoryLocalId, operationHistory, recordUpdates);\n        for (const recordHistory of operationHistory.recordHistory) {\n            const localDeleteRecordHistoryLocalId = this.getRecordHistoryLocalId(recordHistory, allLocalRecordDeletesForRepoInTable);\n            if (localDeleteRecordHistoryLocalId) {\n                if (!isLocal) {\n                    // A remote update to a record has been locally deleted\n                    this.addSyncConflict(SynchronizationConflict_Type.REMOTE_UPDATE_LOCALLY_DELETED, repositoryLocalId, recordHistory, {\n                        _localId: localDeleteRecordHistoryLocalId\n                    }, syncConflictMapByRepoId);\n                }\n                // else {a local update to a record has been locally deleted - nothing to do}\n                // If the record has been deleted, do not process the update\n                continue;\n            }\n            const remoteDeleteRecordHistoryLocalId = this.getRecordHistoryLocalId(recordHistory, allRemoteRecordDeletesForRepoInTable);\n            if (remoteDeleteRecordHistoryLocalId) {\n                if (isLocal) {\n                    // A local update for a record that has been deleted remotely\n                    this.addSyncConflict(SynchronizationConflict_Type.LOCAL_UPDATE_REMOTELY_DELETED, repositoryLocalId, recordHistory, {\n                        _localId: remoteDeleteRecordHistoryLocalId\n                    }, syncConflictMapByRepoId);\n                }\n                // else {remote deletions do not cause conflicts for remotely updated records}\n                // If the record has been deleted, do not process the update\n                continue;\n            }\n            // If the record has been created, update the creation record instead\n            let createdRecord = this.getRecord(recordHistory, recordCreationsForRepoInTable);\n            if (createdRecord) {\n                if (isLocal) {\n                    throw new Error(`Remotely created records are being updated locally.\r\n\t\t\t\t\t${this.getRecordInfo(repositoryLocalId, operationHistory, recordHistory)}\r\n\t\t\t\t\tThis is not possible if every remote change is only processed once.\r\n\t\t\t\t\t`);\n                }\n                else {\n                    // remotely created record is being updated remotely - normal flow\n                    for (const newValue of recordHistory.newValues) {\n                        createdRecord.set(newValue.columnIndex, newValue.newValue);\n                    }\n                }\n                // No need to record updates, already taken into account in the create\n                continue;\n            }\n            // record update\n            let updatedRecord = this.ensureRecord(recordHistory, updatesForEntityInRepo);\n            let synchronizationConflict;\n            for (const newValue of recordHistory.newValues) {\n                if (isLocal) {\n                    const columnIndex = newValue.columnIndex;\n                    const recordUpdate = updatedRecord.get(columnIndex);\n                    if (recordUpdate) {\n                        // remotely updated record value is being updated locally\n                        if (!synchronizationConflict) {\n                            synchronizationConflict = this.addSyncConflict(SynchronizationConflict_Type.REMOTE_UPDATE_LOCALLY_UPDATED, repositoryLocalId, {\n                                _localId: recordUpdate.recordHistoryLocalId,\n                            }, {\n                                _localId: remoteDeleteRecordHistoryLocalId\n                            }, syncConflictMapByRepoId);\n                            synchronizationConflict.values = [];\n                        }\n                        synchronizationConflict.values.push({\n                            columnIndex,\n                            synchronizationConflict\n                        });\n                        // no need to update since the value is already there\n                        // Remove the update\n                        updatedRecord.delete(newValue.columnIndex);\n                    }\n                }\n                else {\n                    // remotely updated record value is being updated remotely - normal flow\n                    // replace the older update with the newer one\n                    updatedRecord.set(newValue.columnIndex, {\n                        newValue: newValue.newValue,\n                        recordHistoryLocalId: recordHistory._localId\n                    });\n                }\n            }\n        }\n    }\n    /*\n    NOTE: local deletes of records NOT in incoming changes do not get inputted into\n    this processing.\n     */\n    processDeletion(repositoryLocalId, operationHistory, recordCreations, recordUpdates, recordDeletions, allLocalRecordDeletions) {\n        const recordCreationsForRepoInTable = this.getRecordsForRepoInTable(repositoryLocalId, operationHistory, recordCreations);\n        const recordUpdatesForRepoInTable = this.getRecordsForRepoInTable(repositoryLocalId, operationHistory, recordUpdates);\n        const allLocalRecordDeletesForRepoInTable = this.getRecordsForRepoInTable(repositoryLocalId, operationHistory, allLocalRecordDeletions);\n        const deletesForEntityInRepo = this.syncInUtils.ensureRecordMapForRepoInTable(repositoryLocalId, operationHistory, recordDeletions);\n        for (const recordHistory of operationHistory.recordHistory) {\n            let recordCreationsForActorInRepoInTable = this.getRecordsForActor(recordHistory, recordCreationsForRepoInTable);\n            // If a remotely deleted record was also created remotely\n            if (recordCreationsForActorInRepoInTable\n                && recordCreationsForActorInRepoInTable.get(recordHistory._actorRecordId)) {\n                // remote deletions do not cause conflicts for remotely created records\n                // Remove the creation of the record\n                recordCreationsForActorInRepoInTable.delete(recordHistory._actorRecordId);\n                // No need to record a deletion for a record that was also created (remotely)\n                continue;\n            }\n            let recordUpdatesForActorInRepoInTable = this.getRecordsForActor(recordHistory, recordUpdatesForRepoInTable);\n            // If a remotely deleted record has been updated (remotely)\n            if (recordUpdatesForActorInRepoInTable\n                && recordUpdatesForActorInRepoInTable.get(recordHistory._actorRecordId)) {\n                // remote deletions do not cause conflicts for remotely updated records\n                // Remove record updates for deleted records\n                recordUpdatesForActorInRepoInTable.delete(recordHistory._actorRecordId);\n            }\n            if (this.getRecordHistoryLocalId(recordHistory, allLocalRecordDeletesForRepoInTable)) {\n                // If the record has been deleted locally, no need to add another delete operation\n                continue;\n            }\n            // record deletion\n            ensureChildJsSet(deletesForEntityInRepo, recordHistory.actor._localId)\n                .add(recordHistory._actorRecordId);\n        }\n    }\n    getRecordsForRepoInTable(repositoryLocalId, operationHistory, recordMapByApplicationTableAndRepository) {\n        const recordMapForApplication = recordMapByApplicationTableAndRepository\n            .get(operationHistory.entity.applicationVersion._localId);\n        let recordMapForTable;\n        if (recordMapForApplication) {\n            recordMapForTable = recordMapForApplication.get(operationHistory.entity._localId);\n        }\n        let recordMapForRepoInTable;\n        if (recordMapForTable) {\n            recordMapForRepoInTable = recordMapForTable.get(repositoryLocalId);\n        }\n        return recordMapForRepoInTable;\n    }\n    getRecord(recordHistory, recordMapByActor) {\n        let recordsForActor = this.getRecordsForActor(recordHistory, recordMapByActor);\n        if (!recordsForActor) {\n            return null;\n        }\n        return recordsForActor.get(recordHistory._actorRecordId);\n    }\n    hasRecordId(recordHistory, actorRecordLocalIdSetByActor) {\n        let actorRecordIdsForActor = this.getRecordsForActor(recordHistory, actorRecordLocalIdSetByActor);\n        if (!actorRecordIdsForActor) {\n            return false;\n        }\n        return actorRecordIdsForActor.has(recordHistory._actorRecordId);\n    }\n    getRecordHistoryLocalId(recordHistory, actorRecordLocalIdSetByActor) {\n        let actorRecordIdsForActor = this.getRecordsForActor(recordHistory, actorRecordLocalIdSetByActor);\n        if (!actorRecordIdsForActor) {\n            return null;\n        }\n        return actorRecordIdsForActor.get(recordHistory._actorRecordId);\n    }\n    getRecordsForActor(recordHistory, recordMapByActor) {\n        let recordsForActor;\n        if (recordMapByActor) {\n            recordsForActor = recordMapByActor.get(recordHistory.actor._localId);\n        }\n        return recordsForActor;\n    }\n    getRecordInfo(repositoryLocalId, operationHistory, recordHistory) {\n        return `\r\n\t\tApplication Version ID: ${operationHistory.entity.applicationVersion._localId}\r\n\t\tEntity ID:         ${operationHistory.entity._localId}\r\n\t\tRepository ID:     ${repositoryLocalId}\r\n\t\tActor ID:          ${recordHistory.actor._localId}\r\n\t\tActor Record ID:   ${recordHistory._actorRecordId}\r\n\t\t`;\n    }\n    addSyncConflict(synchronizationConflictType, repositoryLocalId, overwrittenRecordHistory, overwritingRecordHistory, syncConflictMapByRepoId) {\n        const syncConflict = this.createSynchronizationConflict(synchronizationConflictType, repositoryLocalId, overwrittenRecordHistory, overwritingRecordHistory);\n        ensureChildArray(syncConflictMapByRepoId, repositoryLocalId).push(syncConflict);\n        return syncConflict;\n    }\n    createSynchronizationConflict(synchronizationConflictType, repositoryLocalId, overwrittenRecordHistory, overwritingRecordHistory) {\n        return {\n            _localId: null,\n            overwrittenRecordHistory,\n            overwritingRecordHistory,\n            repository: {\n                _localId: repositoryLocalId\n            },\n            type: synchronizationConflictType\n        };\n    }\n    ensureColumnValueMap(recordHistory, dataMap) {\n        return ensureChildJsMap(ensureChildJsMap(dataMap, recordHistory.actor._localId), recordHistory._actorRecordId);\n    }\n    ensureRecord(recordHistory, recordMapByActor) {\n        return ensureChildJsMap(ensureChildJsMap(recordMapByActor, recordHistory.actor._localId), recordHistory._actorRecordId);\n    }\n};\n__decorate([\n    Inject()\n], Stage1SyncedInDataProcessor.prototype, \"actorDao\", void 0);\n__decorate([\n    Inject()\n], Stage1SyncedInDataProcessor.prototype, \"airportDatabase\", void 0);\n__decorate([\n    Inject()\n], Stage1SyncedInDataProcessor.prototype, \"repositoryTransactionHistoryDao\", void 0);\n__decorate([\n    Inject()\n], Stage1SyncedInDataProcessor.prototype, \"repositoryTransactionHistoryDuo\", void 0);\n__decorate([\n    Inject()\n], Stage1SyncedInDataProcessor.prototype, \"sequenceGenerator\", void 0);\n__decorate([\n    Inject()\n], Stage1SyncedInDataProcessor.prototype, \"syncInUtils\", void 0);\nStage1SyncedInDataProcessor = __decorate([\n    Injected()\n], Stage1SyncedInDataProcessor);\nexport { Stage1SyncedInDataProcessor };\n//# sourceMappingURL=Stage1SyncedInDataProcessor.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { ensureChildJsMap, ensureChildJsSet, airEntity } from '@airport/ground-control';\nimport { AND, OR } from '@airport/tarmaq-query';\nlet Stage2SyncedInDataProcessor = class Stage2SyncedInDataProcessor {\n    async applyChangesToDb(stage1Result, applicationsByApplicationVersion_LocalIdMap) {\n        const context = {};\n        await this.performCreates(stage1Result.recordCreations, applicationsByApplicationVersion_LocalIdMap, context);\n        await this.performUpdates(stage1Result.recordUpdates, applicationsByApplicationVersion_LocalIdMap, context);\n        await this.performDeletes(stage1Result.recordDeletions, applicationsByApplicationVersion_LocalIdMap, context);\n    }\n    /**\n     * Remote changes come in with ApplicationVersion_LocalIds not Application_Indexes, so it makes\n     * sense to keep this structure.  NOTE: only one version of a given application is\n     * processed at one time:\n     *\n     *  Changes for a application version below the one in this Terminal must first be upgraded.\n     *  Terminal itself must first be upgraded to newer application versions, before changes\n     *  for that application version are processed.\n     *\n     *  To tie in a given ApplicationVersion_LocalId to its Application_Index an additional mapping data\n     *  structure is passed in.\n     */\n    async performCreates(recordCreations, applicationsByApplicationVersion_LocalIdMap, context) {\n        for (const [applicationVersionId, creationInApplicationMap] of recordCreations) {\n            for (const [tableIndex, creationInTableMap] of creationInApplicationMap) {\n                const applicationIndex = applicationsByApplicationVersion_LocalIdMap\n                    .get(applicationVersionId).index;\n                const dbEntity = this.airportDatabase.applications[applicationIndex].currentVersion[0]\n                    .applicationVersion.entities[tableIndex];\n                const qEntity = this.airportDatabase.qApplications[applicationIndex][dbEntity.name];\n                const columns = [\n                    qEntity.repository._localId,\n                    qEntity.actor._localId,\n                    qEntity._actorRecordId\n                ];\n                const nonIdColumns = this.getNonIdColumnsInIndexOrder(dbEntity);\n                let creatingColumns = true;\n                let numInserts = 0;\n                const VALUES = [];\n                for (const [repositoryId, creationForRepositoryMap] of creationInTableMap) {\n                    for (const [actorId, creationForActorMap] of creationForRepositoryMap) {\n                        for (const [_actorRecordId, creationOfRowMap] of creationForActorMap) {\n                            const rowValues = [\n                                repositoryId,\n                                actorId,\n                                _actorRecordId\n                            ];\n                            const columnIndexedValues = [];\n                            for (const [columnIndex, columnValue] of creationOfRowMap) {\n                                columnIndexedValues.push([columnIndex, columnValue]);\n                            }\n                            if (columnIndexedValues.length) {\n                                numInserts++;\n                            }\n                            columnIndexedValues.sort((col1IndexAndValue, col2IndexAndValue) => {\n                                return this.utils.compareNumbers(col1IndexAndValue[0], col2IndexAndValue[0]);\n                            });\n                            let currentNonIdColumnArrayIndex = 0;\n                            for (const [columnIndex, columnValue] of columnIndexedValues) {\n                                let nonIdColumn = nonIdColumns[currentNonIdColumnArrayIndex];\n                                while (nonIdColumn.index < columnIndex) {\n                                    if (creatingColumns) {\n                                        columns.push(qEntity.__driver__.allColumns[nonIdColumn.index]);\n                                    }\n                                    rowValues.push(null);\n                                    currentNonIdColumnArrayIndex++;\n                                    nonIdColumn = nonIdColumns[currentNonIdColumnArrayIndex];\n                                }\n                                if (creatingColumns) {\n                                    columns.push(qEntity.__driver__.allColumns[columnIndex]);\n                                }\n                                rowValues.push(columnValue);\n                                currentNonIdColumnArrayIndex++;\n                            }\n                            if (columnIndexedValues.length) {\n                                VALUES.push(rowValues);\n                            }\n                            creatingColumns = false;\n                        }\n                    }\n                }\n                if (numInserts) {\n                    const previousDbEntity = context.dbEntity;\n                    context.dbEntity = qEntity\n                        .__driver__.dbEntity;\n                    try {\n                        await this.databaseFacade.insertValues({\n                            INSERT_INTO: qEntity,\n                            columns,\n                            VALUES\n                        }, context);\n                    }\n                    finally {\n                        context.dbEntity = previousDbEntity;\n                    }\n                }\n            }\n        }\n    }\n    getNonIdColumnsInIndexOrder(dbEntity) {\n        const nonIdColumns = [];\n        for (const column of dbEntity.columns) {\n            switch (column.name) {\n                case airEntity.ACTOR_LID:\n                case airEntity.ACTOR_RECORD_ID:\n                case airEntity.REPOSITORY_LID:\n                    continue;\n            }\n            nonIdColumns.push(column);\n        }\n        nonIdColumns.sort((column1, column2) => {\n            return this.utils.compareNumbers(column1.index, column2.index);\n        });\n        return nonIdColumns;\n    }\n    async performUpdates(recordUpdates, applicationsByApplicationVersion_LocalIdMap, context) {\n        const finalUpdateMap = new Map();\n        const recordUpdateStage = [];\n        // Build the final update data structure\n        for (const [applicationVersionId, applicationUpdateMap] of recordUpdates) {\n            const finalApplicationUpdateMap = ensureChildJsMap(finalUpdateMap, applicationVersionId);\n            for (const [tableIndex, tableUpdateMap] of applicationUpdateMap) {\n                const finalTableUpdateMap = ensureChildJsMap(finalApplicationUpdateMap, tableIndex);\n                for (const [repositoryId, repositoryUpdateMap] of tableUpdateMap) {\n                    for (const [actorId, actorUpdates] of repositoryUpdateMap) {\n                        for (const [_actorRecordId, recordUpdateMap] of actorUpdates) {\n                            const recordKeyMap = this.getRecordKeyMap(recordUpdateMap, finalTableUpdateMap);\n                            ensureChildJsSet(ensureChildJsMap(recordKeyMap, repositoryId), actorId)\n                                .add(_actorRecordId);\n                            for (const [columnIndex, columnUpdate] of recordUpdateMap) {\n                                recordUpdateStage.push([\n                                    applicationVersionId,\n                                    tableIndex,\n                                    repositoryId,\n                                    actorId,\n                                    _actorRecordId,\n                                    columnIndex,\n                                    columnUpdate.newValue\n                                ]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!recordUpdateStage.length) {\n            return;\n        }\n        await this.recordUpdateStageDao.insertValues(recordUpdateStage);\n        // Perform the updates\n        for (const [applicationVersionId, updateMapForApplication] of finalUpdateMap) {\n            const application = applicationsByApplicationVersion_LocalIdMap.get(applicationVersionId);\n            for (const [tableIndex, updateMapForTable] of updateMapForApplication) {\n                await this.runUpdatesForTable(application.index, applicationVersionId, tableIndex, updateMapForTable);\n            }\n        }\n        await this.recordUpdateStageDao.delete();\n    }\n    async performDeletes(recordDeletions, applicationsByApplicationVersion_LocalIdMap, context) {\n        for (const [applicationVersionId, deletionInApplicationMap] of recordDeletions) {\n            const application = applicationsByApplicationVersion_LocalIdMap.get(applicationVersionId);\n            for (const [tableIndex, deletionInTableMap] of deletionInApplicationMap) {\n                const dbEntity = this.airportDatabase.applications[application.index].currentVersion[0]\n                    .applicationVersion.entities[tableIndex];\n                const qEntity = this.airportDatabase.qApplications[application.index][dbEntity.name];\n                let numClauses = 0;\n                let repositoryWhereFragments = [];\n                for (const [repositoryId, deletionForRepositoryMap] of deletionInTableMap) {\n                    let actorWhereFragments = [];\n                    for (const [actorId, actorRecordIdSet] of deletionForRepositoryMap) {\n                        numClauses++;\n                        actorWhereFragments.push(AND(qEntity._actorRecordId.IN(Array.from(actorRecordIdSet)), qEntity.actor._localId.equals(actorId)));\n                    }\n                    repositoryWhereFragments.push(AND(qEntity.repository._localId.equals(repositoryId), OR(...actorWhereFragments)));\n                }\n                if (numClauses) {\n                    const previousDbEntity = context.dbEntity;\n                    context.dbEntity = qEntity\n                        .__driver__.dbEntity;\n                    try {\n                        await this.databaseFacade.deleteWhere({\n                            DELETE_FROM: qEntity,\n                            WHERE: OR(...repositoryWhereFragments)\n                        }, context);\n                    }\n                    finally {\n                        context.dbEntity = previousDbEntity;\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Get the record key map (RecordKeyMap = RepositoryId -> Actor_LocalId\n     * -> AirEntity_ActorRecordId) for the recordUpdateMap (the specified combination\n     * of columns/values being updated)\n     * @param {Map<ApplicationColumn_Index, RecordUpdate>} recordUpdateMap\n     * @param {ColumnUpdateKeyMap} finalTableUpdarecordKeyMapteMap\n     * @returns {RecordKeyMap}\n     */\n    getRecordKeyMap(recordUpdateMap, // combination of columns/values\n    // being updated\n    finalTableUpdateMap) {\n        const updatedColumns = [];\n        for (const columnIndex of recordUpdateMap.keys()) {\n            updatedColumns.push(columnIndex);\n        }\n        // Sort the updated columns by column index, to ensure that all records with the\n        // same combination of updated columns are grouped\n        updatedColumns.sort(this.utils.compareNumbers);\n        // Navigate down the table UpdateKeyMap to find the matching combination of\n        // columns being updated\n        let columnValueUpdate;\n        let updateKeyMap = finalTableUpdateMap;\n        for (const columnIndex of updatedColumns) {\n            columnValueUpdate = updateKeyMap.get(columnIndex);\n            // If no update statements with the specified combination of columns exist yet\n            if (!columnValueUpdate) {\n                columnValueUpdate = {\n                    childColumnUpdateKeyMap: new Map(),\n                    recordKeyMap: new Map(),\n                    updatedColumns: null,\n                };\n                updateKeyMap.set(columnIndex, columnValueUpdate);\n            }\n            // Navigate down\n            updateKeyMap = columnValueUpdate.childColumnUpdateKeyMap;\n        }\n        columnValueUpdate.updatedColumns = updatedColumns;\n        // Return the map of the records for the update statement of the specified combination\n        // of columns/values\n        return columnValueUpdate.recordKeyMap;\n    }\n    /**\n     * Run all updates for a particular table.  One update per updated column combination\n     * is run.\n     *\n     * @param {Application_Index} applicationIndex\n     * @param {ApplicationEntity_TableIndex} tableIndex\n     * @param {ColumnUpdateKeyMap} updateKeyMap\n     * @returns {Promise<void>}\n     */\n    async runUpdatesForTable(applicationIndex, applicationVersionId, tableIndex, updateKeyMap) {\n        for (const columnValueUpdate of updateKeyMap.values()) {\n            const updatedColumns = columnValueUpdate.updatedColumns;\n            if (updatedColumns) {\n                await this.recordUpdateStageDao.updateEntityWhereIds(applicationIndex, applicationVersionId, tableIndex, columnValueUpdate.recordKeyMap, updatedColumns);\n            }\n            // Traverse down into nested column update combinations\n            await this.runUpdatesForTable(applicationIndex, applicationVersionId, tableIndex, columnValueUpdate.childColumnUpdateKeyMap);\n        }\n    }\n};\n__decorate([\n    Inject()\n], Stage2SyncedInDataProcessor.prototype, \"airportDatabase\", void 0);\n__decorate([\n    Inject()\n], Stage2SyncedInDataProcessor.prototype, \"databaseFacade\", void 0);\n__decorate([\n    Inject()\n], Stage2SyncedInDataProcessor.prototype, \"recordUpdateStageDao\", void 0);\n__decorate([\n    Inject()\n], Stage2SyncedInDataProcessor.prototype, \"utils\", void 0);\nStage2SyncedInDataProcessor = __decorate([\n    Injected()\n], Stage2SyncedInDataProcessor);\nexport { Stage2SyncedInDataProcessor };\n//# sourceMappingURL=Stage2SyncedInDataProcessor.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\n/**\n * Synchronization in Manager implementation.\n */\nlet SynchronizationInManager = class SynchronizationInManager {\n    async receiveMessages(messageMapByGUID, context) {\n        const syncTimestamp = new Date().getTime();\n        const existingRepositoryTransactionHistories = await this.repositoryTransactionHistoryDao\n            .findWhereGUIDsIn([...messageMapByGUID.keys()]);\n        for (const existingRepositoryTransactionHistory of existingRepositoryTransactionHistories) {\n            messageMapByGUID.delete(existingRepositoryTransactionHistory.GUID);\n        }\n        if (!messageMapByGUID.size) {\n            return;\n        }\n        let messagesToProcess = [];\n        const orderedMessages = this.timeOrderMessages(messageMapByGUID);\n        // Split up messages by type\n        for (const message of orderedMessages) {\n            if (!this.isValidLastChangeTime(syncTimestamp, message.syncTimestamp, 'Sync Timestamp')) {\n                continue;\n            }\n            if (!this.isValidLastChangeTime(message.syncTimestamp, message.history.saveTimestamp, 'Sync Timestamp', 'Save Timestamp')) {\n                continue;\n            }\n            let processMessage = true;\n            await this.transactionManager.transactInternal(async (transaction) => {\n                if (!await this.syncInChecker.checkMessage(message, context)) {\n                    transaction.rollback(null, context);\n                    processMessage = false;\n                    return;\n                }\n            }, context);\n            if (processMessage) {\n                messagesToProcess.push(message);\n            }\n        }\n        await this.transactionManager.transactInternal(async (transaction, context) => {\n            transaction.isSync = true;\n            await this.twoStageSyncedInDataProcessor.syncMessages(messagesToProcess, transaction, context);\n        }, context);\n    }\n    timeOrderMessages(messageMapByGUID) {\n        const messages = [...messageMapByGUID.values()];\n        messages.sort((message1, message2) => {\n            if (message1.syncTimestamp < message2.syncTimestamp) {\n                return -1;\n            }\n            if (message1.syncTimestamp > message2.syncTimestamp) {\n                return 1;\n            }\n            let history1 = message1.history;\n            let history2 = message2.history;\n            if (history1.saveTimestamp < history2.saveTimestamp) {\n                return -1;\n            }\n            if (history1.saveTimestamp > history2.saveTimestamp) {\n                return 1;\n            }\n            return 0;\n        });\n        return messages;\n    }\n    isValidLastChangeTime(syncTimestamp, remoteTimestamp, remoteFieldName, syncFieldName = 'Reception Time:') {\n        if (syncTimestamp < remoteTimestamp) {\n            console.error(`Message ${syncFieldName} is less than\r\n\t\t\tthe ${remoteFieldName} in received message:\r\n\t\t\t\t${syncFieldName}:               ${syncTimestamp}\r\n\t\t\t\t${remoteFieldName}:           ${remoteTimestamp}\r\n\t\t\t`);\n            return false;\n        }\n        return true;\n    }\n};\n__decorate([\n    Inject()\n], SynchronizationInManager.prototype, \"repositoryTransactionHistoryDao\", void 0);\n__decorate([\n    Inject()\n], SynchronizationInManager.prototype, \"syncInChecker\", void 0);\n__decorate([\n    Inject()\n], SynchronizationInManager.prototype, \"transactionManager\", void 0);\n__decorate([\n    Inject()\n], SynchronizationInManager.prototype, \"twoStageSyncedInDataProcessor\", void 0);\nSynchronizationInManager = __decorate([\n    Injected()\n], SynchronizationInManager);\nexport { SynchronizationInManager };\n//# sourceMappingURL=SynchronizationInManager.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { ensureChildJsMap } from '@airport/ground-control';\n/**\n * Result of comparing to versions of a given application.\n */\nexport var ApplicationComparisonResult;\n(function (ApplicationComparisonResult) {\n    // Version specified in the message is lower than it's version in the receiving\n    // Terminal (TM)\n    ApplicationComparisonResult[ApplicationComparisonResult[\"MESSAGE_APPLICATION_VERSION_IS_LOWER\"] = -1] = \"MESSAGE_APPLICATION_VERSION_IS_LOWER\";\n    // Version of the application used i the message is the same as that in the receiving\n    // Terminal (TM)\n    ApplicationComparisonResult[ApplicationComparisonResult[\"MESSAGE_APPLICATION_VERSION_IS_EQUAL\"] = 0] = \"MESSAGE_APPLICATION_VERSION_IS_EQUAL\";\n    // Version specified in the message in higher than it's version in the receiving\n    // Terminal (TM)\n    ApplicationComparisonResult[ApplicationComparisonResult[\"MESSAGE_APPLICATION_VERSION_IS_HIGHER\"] = 1] = \"MESSAGE_APPLICATION_VERSION_IS_HIGHER\";\n})(ApplicationComparisonResult || (ApplicationComparisonResult = {}));\nlet SyncInUtils = class SyncInUtils {\n    ensureRecordMapForRepoInTable(repositoryLocalId, operationHistory, recordMapByApplicationTableAndRepository) {\n        return ensureChildJsMap(ensureChildJsMap(ensureChildJsMap(recordMapByApplicationTableAndRepository, operationHistory.entity.applicationVersion._localId), operationHistory.entity.index), repositoryLocalId);\n    }\n};\nSyncInUtils = __decorate([\n    Injected()\n], SyncInUtils);\nexport { SyncInUtils };\n//# sourceMappingURL=SyncInUtils.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { TransactionType } from '@airport/ground-control';\nimport { RepositoryTransactionType } from '@airport/holding-pattern/lib/to_be_generated/runtime-index';\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet TwoStageSyncedInDataProcessor = class TwoStageSyncedInDataProcessor {\n    /**\n     * Synchronize the data messages coming to Terminal (new data for this TM)\n     */\n    async syncMessages(messages, transaction, context) {\n        this.aggregateHistoryRecords(messages, transaction);\n        const { actorMapById, repositoryTransactionHistoryMapByRepositoryId, applicationsByApplicationVersion_LocalIdMap } = await this.getDataStructures(messages);\n        await this.updateLocalData(repositoryTransactionHistoryMapByRepositoryId, actorMapById, applicationsByApplicationVersion_LocalIdMap, context);\n    }\n    aggregateHistoryRecords(messages, transaction) {\n        const transactionHistory = transaction.transactionHistory;\n        transactionHistory.transactionType = TransactionType.REMOTE_SYNC;\n        // split messages by repository and record actor information\n        for (const message of messages) {\n            const repositoryTransactionHistory = message.history;\n            transactionHistory.repositoryTransactionHistories.push(repositoryTransactionHistory);\n            repositoryTransactionHistory.repositoryTransactionType = RepositoryTransactionType.REMOTE;\n            transactionHistory.allOperationHistory = transactionHistory\n                .allOperationHistory.concat(repositoryTransactionHistory.operationHistory);\n            repositoryTransactionHistory.operationHistory.forEach((operationHistory) => {\n                transactionHistory.allRecordHistory = transactionHistory\n                    .allRecordHistory.concat(operationHistory.recordHistory);\n                operationHistory.recordHistory.forEach((recordHistory) => {\n                    if (recordHistory.newValues && recordHistory.newValues.length) {\n                        transactionHistory.allRecordHistoryNewValues = transactionHistory\n                            .allRecordHistoryNewValues.concat(recordHistory.newValues);\n                    }\n                    if (recordHistory.oldValues && recordHistory.oldValues.length) {\n                        transactionHistory.allRecordHistoryOldValues = transactionHistory\n                            .allRecordHistoryOldValues.concat(recordHistory.oldValues);\n                    }\n                });\n            });\n        }\n    }\n    async getDataStructures(messages) {\n        const repositoryTransactionHistoryMapByRepositoryId = new Map();\n        const applicationsByApplicationVersion_LocalIdMap = new Map();\n        const actorMapById = new Map();\n        const repoTransHistories = [];\n        for (const message of messages) {\n            repoTransHistories.push(message.history);\n            repositoryTransactionHistoryMapByRepositoryId.set(message.history.repository._localId, repoTransHistories);\n            for (const actor of message.actors) {\n                actorMapById.set(actor._localId, actor);\n            }\n            for (const applicationVersion of message.applicationVersions) {\n                applicationsByApplicationVersion_LocalIdMap.set(applicationVersion._localId, applicationVersion.application);\n            }\n        }\n        for (const [_, repoTransHistories] of repositoryTransactionHistoryMapByRepositoryId) {\n            this.repositoryTransactionHistoryDuo\n                .sortRepoTransHistories(repoTransHistories, actorMapById);\n        }\n        return {\n            actorMapById,\n            repositoryTransactionHistoryMapByRepositoryId,\n            applicationsByApplicationVersion_LocalIdMap\n        };\n    }\n    async updateLocalData(repositoryTransactionHistoryMapByRepositoryId, actorMayById, applicationsByApplicationVersion_LocalIdMap, context) {\n        const stage1Result = await this.stage1SyncedInDataProcessor.performStage1DataProcessing(repositoryTransactionHistoryMapByRepositoryId, actorMayById, context);\n        let allSyncConflicts = [];\n        let allSyncConflictValues = [];\n        for (const [_, synchronizationConflicts] of stage1Result.syncConflictMapByRepoId) {\n            allSyncConflicts = allSyncConflicts.concat(synchronizationConflicts);\n            for (const synchronizationConflict of synchronizationConflicts) {\n                if (synchronizationConflict.values.length) {\n                    allSyncConflictValues = allSyncConflictValues.concat(synchronizationConflict.values);\n                }\n            }\n        }\n        await this.stage2SyncedInDataProcessor.applyChangesToDb(stage1Result, applicationsByApplicationVersion_LocalIdMap);\n        if (allSyncConflicts.length) {\n            await this.synchronizationConflictDao.insert(allSyncConflicts, context);\n        }\n        if (allSyncConflictValues.length) {\n            await this.synchronizationConflictValuesDao.insert(allSyncConflictValues, context);\n        }\n    }\n};\n__decorate([\n    Inject()\n], TwoStageSyncedInDataProcessor.prototype, \"repositoryTransactionHistoryDuo\", void 0);\n__decorate([\n    Inject()\n], TwoStageSyncedInDataProcessor.prototype, \"stage1SyncedInDataProcessor\", void 0);\n__decorate([\n    Inject()\n], TwoStageSyncedInDataProcessor.prototype, \"stage2SyncedInDataProcessor\", void 0);\n__decorate([\n    Inject()\n], TwoStageSyncedInDataProcessor.prototype, \"synchronizationConflictDao\", void 0);\n__decorate([\n    Inject()\n], TwoStageSyncedInDataProcessor.prototype, \"synchronizationConflictValuesDao\", void 0);\nTwoStageSyncedInDataProcessor = __decorate([\n    Injected()\n], TwoStageSyncedInDataProcessor);\nexport { TwoStageSyncedInDataProcessor };\n//# sourceMappingURL=TwoStageSyncedInDataProcessor.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { airEntity } from \"@airport/ground-control\";\nimport { RepositoryTransactionType } from \"@airport/holding-pattern/lib/to_be_generated/runtime-index\";\nexport const WITH_ID = {};\nexport const WITH_RECORD_HISTORY = {};\nexport const WITH_INDEX = {};\nlet SyncOutDataSerializer = class SyncOutDataSerializer {\n    async serialize(repositoryTransactionHistories) {\n        let historiesToSend = [];\n        const messages = [];\n        for (const repositoryTransactionHistory of repositoryTransactionHistories) {\n            if (repositoryTransactionHistory.repositoryTransactionType !== RepositoryTransactionType.LOCAL) {\n                continue;\n            }\n            const message = await this.serializeMessage(repositoryTransactionHistory);\n            historiesToSend.push(repositoryTransactionHistory);\n            messages.push(message);\n        }\n        return {\n            historiesToSend,\n            messages\n        };\n    }\n    async serializeMessage(repositoryTransactionHistory) {\n        const lookups = {\n            actorInMessageIndexesById: new Map(),\n            applicationVersionInMessageIndexesById: new Map(),\n            applicationVersions: [],\n            lastInMessageActorIndex: -1,\n            lastInMessageApplicationVersionIndex: -1,\n            lastInMessageRepositoryIndex: -1,\n            messageRepository: repositoryTransactionHistory.repository,\n            repositoryInMessageIndexesById: new Map()\n        };\n        const inMessageUserAccountLookup = {\n            inMessageIndexesById: new Map(),\n            lastInMessageIndex: -1\n        };\n        const message = {\n            actors: [],\n            applicationVersions: [],\n            applications: [],\n            history: null,\n            // Repositories may reference records in other repositories\n            referencedRepositories: [],\n            userAccounts: [],\n            terminals: []\n        };\n        message.history = this.serializeRepositoryTransactionHistory(repositoryTransactionHistory, message, lookups, inMessageUserAccountLookup);\n        // TODO: replace db lookups with TerminalState lookups where possible\n        await this.serializeRepositories(repositoryTransactionHistory, message, lookups, inMessageUserAccountLookup);\n        const inMessageApplicationLookup = await this.serializeActorsUserAccountsAndTerminals(message, lookups, inMessageUserAccountLookup);\n        await this.serializeApplicationsAndVersions(message, inMessageApplicationLookup, lookups);\n        return message;\n    }\n    async serializeActorsUserAccountsAndTerminals(message, lookups, inMessageUserAccountLookup) {\n        let actorIdsToFindBy = [];\n        for (let actorId of lookups.actorInMessageIndexesById.keys()) {\n            actorIdsToFindBy.push(actorId);\n        }\n        const actors = await this.actorDao.findWithDetailsAndGlobalIdsByIds(actorIdsToFindBy);\n        this.serializeUserAccounts(actors, message, inMessageUserAccountLookup);\n        const terminalInMessageIndexesById = this.serializeTerminals(actors, message, inMessageUserAccountLookup);\n        const inMessageApplicationLookup = {\n            lastInMessageIndex: -1,\n            inMessageIndexesById: new Map()\n        };\n        for (const actor of actors) {\n            const applicationInMessageIndex = this.serializeApplication(actor.application, inMessageApplicationLookup, message);\n            const actorInMessageIndex = lookups.actorInMessageIndexesById.get(actor._localId);\n            message.actors[actorInMessageIndex] = {\n                ...WITH_ID,\n                application: applicationInMessageIndex,\n                terminal: terminalInMessageIndexesById.get(actor.terminal._localId),\n                userAccount: inMessageUserAccountLookup.inMessageIndexesById.get(actor.userAccount._localId),\n                GUID: actor.GUID\n            };\n        }\n        return inMessageApplicationLookup;\n    }\n    serializeTerminals(actors, message, inMessageUserAccountLookup) {\n        let lastInMessageTerminalIndex = -1;\n        const terminalInMessageIndexesById = new Map();\n        for (const actor of actors) {\n            let terminal = actor.terminal;\n            if (terminalInMessageIndexesById.has(terminal._localId)) {\n                continue;\n            }\n            const terminalInMessageIndex = ++lastInMessageTerminalIndex;\n            terminalInMessageIndexesById.set(terminal._localId, terminalInMessageIndex);\n            message.terminals[terminalInMessageIndex] = {\n                ...WITH_ID,\n                GUID: terminal.GUID,\n                owner: inMessageUserAccountLookup.inMessageIndexesById.get(terminal.owner._localId)\n            };\n        }\n        return terminalInMessageIndexesById;\n    }\n    serializeUserAccounts(actors, message, inMessageUserAccountLookup) {\n        for (const actor of actors) {\n            this.addUserAccountToMessage(actor.userAccount, message, inMessageUserAccountLookup);\n            this.addUserAccountToMessage(actor.terminal.owner, message, inMessageUserAccountLookup);\n        }\n    }\n    addUserAccountToMessage(userAccount, message, inMessageUserAccountLookup) {\n        let userAccountInMessageIndex = this.getUserAccountInMessageIndex(userAccount, inMessageUserAccountLookup);\n        message.userAccounts[userAccountInMessageIndex] = {\n            ...WITH_ID,\n            username: userAccount.username,\n            GUID: userAccount.GUID\n        };\n        return userAccountInMessageIndex;\n    }\n    getUserAccountInMessageIndex(userAccount, inMessageUserAccountLookup) {\n        if (inMessageUserAccountLookup.inMessageIndexesById.has(userAccount._localId)) {\n            return inMessageUserAccountLookup.inMessageIndexesById.get(userAccount._localId);\n        }\n        let userAccountInMessageIndex = ++inMessageUserAccountLookup.lastInMessageIndex;\n        inMessageUserAccountLookup.inMessageIndexesById.set(userAccount._localId, userAccountInMessageIndex);\n        return userAccountInMessageIndex;\n    }\n    async serializeRepositories(repositoryTransactionHistory, message, lookups, inMessageUserAccountLookup) {\n        let repositoryIdsToFindBy = [];\n        for (let repositoryId of lookups.repositoryInMessageIndexesById.keys()) {\n            repositoryIdsToFindBy.push(repositoryId);\n        }\n        repositoryIdsToFindBy.push(repositoryTransactionHistory._localId);\n        const repositories = await this.repositoryDao.findWithOwnerBy_LocalIds(repositoryIdsToFindBy);\n        for (const repository of repositories) {\n            let userAccountInMessageIndex = this.getUserAccountInMessageIndex(repository.owner, inMessageUserAccountLookup);\n            if (lookups.repositoryInMessageIndexesById.has(repository._localId)) {\n                const repositoryInMessageIndex = lookups.repositoryInMessageIndexesById.get(repository._localId);\n                message.referencedRepositories[repositoryInMessageIndex] =\n                    this.serializeRepository(repository, userAccountInMessageIndex);\n            }\n            else {\n                if (typeof message.history.repository !== 'string') {\n                    message.history.repository.owner = userAccountInMessageIndex;\n                    message.history.repository._localId = repository._localId;\n                }\n            }\n        }\n    }\n    serializeApplicationsAndVersions(message, inMessageApplicationLookup, lookups) {\n        for (let i = 0; i < lookups.applicationVersions.length; i++) {\n            const applicationVersion = lookups.applicationVersions[i];\n            const applicationInMessageIndex = this.serializeApplication(applicationVersion.application, inMessageApplicationLookup, message);\n            message.applicationVersions[i] = {\n                ...WITH_ID,\n                application: applicationInMessageIndex,\n                integerVersion: applicationVersion.integerVersion\n            };\n        }\n    }\n    serializeApplication(application, inMessageApplicationLookup, message) {\n        let applicationInMessageIndex;\n        if (inMessageApplicationLookup.inMessageIndexesById.has(application.index)) {\n            applicationInMessageIndex = inMessageApplicationLookup\n                .inMessageIndexesById.get(application.index);\n        }\n        else {\n            applicationInMessageIndex = ++inMessageApplicationLookup.lastInMessageIndex;\n            inMessageApplicationLookup.inMessageIndexesById\n                .set(application.index, applicationInMessageIndex);\n            message.applications[applicationInMessageIndex] = {\n                ...WITH_INDEX,\n                domain: {\n                    ...WITH_ID,\n                    name: application.domain.name\n                },\n                name: application.name\n            };\n        }\n        return applicationInMessageIndex;\n    }\n    serializeRepositoryTransactionHistory(repositoryTransactionHistory, message, lookups, inMessageUserAccountLookup) {\n        repositoryTransactionHistory.operationHistory.sort((operationHistory1, operationHistory2) => {\n            if (operationHistory1.orderNumber < operationHistory2.orderNumber) {\n                return -1;\n            }\n            if (operationHistory1.orderNumber > operationHistory2.orderNumber) {\n                return 1;\n            }\n            return 0;\n        });\n        const serializedOperationHistory = [];\n        for (const operationHistory of repositoryTransactionHistory.operationHistory) {\n            serializedOperationHistory.push(this.serializeOperationHistory(operationHistory, lookups));\n        }\n        return {\n            ...WITH_ID,\n            isRepositoryCreation: repositoryTransactionHistory.isRepositoryCreation,\n            repository: this.serializeHistoryRepository(repositoryTransactionHistory, message, inMessageUserAccountLookup),\n            operationHistory: serializedOperationHistory,\n            saveTimestamp: repositoryTransactionHistory.saveTimestamp,\n            GUID: repositoryTransactionHistory.GUID\n        };\n    }\n    serializeHistoryRepository(repositoryTransactionHistory, message, inMessageUserAccountLookup) {\n        if (repositoryTransactionHistory.isRepositoryCreation) {\n            const repository = repositoryTransactionHistory.repository;\n            let userAccountInMessageIndex = this.addUserAccountToMessage(repository.owner, message, inMessageUserAccountLookup);\n            return this.serializeRepository(repository, userAccountInMessageIndex);\n        }\n        else {\n            // When this repositoryTransactionHistory processed at sync-in \n            // the repository should already be loaded in the target database\n            // if it's not then it's missing the repositoryTransactionHistory\n            // with isRepositoryCreation === true\n            return repositoryTransactionHistory.repository.GUID;\n        }\n    }\n    serializeOperationHistory(operationHistory, lookups) {\n        const dbEntity = operationHistory.entity;\n        const serializedRecordHistory = [];\n        for (const recordHistory of operationHistory.recordHistory) {\n            serializedRecordHistory.push(this.serializeRecordHistory(operationHistory, recordHistory, dbEntity, lookups));\n        }\n        const entity = operationHistory.entity;\n        // Should be populated - coming from TerminalStore\n        // if (typeof entity !== 'object') {\n        // \tthrow new Error(`OperationHistory.entity must be populated`)\n        // }\n        // if (typeof entity.index !== 'number') {\n        // \tthrow new Error(`OperationHistory.entity.index must be present`)\n        // }\n        const applicationVersion = entity.applicationVersion;\n        // Should be populated - coming from TerminalStore\n        // if (typeof applicationVersion !== 'object') {\n        // \tthrow new Error(`OperationHistory.entity.applicationVersion must be populated`)\n        // }\n        // if (typeof applicationVersion._localId !== 'number') {\n        // \tthrow new Error(`OperationHistory.entity.applicationVersion._localId must be present`)\n        // }\n        let applicationVersionInMessageIndex;\n        if (lookups.applicationVersionInMessageIndexesById.has(applicationVersion._localId)) {\n            applicationVersionInMessageIndex = lookups.applicationVersionInMessageIndexesById.get(applicationVersion._localId);\n        }\n        else {\n            applicationVersionInMessageIndex = ++lookups.lastInMessageApplicationVersionIndex;\n            lookups.applicationVersionInMessageIndexesById.set(applicationVersion._localId, applicationVersionInMessageIndex);\n        }\n        lookups.applicationVersions[applicationVersionInMessageIndex] = applicationVersion;\n        return {\n            ...WITH_ID,\n            actor: this.getActorInMessageIndex(operationHistory.actor, lookups),\n            changeType: operationHistory.changeType,\n            entity: {\n                ...WITH_ID,\n                applicationVersion: applicationVersionInMessageIndex,\n                index: operationHistory.entity.index\n            },\n            recordHistory: serializedRecordHistory\n        };\n    }\n    serializeRecordHistory(operationHistory, recordHistory, dbEntity, lookups) {\n        const dbColumMapByIndex = new Map();\n        for (const dbColumn of dbEntity.columns) {\n            dbColumMapByIndex.set(dbColumn.index, dbColumn);\n        }\n        const newValues = [];\n        for (const newValue of recordHistory.newValues) {\n            const dbColumn = dbColumMapByIndex.get(newValue.columnIndex);\n            newValues.push(this.serializeNewValue(newValue, dbColumn, lookups));\n        }\n        const oldValues = [];\n        for (const oldValue of recordHistory.oldValues) {\n            const dbColumn = dbColumMapByIndex.get(oldValue.columnIndex);\n            oldValues.push(this.serializeOldValue(oldValue, dbColumn, lookups));\n        }\n        const actor = recordHistory.actor;\n        // Actor may be null if it's the same actor as for RepositoryTransactionHistory\n        // if (typeof actor !== 'object') {\n        // \tthrow new Error(`RecordHistory.actor must be populated`)\n        // }\n        const baseObject = {\n            ...WITH_ID,\n        };\n        if (actor._localId !== operationHistory.actor._localId) {\n            baseObject.actor = this.getActorInMessageIndex(actor, lookups);\n        }\n        if (newValues.length) {\n            baseObject.newValues = newValues;\n        }\n        if (oldValues.length) {\n            baseObject.oldValues = oldValues;\n        }\n        return {\n            ...baseObject,\n            _actorRecordId: recordHistory._actorRecordId,\n        };\n    }\n    getActorInMessageIndex(actor, lookups) {\n        if (!actor) {\n            return null;\n        }\n        return this.getActorInMessageIndexById(actor._localId, lookups);\n    }\n    getActorInMessageIndexById(actorId, lookups) {\n        let actorInMessageIndex;\n        if (lookups.actorInMessageIndexesById.has(actorId)) {\n            actorInMessageIndex = lookups.actorInMessageIndexesById.get(actorId);\n        }\n        else {\n            actorInMessageIndex = ++lookups.lastInMessageActorIndex;\n            lookups.actorInMessageIndexesById.set(actorId, actorInMessageIndex);\n        }\n        return actorInMessageIndex;\n    }\n    serializeNewValue(newValue, dbColumn, lookups) {\n        return this.serializeValue(newValue, dbColumn, lookups, 'newValue');\n    }\n    serializeOldValue(oldValue, dbColumn, lookups) {\n        return this.serializeValue(oldValue, dbColumn, lookups, 'oldValue');\n    }\n    serializeValue(valueRecord, dbColumn, lookups, valueFieldName) {\n        let value = valueRecord[valueFieldName];\n        let serailizedValue = value;\n        switch (dbColumn.name) {\n            case airEntity.ORIGINAL_ACTOR_ID: {\n                serailizedValue = this.getActorInMessageIndexById(value, lookups);\n                break;\n            }\n            case airEntity.ORIGINAL_REPOSITORY_ID: {\n                serailizedValue = this.getSerializedRepositoryId(value, lookups);\n                break;\n            }\n        }\n        if (/.*_AID_[\\d]+$/.test(dbColumn.name)\n            && dbColumn.manyRelationColumns.length) {\n            serailizedValue = this.getActorInMessageIndexById(value, lookups);\n        }\n        if (/.*_RID_[\\d]+$/.test(dbColumn.name)\n            && dbColumn.manyRelationColumns.length) {\n            serailizedValue = this.getSerializedRepositoryId(value, lookups);\n        }\n        return {\n            ...WITH_RECORD_HISTORY,\n            columnIndex: valueRecord.columnIndex,\n            [valueFieldName]: serailizedValue\n        };\n    }\n    getSerializedRepositoryId(value, lookups) {\n        if (value === lookups.messageRepository._localId) {\n            return -1;\n        }\n        let serailizedValue = lookups.repositoryInMessageIndexesById.get(value);\n        if (serailizedValue === undefined) {\n            lookups.lastInMessageRepositoryIndex++;\n            serailizedValue = lookups.lastInMessageRepositoryIndex;\n            lookups.repositoryInMessageIndexesById.set(value, serailizedValue);\n        }\n        return serailizedValue;\n    }\n    serializeRepository(repository, owner) {\n        return {\n            ...WITH_ID,\n            ageSuitability: repository.ageSuitability,\n            createdAt: repository.createdAt,\n            immutable: repository.immutable,\n            owner,\n            source: repository.source,\n            GUID: repository.GUID\n        };\n    }\n};\n__decorate([\n    Inject()\n], SyncOutDataSerializer.prototype, \"actorDao\", void 0);\n__decorate([\n    Inject()\n], SyncOutDataSerializer.prototype, \"repositoryDao\", void 0);\nSyncOutDataSerializer = __decorate([\n    Injected()\n], SyncOutDataSerializer);\nexport { SyncOutDataSerializer };\n//# sourceMappingURL=SyncOutDataSerializer.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { ensureChildArray, ensureChildJsMap } from '@airport/ground-control';\nlet SynchronizationOutManager = class SynchronizationOutManager {\n    async synchronizeOut(repositoryTransactionHistories) {\n        await this.loadHistoryRepositories(repositoryTransactionHistories);\n        const { historiesToSend, messages } = await this.syncOutDataSerializer.serialize(repositoryTransactionHistories);\n        // await this.ensureGlobalRepositoryIdentifiers(repositoryTransactionHistories, messages)\n        const groupMessageMap = this.groupMessagesBySourceAndRepository(messages, historiesToSend);\n        for (const [repositorySource, messageMapForSource] of groupMessageMap) {\n            const synchronizationAdapter = await this.synchronizationAdapterLoader.load(repositorySource);\n            await synchronizationAdapter.sendTransactions(repositorySource, messageMapForSource);\n        }\n        await this.updateRepositoryTransactionHistories(messages, historiesToSend);\n    }\n    async loadHistoryRepositories(repositoryTransactionHistories) {\n        const repositoryIdsToLookup = new Set();\n        const repositoryMapById = new Map();\n        for (const repositoryTransactionHistory of repositoryTransactionHistories) {\n            repositoryIdsToLookup.add(repositoryTransactionHistory.repository._localId);\n        }\n        if (!repositoryIdsToLookup.size) {\n            return;\n        }\n        const repositories = await this.repositoryDao.findWithOwnerBy_LocalIds([\n            ...repositoryIdsToLookup.values()\n        ]);\n        for (const repository of repositories) {\n            repositoryMapById.set(repository._localId, repository);\n        }\n        for (const repositoryTransactionHistory of repositoryTransactionHistories) {\n            repositoryTransactionHistory.repository =\n                repositoryMapById.get(repositoryTransactionHistory.repository._localId);\n        }\n    }\n    async ensureGlobalRepositoryIdentifiers(repositoryTransactionHistories, messages) {\n        const repositoryIdsToLookup = new Set();\n        const repositoryMapById = new Map();\n        for (const repositoryTransactionHistory of repositoryTransactionHistories) {\n            const repository = repositoryTransactionHistory.repository;\n            if (!repository.source || !repository.GUID) {\n                repositoryIdsToLookup.add(repository._localId);\n            }\n            else {\n                repositoryMapById.set(repository._localId, repository);\n            }\n        }\n        if (!repositoryIdsToLookup.size) {\n            return;\n        }\n        const repositories = await this.repositoryDao.findWithOwnerBy_LocalIds([\n            ...repositoryIdsToLookup.values()\n        ]);\n        for (const repository of repositories) {\n            repositoryMapById.set(repository._localId, repository);\n        }\n        for (const message of messages) {\n            const repository = message.history.repository;\n            if (!repository.source || !repository.GUID) {\n                const foundRepository = repositoryMapById.get(repository._localId);\n                repository.source = foundRepository.source;\n                repository.GUID = foundRepository.GUID;\n                delete repository._localId;\n            }\n        }\n    }\n    groupMessagesBySourceAndRepository(messages, historiesToSend) {\n        const groupMessageMap = new Map();\n        for (let i = 0; i < messages.length; i++) {\n            const repository = historiesToSend[i].repository;\n            ensureChildArray(ensureChildJsMap(groupMessageMap, repository.source), repository.GUID).push(messages[i]);\n        }\n        return groupMessageMap;\n    }\n    async updateRepositoryTransactionHistories(messages, repositoryTransactionHistories) {\n        for (let i = 0; i < messages.length; i++) {\n            const message = messages[i];\n            const repositoryTransactionHistory = repositoryTransactionHistories[i];\n            if (message.syncTimestamp) {\n                repositoryTransactionHistory.syncTimestamp = message.syncTimestamp;\n                await this.repositoryTransactionHistoryDao.updateSyncTimestamp(repositoryTransactionHistory);\n            }\n        }\n    }\n};\n__decorate([\n    Inject()\n], SynchronizationOutManager.prototype, \"repositoryDao\", void 0);\n__decorate([\n    Inject()\n], SynchronizationOutManager.prototype, \"repositoryTransactionHistoryDao\", void 0);\n__decorate([\n    Inject()\n], SynchronizationOutManager.prototype, \"synchronizationAdapterLoader\", void 0);\n__decorate([\n    Inject()\n], SynchronizationOutManager.prototype, \"syncOutDataSerializer\", void 0);\nSynchronizationOutManager = __decorate([\n    Injected()\n], SynchronizationOutManager);\nexport { SynchronizationOutManager };\n//# sourceMappingURL=SynchronizationOutManager.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Api } from \"@airport/check-in\";\nimport { Inject, Injected } from \"@airport/direction-indicator\";\nlet UserAccountApi = class UserAccountApi {\n    async findUserAccount(privateId) {\n        const userAccounts = await this.userAccountDao.findByGUIDs([privateId]);\n        if (userAccounts.length) {\n            return userAccounts[0];\n        }\n        return null;\n    }\n};\n__decorate([\n    Inject()\n], UserAccountApi.prototype, \"userAccountDao\", void 0);\n__decorate([\n    Api()\n], UserAccountApi.prototype, \"findUserAccount\", null);\nUserAccountApi = __decorate([\n    Injected()\n], UserAccountApi);\nexport { UserAccountApi };\n//# sourceMappingURL=UserAccountApi.js.map","import { Dao, DaoQueryDecorators, } from '@airport/tarmaq-dao';\nimport { Q, duoDiSet, } from './qApplication';\n// Application Q object Dependency Injection readiness detection Dao\nexport class SQDIDao extends Dao {\n    constructor(dbEntityId) {\n        super(dbEntityId, Q);\n    }\n}\nexport class BaseClassificationDao extends SQDIDao {\n    constructor() {\n        super(6);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(6);\n    }\n}\nBaseClassificationDao.Find = new DaoQueryDecorators();\nBaseClassificationDao.FindOne = new DaoQueryDecorators();\nBaseClassificationDao.Search = new DaoQueryDecorators();\nBaseClassificationDao.SearchOne = new DaoQueryDecorators();\nexport class BaseClientDao extends SQDIDao {\n    constructor() {\n        super(10);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(10);\n    }\n}\nBaseClientDao.Find = new DaoQueryDecorators();\nBaseClientDao.FindOne = new DaoQueryDecorators();\nBaseClientDao.Search = new DaoQueryDecorators();\nBaseClientDao.SearchOne = new DaoQueryDecorators();\nexport class BaseClientTypeDao extends SQDIDao {\n    constructor() {\n        super(9);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(9);\n    }\n}\nBaseClientTypeDao.Find = new DaoQueryDecorators();\nBaseClientTypeDao.FindOne = new DaoQueryDecorators();\nBaseClientTypeDao.Search = new DaoQueryDecorators();\nBaseClientTypeDao.SearchOne = new DaoQueryDecorators();\nexport class BaseContinentDao extends SQDIDao {\n    constructor() {\n        super(5);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(5);\n    }\n}\nBaseContinentDao.Find = new DaoQueryDecorators();\nBaseContinentDao.FindOne = new DaoQueryDecorators();\nBaseContinentDao.Search = new DaoQueryDecorators();\nBaseContinentDao.SearchOne = new DaoQueryDecorators();\nexport class BaseCountryDao extends SQDIDao {\n    constructor() {\n        super(0);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(0);\n    }\n}\nBaseCountryDao.Find = new DaoQueryDecorators();\nBaseCountryDao.FindOne = new DaoQueryDecorators();\nBaseCountryDao.Search = new DaoQueryDecorators();\nBaseCountryDao.SearchOne = new DaoQueryDecorators();\nexport class BaseDatabaseDao extends SQDIDao {\n    constructor() {\n        super(12);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(12);\n    }\n}\nBaseDatabaseDao.Find = new DaoQueryDecorators();\nBaseDatabaseDao.FindOne = new DaoQueryDecorators();\nBaseDatabaseDao.Search = new DaoQueryDecorators();\nBaseDatabaseDao.SearchOne = new DaoQueryDecorators();\nexport class BaseDatabaseTypeDao extends SQDIDao {\n    constructor() {\n        super(11);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(11);\n    }\n}\nBaseDatabaseTypeDao.Find = new DaoQueryDecorators();\nBaseDatabaseTypeDao.FindOne = new DaoQueryDecorators();\nBaseDatabaseTypeDao.Search = new DaoQueryDecorators();\nBaseDatabaseTypeDao.SearchOne = new DaoQueryDecorators();\nexport class BaseMetroAreaDao extends SQDIDao {\n    constructor() {\n        super(3);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(3);\n    }\n}\nBaseMetroAreaDao.Find = new DaoQueryDecorators();\nBaseMetroAreaDao.FindOne = new DaoQueryDecorators();\nBaseMetroAreaDao.Search = new DaoQueryDecorators();\nBaseMetroAreaDao.SearchOne = new DaoQueryDecorators();\nexport class BaseMetroAreaStateDao extends SQDIDao {\n    constructor() {\n        super(2);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(2);\n    }\n}\nBaseMetroAreaStateDao.Find = new DaoQueryDecorators();\nBaseMetroAreaStateDao.FindOne = new DaoQueryDecorators();\nBaseMetroAreaStateDao.Search = new DaoQueryDecorators();\nBaseMetroAreaStateDao.SearchOne = new DaoQueryDecorators();\nexport class BaseStateDao extends SQDIDao {\n    constructor() {\n        super(1);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(1);\n    }\n}\nBaseStateDao.Find = new DaoQueryDecorators();\nBaseStateDao.FindOne = new DaoQueryDecorators();\nBaseStateDao.Search = new DaoQueryDecorators();\nBaseStateDao.SearchOne = new DaoQueryDecorators();\nexport class BaseTerminalDao extends SQDIDao {\n    constructor() {\n        super(14);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(14);\n    }\n}\nBaseTerminalDao.Find = new DaoQueryDecorators();\nBaseTerminalDao.FindOne = new DaoQueryDecorators();\nBaseTerminalDao.Search = new DaoQueryDecorators();\nBaseTerminalDao.SearchOne = new DaoQueryDecorators();\nexport class BaseTerminalTypeDao extends SQDIDao {\n    constructor() {\n        super(13);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(13);\n    }\n}\nBaseTerminalTypeDao.Find = new DaoQueryDecorators();\nBaseTerminalTypeDao.FindOne = new DaoQueryDecorators();\nBaseTerminalTypeDao.Search = new DaoQueryDecorators();\nBaseTerminalTypeDao.SearchOne = new DaoQueryDecorators();\nexport class BaseTypeDao extends SQDIDao {\n    constructor() {\n        super(8);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(8);\n    }\n}\nBaseTypeDao.Find = new DaoQueryDecorators();\nBaseTypeDao.FindOne = new DaoQueryDecorators();\nBaseTypeDao.Search = new DaoQueryDecorators();\nBaseTypeDao.SearchOne = new DaoQueryDecorators();\nexport class BaseTypeClassificationDao extends SQDIDao {\n    constructor() {\n        super(7);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(7);\n    }\n}\nBaseTypeClassificationDao.Find = new DaoQueryDecorators();\nBaseTypeClassificationDao.FindOne = new DaoQueryDecorators();\nBaseTypeClassificationDao.Search = new DaoQueryDecorators();\nBaseTypeClassificationDao.SearchOne = new DaoQueryDecorators();\nexport class BaseUserAccountDao extends SQDIDao {\n    constructor() {\n        super(4);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(4);\n    }\n}\nBaseUserAccountDao.Find = new DaoQueryDecorators();\nBaseUserAccountDao.FindOne = new DaoQueryDecorators();\nBaseUserAccountDao.Search = new DaoQueryDecorators();\nBaseUserAccountDao.SearchOne = new DaoQueryDecorators();\n//# sourceMappingURL=baseDaos.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { AND } from '@airport/tarmaq-query';\nimport { Injected } from '@airport/direction-indicator';\nimport { BaseTerminalDao, Q } from '../generated/generated';\nlet TerminalDao = class TerminalDao extends BaseTerminalDao {\n    async findByOwnerIdsAndGUIDs(ownerIds, GUIDs) {\n        let t;\n        return await this.db.find.tree({\n            SELECT: {},\n            FROM: [\n                t = Q.Terminal\n            ],\n            WHERE: AND(t.owner._localId.IN(ownerIds), t.GUID.IN(GUIDs))\n        });\n    }\n    async findByGUIDs(GUIDs) {\n        let t;\n        return await this.db.find.tree({\n            SELECT: {},\n            FROM: [\n                t = Q.Terminal\n            ],\n            WHERE: t.GUID.IN(GUIDs)\n        });\n    }\n    async insert(terminals, context) {\n        let t;\n        const VALUES = [];\n        for (const terminal of terminals) {\n            VALUES.push([\n                terminal.GUID, terminal.owner._localId, false,\n            ]);\n        }\n        const _localIds = await this.db.insertValuesGenerateIds({\n            INSERT_INTO: t = Q.Terminal,\n            columns: [\n                t.GUID,\n                t.owner._localId,\n                t.isLocal\n            ],\n            VALUES\n        }, context);\n        for (let i = 0; i < terminals.length; i++) {\n            const terminal = terminals[i];\n            terminal._localId = _localIds[i][0];\n        }\n    }\n};\nTerminalDao = __decorate([\n    Injected()\n], TerminalDao);\nexport { TerminalDao };\n//# sourceMappingURL=TerminalDao.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { BaseUserAccountDao, Q, } from '../generated/generated';\nlet UserAccountDao = class UserAccountDao extends BaseUserAccountDao {\n    async findByUserAccountNames(usernames) {\n        let u;\n        return await this.db.find.tree({\n            SELECT: {},\n            FROM: [\n                u = Q.UserAccount\n            ],\n            WHERE: u.username.IN(usernames)\n        });\n    }\n    async findByGUIDs(GUIDs) {\n        let u;\n        return await this.db.find.tree({\n            SELECT: {},\n            FROM: [\n                u = Q.UserAccount\n            ],\n            WHERE: u.GUID.IN(GUIDs)\n        });\n    }\n    async insert(userAccounts, context) {\n        let u;\n        const VALUES = [];\n        for (const userAccount of userAccounts) {\n            VALUES.push([\n                userAccount.GUID, userAccount.username\n            ]);\n        }\n        const _localIds = await this.db.insertValuesGenerateIds({\n            INSERT_INTO: u = Q.UserAccount,\n            columns: [\n                u.GUID,\n                u.username\n            ],\n            VALUES\n        }, context);\n        for (let i = 0; i < userAccounts.length; i++) {\n            const userAccount = userAccounts[i];\n            userAccount._localId = _localIds[i][0];\n        }\n    }\n};\nUserAccountDao = __decorate([\n    Injected()\n], UserAccountDao);\nexport { UserAccountDao };\n//# sourceMappingURL=UserAccountDao.js.map","import { UserAccountApi } from '../api/UserAccountApi';\nimport { TerminalDao } from '../dao/TerminalDao';\nimport { UserAccountDao } from '../dao/UserAccountDao';\nimport { travelDocumentCheckpoint, USER_ACCOUNT_API } from './common-tokens';\nexport const TERMINAL_DAO = travelDocumentCheckpoint.token({\n    class: TerminalDao,\n    interface: 'ITerminalDao',\n    token: 'TERMINAL_DAO'\n});\nexport const USER_ACCOUNT_DAO = travelDocumentCheckpoint.token({\n    class: UserAccountDao,\n    interface: 'IUserAccountDao',\n    token: 'USER_ACCOUNT_DAO'\n});\nUSER_ACCOUNT_API.setClass(UserAccountApi);\nUSER_ACCOUNT_API.setDependencies({\n    userAccountDao: USER_ACCOUNT_DAO\n});\n//# sourceMappingURL=runtime-tokens.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from \"@airport/direction-indicator\";\nimport { v4 as guidv4 } from \"uuid\";\nexport var AddUserAccountErrorCodes;\n(function (AddUserAccountErrorCodes) {\n    AddUserAccountErrorCodes[\"EMAIL_TAKEN\"] = \"EMAIL_TAKEN\";\n    AddUserAccountErrorCodes[\"INVALID_BIRTH_MONTH\"] = \"INVALID_BIRTH_MONTH\";\n    AddUserAccountErrorCodes[\"INVALID_COUNTRY\"] = \"INVALID_COUNTRY\";\n    AddUserAccountErrorCodes[\"INVALID_EMAIL\"] = \"INVALID_EMAIL\";\n    AddUserAccountErrorCodes[\"INVALID_USERNAME\"] = \"INVALID_USERNAME\";\n    AddUserAccountErrorCodes[\"USER_ACCOUNTNAME_TAKEN\"] = \"USER_ACCOUNTNAME_TAKEN\";\n})(AddUserAccountErrorCodes || (AddUserAccountErrorCodes = {}));\nlet UserAccountManager = class UserAccountManager {\n    async addUserAccount(username, email, password) {\n        const existingUserAccounts = await this.userAccountDao.findByUserAccountNames([username]);\n        for (const existingUserAccount of existingUserAccounts) {\n            if (existingUserAccount.username === username) {\n                return {\n                    errorCode: AddUserAccountErrorCodes.USER_ACCOUNTNAME_TAKEN\n                };\n            }\n        }\n        const passwordHash = await this.sha512(password);\n        const userAccount = {\n            _localId: null,\n            email,\n            GUID: guidv4(),\n            passwordHash,\n            username\n        };\n        await this.userAccountDao.save(userAccount);\n        return {\n            userAccount\n        };\n    }\n    sha512(str) {\n        return crypto.subtle.digest(\"SHA-512\", new TextEncoder( /*\"utf-8\"*/).encode(str)).then(buf => {\n            return Array.prototype.map.call(new Uint8Array(buf), x => (('00' + x.toString(16)).slice(-2))).join('');\n        });\n    }\n};\n__decorate([\n    Inject()\n], UserAccountManager.prototype, \"userAccountDao\", void 0);\nUserAccountManager = __decorate([\n    Injected()\n], UserAccountManager);\nexport { UserAccountManager };\n//# sourceMappingURL=UserAccountManager.js.map","import { travelDocumentCheckpoint } from \"../to_be_generated/common-tokens\";\nimport { USER_ACCOUNT_DAO } from \"../to_be_generated/runtime-tokens\";\nimport { UserAccountManager } from \"./UserAccountManager\";\nexport const USER_ACCOUNT_MANAGER = travelDocumentCheckpoint.token({\n    class: UserAccountManager,\n    interface: 'IUserAccountManager',\n    token: 'USER_ACCOUNT_MANAGER'\n});\nUSER_ACCOUNT_MANAGER.setDependencies({\n    userAccountDao: USER_ACCOUNT_DAO\n});\n//# sourceMappingURL=core-tokens.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Injected } from '@airport/direction-indicator';\r\nlet Client = class Client {\r\n    constructor() {\r\n        // encryptionKey = process.env.ENCRYPTION_KEY\r\n        this.serverLocationProtocol = 'http://';\r\n    }\r\n    async getRepositoryTransactions(location, repositoryGUID, sinceSyncTimestamp = null) {\r\n        try {\r\n            const response = await this.sendMessage(location + '/read', {\r\n                repositoryGUID,\r\n                syncTimestamp: sinceSyncTimestamp\r\n            });\r\n            if (response.error) {\r\n                console.error(response.error);\r\n                return [];\r\n            }\r\n            return response.fragments;\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            return [];\r\n        }\r\n    }\r\n    async sendRepositoryTransactions(location, repositoryGUID, messages) {\r\n        try {\r\n            const response = await this.sendMessage(location + '/write', {\r\n                messages,\r\n                repositoryGUID\r\n            });\r\n            if (response.error) {\r\n                console.error(response.error);\r\n                return 0;\r\n            }\r\n            return response.syncTimestamp;\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            return 0;\r\n        }\r\n    }\r\n    async sendMessage(location, request) {\r\n        let packagedMessage = JSON.stringify(request);\r\n        // if (this.encryptionKey) {\r\n        //     packagedMessage = await encryptString(\r\n        //         packagedMessage, this.encryptionKey)\r\n        // }\r\n        const response = await fetch(this.serverLocationProtocol + location, {\r\n            method: 'PUT',\r\n            mode: 'cors',\r\n            // cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            // credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            // redirect: 'follow', // manual, *follow, error\r\n            // referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n            body: packagedMessage // body data type must match \"Content-Type\" header\r\n        });\r\n        // let unpackagedMessage = response.text()\r\n        // if (this.encryptionKey) {\r\n        //     unpackagedMessage = await decryptString(unpackagedMessage, this.encryptionKey)\r\n        // }\r\n        // return JSON.parse(unpackagedMessage)\r\n        return response.json();\r\n    }\r\n};\r\nClient = __decorate([\r\n    Injected()\r\n], Client);\r\nexport { Client };\r\n//# sourceMappingURL=Client.js.map","import { lib } from '@airport/direction-indicator';\r\nimport { Client } from './Client';\r\n// import {\r\n//     decryptString,\r\n//     encryptString,\r\n// } from \"string-cipher\";\r\nconst client = lib('client');\r\nexport const CLIENT = client.token({\r\n    class: Client,\r\n    interface: 'IClient',\r\n    token: 'IClient'\r\n});\r\n//# sourceMappingURL=tokens.js.map","import { lib } from '@airport/direction-indicator';\nimport { SyncInActorChecker } from './synchronization/in/checker/SyncInActorChecker';\nimport { SyncInChecker } from './synchronization/in/checker/SyncInChecker';\nimport { SyncInDataChecker } from './synchronization/in/checker/SyncInDataChecker';\nimport { SyncInRepositoryChecker } from './synchronization/in/checker/SyncInRepositoryChecker';\nimport { SyncInApplicationChecker } from './synchronization/in/checker/SyncInApplicationChecker';\nimport { SyncInApplicationVersionChecker } from './synchronization/in/checker/SyncInApplicationVersionChecker';\nimport { SyncInTerminalChecker } from './synchronization/in/checker/SyncInTerminalChecker';\nimport { SyncInUserAccountChecker } from './synchronization/in/checker/SyncInUserAccountChecker';\nimport { Stage1SyncedInDataProcessor } from './synchronization/in/Stage1SyncedInDataProcessor';\nimport { Stage2SyncedInDataProcessor } from './synchronization/in/Stage2SyncedInDataProcessor';\nimport { SynchronizationInManager } from './synchronization/in/SynchronizationInManager';\nimport { SyncInUtils } from './synchronization/in/SyncInUtils';\nimport { TwoStageSyncedInDataProcessor } from './synchronization/in/TwoStageSyncedInDataProcessor';\nimport { SynchronizationOutManager } from './synchronization/out/SynchronizationOutManager';\nimport { SynchronizationAdapterLoader } from './adapters/SynchronizationAdapterLoader';\nimport { SyncOutDataSerializer } from './synchronization/out/converter/SyncOutDataSerializer';\nimport { AIRPORT_DATABASE, UTILS } from '@airport/air-traffic-control';\nimport { TERMINAL_STORE, TRANSACTION_MANAGER } from '@airport/terminal-map';\nimport { TERMINAL_DAO, USER_ACCOUNT_DAO } from '@airport/travel-document-checkpoint/lib/to_be_generated/runtime-index';\nimport { APPLICATION_DAO, APPLICATION_VERSION_DAO, DOMAIN_DAO } from '@airport/airspace/lib/to_be_generated/runtime-index';\nimport { ACTOR_DAO, REPOSITORY_DAO, REPOSITORY_TRANSACTION_HISTORY_DAO, REPOSITORY_TRANSACTION_HISTORY_DUO } from '@airport/holding-pattern/lib/to_be_generated/runtime-index';\nimport { RECORD_UPDATE_STAGE_DAO, SYNCHRONIZATION_CONFLICT_DAO, SYNCHRONIZATION_CONFLICT_VALUES_DAO } from '@airport/layover';\nimport { DebugSynchronizationAdapter } from './adapters/DebugSynchronizationAdapter';\nimport { SEQUENCE_GENERATOR } from '@airport/ground-control';\nimport { DATABASE_FACADE } from '@airport/tarmaq-dao';\nimport { CLIENT } from '@airway/client';\nconst groundTransport = lib('ground-transport');\nexport const STAGE1_SYNCED_IN_DATA_PROCESSOR = groundTransport.token({\n    class: Stage1SyncedInDataProcessor,\n    interface: 'IStage1SyncedInDataProcessor',\n    token: 'STAGE1_SYNCED_IN_DATA_PROCESSOR'\n});\nexport const STAGE2_SYNCED_IN_DATA_PROCESSOR = groundTransport.token({\n    class: Stage2SyncedInDataProcessor,\n    interface: 'IStage2SyncedInDataProcessor',\n    token: 'STAGE2_SYNCED_IN_DATA_PROCESSOR'\n});\nexport const SYNC_IN_ACTOR_CHECKER = groundTransport.token({\n    class: SyncInActorChecker,\n    interface: 'ISyncInActorChecker',\n    token: 'SYNC_IN_ACTOR_CHECKER'\n});\nexport const SYNC_IN_CHECKER = groundTransport.token({\n    class: SyncInChecker,\n    interface: 'ISyncInChecker',\n    token: 'SYNC_IN_CHECKER'\n});\nexport const SYNC_IN_DATA_CHECKER = groundTransport.token({\n    class: SyncInDataChecker,\n    interface: 'ISyncInDataChecker',\n    token: 'SYNC_IN_DATA_CHECKER'\n});\nexport const SYNC_IN_TERMINAL_CHECKER = groundTransport.token({\n    class: SyncInTerminalChecker,\n    interface: 'ISyncInTerminalChecker',\n    token: 'SYNC_IN_TERMINAL_CHECKER'\n});\nexport const SYNC_IN_REPOSITORY_CHECKER = groundTransport.token({\n    class: SyncInRepositoryChecker,\n    interface: 'ISyncInRepositoryChecker',\n    token: 'SYNC_IN_REPOSITORY_CHECKER'\n});\nexport const SYNC_IN_APPLICATION_CHECKER = groundTransport.token({\n    class: SyncInApplicationChecker,\n    interface: 'ISyncInApplicationChecker',\n    token: 'SYNC_IN_APPLICATION_CHECKER'\n});\nexport const SYNC_IN_APPLICATION_VERSION_CHECKER = groundTransport.token({\n    class: SyncInApplicationVersionChecker,\n    interface: 'ISyncInApplicationVersionChecker',\n    token: 'SYNC_IN_APPLICATION_VERSION_CHECKER'\n});\nexport const SYNC_IN_USER_ACCOUNT_CHECKER = groundTransport.token({\n    class: SyncInUserAccountChecker,\n    interface: 'ISyncInUserAccountChecker',\n    token: 'SYNC_IN_USER_ACCOUNT_CHECKER'\n});\nexport const SYNC_IN_UTILS = groundTransport.token({\n    class: SyncInUtils,\n    interface: 'ISyncInUtils',\n    token: 'SYNC_IN_UTILS'\n});\nexport const SYNCHRONIZATION_IN_MANAGER = groundTransport.token({\n    class: SynchronizationInManager,\n    interface: 'ISynchronizationInManager',\n    token: 'SYNCHRONIZATION_IN_MANAGER'\n});\nexport const SYNCHRONIZATION_OUT_MANAGER = groundTransport.token({\n    class: SynchronizationOutManager,\n    interface: 'ISynchronizationOutManager',\n    token: 'SYNCHRONIZATION_OUT_MANAGER'\n});\nexport const SYNC_OUT_DATA_SERIALIZER = groundTransport.token({\n    class: SyncOutDataSerializer,\n    interface: 'ISyncOutDataSerializer',\n    token: 'SYNC_OUT_DATA_SERIALIZER'\n});\nexport const TWO_STAGE_SYNCED_IN_DATA_PROCESSOR = groundTransport.token({\n    class: TwoStageSyncedInDataProcessor,\n    interface: 'ITwoStageSyncedInDataProcessor',\n    token: 'TWO_STAGE_SYNCED_IN_DATA_PROCESSOR'\n});\nexport const DEBUG_SYNCHRONIZATION_ADAPTER = groundTransport.token({\n    class: DebugSynchronizationAdapter,\n    interface: 'ISynchronizationAdapter',\n    token: 'DEBUG_SYNCHRONIZATION_ADAPTER'\n});\nexport const SYNCHRONIZATION_ADAPTER_LOADER = groundTransport.token({\n    class: SynchronizationAdapterLoader,\n    interface: 'ISynchronizationAdapterLoader',\n    token: 'SYNCHRONIZATION_ADAPTER_LOADER'\n});\nDEBUG_SYNCHRONIZATION_ADAPTER.setDependencies({\n    cient: CLIENT\n});\nSTAGE1_SYNCED_IN_DATA_PROCESSOR.setDependencies({\n    actorDao: ACTOR_DAO,\n    airportDatabase: AIRPORT_DATABASE,\n    repositoryTransactionHistoryDao: REPOSITORY_TRANSACTION_HISTORY_DAO,\n    repositoryTransactionHistoryDuo: REPOSITORY_TRANSACTION_HISTORY_DUO,\n    sequenceGenerator: SEQUENCE_GENERATOR,\n    syncInUtils: SYNC_IN_UTILS\n});\nSTAGE2_SYNCED_IN_DATA_PROCESSOR.setDependencies({\n    airportDatabase: AIRPORT_DATABASE,\n    databaseFacade: DATABASE_FACADE,\n    recordUpdateStageDao: RECORD_UPDATE_STAGE_DAO,\n    utils: UTILS\n});\nSYNC_IN_ACTOR_CHECKER.setDependencies({\n    actorDao: ACTOR_DAO,\n});\nSYNC_IN_APPLICATION_CHECKER.setDependencies({\n    applicationDao: APPLICATION_DAO,\n    domainDao: DOMAIN_DAO\n});\nSYNC_IN_APPLICATION_VERSION_CHECKER.setDependencies({\n    applicationVersionDao: APPLICATION_VERSION_DAO\n});\nSYNC_IN_CHECKER.setDependencies({\n    syncInActorChecker: SYNC_IN_ACTOR_CHECKER,\n    syncInApplicationChecker: SYNC_IN_APPLICATION_CHECKER,\n    syncInApplicationVersionChecker: SYNC_IN_APPLICATION_VERSION_CHECKER,\n    syncInDataChecker: SYNC_IN_DATA_CHECKER,\n    syncInRepositoryChecker: SYNC_IN_REPOSITORY_CHECKER,\n    syncInTerminalChecker: SYNC_IN_TERMINAL_CHECKER,\n    syncInUserAccountChecker: SYNC_IN_USER_ACCOUNT_CHECKER\n});\nSYNC_IN_DATA_CHECKER.setDependencies({\n    airportDatabase: AIRPORT_DATABASE,\n    sequenceGenerator: SEQUENCE_GENERATOR,\n    terminalStore: TERMINAL_STORE\n});\nSYNC_IN_REPOSITORY_CHECKER.setDependencies({\n    repositoryDao: REPOSITORY_DAO,\n});\nSYNC_IN_TERMINAL_CHECKER.setDependencies({\n    terminalDao: TERMINAL_DAO\n});\nSYNC_IN_USER_ACCOUNT_CHECKER.setDependencies({\n    userAccountDao: USER_ACCOUNT_DAO\n});\nSYNC_OUT_DATA_SERIALIZER.setDependencies({\n    actorDao: ACTOR_DAO,\n    repositoryDao: REPOSITORY_DAO,\n});\nSYNCHRONIZATION_ADAPTER_LOADER.setDependencies({\n    debugSynchronizationAdapter: DEBUG_SYNCHRONIZATION_ADAPTER\n});\nSYNCHRONIZATION_IN_MANAGER.setDependencies({\n    repositoryTransactionHistoryDao: REPOSITORY_TRANSACTION_HISTORY_DAO,\n    syncInChecker: SYNC_IN_CHECKER,\n    transactionManager: TRANSACTION_MANAGER,\n    twoStageSyncedInDataProcessor: TWO_STAGE_SYNCED_IN_DATA_PROCESSOR\n});\nSYNCHRONIZATION_OUT_MANAGER.setDependencies({\n    repositoryDao: REPOSITORY_DAO,\n    repositoryTransactionHistoryDao: REPOSITORY_TRANSACTION_HISTORY_DAO,\n    synchronizationAdapterLoader: SYNCHRONIZATION_ADAPTER_LOADER,\n    syncOutDataSerializer: SYNC_OUT_DATA_SERIALIZER\n});\nTWO_STAGE_SYNCED_IN_DATA_PROCESSOR.setDependencies({\n    repositoryTransactionHistoryDuo: REPOSITORY_TRANSACTION_HISTORY_DUO,\n    stage1SyncedInDataProcessor: STAGE1_SYNCED_IN_DATA_PROCESSOR,\n    stage2SyncedInDataProcessor: STAGE2_SYNCED_IN_DATA_PROCESSOR,\n    synchronizationConflictDao: SYNCHRONIZATION_CONFLICT_DAO,\n    synchronizationConflictValuesDao: SYNCHRONIZATION_CONFLICT_VALUES_DAO\n});\n//# sourceMappingURL=tokens.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet TerminalSessionManager = class TerminalSessionManager {\n    async signUp(userAccountInfo) {\n        if (this.terminalStore.getIsServer()) {\n            throw new Error('Implement');\n        }\n        const { userAccount } = await this.userAccountManager\n            .addUserAccount(userAccountInfo.username, userAccountInfo.email, userAccountInfo.password);\n        const allSessions = this.userStore.getAllSessions();\n        let session = {\n            currentActor: null,\n            currentRootTransaction: null,\n            userAccount\n        };\n        allSessions.push(session);\n        const sessionMapByEmail = this.userStore.getSessionMapByEmail();\n        sessionMapByEmail.set(userAccount.email, session);\n        this.userStore.state.next({\n            allSessions,\n            sessionMapByEmail\n        });\n    }\n    async login(userAccount) {\n        throw new Error(`Implement`);\n    }\n    async getUserSession(\n    // FIXME: add the actual request object, may be platform specific\n    requestObject) {\n        let session;\n        if (this.terminalStore.getIsServer()) {\n            throw new Error(`Implement`);\n        }\n        else {\n            const allSessions = this.userStore.getAllSessions();\n            if (allSessions.length != 1) {\n                throw new Error(`Expecting exactly 1 user session`);\n            }\n            session = allSessions[0];\n        }\n        return session;\n    }\n};\n__decorate([\n    Inject()\n], TerminalSessionManager.prototype, \"terminalStore\", void 0);\n__decorate([\n    Inject()\n], TerminalSessionManager.prototype, \"userAccountManager\", void 0);\n__decorate([\n    Inject()\n], TerminalSessionManager.prototype, \"userStore\", void 0);\nTerminalSessionManager = __decorate([\n    Injected()\n], TerminalSessionManager);\nexport { TerminalSessionManager };\n//# sourceMappingURL=TerminalSessionManager.js.map","import { AIRPORT_DATABASE, APPLICATION_UTILS, FIELD_UTILS, Q_METADATA_UTILS, RELATION_MANAGER, REPOSITORY_LOADER, UTILS } from '@airport/air-traffic-control';\nimport { APPLICATION_DAO, DOMAIN_DAO } from '@airport/airspace/lib/to_be_generated/runtime-index';\nimport { QUERY_PARAMETER_DESERIALIZER, QUERY_RESULTS_SERIALIZER } from '@airport/arrivals-n-departures';\nimport { TERMINAL_SESSION_MANAGER } from '@airport/terminal-map';\nimport { lib } from '@airport/direction-indicator';\nimport { ACTIVE_QUERIES, OBSERVABLE_QUERY_ADAPTER } from '@airport/flight-number';\nimport { ID_GENERATOR } from '@airport/fuel-hydrant-system';\nimport { DB_APPLICATION_UTILS, ENTITY_STATE_MANAGER, SEQUENCE_GENERATOR, TRANSACTIONAL_CONNECTOR } from '@airport/ground-control';\nimport { SYNCHRONIZATION_ADAPTER_LOADER, SYNCHRONIZATION_IN_MANAGER, SYNCHRONIZATION_OUT_MANAGER } from '@airport/ground-transport';\nimport { ACTOR_DAO, OPERATION_HISTORY_DUO, RECORD_HISTORY_DUO, REPOSITORY_DAO, REPOSITORY_MANAGER, REPOSITORY_TRANSACTION_HISTORY_DAO, REPOSITORY_TRANSACTION_HISTORY_DUO, TRANSACTION_HISTORY_DUO } from '@airport/holding-pattern/lib/to_be_generated/runtime-index';\nimport { QUERY_FACADE } from '@airport/tarmaq-dao';\nimport { QUERY_UTILS } from '@airport/tarmaq-query';\nimport { APPLICATION_INITIALIZER, STORE_DRIVER, TERMINAL_STORE, TRANSACTIONAL_RECEIVER, TRANSACTIONAL_SERVER, TRANSACTION_MANAGER, USER_STORE } from '@airport/terminal-map';\nimport { RepositoryLoader } from './core/repository/RepositoryLoader';\nimport { TerminalSessionManager } from './core/TerminalSessionManager';\nimport { InternalRecordManager } from './data/InternalRecordManager';\nimport { InternalTransactionalConnector } from './net/InternalTransactionalConnector';\nimport { OnlineManager } from './net/OnlineManager';\nimport { TransactionalReceiver } from './net/TransactionalReceiver';\nimport { TransactionalServer } from './net/TransactionalServer';\nimport { AbstractMutationManager } from './orchestration/AbstractMutationManager';\nimport { DatabaseManager } from './orchestration/DatabaseManager';\nimport { DeleteManager } from './orchestration/DeleteManager';\nimport { HistoryManager } from './orchestration/HistoryManager';\nimport { InsertManager } from './orchestration/InsertManager';\nimport { QueryManager } from './orchestration/QueryManager';\nimport { TransactionManager } from './orchestration/TransactionManager';\nimport { UpdateManager } from './orchestration/UpdateManager';\nimport { CascadeGraphVerifier } from './processing/CascadeGraphVerifier';\nimport { DependencyGraphResolver } from './processing/DependencyGraphResolver';\nimport { EntityGraphReconstructor } from './processing/EntityGraphReconstructor';\nimport { OperationManager } from './processing/OperationManager';\nimport { StructuralEntityValidator } from './processing/StructuralEntityValidator';\nimport { QueryParameterDeserializer } from './serialize/QueryParameterDeserializer';\nimport { QueryResultsSerializer } from './serialize/QueryResultsSerializer';\nimport { RepositoryManager } from './core/repository/RepositoryManager';\nimport { USER_ACCOUNT_MANAGER } from '@airport/travel-document-checkpoint/lib/core/core-tokens';\nimport { LOCAL_API_SERVER } from '@airport/apron';\nconst terminal = lib('terminal');\nREPOSITORY_LOADER.setClass(RepositoryLoader);\nTRANSACTIONAL_CONNECTOR.setClass(InternalTransactionalConnector);\nTRANSACTIONAL_CONNECTOR.setDependencies({\n    terminalStore: TERMINAL_STORE,\n    transactionalServer: TRANSACTIONAL_SERVER\n});\nTRANSACTIONAL_SERVER.setClass(TransactionalServer);\nTRANSACTION_MANAGER.setClass(TransactionManager);\nQUERY_PARAMETER_DESERIALIZER.setClass(QueryParameterDeserializer);\nQUERY_RESULTS_SERIALIZER.setClass(QueryResultsSerializer);\nexport const ABSTRACT_MUTATION_MANAGER = terminal.token({\n    class: AbstractMutationManager,\n    interface: 'class AbstractMutationManager',\n    token: 'ABSTRACT_MUTATION_MANAGER'\n});\nexport const ABSTRACT_TRANSACTIONAL_RECEIVER = terminal.token({\n    class: TransactionalReceiver,\n    interface: 'class TransactionalReceiver',\n    token: 'ABSTRACT_TRANSACTIONAL_RECEIVER'\n});\nexport const CASCADE_GRAPH_VERIFIER = terminal.token({\n    class: CascadeGraphVerifier,\n    interface: 'ICascadeGraphVerifier',\n    token: 'CASCADE_GRAPH_VERIFIER'\n});\nexport const DATABASE_MANAGER = terminal.token({\n    class: DatabaseManager,\n    interface: 'IDatabaseManager',\n    token: 'DATABASE_MANAGER'\n});\nexport const DELETE_MANAGER = terminal.token({\n    class: DeleteManager,\n    interface: 'IDeleteManager',\n    token: 'DELETE_MANAGER'\n});\nexport const DEPENDENCY_GRAPH_RESOLVER = terminal.token({\n    class: DependencyGraphResolver,\n    interface: 'IDependencyGraphResolver',\n    token: 'DEPENDENCY_GRAPH_RESOLVER'\n});\nexport const ENTITY_GRAPH_RECONSTRUCTOR = terminal.token({\n    class: EntityGraphReconstructor,\n    interface: 'IEntityGraphReconstructor',\n    token: 'ENTITY_GRAPH_RECONSTRUCTOR'\n});\nexport const HISTORY_MANAGER = terminal.token({\n    class: HistoryManager,\n    interface: 'IHistoryManager',\n    token: 'HISTORY_MANAGER'\n});\nexport const INSERT_MANAGER = terminal.token({\n    class: InsertManager,\n    interface: 'IInsertManager',\n    token: 'INSERT_MANAGER'\n});\nexport const INTERNAL_RECORD_MANAGER = terminal.token({\n    class: InternalRecordManager,\n    interface: 'IInternalRecordManager',\n    token: 'INTERNAL_RECORD_MANAGER'\n});\nexport const ONLINE_MANAGER = terminal.token({\n    class: OnlineManager,\n    interface: 'IOnlineManager',\n    token: 'ONLINE_MANAGER'\n});\nexport const OPERATION_MANAGER = terminal.token({\n    class: OperationManager,\n    interface: 'IOperationManager',\n    token: 'OPERATION_MANAGER'\n});\nexport const QUERY_MANAGER = terminal.token({\n    class: QueryManager,\n    interface: 'IQueryManager',\n    token: 'QUERY_MANAGER'\n});\nexport const STRUCTURAL_ENTITY_VALIDATOR = terminal.token({\n    class: StructuralEntityValidator,\n    interface: 'IStructuralEntityValidator',\n    token: 'STRUCTURAL_ENTITY_VALIDATOR'\n});\nexport const UPDATE_MANAGER = terminal.token({\n    class: UpdateManager,\n    interface: 'IUpdateManager',\n    token: 'UPDATE_MANAGER'\n});\nABSTRACT_MUTATION_MANAGER.setDependencies({\n    applicationUtils: APPLICATION_UTILS,\n    fieldUtils: FIELD_UTILS,\n    queryUtils: QUERY_UTILS,\n    relationManager: RELATION_MANAGER\n});\nABSTRACT_TRANSACTIONAL_RECEIVER.setDependencies({\n    terminalStore: TERMINAL_STORE,\n    transactionalServer: TRANSACTIONAL_SERVER\n});\nDATABASE_MANAGER.setDependencies({\n    airportDatabase: AIRPORT_DATABASE,\n    applicationDao: APPLICATION_DAO,\n    applicationInitializer: APPLICATION_INITIALIZER,\n    dbApplicationUtils: DB_APPLICATION_UTILS,\n    internalRecordManager: INTERNAL_RECORD_MANAGER,\n    storeDriver: STORE_DRIVER,\n    transactionalServer: TRANSACTIONAL_SERVER,\n    transactionManager: TRANSACTION_MANAGER\n});\nDELETE_MANAGER.setDependencies({\n    airportDatabase: AIRPORT_DATABASE,\n    applicationUtils: APPLICATION_UTILS,\n    historyManager: HISTORY_MANAGER,\n    operationHistoryDuo: OPERATION_HISTORY_DUO,\n    recordHistoryDuo: RECORD_HISTORY_DUO,\n    repositoryTransactionHistoryDuo: REPOSITORY_TRANSACTION_HISTORY_DUO,\n    sequenceGenerator: SEQUENCE_GENERATOR,\n    utils: UTILS\n});\nDEPENDENCY_GRAPH_RESOLVER.setDependencies({\n    entityStateManager: ENTITY_STATE_MANAGER\n});\nENTITY_GRAPH_RECONSTRUCTOR.setDependencies({\n    entityStateManager: ENTITY_STATE_MANAGER\n});\nHISTORY_MANAGER.setDependencies({\n    transactionHistoryDuo: TRANSACTION_HISTORY_DUO,\n});\nINSERT_MANAGER.setDependencies({\n    airportDatabase: AIRPORT_DATABASE,\n    historyManager: HISTORY_MANAGER,\n    operationHistoryDuo: OPERATION_HISTORY_DUO,\n    recordHistoryDuo: RECORD_HISTORY_DUO,\n    repositoryTransactionHistoryDuo: REPOSITORY_TRANSACTION_HISTORY_DUO,\n    sequenceGenerator: SEQUENCE_GENERATOR\n});\nINTERNAL_RECORD_MANAGER.setDependencies({\n    actorDao: ACTOR_DAO,\n    applicationDao: APPLICATION_DAO,\n    domainDao: DOMAIN_DAO,\n    entityStateManager: ENTITY_STATE_MANAGER,\n    terminalStore: TERMINAL_STORE,\n    transactionManager: TRANSACTION_MANAGER\n});\nONLINE_MANAGER.setDependencies({\n    repositoryDao: REPOSITORY_DAO,\n    repositoryManager: REPOSITORY_MANAGER,\n    repositoryTransactionHistoryDao: REPOSITORY_TRANSACTION_HISTORY_DAO,\n    transactionManager: TRANSACTION_MANAGER\n});\nOPERATION_MANAGER.setDependencies({\n    airportDatabase: AIRPORT_DATABASE,\n    applicationUtils: APPLICATION_UTILS,\n    cascadeGraphVerifier: CASCADE_GRAPH_VERIFIER,\n    deleteManager: DELETE_MANAGER,\n    dependencyGraphResolver: DEPENDENCY_GRAPH_RESOLVER,\n    entityGraphReconstructor: ENTITY_GRAPH_RECONSTRUCTOR,\n    entityStateManager: ENTITY_STATE_MANAGER,\n    insertManager: INSERT_MANAGER,\n    qMetadataUtils: Q_METADATA_UTILS,\n    queryFacade: QUERY_FACADE,\n    repositoryManager: REPOSITORY_MANAGER,\n    structuralEntityValidator: STRUCTURAL_ENTITY_VALIDATOR,\n    updateManager: UPDATE_MANAGER,\n    utils: UTILS\n});\nQUERY_MANAGER.setDependencies({\n    actorDao: ACTOR_DAO,\n    airportDatabase: AIRPORT_DATABASE,\n    observableQueryAdapter: OBSERVABLE_QUERY_ADAPTER,\n    repositoryDao: REPOSITORY_DAO,\n    repositoryLoader: REPOSITORY_LOADER,\n    storeDriver: STORE_DRIVER\n});\nREPOSITORY_LOADER.setDependencies({\n    repositoryDao: REPOSITORY_DAO,\n    synchronizationAdapterLoader: SYNCHRONIZATION_ADAPTER_LOADER,\n    synchronizationInManager: SYNCHRONIZATION_IN_MANAGER\n});\nREPOSITORY_MANAGER.setClass(RepositoryManager);\nREPOSITORY_MANAGER.setDependencies({\n    repositoryDao: REPOSITORY_DAO,\n    terminalSessionManager: TERMINAL_SESSION_MANAGER,\n});\nSTRUCTURAL_ENTITY_VALIDATOR.setDependencies({\n    applicationUtils: APPLICATION_UTILS,\n    entityStateManager: ENTITY_STATE_MANAGER,\n});\nTERMINAL_SESSION_MANAGER.setClass(TerminalSessionManager);\nTERMINAL_SESSION_MANAGER.setDependencies({\n    terminalStore: TERMINAL_STORE,\n    userAccountManager: USER_ACCOUNT_MANAGER,\n    userStore: USER_STORE\n});\nTRANSACTION_MANAGER.setDependencies({\n    activeQueries: ACTIVE_QUERIES,\n    idGenerator: ID_GENERATOR,\n    storeDriver: STORE_DRIVER,\n    synchronizationOutManager: SYNCHRONIZATION_OUT_MANAGER,\n    terminalSessionManager: TERMINAL_SESSION_MANAGER,\n    terminalStore: TERMINAL_STORE,\n    transactionHistoryDuo: TRANSACTION_HISTORY_DUO,\n});\nTRANSACTIONAL_RECEIVER.setDependencies({\n    actorDao: ACTOR_DAO,\n    applicationDao: APPLICATION_DAO,\n    databaseManager: DATABASE_MANAGER,\n    dbApplicationUtils: DB_APPLICATION_UTILS,\n    internalRecordManager: INTERNAL_RECORD_MANAGER,\n    localApiServer: LOCAL_API_SERVER,\n    terminalSessionManager: TERMINAL_SESSION_MANAGER,\n    terminalStore: TERMINAL_STORE,\n    transactionManager: TRANSACTION_MANAGER,\n    transactionalServer: TRANSACTIONAL_SERVER\n});\nTRANSACTIONAL_SERVER.setDependencies({\n    deleteManager: DELETE_MANAGER,\n    insertManager: INSERT_MANAGER,\n    operationManager: OPERATION_MANAGER,\n    queryManager: QUERY_MANAGER,\n    repositoryManager: REPOSITORY_MANAGER,\n    terminalStore: TERMINAL_STORE,\n    transactionManager: TRANSACTION_MANAGER,\n    updateManager: UPDATE_MANAGER\n});\nUPDATE_MANAGER.setDependencies({\n    airportDatabase: AIRPORT_DATABASE,\n    applicationUtils: APPLICATION_UTILS,\n    fieldUtils: FIELD_UTILS,\n    historyManager: HISTORY_MANAGER,\n    operationHistoryDuo: OPERATION_HISTORY_DUO,\n    queryFacade: QUERY_FACADE,\n    queryUtils: QUERY_UTILS,\n    recordHistoryDuo: RECORD_HISTORY_DUO,\n    relationManager: RELATION_MANAGER,\n    repositoryTransactionHistoryDuo: REPOSITORY_TRANSACTION_HISTORY_DUO,\n    sequenceGenerator: SEQUENCE_GENERATOR,\n});\n//# sourceMappingURL=tokens.js.map","import { DEPENDENCY_INJECTION } from '@airport/direction-indicator';\nexport * from './core/repository/RepositoryLoader';\nexport * from './core/repository/RepositoryManager';\nexport * from './data/InternalRecordManager';\nexport * from './net/InternalTransactionalConnector';\nexport * from './net/OnlineManager';\nexport * from './net/TransactionalReceiver';\nexport * from './net/TransactionalServer';\nexport * from './orchestration/AbstractMutationManager';\nexport * from './orchestration/DatabaseManager';\nexport * from './orchestration/DeleteManager';\nexport * from './orchestration/HistoryManager';\nexport * from './orchestration/InsertManager';\nexport * from './orchestration/QueryManager';\nexport * from './orchestration/TransactionManager';\nexport * from './orchestration/UpdateManager';\nexport * from './processing/CascadeGraphVerifier';\nexport * from './processing/DependencyGraphResolver';\nexport * from './processing/EntityGraphReconstructor';\nexport * from './processing/OperationManager';\nexport * from './processing/StructuralEntityValidator';\nexport * from './serialize/QueryParameterDeserializer';\nexport * from './serialize/QueryResultsSerializer';\nexport * from './shared/logic/DatabaseLogic';\nexport * from './shared/DateUtils';\nexport * from './shared/PlatformUtils';\n// export * from './Constants'\nexport * from './tokens';\nDEPENDENCY_INJECTION.isFramework = true;\n//# sourceMappingURL=index.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject } from \"@airport/direction-indicator\";\nimport { Injected } from '@airport/direction-indicator';\nlet ApiRegistry = class ApiRegistry {\n    initialize(applicationApi) {\n        this.applicationStore.state.api = applicationApi;\n    }\n    async findApiObjectAndOperation(domainName, applicationName, apiInterfaceName, methodName) {\n        return await this.findObjectAndOperationForApi(this.applicationStore.state.api, domainName, applicationName, apiInterfaceName, methodName);\n    }\n    async findObjectAndOperationForApi(api, domainName, applicationName, apiInterfaceName, methodName) {\n        const apiObjectDefinition = api.apiObjectMap[apiInterfaceName];\n        if (!apiObjectDefinition) {\n            throw new Error(`Could not find API object for\r\n        Domain:\r\n            ${domainName}\r\n        Application:\r\n            ${applicationName}\r\n        Interface:\r\n            ${apiInterfaceName}\r\n            \r\n            ---===<<<((( Please remember, generator must be run after API modifications )))>>>===---\r\n\r\n            `);\n        }\n        const apiOperation = apiObjectDefinition.operationMap[methodName];\n        if (!apiOperation) {\n            throw new Error(`Could not find API object method for \r\n        Domain:\r\n            ${domainName}\r\n        Application:\r\n            ${applicationName}\r\n        Interface:\r\n            ${apiInterfaceName}\r\n        Method name:\r\n            ${methodName}\r\n            \r\n            ---===<<<((( Please remember, generator must be run after API modifications )))>>>===---\r\n\r\n            `);\n        }\n        const apiObject = await this.containerAccessor.getContainer(this)\n            .getByNames(domainName, applicationName, apiInterfaceName);\n        return {\n            apiObject,\n            apiOperation\n        };\n    }\n};\n__decorate([\n    Inject()\n], ApiRegistry.prototype, \"applicationStore\", void 0);\n__decorate([\n    Inject()\n], ApiRegistry.prototype, \"containerAccessor\", void 0);\nApiRegistry = __decorate([\n    Injected()\n], ApiRegistry);\nexport { ApiRegistry };\n//# sourceMappingURL=ApiRegistry.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nlet ApiValidator = class ApiValidator {\n    validate(operation, parameters) {\n        // FIXME: implement (eventually)\n    }\n};\nApiValidator = __decorate([\n    Injected()\n], ApiValidator);\nexport { ApiValidator };\n//# sourceMappingURL=ApiValidator.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet LocalAPIServer = class LocalAPIServer {\n    async handleRequest(request) {\n        let payload;\n        let errorMessage;\n        try {\n            // TODO: this should be inside coreHandleRequest after retrieval\n            // of apiOperation.  For that requestManager must be supported\n            // by the main @airport/terminal. It works in App VMs since\n            // a new requestManager object is created per request but\n            // currently does not work in @airport/terminal (since there is\n            // no per-request creating of injected objects).\n            this.requestManager.actor = request.actor;\n            this.requestManager.userAccount = request.actor.userAccount;\n            payload = await this.coreHandleRequest(request, this.applicationStore.state.api);\n        }\n        catch (e) {\n            errorMessage = e.message ? e.message : e;\n            console.error(e);\n        }\n        const response = {\n            application: request.application,\n            args: request.args,\n            category: 'ToClient',\n            domain: request.domain,\n            errorMessage,\n            id: request.id,\n            hostDomain: request.hostDomain,\n            hostProtocol: request.hostProtocol,\n            methodName: request.methodName,\n            objectName: request.objectName,\n            protocol: request.protocol,\n            payload,\n            transactionId: request.transactionId\n        };\n        return response;\n    }\n    async coreHandleRequest(request, api) {\n        const { apiObject, apiOperation } = await this.apiRegistry.findObjectAndOperationForApi(api, request.domain, request.application, request.objectName, request.methodName);\n        const result = apiObject[request.methodName].apply(apiObject, request.args);\n        if (apiOperation.isAsync) {\n            return await result;\n        }\n        else {\n            return result;\n        }\n    }\n};\n__decorate([\n    Inject()\n], LocalAPIServer.prototype, \"apiRegistry\", void 0);\n__decorate([\n    Inject()\n], LocalAPIServer.prototype, \"applicationStore\", void 0);\n__decorate([\n    Inject()\n], LocalAPIServer.prototype, \"requestManager\", void 0);\nLocalAPIServer = __decorate([\n    Injected()\n], LocalAPIServer);\nexport { LocalAPIServer };\n//# sourceMappingURL=LocalApiServer.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { EntityRelationType, EntityState, SQLDataType } from \"@airport/ground-control\";\n// TODO: figure out if this is needed - originally written for deserializing\n// Client-side operation entities.  Since then moved to Isolates and generic\n// API calls.  Probably should be used in go-tower to deserialize all of the\n// method argiments passed it (and won't be tied to a query of any kind, API\n// interface is generic, unless already known to contain entity objects.)\nlet OperationDeserializer = class OperationDeserializer {\n    deserialize(entity, dbEntity, entityStateManager, applicationUtils) {\n        const operation = {\n            lookupTable: [],\n        };\n        let deserializedEntity;\n        if (entity instanceof Array) {\n            deserializedEntity = entity.map(anEntity => this.doDeserialize(anEntity, dbEntity, operation, entityStateManager, applicationUtils));\n        }\n        else {\n            deserializedEntity = this.doDeserialize(entity, dbEntity, operation, entityStateManager, applicationUtils);\n        }\n        return deserializedEntity;\n    }\n    doDeserialize(entity, dbEntity, operation, entityStateManager, applicationUtils) {\n        let state = entityStateManager.getEntityState(entity);\n        let operationUniqueId = entityStateManager.getOperationUniqueId(entity);\n        if (!operationUniqueId || typeof operationUniqueId !== 'number'\n            || operationUniqueId < 1 || operationUniqueId % 1 === 0) {\n            throw new Error(`Invalid or missing ${entityStateManager.getUniqueIdFieldName()} field.`);\n        }\n        let alreadyDeserializedEntity = operation.lookupTable[operationUniqueId];\n        switch (state) {\n            case EntityState.STUB: {\n                let alreadyDeserializedEntity = operation.lookupTable[operationUniqueId];\n                if (!alreadyDeserializedEntity) {\n                    throw new Error(`Could not find an already present entity for\r\n\t\t\t\t\t${entityStateManager.getUniqueIdFieldName()} of ${operationUniqueId}`);\n                }\n                return alreadyDeserializedEntity;\n            }\n            default:\n                if (alreadyDeserializedEntity) {\n                    throw new Error(`Entity appears more than once for\r\n\t\t\t\t\t${entityStateManager.getUniqueIdFieldName()} of ${operationUniqueId}`);\n                }\n        }\n        let deserializedEntity = {};\n        operation.lookupTable[operationUniqueId] = deserializedEntity;\n        deserializedEntity[entityStateManager.getStateFieldName()] = state;\n        for (const dbProperty of dbEntity.properties) {\n            let value = entity[dbProperty.name];\n            if (applicationUtils.isEmpty(value)) {\n                continue;\n            }\n            let propertyCopy;\n            if (dbProperty.relation) {\n                const dbRelation = dbProperty.relation[0];\n                switch (dbRelation.relationType) {\n                    case EntityRelationType.ONE_TO_MANY:\n                        if (!(value instanceof Array)) {\n                            throw new Error(`Expecting @OneToMany for an array entity relation`);\n                        }\n                        propertyCopy = value.map(aProperty => this.doDeserialize(aProperty, dbRelation.entity, operation, entityStateManager, applicationUtils));\n                        break;\n                    case EntityRelationType.MANY_TO_ONE:\n                        if (!(value instanceof Object) || value instanceof Array) {\n                            throw new Error(`Expecting @ManyToOne for a non-array entity relation`);\n                        }\n                        propertyCopy = this.doDeserialize(value, dbRelation.entity, operation, entityStateManager, applicationUtils);\n                        break;\n                    default:\n                        throw new Error(`Unknown relation type: ${dbRelation.relationType}`);\n                }\n            }\n            else {\n                const dbColumn = dbProperty.propertyColumns[0].column;\n                switch (dbColumn.type) {\n                    case SQLDataType.JSON:\n                        // propertyCopy = this.cleanJsonObject(value, dbProperty, entityStateManager)\n                        throw new Error('Json properties cannot be deserialized');\n                        break;\n                    case SQLDataType.DATE:\n                        if (!(value instanceof Object)\n                            || value[entityStateManager.getStateFieldName()] !== EntityState.DATE\n                            || !value.value) {\n                            throw new Error(`Invalid Serialized Date format for ${dbEntity.name}.${dbProperty.name}`);\n                        }\n                        try {\n                            propertyCopy = new Date(value);\n                        }\n                        catch (e) {\n                            throw new Error(`Invalid Serialized Date format for ${dbEntity.name}.${dbProperty.name}`);\n                        }\n                        break;\n                    case SQLDataType.ANY:\n                    case SQLDataType.BOOLEAN:\n                    case SQLDataType.NUMBER:\n                    case SQLDataType.STRING:\n                        propertyCopy = value;\n                        break;\n                    default:\n                        throw new Error(`Unexpected data type for ${dbEntity.name}.${dbProperty.name}`);\n                }\n            }\n            deserializedEntity[dbProperty.name] = propertyCopy;\n        }\n        return deserializedEntity;\n    }\n    cleanJsonObject(value, dbProperty, entityStateManager) {\n        let valueCopy;\n        if (value instanceof Object) {\n            if (value instanceof Array) {\n                valueCopy = value.map(aValue => this.cleanJsonObject(aValue, dbProperty, entityStateManager));\n            }\n            else {\n                valueCopy = {};\n                if (value[entityStateManager.getStateFieldName()] === EntityState.STUB) {\n                    throw new Error(`Interlinked object graphs are not supported in @Json() columns \r\n                    ${dbProperty.entity.name}.${dbProperty.name}`);\n                }\n                delete value[entityStateManager.getStateFieldName()];\n                delete value[entityStateManager.getUniqueIdFieldName()];\n                for (const propertyName in value) {\n                    const property = value[propertyName];\n                    valueCopy[propertyName] = this.\n                        cleanJsonObject(property, dbProperty, entityStateManager);\n                }\n            }\n        }\n        else {\n            valueCopy = value;\n        }\n        return valueCopy;\n    }\n};\nOperationDeserializer = __decorate([\n    Injected()\n], OperationDeserializer);\nexport { OperationDeserializer };\n//# sourceMappingURL=OperationDeserializer.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nlet EntityCopier = class EntityCopier {\n    copyEntityForProcessing(entity, dbEntity, entityStateManager, context) {\n        const operation = {\n            processedEntityMap: new Map(),\n            sequence: context.lastOUID ? context.lastOUID : 0,\n        };\n        const copy = this.doCopyEntityForProcessing(entity, dbEntity, entityStateManager, operation);\n        context.lastOUID = operation.sequence;\n        return copy;\n    }\n    doCopyEntityForProcessing(entity, dbEntity, entityStateManager, operation) {\n        if (entity instanceof Array) {\n            return entity.map(anEntity => this.doCopyEntityForProcessing(anEntity, dbEntity, entityStateManager, operation));\n        }\n        else {\n            let entityCopy = {};\n            if (operation.processedEntityMap.has(entity)) {\n                return operation.processedEntityMap.get(entity);\n            }\n            operation.processedEntityMap.set(entity, entityCopy);\n            const operationUniqueId = ++operation.sequence;\n            entityCopy[entityStateManager.getUniqueIdFieldName()] = operationUniqueId;\n            entity[entityStateManager.getUniqueIdFieldName()] = operationUniqueId;\n            entityStateManager.setOriginalValues(entityStateManager.getOriginalValues(entity), entityCopy);\n            for (let dbProperty of dbEntity.properties) {\n                const property = entity[dbProperty.name];\n                if (dbProperty.relation && dbProperty.relation.length && property) {\n                    entityCopy[dbProperty.name] = this.doCopyEntityForProcessing(property, dbProperty.relation[0].relationEntity, entityStateManager, operation);\n                }\n                else {\n                    // No need to clone dates or JSON objects - they\n                    // won't be modified by the save process\n                    entityCopy[dbProperty.name] = property;\n                }\n            }\n            entityCopy[entityStateManager.getStateFieldName()]\n                = entity[entityStateManager.getStateFieldName()];\n            return entityCopy;\n        }\n    }\n};\nEntityCopier = __decorate([\n    Injected()\n], EntityCopier);\nexport { EntityCopier };\n//# sourceMappingURL=EntityCopier.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { EntityRelationType, EntityState, SQLDataType } from \"@airport/ground-control\";\nlet UpdateCacheManager = class UpdateCacheManager {\n    saveOriginalValues(entity, dbEntity) {\n        this.doSaveOriginalValues(entity, dbEntity, new Set());\n    }\n    doSaveOriginalValues(entity, dbEntity, processedEntities) {\n        if (entity instanceof Array) {\n            for (let i = 0; i < entity.length; i++) {\n                this.doSaveOriginalValues(entity[i], dbEntity, processedEntities);\n            }\n            return;\n        }\n        if (!entity) {\n            return;\n        }\n        if (processedEntities.has(entity)) {\n            return;\n        }\n        processedEntities.add(entity);\n        const originalValuesObject = {};\n        this.entityStateManager.setOriginalValues(originalValuesObject, entity);\n        for (let dbProperty of dbEntity.properties) {\n            const property = entity[dbProperty.name];\n            if (dbProperty.relation && dbProperty.relation.length) {\n                if (!property) {\n                    continue;\n                }\n                if (dbProperty.relation[0].relationType === EntityRelationType.MANY_TO_ONE) {\n                    // Save the nested child object Ids in the original values of this object\n                    // in case the object behind this relation is changed\n                    this.applicationUtils.forEachColumnTypeOfRelation(dbProperty.relation[0], (_dbColumn, propertyNameChains) => {\n                        for (let propertyNameChain of propertyNameChains) {\n                            let nestedProperty = entity;\n                            let currentPropertyOriginalValue = originalValuesObject;\n                            for (let i = 0; i < propertyNameChain.length; i++) {\n                                const propertyName = propertyNameChain[i];\n                                if (nestedProperty instanceof Object) {\n                                    nestedProperty = nestedProperty[propertyName];\n                                    let originalValue;\n                                    // Nested object continues\n                                    if (i === propertyNameChain.length - 1) {\n                                        originalValue = nestedProperty;\n                                    }\n                                    else {\n                                        originalValue = {};\n                                    }\n                                    currentPropertyOriginalValue[propertyName] = originalValue;\n                                    currentPropertyOriginalValue = currentPropertyOriginalValue[propertyName];\n                                }\n                                else {\n                                    // This is the actual value\n                                    currentPropertyOriginalValue[propertyName] = nestedProperty;\n                                }\n                            }\n                        }\n                    });\n                }\n                this.doSaveOriginalValues(property, dbProperty.relation[0].relationEntity, processedEntities);\n            }\n            else {\n                originalValuesObject[dbProperty.name] = entity[dbProperty.name];\n            }\n        }\n    }\n    setOperationState(entityCopy, dbEntity, processedEntities) {\n        if (entityCopy instanceof Array) {\n            for (var i = 0; i < entityCopy.length; i++) {\n                this.setOperationState(entityCopy[i], dbEntity, processedEntities);\n            }\n            return;\n        }\n        if (processedEntities.has(entityCopy)) {\n            return;\n        }\n        processedEntities.add(entityCopy);\n        const originalValuesObject = this.entityStateManager\n            .getOriginalValues(entityCopy);\n        let entityState = entityCopy[this.entityStateManager.getStateFieldName()];\n        let hasId = true;\n        let hasGeneratedIds = false;\n        for (const dbProperty of dbEntity.properties) {\n            if (!dbProperty.isId) {\n                continue;\n            }\n            for (const propertyColumn of dbProperty.propertyColumns) {\n                if (propertyColumn.column.isGenerated) {\n                    hasGeneratedIds = true;\n                }\n            }\n            if (dbProperty.relation && dbProperty.relation.length) {\n                this.applicationUtils.forEachColumnTypeOfRelation(dbProperty.relation[0], (_dbColumn, propertyNameChains) => {\n                    for (let propertyNameChain of propertyNameChains) {\n                        let nestedProperty = entityCopy;\n                        for (let i = 0; i < propertyNameChain.length; i++) {\n                            const propertyName = propertyNameChain[i];\n                            if (nestedProperty) {\n                                nestedProperty = nestedProperty[propertyName];\n                            }\n                        }\n                        if (!nestedProperty) {\n                            if (entityState === EntityState.DELETE) {\n                                throw new Error(`Entity is marked for deletion but does not have an @Id() property:\r\n            ${propertyNameChain.join('.')}\r\n                                    `);\n                            }\n                            else {\n                                entityState = EntityState.CREATE;\n                                hasId = false;\n                                return true;\n                            }\n                        }\n                    }\n                });\n            }\n            else if (!entityCopy[dbProperty.name] && entityCopy[dbProperty.name] !== 0) {\n                hasId = false;\n            }\n        }\n        if (originalValuesObject) {\n            for (const dbProperty of dbEntity.properties) {\n                const property = entityCopy[dbProperty.name];\n                if (dbProperty.relation && dbProperty.relation.length) {\n                    if (!property) {\n                        continue;\n                    }\n                    const dbRelation = dbProperty.relation[0];\n                    const propertyOriginalValuesObject = this.entityStateManager\n                        .getOriginalValues(property);\n                    this.applicationUtils.forEachColumnTypeOfRelation(dbRelation, (_dbColumn, propertyNameChains) => {\n                        const propertyOriginalValuesObject = this.entityStateManager\n                            .getOriginalValues(property);\n                        // const firstPropertyNameChain = propertyNameChains[0];\n                        for (const propertyNameChain of propertyNameChains) {\n                            let value = entityCopy;\n                            let originalValue = propertyOriginalValuesObject;\n                            for (let i = 0; i < propertyNameChain.length; i++) {\n                                const propertyName = propertyNameChain[i];\n                                value = value[propertyName];\n                                // Skip the property itself since the original values object\n                                // belongs to the property and not the checked object\n                                // (in the case of relations only)\n                                if (i !== 0) {\n                                    originalValue = originalValue[propertyName];\n                                }\n                                let noValue = value === null || value === undefined;\n                                let noOriginalValue = originalValue === null\n                                    || originalValue === undefined;\n                                if (noValue) {\n                                    if (originalValue) {\n                                        entityState = EntityState.UPDATE;\n                                        return true;\n                                    }\n                                    break;\n                                }\n                                if (noOriginalValue) {\n                                    if (value) {\n                                        entityState = EntityState.UPDATE;\n                                        return true;\n                                    }\n                                    break;\n                                }\n                                // If it's a nested object\n                                if (typeof value === 'object') {\n                                    // If original isn't a nested object\n                                    if (typeof originalValue !== 'object') {\n                                        entityState = EntityState.UPDATE;\n                                        return true;\n                                    }\n                                    // Values should not be dates or json objects, only\n                                    // nested object references to eventual _localIds\n                                }\n                                else if (typeof originalValue === 'object') {\n                                    // value is not a nested object but originalValue is\n                                    entityState = EntityState.UPDATE;\n                                    return true;\n                                }\n                                else {\n                                    // Both values are primitives (nested _localIds)\n                                    if (value !== originalValue) {\n                                        entityState = EntityState.UPDATE;\n                                        return true;\n                                    }\n                                }\n                            }\n                        }\n                    });\n                }\n                else {\n                    if (entityState) {\n                        continue;\n                    }\n                    let originalValue = originalValuesObject[dbProperty.name];\n                    let propertyValue;\n                    switch (dbProperty.propertyColumns[0].column.type) {\n                        case SQLDataType.DATE:\n                            if (originalValue) {\n                                originalValue = originalValue.getTime();\n                            }\n                            if (property) {\n                                propertyValue = property.getTime();\n                            }\n                            break;\n                        case SQLDataType.JSON:\n                            if (originalValue) {\n                                originalValue = JSON.stringify(originalValue);\n                            }\n                            if (property) {\n                                propertyValue = JSON.stringify(property);\n                            }\n                            break;\n                        default:\n                            propertyValue = property;\n                            break;\n                    }\n                    if (propertyValue !== originalValue) {\n                        entityState = EntityState.UPDATE;\n                    }\n                }\n            }\n        }\n        for (const dbProperty of dbEntity.properties) {\n            const property = entityCopy[dbProperty.name];\n            if (property && dbProperty.relation && dbProperty.relation.length) {\n                this.setOperationState(property, dbProperty.relation[0].relationEntity, processedEntities);\n            }\n        }\n        if (!entityState) {\n            if ((hasId && hasGeneratedIds) || originalValuesObject) {\n                entityState = EntityState.PASS_THROUGH;\n            }\n            else {\n                entityState = EntityState.CREATE;\n            }\n        }\n        entityCopy[this.entityStateManager.getStateFieldName()] = entityState;\n    }\n    afterSaveModifications(entity, dbEntity, saveResult, processedEntities) {\n        this.updateOriginalValuesAfterSave(entity, dbEntity, saveResult, new Set());\n        this.removeDeletedEntities(entity, dbEntity, saveResult, processedEntities);\n    }\n    updateOriginalValuesAfterSave(entity, dbEntity, saveResult, processedEntities) {\n        if (entity instanceof Array) {\n            for (let i = 0; i < entity.length; i++) {\n                this.updateOriginalValuesAfterSave(entity[i], dbEntity, saveResult, processedEntities);\n            }\n        }\n        else {\n            if (processedEntities.has(entity)) {\n                return;\n            }\n            processedEntities.add(entity);\n            let operationUniqueId = this.entityStateManager.getOperationUniqueId(entity, false, dbEntity);\n            let originalValuesObject = {};\n            originalValuesObject = this.doUpdateOriginalValuesAfterSave(entity, dbEntity, saveResult, processedEntities, operationUniqueId);\n            this.entityStateManager.setOriginalValues(originalValuesObject, entity);\n        }\n    }\n    doUpdateOriginalValuesAfterSave(entity, dbEntity, saveResult, processedEntities, operationUniqueId) {\n        let createdRecord = saveResult.created[operationUniqueId];\n        if (createdRecord) {\n            if (createdRecord !== true) {\n                for (const generatedPropertyName in createdRecord) {\n                    entity[generatedPropertyName] = createdRecord[generatedPropertyName];\n                }\n                if (dbEntity.isAirEntity) {\n                    let airEntity = entity;\n                    if (!airEntity.repository || !airEntity.repository._localId) {\n                        airEntity.repository = saveResult.newRepository;\n                    }\n                    airEntity.actor = saveResult.actor;\n                }\n            }\n        }\n        else if (saveResult.deleted[operationUniqueId]) {\n            this.entityStateManager.setIsDeleted(true, entity);\n            this.entityStateManager.setOriginalValues(null, entity);\n            return;\n        }\n        let originalValuesObject = {};\n        for (const dbProperty of dbEntity.properties) {\n            const property = entity[dbProperty.name];\n            if (property && dbProperty.relation && dbProperty.relation.length) {\n                if (dbProperty.relation[0].relationType === EntityRelationType.MANY_TO_ONE) {\n                    // Save the nested child object Ids in the original values of this object\n                    // in case the object behind this relation is changed\n                    this.applicationUtils.forEachColumnTypeOfRelation(dbProperty.relation[0], (_dbColumn, propertyNameChains) => {\n                        for (let propertyNameChain of propertyNameChains) {\n                            let nestedProperty = entity;\n                            let currentPropertyOriginalValue = originalValuesObject;\n                            for (let i = 0; i < propertyNameChain.length; i++) {\n                                const propertyName = propertyNameChain[i];\n                                if (nestedProperty instanceof Object) {\n                                    nestedProperty = nestedProperty[propertyName];\n                                    let originalValue;\n                                    // Nested object continues\n                                    if (i === propertyNameChain.length - 1) {\n                                        originalValue = nestedProperty;\n                                    }\n                                    else {\n                                        originalValue = {};\n                                    }\n                                    currentPropertyOriginalValue[propertyName] = originalValue;\n                                    currentPropertyOriginalValue = currentPropertyOriginalValue[propertyName];\n                                }\n                                else {\n                                    // This is the actual value\n                                    currentPropertyOriginalValue[propertyName] = nestedProperty;\n                                }\n                            }\n                        }\n                    });\n                }\n                this.updateOriginalValuesAfterSave(property, dbProperty.relation[0].relationEntity, saveResult, processedEntities);\n            }\n            else {\n                originalValuesObject[dbProperty.name] = property;\n            }\n        }\n        return originalValuesObject;\n    }\n    removeDeletedEntities(entity, dbEntity, saveResult, processedEntities) {\n        if (entity instanceof Array) {\n            for (let i = entity.length - 1; i >= 0; i--) {\n                if (this.removeDeletedEntities(entity[i], dbEntity, saveResult, processedEntities)) {\n                    entity.splice(i, 1);\n                }\n            }\n            return !entity.length;\n        }\n        else {\n            if (processedEntities.has(entity)) {\n                return this.entityStateManager.isDeleted(entity);\n            }\n            processedEntities.add(entity);\n            for (const dbRelation of dbEntity.relations) {\n                const dbRelationProperty = dbRelation.property;\n                const property = entity[dbRelationProperty.name];\n                if (!property) {\n                    continue;\n                }\n                switch (dbRelation.relationType) {\n                    case EntityRelationType.MANY_TO_ONE:\n                        if (this.removeDeletedEntities(property, dbRelation.relationEntity, saveResult, processedEntities)) {\n                            entity[dbRelationProperty.name] = null;\n                        }\n                        break;\n                    case EntityRelationType.ONE_TO_MANY:\n                        this.removeDeletedEntities(property, dbRelation.relationEntity, saveResult, processedEntities);\n                        break;\n                }\n            }\n            return this.entityStateManager.isDeleted(entity);\n        }\n    }\n};\n__decorate([\n    Inject()\n], UpdateCacheManager.prototype, \"entityStateManager\", void 0);\n__decorate([\n    Inject()\n], UpdateCacheManager.prototype, \"applicationUtils\", void 0);\nUpdateCacheManager = __decorate([\n    Injected()\n], UpdateCacheManager);\nexport { UpdateCacheManager };\n//# sourceMappingURL=UpdateCacheManager.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar EntityStateManager_1;\nimport { Injected } from '@airport/direction-indicator';\nimport { EntityState } from '@airport/ground-control';\nlet EntityStateManager = EntityStateManager_1 = class EntityStateManager {\n    isStub(entity) {\n        return this.getEntityState(entity) === EntityState.STUB;\n    }\n    isParentSchemaId(entity) {\n        return this.getEntityState(entity) ===\n            EntityState.PARENT_SCHEMA_ID;\n    }\n    isPassThrough(entity) {\n        return this.getEntityState(entity) === EntityState.PASS_THROUGH;\n    }\n    markAsOfParentSchema(entity) {\n        entity[EntityStateManager_1.STATE_FIELD] =\n            EntityState.PARENT_SCHEMA_ID;\n    }\n    markForDeletion(entity) {\n        entity[EntityStateManager_1.STATE_FIELD] = EntityState.DELETE;\n    }\n    markToCreate(entity) {\n        entity[EntityStateManager_1.STATE_FIELD] = EntityState.CREATE;\n    }\n    markToUpdate(entity) {\n        entity[EntityStateManager_1.STATE_FIELD] = EntityState.UPDATE;\n    }\n    getEntityState(entity) {\n        return entity[EntityStateManager_1.STATE_FIELD];\n    }\n    getOriginalValues(entity) {\n        return entity[EntityStateManager_1.ORIGINAL_VALUES_PROPERTY];\n    }\n    setOriginalValues(originalValues, entity) {\n        entity[EntityStateManager_1.ORIGINAL_VALUES_PROPERTY] = originalValues;\n    }\n    copyEntityState(fromEntity, toEntity) {\n        toEntity[EntityStateManager_1.STATE_FIELD]\n            = fromEntity[EntityStateManager_1.STATE_FIELD];\n        toEntity[EntityStateManager_1.ORIGINAL_VALUES_PROPERTY]\n            = fromEntity[EntityStateManager_1.ORIGINAL_VALUES_PROPERTY];\n    }\n    getStateFieldName() {\n        return EntityStateManager_1.STATE_FIELD;\n    }\n    getEntityStateTypeAsFlags(entity, dbEntity) {\n        let isCreate, isDelete, isParentSchemaId, isPassThrough, isResult, isResultDate, isResultJson, isStub, isUpdate;\n        const entityState = this.getEntityState(entity);\n        switch (entityState) {\n            case EntityState.CREATE:\n                isCreate = true;\n                break;\n            case EntityState.DELETE:\n                isDelete = true;\n                break;\n            case EntityState.PARENT_SCHEMA_ID:\n                isParentSchemaId = true;\n                break;\n            case EntityState.PASS_THROUGH:\n                isPassThrough = true;\n                break;\n            // case EntityState.RESULT:\n            // \tisResult = true\n            // \tbreak\n            case EntityState.DATE:\n                isResultDate = true;\n                break;\n            // case EntityState.RESULT_JSON:\n            // \tisResultJson = true\n            // \tbreak\n            case EntityState.STUB:\n                isStub = true;\n                break;\n            case EntityState.UPDATE:\n                isUpdate = true;\n                break;\n            default:\n                throw new Error(`Unexpected entity state\r\n\"${this.getStateFieldName()}\" for ${dbEntity.name}: ${entityState}`);\n        }\n        return {\n            isCreate,\n            isDelete,\n            isParentSchemaId,\n            isPassThrough,\n            // isResult,\n            isResultDate,\n            isStub,\n            isUpdate,\n        };\n    }\n    setIsDeleted(isDeleted, entity) {\n        entity[EntityStateManager_1.STATE_FIELD] = EntityState.DELETE;\n    }\n    isDeleted(entity) {\n        return entity[EntityStateManager_1.STATE_FIELD] === EntityState.DELETE;\n    }\n    getOperationUniqueId(entity, throwIfNotFound = true, dbEntity = null) {\n        const operationUniqueId = entity[EntityStateManager_1.OPERATION_UNIQUE_ID_FIELD];\n        if (!operationUniqueId || typeof operationUniqueId !== 'number' || operationUniqueId < 1) {\n            if (throwIfNotFound) {\n                let entityDescription;\n                if (dbEntity) {\n                    entityDescription = dbEntity.applicationVersion.application.name + '.' + dbEntity.name;\n                }\n                else {\n                    entityDescription = JSON.stringify(entity);\n                }\n                throw new Error(`Could not find \"${EntityStateManager_1.OPERATION_UNIQUE_ID_FIELD}\" property on DTO:\r\n        \r\n        ${entityDescription}`);\n            }\n        }\n        return operationUniqueId;\n    }\n    copyOperationUniqueId(entity, entityCopy) {\n        const operationUniqueId = entity[EntityStateManager_1.OPERATION_UNIQUE_ID_FIELD];\n        entityCopy[EntityStateManager_1.OPERATION_UNIQUE_ID_FIELD] = operationUniqueId;\n    }\n    markAsStub(entity) {\n        entity[EntityStateManager_1.STATE_FIELD] = EntityState.STUB;\n    }\n    getUniqueIdFieldName() {\n        return EntityStateManager_1.OPERATION_UNIQUE_ID_FIELD;\n    }\n};\nEntityStateManager.DELETED_PROPERTY = '__deleted__';\nEntityStateManager.ORIGINAL_VALUES_PROPERTY = '__originalValues__';\nEntityStateManager.STATE_FIELD = '__state__';\nEntityStateManager.OPERATION_UNIQUE_ID_FIELD = '__OUID__';\nEntityStateManager = EntityStateManager_1 = __decorate([\n    Injected()\n], EntityStateManager);\nexport { EntityStateManager };\nexport function injectEntityStateManager() {\n    console.log('inject EntityStateManager');\n}\n//# sourceMappingURL=EntityStateManager.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { Delete, InsertColumnValues, InsertValues, UpdateColumns, UpdateProperties, } from '@airport/tarmaq-query';\n/**\n * Created by Papa on 5/23/2016.\n */\nlet DatabaseFacade = class DatabaseFacade {\n    async insertColumnValues(rawInsertColumnValues, context) {\n        if (!rawInsertColumnValues) {\n            return 0;\n        }\n        if (rawInsertColumnValues instanceof Function) {\n            rawInsertColumnValues = rawInsertColumnValues();\n        }\n        const insertColumnValues = new InsertColumnValues(rawInsertColumnValues);\n        const queryContext = await this.ensureQueryContext(context);\n        const portableQuery = this.queryFacade.getPortableQuery(insertColumnValues, null, queryContext);\n        return await this.transactionalConnector.insertValues(portableQuery, context);\n    }\n    async insertValues(rawInsertValues, context) {\n        if (!rawInsertValues) {\n            return 0;\n        }\n        if (rawInsertValues instanceof Function) {\n            rawInsertValues = rawInsertValues();\n        }\n        const insertValues = new InsertValues(rawInsertValues);\n        const queryContext = await this.ensureQueryContext(context);\n        const portableQuery = this.queryFacade.getPortableQuery(insertValues, null, queryContext);\n        return await this.transactionalConnector.insertValues(portableQuery, context);\n    }\n    async insertColumnValuesGenerateIds(rawInsertColumnValues, context) {\n        if (!rawInsertColumnValues) {\n            return [];\n        }\n        if (rawInsertColumnValues instanceof Function) {\n            rawInsertColumnValues = rawInsertColumnValues();\n        }\n        const insertValues = new InsertColumnValues(rawInsertColumnValues);\n        const queryContext = await this.ensureQueryContext(context);\n        const portableQuery = this.queryFacade.getPortableQuery(insertValues, null, queryContext);\n        return await this.transactionalConnector.insertValuesGetLocalIds(portableQuery, context);\n    }\n    async insertValuesGenerateIds(rawInsertValues, context) {\n        if (!rawInsertValues) {\n            return [];\n        }\n        if (rawInsertValues instanceof Function) {\n            rawInsertValues = rawInsertValues();\n        }\n        const insertValues = new InsertValues(rawInsertValues);\n        const queryContext = await this.ensureQueryContext(context);\n        const portableQuery = this.queryFacade.getPortableQuery(insertValues, null, queryContext);\n        return await this.transactionalConnector.insertValuesGetLocalIds(portableQuery, context);\n    }\n    async deleteWhere(rawDelete, context) {\n        if (!rawDelete) {\n            return 0;\n        }\n        if (rawDelete instanceof Function) {\n            rawDelete = rawDelete();\n        }\n        let deleteWhere = new Delete(rawDelete);\n        const queryContext = await this.ensureQueryContext(context);\n        let portableQuery = this.queryFacade.getPortableQuery(deleteWhere, null, queryContext);\n        return await this.transactionalConnector.deleteWhere(portableQuery, context);\n    }\n    async save(entity, context) {\n        if (!entity) {\n            return null;\n        }\n        const entityCopy = await this.preSaveOperations(entity, context);\n        const saveResult = await this.transactionalConnector.save(entityCopy, context);\n        this.updateCacheManager.afterSaveModifications(entity, context.dbEntity, saveResult, new Set());\n        return saveResult;\n    }\n    async saveToDestination(repositoryDestination, entity, context) {\n        if (!entity) {\n            return null;\n        }\n        const entityCopy = await this.preSaveOperations(entity, context);\n        const saveResult = await this.transactionalConnector\n            .saveToDestination(repositoryDestination, entityCopy, context);\n        this.updateCacheManager.afterSaveModifications(entity, context.dbEntity, saveResult, new Set());\n        return saveResult;\n    }\n    async preSaveOperations(entity, context) {\n        if (!entity) {\n            return null;\n        }\n        const dbEntity = context.dbEntity;\n        const entityCopy = this.entityCopier\n            .copyEntityForProcessing(entity, dbEntity, this.entityStateManager, context);\n        this.updateCacheManager.setOperationState(entityCopy, dbEntity, new Set());\n        return entityCopy;\n    }\n    /**\n     * Updates an entity with a WHERE clause, using a column based set clause\n     * - internal API.  Use the API provided by the IEntityDatabaseFacade.\n     *\n     * @return Number of records updated\n     */\n    async updateColumnsWhere(rawUpdate, context) {\n        if (!rawUpdate) {\n            return 0;\n        }\n        if (rawUpdate instanceof Function) {\n            rawUpdate = rawUpdate();\n        }\n        let updateColumns = new UpdateColumns(rawUpdate);\n        const queryContext = await this.ensureQueryContext(context);\n        const portableQuery = this.queryFacade.getPortableQuery(updateColumns, null, queryContext);\n        return await this.transactionalConnector.updateValues(portableQuery, context);\n    }\n    async updateWhere(rawUpdate, context) {\n        if (!rawUpdate) {\n            return 0;\n        }\n        if (rawUpdate instanceof Function) {\n            rawUpdate = rawUpdate();\n        }\n        let update = new UpdateProperties(rawUpdate);\n        const queryContext = await this.ensureQueryContext(context);\n        const portableQuery = this.queryFacade.getPortableQuery(update, null, queryContext);\n        return await this.transactionalConnector.updateValues(portableQuery, context);\n    }\n    prepare(queryFunction) {\n        return new FunctionWrapper(queryFunction);\n    }\n    async ensureQueryContext(context) {\n        const queryContext = context;\n        return queryContext;\n    }\n};\n__decorate([\n    Inject()\n], DatabaseFacade.prototype, \"entityCopier\", void 0);\n__decorate([\n    Inject()\n], DatabaseFacade.prototype, \"entityStateManager\", void 0);\n__decorate([\n    Inject()\n], DatabaseFacade.prototype, \"queryFacade\", void 0);\n__decorate([\n    Inject()\n], DatabaseFacade.prototype, \"transactionalConnector\", void 0);\n__decorate([\n    Inject()\n], DatabaseFacade.prototype, \"updateCacheManager\", void 0);\nDatabaseFacade = __decorate([\n    Injected()\n], DatabaseFacade);\nexport { DatabaseFacade };\nexport class FunctionWrapper {\n    constructor(queryFunction) {\n        throw new Error('Not Implemented');\n    }\n    find(...params) {\n    }\n}\n//# sourceMappingURL=DatabaseFacade.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet QueryFacade = class QueryFacade {\n    async find(query, queryResultType, context) {\n        await this.ensureContext(context);\n        const result = await this.transactionalConnector.find(this.getPortableQuery(query, queryResultType, context), context);\n        return result;\n    }\n    async findOne(query, queryResultType, context) {\n        await this.ensureContext(context);\n        const result = await this.transactionalConnector.findOne(this.getPortableQuery(query, queryResultType, context), context);\n        return result;\n    }\n    getPortableQuery(query, queryResultType, context) {\n        return {\n            jsonQuery: query.toJSON(this.queryUtils, this.fieldUtils, this.relationManager),\n            parameterMap: query.getParameters(),\n            queryResultType,\n            applicationIndex: context.dbEntity.applicationVersion.application.index,\n            tableIndex: context.dbEntity.index,\n            // values: query.values\n        };\n    }\n    // FIXME: merge update caches on the client\n    async search(query, queryResultType, context) {\n        await this.ensureContext(context);\n        let observable = await this.transactionalConnector.search(this.getPortableQuery(query, queryResultType, context), context);\n        return observable;\n    }\n    async searchOne(query, queryResultType, context) {\n        await this.ensureContext(context);\n        let observable = await this.transactionalConnector.searchOne(this.getPortableQuery(query, queryResultType, context), context);\n        return observable;\n    }\n    async ensureContext(context) {\n    }\n};\n__decorate([\n    Inject()\n], QueryFacade.prototype, \"fieldUtils\", void 0);\n__decorate([\n    Inject()\n], QueryFacade.prototype, \"queryUtils\", void 0);\n__decorate([\n    Inject()\n], QueryFacade.prototype, \"relationManager\", void 0);\n__decorate([\n    Inject()\n], QueryFacade.prototype, \"transactionalConnector\", void 0);\nQueryFacade = __decorate([\n    Injected()\n], QueryFacade);\nexport { QueryFacade };\n//# sourceMappingURL=QueryFacade.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { setQApplicationEntities } from '@airport/air-traffic-control';\nimport { Inject, Injected } from '@airport/direction-indicator';\nclass EntityAccumulator {\n    constructor(applicationDomain, applicationName, entityMap) {\n        this.applicationDomain = applicationDomain;\n        this.applicationName = applicationName;\n        this.entityMap = entityMap;\n    }\n    add(clazz, index) {\n        this.entityMap.set(clazz, {\n            entity: {\n                index,\n                name: clazz.name,\n            },\n            application: {\n                domain: this.applicationDomain,\n                name: this.applicationName,\n            },\n        });\n    }\n}\nlet AirportDatabase = class AirportDatabase {\n    get entityMap() {\n        return this.databaseStore.entityMap;\n    }\n    ;\n    get F() {\n        return this.databaseStore.functions;\n    }\n    get functions() {\n        return this.databaseStore.functions;\n    }\n    get A() {\n        return this.databaseStore.applications;\n    }\n    get applications() {\n        return this.databaseStore.applications;\n    }\n    get qApplications() {\n        return this.databaseStore.qApplications;\n    }\n    get Q() {\n        return this.databaseStore.qApplications;\n    }\n    get QM() {\n        return this.databaseStore.QM;\n    }\n    async load() {\n        // Just calling this method, loads the AirpotDatabase object\n    }\n    setQApplication(qApplication) {\n        const fullApplication_Name = this.dbApplicationUtils\n            .getFullApplication_Name(qApplication);\n        const existingQApplication = this.QM[fullApplication_Name];\n        if (existingQApplication) {\n            const dbApplication = existingQApplication.__dbApplication__;\n            qApplication.__dbApplication__ = dbApplication;\n            setQApplicationEntities(dbApplication, qApplication, this.qApplications, this.appliationUtils, this.relationManager);\n            this.Q[dbApplication.index] = qApplication;\n        }\n        this.QM[fullApplication_Name] = qApplication;\n    }\n    getAccumulator(applicationDomain, applicationName) {\n        return new EntityAccumulator(applicationDomain, applicationName, this.entityMap);\n    }\n    async insertColumnValues(rawInsertValues, context) {\n        return await this.databaseFacade.insertColumnValues(rawInsertValues, context);\n    }\n    async insertValues(rawInsertValues, context) {\n        return await this.databaseFacade.insertValues(rawInsertValues, context);\n    }\n    async insertColumnValuesGenerateIds(rawInsertValues, context) {\n        return await this.databaseFacade.insertColumnValuesGenerateIds(rawInsertValues, context);\n    }\n    async insertValuesGenerateIds(rawInsertValues, context) {\n        return await this.databaseFacade.insertValuesGenerateIds(rawInsertValues, context);\n    }\n    /**\n     * Creates an entity with a WHERE clause - internal API.  Use the\n     *  API provided by the IEntityDatabaseFacade.\n     *\n     * @return Number of records deleted\n     */\n    async deleteWhere(rawDelete, context) {\n        return await this.databaseFacade.deleteWhere(rawDelete, context);\n    }\n    /**\n     * Ether creates or updates an entity - internal API.  Use the\n     *  API provided by the IEntityDatabaseFacade.\n     *\n     * @return Number of records saved (1 or 0)\n     */\n    async save(entity, context, operationName) {\n        return await this.databaseFacade.save(entity, context);\n    }\n    /**\n     * Updates an entity with a WHERE clause, using a column based set clause\n     * - internal API.  Use the API provided by the IEntityDatabaseFacade.\n     *\n     * @return Number of records updated\n     */\n    async updateColumnsWhere(rawUpdateColumns, context) {\n        return await this.databaseFacade.updateColumnsWhere(rawUpdateColumns, context);\n    }\n    /**\n     * Updates an entity with a WHERE clause, using a property based set clause\n     * - internal API.  Use the API provided by the IEntityDatabaseFacade.\n     *\n     * @return Number of records updated\n     */\n    async updateWhere(rawUpdate, context) {\n        return await this.databaseFacade.updateWhere(rawUpdate, context);\n    }\n};\n__decorate([\n    Inject()\n], AirportDatabase.prototype, \"appliationUtils\", void 0);\n__decorate([\n    Inject()\n], AirportDatabase.prototype, \"databaseFacade\", void 0);\n__decorate([\n    Inject()\n], AirportDatabase.prototype, \"databaseStore\", void 0);\n__decorate([\n    Inject()\n], AirportDatabase.prototype, \"dbApplicationUtils\", void 0);\n__decorate([\n    Inject()\n], AirportDatabase.prototype, \"find\", void 0);\n__decorate([\n    Inject()\n], AirportDatabase.prototype, \"findOne\", void 0);\n__decorate([\n    Inject()\n], AirportDatabase.prototype, \"relationManager\", void 0);\n__decorate([\n    Inject()\n], AirportDatabase.prototype, \"search\", void 0);\n__decorate([\n    Inject()\n], AirportDatabase.prototype, \"searchOne\", void 0);\nAirportDatabase = __decorate([\n    Injected()\n], AirportDatabase);\nexport { AirportDatabase };\nexport function injectAirportDatabase() {\n    console.log('Injecting AirportDatabase');\n}\n//# sourceMappingURL=AirportDatabase.js.map","import { AIRPORT_DATABASE } from '@airport/air-traffic-control';\nimport { API_REGISTRY, API_VALIDATOR } from '@airport/check-in';\nimport { CONTAINER_ACCESSOR, lib } from '@airport/direction-indicator';\nimport { ENTITY_STATE_MANAGER, UPDATE_CACHE_MANAGER } from '@airport/ground-control';\nimport { APPLICATION_STORE, LOCAL_API_SERVER } from '@airport/apron';\nimport { AirportDatabase } from './AirportDatabase';\nimport { ApiRegistry } from './core/api/ApiRegistry';\nimport { ApiValidator } from './core/api/ApiValidator';\nimport { LocalAPIServer } from './core/api/LocalApiServer';\nimport { OperationDeserializer } from './core/api/OperationDeserializer';\nimport { EntityCopier } from './core/data/EntityCopier';\nimport { UpdateCacheManager } from './core/data/UpdateCacheManager';\nimport { EntityStateManager } from './core/EntityStateManager';\nimport { DatabaseFacade } from './facade/DatabaseFacade';\nimport { QueryFacade } from './facade/QueryFacade';\nimport { DATABASE_FACADE, QUERY_FACADE } from '@airport/tarmaq-dao';\nimport { OPERATION_DESERIALIZER, REQUEST_MANAGER } from '@airport/arrivals-n-departures';\nconst tower = lib('tower');\nexport const ENTITY_COPIER = tower.token({\n    class: EntityCopier,\n    interface: 'IEntityCopier',\n    token: 'ENTITY_COPIER'\n});\nAIRPORT_DATABASE.setClass(AirportDatabase);\nENTITY_STATE_MANAGER.setClass(EntityStateManager);\nAPI_REGISTRY.setClass(ApiRegistry);\nAPI_REGISTRY.setDependencies({\n    applicationStore: APPLICATION_STORE,\n    containerAccessor: CONTAINER_ACCESSOR\n});\nAPI_VALIDATOR.setClass(ApiValidator);\nLOCAL_API_SERVER.setClass(LocalAPIServer);\nLOCAL_API_SERVER.setDependencies({\n    apiRegistry: API_REGISTRY,\n    applicationStore: APPLICATION_STORE,\n    requestManager: REQUEST_MANAGER\n});\nOPERATION_DESERIALIZER.setClass(OperationDeserializer);\nUPDATE_CACHE_MANAGER.setClass(UpdateCacheManager);\nDATABASE_FACADE.setClass(DatabaseFacade);\nDATABASE_FACADE.setDependencies({\n    entityCopier: ENTITY_COPIER,\n    queryFacade: QUERY_FACADE\n});\nQUERY_FACADE.setClass(QueryFacade);\n//# sourceMappingURL=tokens.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isNode = exports.PROMISE_RESOLVED_VOID = exports.PROMISE_RESOLVED_TRUE = exports.PROMISE_RESOLVED_FALSE = void 0;\nexports.isPromise = isPromise;\nexports.microSeconds = microSeconds;\nexports.randomInt = randomInt;\nexports.randomToken = randomToken;\nexports.sleep = sleep;\n\n/**\n * returns true if the given object is a promise\n */\nfunction isPromise(obj) {\n  if (obj && typeof obj.then === 'function') {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nvar PROMISE_RESOLVED_FALSE = Promise.resolve(false);\nexports.PROMISE_RESOLVED_FALSE = PROMISE_RESOLVED_FALSE;\nvar PROMISE_RESOLVED_TRUE = Promise.resolve(true);\nexports.PROMISE_RESOLVED_TRUE = PROMISE_RESOLVED_TRUE;\nvar PROMISE_RESOLVED_VOID = Promise.resolve();\nexports.PROMISE_RESOLVED_VOID = PROMISE_RESOLVED_VOID;\n\nfunction sleep(time, resolveWith) {\n  if (!time) time = 0;\n  return new Promise(function (res) {\n    return setTimeout(function () {\n      return res(resolveWith);\n    }, time);\n  });\n}\n\nfunction randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n/**\n * https://stackoverflow.com/a/8084248\n */\n\n\nfunction randomToken() {\n  return Math.random().toString(36).substring(2);\n}\n\nvar lastMs = 0;\nvar additional = 0;\n/**\n * returns the current time in micro-seconds,\n * WARNING: This is a pseudo-function\n * Performance.now is not reliable in webworkers, so we just make sure to never return the same time.\n * This is enough in browsers, and this function will not be used in nodejs.\n * The main reason for this hack is to ensure that BroadcastChannel behaves equal to production when it is used in fast-running unit tests.\n */\n\nfunction microSeconds() {\n  var ms = new Date().getTime();\n\n  if (ms === lastMs) {\n    additional++;\n    return ms * 1000 + additional;\n  } else {\n    lastMs = ms;\n    additional = 0;\n    return ms * 1000;\n  }\n}\n/**\n * copied from the 'detect-node' npm module\n * We cannot use the module directly because it causes problems with rollup\n * @link https://github.com/iliakan/detect-node/blob/master/index.js\n */\n\n\nvar isNode = Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\nexports.isNode = isNode;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\n\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.averageResponseTime = averageResponseTime;\nexports.canBeUsed = canBeUsed;\nexports.close = close;\nexports.create = create;\nexports.microSeconds = exports[\"default\"] = void 0;\nexports.onMessage = onMessage;\nexports.postMessage = postMessage;\nexports.type = void 0;\n\nvar _util = require(\"../util\");\n\nvar microSeconds = _util.microSeconds;\nexports.microSeconds = microSeconds;\nvar type = 'native';\nexports.type = type;\n\nfunction create(channelName) {\n  var state = {\n    messagesCallback: null,\n    bc: new BroadcastChannel(channelName),\n    subFns: [] // subscriberFunctions\n\n  };\n\n  state.bc.onmessage = function (msg) {\n    if (state.messagesCallback) {\n      state.messagesCallback(msg.data);\n    }\n  };\n\n  return state;\n}\n\nfunction close(channelState) {\n  channelState.bc.close();\n  channelState.subFns = [];\n}\n\nfunction postMessage(channelState, messageJson) {\n  try {\n    channelState.bc.postMessage(messageJson, false);\n    return _util.PROMISE_RESOLVED_VOID;\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\n\nfunction onMessage(channelState, fn) {\n  channelState.messagesCallback = fn;\n}\n\nfunction canBeUsed() {\n  /**\n   * in the electron-renderer, isNode will be true even if we are in browser-context\n   * so we also check if window is undefined\n   */\n  if (_util.isNode && typeof window === 'undefined') return false;\n\n  if (typeof BroadcastChannel === 'function') {\n    if (BroadcastChannel._pubkey) {\n      throw new Error('BroadcastChannel: Do not overwrite window.BroadcastChannel with this module, this is not a polyfill');\n    }\n\n    return true;\n  } else return false;\n}\n\nfunction averageResponseTime() {\n  return 150;\n}\n\nvar _default = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};\nexports[\"default\"] = _default;","/**\n * this is a set which automatically forgets\n * a given entry when a new entry is set and the ttl\n * of the old one is over\n */\nvar ObliviousSet = /** @class */ (function () {\n    function ObliviousSet(ttl) {\n        this.ttl = ttl;\n        this.set = new Set();\n        this.timeMap = new Map();\n    }\n    ObliviousSet.prototype.has = function (value) {\n        return this.set.has(value);\n    };\n    ObliviousSet.prototype.add = function (value) {\n        var _this = this;\n        this.timeMap.set(value, now());\n        this.set.add(value);\n        /**\n         * When a new value is added,\n         * start the cleanup at the next tick\n         * to not block the cpu for more important stuff\n         * that might happen.\n         */\n        setTimeout(function () {\n            removeTooOldValues(_this);\n        }, 0);\n    };\n    ObliviousSet.prototype.clear = function () {\n        this.set.clear();\n        this.timeMap.clear();\n    };\n    return ObliviousSet;\n}());\nexport { ObliviousSet };\n/**\n * Removes all entries from the set\n * where the TTL has expired\n */\nexport function removeTooOldValues(obliviousSet) {\n    var olderThen = now() - obliviousSet.ttl;\n    var iterator = obliviousSet.set[Symbol.iterator]();\n    /**\n     * Because we can assume the new values are added at the bottom,\n     * we start from the top and stop as soon as we reach a non-too-old value.\n     */\n    while (true) {\n        var value = iterator.next().value;\n        if (!value) {\n            return; // no more elements\n        }\n        var time = obliviousSet.timeMap.get(value);\n        if (time < olderThen) {\n            obliviousSet.timeMap.delete(value);\n            obliviousSet.set.delete(value);\n        }\n        else {\n            // We reached a value that is not old enough\n            return;\n        }\n    }\n}\nexport function now() {\n    return new Date().getTime();\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fillOptionsWithDefaults = fillOptionsWithDefaults;\n\nfunction fillOptionsWithDefaults() {\n  var originalOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var options = JSON.parse(JSON.stringify(originalOptions)); // main\n\n  if (typeof options.webWorkerSupport === 'undefined') options.webWorkerSupport = true; // indexed-db\n\n  if (!options.idb) options.idb = {}; //  after this time the messages get deleted\n\n  if (!options.idb.ttl) options.idb.ttl = 1000 * 45;\n  if (!options.idb.fallbackInterval) options.idb.fallbackInterval = 150; //  handles abrupt db onclose events.\n\n  if (originalOptions.idb && typeof originalOptions.idb.onclose === 'function') options.idb.onclose = originalOptions.idb.onclose; // localstorage\n\n  if (!options.localstorage) options.localstorage = {};\n  if (!options.localstorage.removeTimeout) options.localstorage.removeTimeout = 1000 * 60; // custom methods\n\n  if (originalOptions.methods) options.methods = originalOptions.methods; // node\n\n  if (!options.node) options.node = {};\n  if (!options.node.ttl) options.node.ttl = 1000 * 60 * 2; // 2 minutes;\n\n  /**\n   * On linux use 'ulimit -Hn' to get the limit of open files.\n   * On ubuntu this was 4096 for me, so we use half of that as maxParallelWrites default.\n   */\n\n  if (!options.node.maxParallelWrites) options.node.maxParallelWrites = 2048;\n  if (typeof options.node.useFastPath === 'undefined') options.node.useFastPath = true;\n  return options;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.averageResponseTime = averageResponseTime;\nexports.canBeUsed = canBeUsed;\nexports.cleanOldMessages = cleanOldMessages;\nexports.close = close;\nexports.create = create;\nexports.createDatabase = createDatabase;\nexports[\"default\"] = void 0;\nexports.getAllMessages = getAllMessages;\nexports.getIdb = getIdb;\nexports.getMessagesHigherThan = getMessagesHigherThan;\nexports.getOldMessages = getOldMessages;\nexports.microSeconds = void 0;\nexports.onMessage = onMessage;\nexports.postMessage = postMessage;\nexports.removeMessageById = removeMessageById;\nexports.type = void 0;\nexports.writeMessage = writeMessage;\n\nvar _util = require(\"../util.js\");\n\nvar _obliviousSet = require(\"oblivious-set\");\n\nvar _options = require(\"../options\");\n\n/**\n * this method uses indexeddb to store the messages\n * There is currently no observerAPI for idb\n * @link https://github.com/w3c/IndexedDB/issues/51\n */\nvar microSeconds = _util.microSeconds;\nexports.microSeconds = microSeconds;\nvar DB_PREFIX = 'pubkey.broadcast-channel-0-';\nvar OBJECT_STORE_ID = 'messages';\nvar type = 'idb';\nexports.type = type;\n\nfunction getIdb() {\n  if (typeof indexedDB !== 'undefined') return indexedDB;\n\n  if (typeof window !== 'undefined') {\n    if (typeof window.mozIndexedDB !== 'undefined') return window.mozIndexedDB;\n    if (typeof window.webkitIndexedDB !== 'undefined') return window.webkitIndexedDB;\n    if (typeof window.msIndexedDB !== 'undefined') return window.msIndexedDB;\n  }\n\n  return false;\n}\n\nfunction createDatabase(channelName) {\n  var IndexedDB = getIdb(); // create table\n\n  var dbName = DB_PREFIX + channelName;\n  var openRequest = IndexedDB.open(dbName, 1);\n\n  openRequest.onupgradeneeded = function (ev) {\n    var db = ev.target.result;\n    db.createObjectStore(OBJECT_STORE_ID, {\n      keyPath: 'id',\n      autoIncrement: true\n    });\n  };\n\n  var dbPromise = new Promise(function (res, rej) {\n    openRequest.onerror = function (ev) {\n      return rej(ev);\n    };\n\n    openRequest.onsuccess = function () {\n      res(openRequest.result);\n    };\n  });\n  return dbPromise;\n}\n/**\n * writes the new message to the database\n * so other readers can find it\n */\n\n\nfunction writeMessage(db, readerUuid, messageJson) {\n  var time = new Date().getTime();\n  var writeObject = {\n    uuid: readerUuid,\n    time: time,\n    data: messageJson\n  };\n  var transaction = db.transaction([OBJECT_STORE_ID], 'readwrite');\n  return new Promise(function (res, rej) {\n    transaction.oncomplete = function () {\n      return res();\n    };\n\n    transaction.onerror = function (ev) {\n      return rej(ev);\n    };\n\n    var objectStore = transaction.objectStore(OBJECT_STORE_ID);\n    objectStore.add(writeObject);\n  });\n}\n\nfunction getAllMessages(db) {\n  var objectStore = db.transaction(OBJECT_STORE_ID).objectStore(OBJECT_STORE_ID);\n  var ret = [];\n  return new Promise(function (res) {\n    objectStore.openCursor().onsuccess = function (ev) {\n      var cursor = ev.target.result;\n\n      if (cursor) {\n        ret.push(cursor.value); //alert(\"Name for SSN \" + cursor.key + \" is \" + cursor.value.name);\n\n        cursor[\"continue\"]();\n      } else {\n        res(ret);\n      }\n    };\n  });\n}\n\nfunction getMessagesHigherThan(db, lastCursorId) {\n  var objectStore = db.transaction(OBJECT_STORE_ID).objectStore(OBJECT_STORE_ID);\n  var ret = [];\n\n  function openCursor() {\n    // Occasionally Safari will fail on IDBKeyRange.bound, this\n    // catches that error, having it open the cursor to the first\n    // item. When it gets data it will advance to the desired key.\n    try {\n      var keyRangeValue = IDBKeyRange.bound(lastCursorId + 1, Infinity);\n      return objectStore.openCursor(keyRangeValue);\n    } catch (e) {\n      return objectStore.openCursor();\n    }\n  }\n\n  return new Promise(function (res) {\n    openCursor().onsuccess = function (ev) {\n      var cursor = ev.target.result;\n\n      if (cursor) {\n        if (cursor.value.id < lastCursorId + 1) {\n          cursor[\"continue\"](lastCursorId + 1);\n        } else {\n          ret.push(cursor.value);\n          cursor[\"continue\"]();\n        }\n      } else {\n        res(ret);\n      }\n    };\n  });\n}\n\nfunction removeMessageById(db, id) {\n  var request = db.transaction([OBJECT_STORE_ID], 'readwrite').objectStore(OBJECT_STORE_ID)[\"delete\"](id);\n  return new Promise(function (res) {\n    request.onsuccess = function () {\n      return res();\n    };\n  });\n}\n\nfunction getOldMessages(db, ttl) {\n  var olderThen = new Date().getTime() - ttl;\n  var objectStore = db.transaction(OBJECT_STORE_ID).objectStore(OBJECT_STORE_ID);\n  var ret = [];\n  return new Promise(function (res) {\n    objectStore.openCursor().onsuccess = function (ev) {\n      var cursor = ev.target.result;\n\n      if (cursor) {\n        var msgObk = cursor.value;\n\n        if (msgObk.time < olderThen) {\n          ret.push(msgObk); //alert(\"Name for SSN \" + cursor.key + \" is \" + cursor.value.name);\n\n          cursor[\"continue\"]();\n        } else {\n          // no more old messages,\n          res(ret);\n          return;\n        }\n      } else {\n        res(ret);\n      }\n    };\n  });\n}\n\nfunction cleanOldMessages(db, ttl) {\n  return getOldMessages(db, ttl).then(function (tooOld) {\n    return Promise.all(tooOld.map(function (msgObj) {\n      return removeMessageById(db, msgObj.id);\n    }));\n  });\n}\n\nfunction create(channelName, options) {\n  options = (0, _options.fillOptionsWithDefaults)(options);\n  return createDatabase(channelName).then(function (db) {\n    var state = {\n      closed: false,\n      lastCursorId: 0,\n      channelName: channelName,\n      options: options,\n      uuid: (0, _util.randomToken)(),\n\n      /**\n       * emittedMessagesIds\n       * contains all messages that have been emitted before\n       * @type {ObliviousSet}\n       */\n      eMIs: new _obliviousSet.ObliviousSet(options.idb.ttl * 2),\n      // ensures we do not read messages in parrallel\n      writeBlockPromise: _util.PROMISE_RESOLVED_VOID,\n      messagesCallback: null,\n      readQueuePromises: [],\n      db: db\n    };\n    /**\n     * Handle abrupt closes that do not originate from db.close().\n     * This could happen, for example, if the underlying storage is\n     * removed or if the user clears the database in the browser's\n     * history preferences.\n     */\n\n    db.onclose = function () {\n      state.closed = true;\n      if (options.idb.onclose) options.idb.onclose();\n    };\n    /**\n     * if service-workers are used,\n     * we have no 'storage'-event if they post a message,\n     * therefore we also have to set an interval\n     */\n\n\n    _readLoop(state);\n\n    return state;\n  });\n}\n\nfunction _readLoop(state) {\n  if (state.closed) return;\n  readNewMessages(state).then(function () {\n    return (0, _util.sleep)(state.options.idb.fallbackInterval);\n  }).then(function () {\n    return _readLoop(state);\n  });\n}\n\nfunction _filterMessage(msgObj, state) {\n  if (msgObj.uuid === state.uuid) return false; // send by own\n\n  if (state.eMIs.has(msgObj.id)) return false; // already emitted\n\n  if (msgObj.data.time < state.messagesCallbackTime) return false; // older then onMessageCallback\n\n  return true;\n}\n/**\n * reads all new messages from the database and emits them\n */\n\n\nfunction readNewMessages(state) {\n  // channel already closed\n  if (state.closed) return _util.PROMISE_RESOLVED_VOID; // if no one is listening, we do not need to scan for new messages\n\n  if (!state.messagesCallback) return _util.PROMISE_RESOLVED_VOID;\n  return getMessagesHigherThan(state.db, state.lastCursorId).then(function (newerMessages) {\n    var useMessages = newerMessages\n    /**\n     * there is a bug in iOS where the msgObj can be undefined some times\n     * so we filter them out\n     * @link https://github.com/pubkey/broadcast-channel/issues/19\n     */\n    .filter(function (msgObj) {\n      return !!msgObj;\n    }).map(function (msgObj) {\n      if (msgObj.id > state.lastCursorId) {\n        state.lastCursorId = msgObj.id;\n      }\n\n      return msgObj;\n    }).filter(function (msgObj) {\n      return _filterMessage(msgObj, state);\n    }).sort(function (msgObjA, msgObjB) {\n      return msgObjA.time - msgObjB.time;\n    }); // sort by time\n\n    useMessages.forEach(function (msgObj) {\n      if (state.messagesCallback) {\n        state.eMIs.add(msgObj.id);\n        state.messagesCallback(msgObj.data);\n      }\n    });\n    return _util.PROMISE_RESOLVED_VOID;\n  });\n}\n\nfunction close(channelState) {\n  channelState.closed = true;\n  channelState.db.close();\n}\n\nfunction postMessage(channelState, messageJson) {\n  channelState.writeBlockPromise = channelState.writeBlockPromise.then(function () {\n    return writeMessage(channelState.db, channelState.uuid, messageJson);\n  }).then(function () {\n    if ((0, _util.randomInt)(0, 10) === 0) {\n      /* await (do not await) */\n      cleanOldMessages(channelState.db, channelState.options.idb.ttl);\n    }\n  });\n  return channelState.writeBlockPromise;\n}\n\nfunction onMessage(channelState, fn, time) {\n  channelState.messagesCallbackTime = time;\n  channelState.messagesCallback = fn;\n  readNewMessages(channelState);\n}\n\nfunction canBeUsed() {\n  if (_util.isNode) return false;\n  var idb = getIdb();\n  if (!idb) return false;\n  return true;\n}\n\nfunction averageResponseTime(options) {\n  return options.idb.fallbackInterval * 2;\n}\n\nvar _default = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};\nexports[\"default\"] = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addStorageEventListener = addStorageEventListener;\nexports.averageResponseTime = averageResponseTime;\nexports.canBeUsed = canBeUsed;\nexports.close = close;\nexports.create = create;\nexports[\"default\"] = void 0;\nexports.getLocalStorage = getLocalStorage;\nexports.microSeconds = void 0;\nexports.onMessage = onMessage;\nexports.postMessage = postMessage;\nexports.removeStorageEventListener = removeStorageEventListener;\nexports.storageKey = storageKey;\nexports.type = void 0;\n\nvar _obliviousSet = require(\"oblivious-set\");\n\nvar _options = require(\"../options\");\n\nvar _util = require(\"../util\");\n\n/**\n * A localStorage-only method which uses localstorage and its 'storage'-event\n * This does not work inside of webworkers because they have no access to locastorage\n * This is basically implemented to support IE9 or your grandmothers toaster.\n * @link https://caniuse.com/#feat=namevalue-storage\n * @link https://caniuse.com/#feat=indexeddb\n */\nvar microSeconds = _util.microSeconds;\nexports.microSeconds = microSeconds;\nvar KEY_PREFIX = 'pubkey.broadcastChannel-';\nvar type = 'localstorage';\n/**\n * copied from crosstab\n * @link https://github.com/tejacques/crosstab/blob/master/src/crosstab.js#L32\n */\n\nexports.type = type;\n\nfunction getLocalStorage() {\n  var localStorage;\n  if (typeof window === 'undefined') return null;\n\n  try {\n    localStorage = window.localStorage;\n    localStorage = window['ie8-eventlistener/storage'] || window.localStorage;\n  } catch (e) {// New versions of Firefox throw a Security exception\n    // if cookies are disabled. See\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1028153\n  }\n\n  return localStorage;\n}\n\nfunction storageKey(channelName) {\n  return KEY_PREFIX + channelName;\n}\n/**\n* writes the new message to the storage\n* and fires the storage-event so other readers can find it\n*/\n\n\nfunction postMessage(channelState, messageJson) {\n  return new Promise(function (res) {\n    (0, _util.sleep)().then(function () {\n      var key = storageKey(channelState.channelName);\n      var writeObj = {\n        token: (0, _util.randomToken)(),\n        time: new Date().getTime(),\n        data: messageJson,\n        uuid: channelState.uuid\n      };\n      var value = JSON.stringify(writeObj);\n      getLocalStorage().setItem(key, value);\n      /**\n       * StorageEvent does not fire the 'storage' event\n       * in the window that changes the state of the local storage.\n       * So we fire it manually\n       */\n\n      var ev = document.createEvent('Event');\n      ev.initEvent('storage', true, true);\n      ev.key = key;\n      ev.newValue = value;\n      window.dispatchEvent(ev);\n      res();\n    });\n  });\n}\n\nfunction addStorageEventListener(channelName, fn) {\n  var key = storageKey(channelName);\n\n  var listener = function listener(ev) {\n    if (ev.key === key) {\n      fn(JSON.parse(ev.newValue));\n    }\n  };\n\n  window.addEventListener('storage', listener);\n  return listener;\n}\n\nfunction removeStorageEventListener(listener) {\n  window.removeEventListener('storage', listener);\n}\n\nfunction create(channelName, options) {\n  options = (0, _options.fillOptionsWithDefaults)(options);\n\n  if (!canBeUsed()) {\n    throw new Error('BroadcastChannel: localstorage cannot be used');\n  }\n\n  var uuid = (0, _util.randomToken)();\n  /**\n   * eMIs\n   * contains all messages that have been emitted before\n   * @type {ObliviousSet}\n   */\n\n  var eMIs = new _obliviousSet.ObliviousSet(options.localstorage.removeTimeout);\n  var state = {\n    channelName: channelName,\n    uuid: uuid,\n    eMIs: eMIs // emittedMessagesIds\n\n  };\n  state.listener = addStorageEventListener(channelName, function (msgObj) {\n    if (!state.messagesCallback) return; // no listener\n\n    if (msgObj.uuid === uuid) return; // own message\n\n    if (!msgObj.token || eMIs.has(msgObj.token)) return; // already emitted\n\n    if (msgObj.data.time && msgObj.data.time < state.messagesCallbackTime) return; // too old\n\n    eMIs.add(msgObj.token);\n    state.messagesCallback(msgObj.data);\n  });\n  return state;\n}\n\nfunction close(channelState) {\n  removeStorageEventListener(channelState.listener);\n}\n\nfunction onMessage(channelState, fn, time) {\n  channelState.messagesCallbackTime = time;\n  channelState.messagesCallback = fn;\n}\n\nfunction canBeUsed() {\n  if (_util.isNode) return false;\n  var ls = getLocalStorage();\n  if (!ls) return false;\n\n  try {\n    var key = '__broadcastchannel_check';\n    ls.setItem(key, 'works');\n    ls.removeItem(key);\n  } catch (e) {\n    // Safari 10 in private mode will not allow write access to local\n    // storage and fail with a QuotaExceededError. See\n    // https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API#Private_Browsing_Incognito_modes\n    return false;\n  }\n\n  return true;\n}\n\nfunction averageResponseTime() {\n  var defaultTime = 120;\n  var userAgent = navigator.userAgent.toLowerCase();\n\n  if (userAgent.includes('safari') && !userAgent.includes('chrome')) {\n    // safari is much slower so this time is higher\n    return defaultTime * 2;\n  }\n\n  return defaultTime;\n}\n\nvar _default = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};\nexports[\"default\"] = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.averageResponseTime = averageResponseTime;\nexports.canBeUsed = canBeUsed;\nexports.close = close;\nexports.create = create;\nexports.microSeconds = exports[\"default\"] = void 0;\nexports.onMessage = onMessage;\nexports.postMessage = postMessage;\nexports.type = void 0;\n\nvar _util = require(\"../util\");\n\nvar microSeconds = _util.microSeconds;\nexports.microSeconds = microSeconds;\nvar type = 'simulate';\nexports.type = type;\nvar SIMULATE_CHANNELS = new Set();\n\nfunction create(channelName) {\n  var state = {\n    name: channelName,\n    messagesCallback: null\n  };\n  SIMULATE_CHANNELS.add(state);\n  return state;\n}\n\nfunction close(channelState) {\n  SIMULATE_CHANNELS[\"delete\"](channelState);\n}\n\nfunction postMessage(channelState, messageJson) {\n  return new Promise(function (res) {\n    return setTimeout(function () {\n      var channelArray = Array.from(SIMULATE_CHANNELS);\n      channelArray.filter(function (channel) {\n        return channel.name === channelState.name;\n      }).filter(function (channel) {\n        return channel !== channelState;\n      }).filter(function (channel) {\n        return !!channel.messagesCallback;\n      }).forEach(function (channel) {\n        return channel.messagesCallback(messageJson);\n      });\n      res();\n    }, 5);\n  });\n}\n\nfunction onMessage(channelState, fn) {\n  channelState.messagesCallback = fn;\n}\n\nfunction canBeUsed() {\n  return true;\n}\n\nfunction averageResponseTime() {\n  return 5;\n}\n\nvar _default = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};\nexports[\"default\"] = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.chooseMethod = chooseMethod;\n\nvar _native = _interopRequireDefault(require(\"./methods/native.js\"));\n\nvar _indexedDb = _interopRequireDefault(require(\"./methods/indexed-db.js\"));\n\nvar _localstorage = _interopRequireDefault(require(\"./methods/localstorage.js\"));\n\nvar _simulate = _interopRequireDefault(require(\"./methods/simulate.js\"));\n\n\n\nvar _util = require(\"./util\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n// the line below will be removed from es5/browser builds\n// order is important\nvar METHODS = [_native[\"default\"], // fastest\n_indexedDb[\"default\"], _localstorage[\"default\"]];\n\nfunction chooseMethod(options) {\n  var chooseMethods = [].concat(options.methods, METHODS).filter(Boolean); // the line below will be removed from es5/browser builds\n\n\n\n  if (options.type) {\n    if (options.type === 'simulate') {\n      // only use simulate-method if directly chosen\n      return _simulate[\"default\"];\n    }\n\n    var ret = chooseMethods.find(function (m) {\n      return m.type === options.type;\n    });\n    if (!ret) throw new Error('method-type ' + options.type + ' not found');else return ret;\n  }\n  /**\n   * if no webworker support is needed,\n   * remove idb from the list so that localstorage is been chosen\n   */\n\n\n  if (!options.webWorkerSupport && !_util.isNode) {\n    chooseMethods = chooseMethods.filter(function (m) {\n      return m.type !== 'idb';\n    });\n  }\n\n  var useMethod = chooseMethods.find(function (method) {\n    return method.canBeUsed();\n  });\n  if (!useMethod) throw new Error(\"No useable method found in \" + JSON.stringify(METHODS.map(function (m) {\n    return m.type;\n  })));else return useMethod;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OPEN_BROADCAST_CHANNELS = exports.BroadcastChannel = void 0;\nexports.clearNodeFolder = clearNodeFolder;\nexports.enforceOptions = enforceOptions;\n\nvar _util = require(\"./util.js\");\n\nvar _methodChooser = require(\"./method-chooser.js\");\n\nvar _options = require(\"./options.js\");\n\n/**\n * Contains all open channels,\n * used in tests to ensure everything is closed.\n */\nvar OPEN_BROADCAST_CHANNELS = new Set();\nexports.OPEN_BROADCAST_CHANNELS = OPEN_BROADCAST_CHANNELS;\nvar lastId = 0;\n\nvar BroadcastChannel = function BroadcastChannel(name, options) {\n  // identifier of the channel to debug stuff\n  this.id = lastId++;\n  OPEN_BROADCAST_CHANNELS.add(this);\n  this.name = name;\n\n  if (ENFORCED_OPTIONS) {\n    options = ENFORCED_OPTIONS;\n  }\n\n  this.options = (0, _options.fillOptionsWithDefaults)(options);\n  this.method = (0, _methodChooser.chooseMethod)(this.options); // isListening\n\n  this._iL = false;\n  /**\n   * _onMessageListener\n   * setting onmessage twice,\n   * will overwrite the first listener\n   */\n\n  this._onML = null;\n  /**\n   * _addEventListeners\n   */\n\n  this._addEL = {\n    message: [],\n    internal: []\n  };\n  /**\n   * Unsend message promises\n   * where the sending is still in progress\n   * @type {Set<Promise>}\n   */\n\n  this._uMP = new Set();\n  /**\n   * _beforeClose\n   * array of promises that will be awaited\n   * before the channel is closed\n   */\n\n  this._befC = [];\n  /**\n   * _preparePromise\n   */\n\n  this._prepP = null;\n\n  _prepareChannel(this);\n}; // STATICS\n\n/**\n * used to identify if someone overwrites\n * window.BroadcastChannel with this\n * See methods/native.js\n */\n\n\nexports.BroadcastChannel = BroadcastChannel;\nBroadcastChannel._pubkey = true;\n/**\n * clears the tmp-folder if is node\n * @return {Promise<boolean>} true if has run, false if not node\n */\n\nfunction clearNodeFolder(options) {\n  options = (0, _options.fillOptionsWithDefaults)(options);\n  var method = (0, _methodChooser.chooseMethod)(options);\n\n  if (method.type === 'node') {\n    return method.clearNodeFolder().then(function () {\n      return true;\n    });\n  } else {\n    return _util.PROMISE_RESOLVED_FALSE;\n  }\n}\n/**\n * if set, this method is enforced,\n * no mather what the options are\n */\n\n\nvar ENFORCED_OPTIONS;\n\nfunction enforceOptions(options) {\n  ENFORCED_OPTIONS = options;\n} // PROTOTYPE\n\n\nBroadcastChannel.prototype = {\n  postMessage: function postMessage(msg) {\n    if (this.closed) {\n      throw new Error('BroadcastChannel.postMessage(): ' + 'Cannot post message after channel has closed');\n    }\n\n    return _post(this, 'message', msg);\n  },\n  postInternal: function postInternal(msg) {\n    return _post(this, 'internal', msg);\n  },\n\n  set onmessage(fn) {\n    var time = this.method.microSeconds();\n    var listenObj = {\n      time: time,\n      fn: fn\n    };\n\n    _removeListenerObject(this, 'message', this._onML);\n\n    if (fn && typeof fn === 'function') {\n      this._onML = listenObj;\n\n      _addListenerObject(this, 'message', listenObj);\n    } else {\n      this._onML = null;\n    }\n  },\n\n  addEventListener: function addEventListener(type, fn) {\n    var time = this.method.microSeconds();\n    var listenObj = {\n      time: time,\n      fn: fn\n    };\n\n    _addListenerObject(this, type, listenObj);\n  },\n  removeEventListener: function removeEventListener(type, fn) {\n    var obj = this._addEL[type].find(function (obj) {\n      return obj.fn === fn;\n    });\n\n    _removeListenerObject(this, type, obj);\n  },\n  close: function close() {\n    var _this = this;\n\n    if (this.closed) {\n      return;\n    }\n\n    OPEN_BROADCAST_CHANNELS[\"delete\"](this);\n    this.closed = true;\n    var awaitPrepare = this._prepP ? this._prepP : _util.PROMISE_RESOLVED_VOID;\n    this._onML = null;\n    this._addEL.message = [];\n    return awaitPrepare // wait until all current sending are processed\n    .then(function () {\n      return Promise.all(Array.from(_this._uMP));\n    }) // run before-close hooks\n    .then(function () {\n      return Promise.all(_this._befC.map(function (fn) {\n        return fn();\n      }));\n    }) // close the channel\n    .then(function () {\n      return _this.method.close(_this._state);\n    });\n  },\n\n  get type() {\n    return this.method.type;\n  },\n\n  get isClosed() {\n    return this.closed;\n  }\n\n};\n/**\n * Post a message over the channel\n * @returns {Promise} that resolved when the message sending is done\n */\n\nfunction _post(broadcastChannel, type, msg) {\n  var time = broadcastChannel.method.microSeconds();\n  var msgObj = {\n    time: time,\n    type: type,\n    data: msg\n  };\n  var awaitPrepare = broadcastChannel._prepP ? broadcastChannel._prepP : _util.PROMISE_RESOLVED_VOID;\n  return awaitPrepare.then(function () {\n    var sendPromise = broadcastChannel.method.postMessage(broadcastChannel._state, msgObj); // add/remove to unsend messages list\n\n    broadcastChannel._uMP.add(sendPromise);\n\n    sendPromise[\"catch\"]().then(function () {\n      return broadcastChannel._uMP[\"delete\"](sendPromise);\n    });\n    return sendPromise;\n  });\n}\n\nfunction _prepareChannel(channel) {\n  var maybePromise = channel.method.create(channel.name, channel.options);\n\n  if ((0, _util.isPromise)(maybePromise)) {\n    channel._prepP = maybePromise;\n    maybePromise.then(function (s) {\n      // used in tests to simulate slow runtime\n\n      /*if (channel.options.prepareDelay) {\n           await new Promise(res => setTimeout(res, this.options.prepareDelay));\n      }*/\n      channel._state = s;\n    });\n  } else {\n    channel._state = maybePromise;\n  }\n}\n\nfunction _hasMessageListeners(channel) {\n  if (channel._addEL.message.length > 0) return true;\n  if (channel._addEL.internal.length > 0) return true;\n  return false;\n}\n\nfunction _addListenerObject(channel, type, obj) {\n  channel._addEL[type].push(obj);\n\n  _startListening(channel);\n}\n\nfunction _removeListenerObject(channel, type, obj) {\n  channel._addEL[type] = channel._addEL[type].filter(function (o) {\n    return o !== obj;\n  });\n\n  _stopListening(channel);\n}\n\nfunction _startListening(channel) {\n  if (!channel._iL && _hasMessageListeners(channel)) {\n    // someone is listening, start subscribing\n    var listenerFn = function listenerFn(msgObj) {\n      channel._addEL[msgObj.type].forEach(function (listenerObject) {\n        /**\n         * Getting the current time in JavaScript has no good precision.\n         * So instead of only listening to events that happend 'after' the listener\n         * was added, we also listen to events that happended 100ms before it.\n         * This ensures that when another process, like a WebWorker, sends events\n         * we do not miss them out because their timestamp is a bit off compared to the main process.\n         * Not doing this would make messages missing when we send data directly after subscribing and awaiting a response.\n         * @link https://johnresig.com/blog/accuracy-of-javascript-time/\n         */\n        var hundredMsInMicro = 100 * 1000;\n        var minMessageTime = listenerObject.time - hundredMsInMicro;\n\n        if (msgObj.time >= minMessageTime) {\n          listenerObject.fn(msgObj.data);\n        }\n      });\n    };\n\n    var time = channel.method.microSeconds();\n\n    if (channel._prepP) {\n      channel._prepP.then(function () {\n        channel._iL = true;\n        channel.method.onMessage(channel._state, listenerFn, time);\n      });\n    } else {\n      channel._iL = true;\n      channel.method.onMessage(channel._state, listenerFn, time);\n    }\n  }\n}\n\nfunction _stopListening(channel) {\n  if (channel._iL && !_hasMessageListeners(channel)) {\n    // noone is listening, stop subscribing\n    channel._iL = false;\n    var time = channel.method.microSeconds();\n    channel.method.onMessage(channel._state, null, time);\n  }\n}","// set to true to log events\nvar DEBUG = false;\n\nfunction add(fn) {\n  process.on('exit', function () {\n    DEBUG && console.log('node: exit');\n    return fn();\n  });\n  /**\n   * on the following events,\n   * the process will not end if there are\n   * event-handlers attached,\n   * therefore we have to call process.exit()\n   */\n\n  process.on('beforeExit', function () {\n    DEBUG && console.log('node: beforeExit');\n    return fn().then(function () {\n      return process.exit();\n    });\n  }); // catches ctrl+c event\n\n  process.on('SIGINT', function () {\n    DEBUG && console.log('node: SIGNINT');\n    return fn().then(function () {\n      return process.exit();\n    });\n  }); // catches uncaught exceptions\n\n  process.on('uncaughtException', function (err) {\n    DEBUG && console.log('node: uncaughtException');\n    return fn().then(function () {\n      console.trace(err);\n      process.exit(1);\n    });\n  });\n}\n\nexport default {\n  add: add\n};","import isNode from 'detect-node';\nimport BrowserMethod from './browser.js';\nimport NodeMethod from './node.js';\nvar USE_METHOD = isNode ? NodeMethod : BrowserMethod;\nvar LISTENERS = new Set();\nvar startedListening = false;\n\nfunction startListening() {\n  if (startedListening) return;\n  startedListening = true;\n  USE_METHOD.add(runAll);\n}\n\nexport function add(fn) {\n  startListening();\n  if (typeof fn !== 'function') throw new Error('Listener is no function');\n  LISTENERS.add(fn);\n  var addReturn = {\n    remove: function remove() {\n      return LISTENERS[\"delete\"](fn);\n    },\n    run: function run() {\n      LISTENERS[\"delete\"](fn);\n      return fn();\n    }\n  };\n  return addReturn;\n}\nexport function runAll() {\n  var promises = [];\n  LISTENERS.forEach(function (fn) {\n    promises.push(fn());\n    LISTENERS[\"delete\"](fn);\n  });\n  return Promise.all(promises);\n}\nexport function removeAll() {\n  LISTENERS.clear();\n}\nexport function getSize() {\n  return LISTENERS.size;\n}","// Only Node.JS has a process variable that is of [[Class]] process\nexport default Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\n","/* global WorkerGlobalScope */\nfunction add(fn) {\n  if (typeof WorkerGlobalScope === 'function' && self instanceof WorkerGlobalScope) {// this is run inside of a webworker\n  } else {\n    /**\n     * if we are on react-native, there is no window.addEventListener\n     * @link https://github.com/pubkey/unload/issues/6\n     */\n    if (typeof window.addEventListener !== 'function') return;\n    /**\n     * for normal browser-windows, we use the beforeunload-event\n     */\n\n    window.addEventListener('beforeunload', function () {\n      fn();\n    }, true);\n    /**\n     * for iframes, we have to use the unload-event\n     * @link https://stackoverflow.com/q/47533670/3443137\n     */\n\n    window.addEventListener('unload', function () {\n      fn();\n    }, true);\n  }\n  /**\n   * TODO add fallback for safari-mobile\n   * @link https://stackoverflow.com/a/26193516/3443137\n   */\n\n}\n\nexport default {\n  add: add\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.beLeader = beLeader;\nexports.createLeaderElection = createLeaderElection;\n\nvar _util = require(\"./util.js\");\n\nvar _unload = require(\"unload\");\n\nvar LeaderElection = function LeaderElection(broadcastChannel, options) {\n  var _this = this;\n\n  this.broadcastChannel = broadcastChannel;\n  this._options = options;\n  this.isLeader = false;\n  this.hasLeader = false;\n  this.isDead = false;\n  this.token = (0, _util.randomToken)();\n  /**\n   * Apply Queue,\n   * used to ensure we do not run applyOnce()\n   * in parallel.\n   */\n\n  this._aplQ = _util.PROMISE_RESOLVED_VOID; // amount of unfinished applyOnce() calls\n\n  this._aplQC = 0; // things to clean up\n\n  this._unl = []; // _unloads\n\n  this._lstns = []; // _listeners\n\n  this._dpL = function () {}; // onduplicate listener\n\n\n  this._dpLC = false; // true when onduplicate called\n\n  /**\n   * Even when the own instance is not applying,\n   * we still listen to messages to ensure the hasLeader flag\n   * is set correctly.\n   */\n\n  var hasLeaderListener = function hasLeaderListener(msg) {\n    if (msg.context === 'leader') {\n      if (msg.action === 'death') {\n        _this.hasLeader = false;\n      }\n\n      if (msg.action === 'tell') {\n        _this.hasLeader = true;\n      }\n    }\n  };\n\n  this.broadcastChannel.addEventListener('internal', hasLeaderListener);\n\n  this._lstns.push(hasLeaderListener);\n};\n\nLeaderElection.prototype = {\n  /**\n   * Returns true if the instance is leader,\n   * false if not.\n   * @async\n   */\n  applyOnce: function applyOnce( // true if the applyOnce() call came from the fallbackInterval cycle\n  isFromFallbackInterval) {\n    var _this2 = this;\n\n    if (this.isLeader) {\n      return (0, _util.sleep)(0, true);\n    }\n\n    if (this.isDead) {\n      return (0, _util.sleep)(0, false);\n    }\n    /**\n     * Already applying more then once,\n     * -> wait for the apply queue to be finished.\n     */\n\n\n    if (this._aplQC > 1) {\n      return this._aplQ;\n    }\n    /**\n     * Add a new apply-run\n     */\n\n\n    var applyRun = function applyRun() {\n      /**\n       * Optimization shortcuts.\n       * Directly return if a previous run\n       * has already elected a leader.\n       */\n      if (_this2.isLeader) {\n        return _util.PROMISE_RESOLVED_TRUE;\n      }\n\n      var stopCriteria = false;\n      var stopCriteriaPromiseResolve;\n      /**\n       * Resolves when a stop criteria is reached.\n       * Uses as a performance shortcut so we do not\n       * have to await the responseTime when it is already clear\n       * that the election failed.\n       */\n\n      var stopCriteriaPromise = new Promise(function (res) {\n        stopCriteriaPromiseResolve = function stopCriteriaPromiseResolve() {\n          stopCriteria = true;\n          res();\n        };\n      });\n      var recieved = [];\n\n      var handleMessage = function handleMessage(msg) {\n        if (msg.context === 'leader' && msg.token != _this2.token) {\n          recieved.push(msg);\n\n          if (msg.action === 'apply') {\n            // other is applying\n            if (msg.token > _this2.token) {\n              /**\n               * other has higher token\n               * -> stop applying and let other become leader.\n               */\n              stopCriteriaPromiseResolve();\n            }\n          }\n\n          if (msg.action === 'tell') {\n            // other is already leader\n            stopCriteriaPromiseResolve();\n            _this2.hasLeader = true;\n          }\n        }\n      };\n\n      _this2.broadcastChannel.addEventListener('internal', handleMessage);\n      /**\n       * If the applyOnce() call came from the fallbackInterval,\n       * we can assume that the election runs in the background and\n       * not critical process is waiting for it.\n       * When this is true, we give the other intances\n       * more time to answer to messages in the election cycle.\n       * This makes it less likely to elect duplicate leaders.\n       * But also it takes longer which is not a problem because we anyway\n       * run in the background.\n       */\n\n\n      var waitForAnswerTime = isFromFallbackInterval ? _this2._options.responseTime * 4 : _this2._options.responseTime;\n\n      var applyPromise = _sendMessage(_this2, 'apply') // send out that this one is applying\n      .then(function () {\n        return Promise.race([(0, _util.sleep)(waitForAnswerTime), stopCriteriaPromise.then(function () {\n          return Promise.reject(new Error());\n        })]);\n      }) // send again in case another instance was just created\n      .then(function () {\n        return _sendMessage(_this2, 'apply');\n      }) // let others time to respond\n      .then(function () {\n        return Promise.race([(0, _util.sleep)(waitForAnswerTime), stopCriteriaPromise.then(function () {\n          return Promise.reject(new Error());\n        })]);\n      })[\"catch\"](function () {}).then(function () {\n        _this2.broadcastChannel.removeEventListener('internal', handleMessage);\n\n        if (!stopCriteria) {\n          // no stop criteria -> own is leader\n          return beLeader(_this2).then(function () {\n            return true;\n          });\n        } else {\n          // other is leader\n          return false;\n        }\n      });\n\n      return applyPromise;\n    };\n\n    this._aplQC = this._aplQC + 1;\n    this._aplQ = this._aplQ.then(function () {\n      return applyRun();\n    }).then(function () {\n      _this2._aplQC = _this2._aplQC - 1;\n    });\n    return this._aplQ.then(function () {\n      return _this2.isLeader;\n    });\n  },\n  awaitLeadership: function awaitLeadership() {\n    if (\n    /* _awaitLeadershipPromise */\n    !this._aLP) {\n      this._aLP = _awaitLeadershipOnce(this);\n    }\n\n    return this._aLP;\n  },\n\n  set onduplicate(fn) {\n    this._dpL = fn;\n  },\n\n  die: function die() {\n    var _this3 = this;\n\n    this._lstns.forEach(function (listener) {\n      return _this3.broadcastChannel.removeEventListener('internal', listener);\n    });\n\n    this._lstns = [];\n\n    this._unl.forEach(function (uFn) {\n      return uFn.remove();\n    });\n\n    this._unl = [];\n\n    if (this.isLeader) {\n      this.hasLeader = false;\n      this.isLeader = false;\n    }\n\n    this.isDead = true;\n    return _sendMessage(this, 'death');\n  }\n};\n/**\n * @param leaderElector {LeaderElector}\n */\n\nfunction _awaitLeadershipOnce(leaderElector) {\n  if (leaderElector.isLeader) {\n    return _util.PROMISE_RESOLVED_VOID;\n  }\n\n  return new Promise(function (res) {\n    var resolved = false;\n\n    function finish() {\n      if (resolved) {\n        return;\n      }\n\n      resolved = true;\n      leaderElector.broadcastChannel.removeEventListener('internal', whenDeathListener);\n      res(true);\n    } // try once now\n\n\n    leaderElector.applyOnce().then(function () {\n      if (leaderElector.isLeader) {\n        finish();\n      }\n    });\n    /**\n     * Try on fallbackInterval\n     * @recursive\n     */\n\n    var tryOnFallBack = function tryOnFallBack() {\n      return (0, _util.sleep)(leaderElector._options.fallbackInterval).then(function () {\n        if (leaderElector.isDead || resolved) {\n          return;\n        }\n\n        if (leaderElector.isLeader) {\n          finish();\n        } else {\n          return leaderElector.applyOnce(true).then(function () {\n            if (leaderElector.isLeader) {\n              finish();\n            } else {\n              tryOnFallBack();\n            }\n          });\n        }\n      });\n    };\n\n    tryOnFallBack(); // try when other leader dies\n\n    var whenDeathListener = function whenDeathListener(msg) {\n      if (msg.context === 'leader' && msg.action === 'death') {\n        leaderElector.hasLeader = false;\n        leaderElector.applyOnce().then(function () {\n          if (leaderElector.isLeader) {\n            finish();\n          }\n        });\n      }\n    };\n\n    leaderElector.broadcastChannel.addEventListener('internal', whenDeathListener);\n\n    leaderElector._lstns.push(whenDeathListener);\n  });\n}\n/**\n * sends and internal message over the broadcast-channel\n */\n\n\nfunction _sendMessage(leaderElector, action) {\n  var msgJson = {\n    context: 'leader',\n    action: action,\n    token: leaderElector.token\n  };\n  return leaderElector.broadcastChannel.postInternal(msgJson);\n}\n\nfunction beLeader(leaderElector) {\n  leaderElector.isLeader = true;\n  leaderElector.hasLeader = true;\n  var unloadFn = (0, _unload.add)(function () {\n    return leaderElector.die();\n  });\n\n  leaderElector._unl.push(unloadFn);\n\n  var isLeaderListener = function isLeaderListener(msg) {\n    if (msg.context === 'leader' && msg.action === 'apply') {\n      _sendMessage(leaderElector, 'tell');\n    }\n\n    if (msg.context === 'leader' && msg.action === 'tell' && !leaderElector._dpLC) {\n      /**\n       * another instance is also leader!\n       * This can happen on rare events\n       * like when the CPU is at 100% for long time\n       * or the tabs are open very long and the browser throttles them.\n       * @link https://github.com/pubkey/broadcast-channel/issues/414\n       * @link https://github.com/pubkey/broadcast-channel/issues/385\n       */\n      leaderElector._dpLC = true;\n\n      leaderElector._dpL(); // message the lib user so the app can handle the problem\n\n\n      _sendMessage(leaderElector, 'tell'); // ensure other leader also knows the problem\n\n    }\n  };\n\n  leaderElector.broadcastChannel.addEventListener('internal', isLeaderListener);\n\n  leaderElector._lstns.push(isLeaderListener);\n\n  return _sendMessage(leaderElector, 'tell');\n}\n\nfunction fillOptionsWithDefaults(options, channel) {\n  if (!options) options = {};\n  options = JSON.parse(JSON.stringify(options));\n\n  if (!options.fallbackInterval) {\n    options.fallbackInterval = 3000;\n  }\n\n  if (!options.responseTime) {\n    options.responseTime = channel.method.averageResponseTime(channel.options);\n  }\n\n  return options;\n}\n\nfunction createLeaderElection(channel, options) {\n  if (channel._leaderElector) {\n    throw new Error('BroadcastChannel already has a leader-elector');\n  }\n\n  options = fillOptionsWithDefaults(options, channel);\n  var elector = new LeaderElection(channel, options);\n\n  channel._befC.push(function () {\n    return elector.die();\n  });\n\n  channel._leaderElector = elector;\n  return elector;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"BroadcastChannel\", {\n  enumerable: true,\n  get: function get() {\n    return _broadcastChannel.BroadcastChannel;\n  }\n});\nObject.defineProperty(exports, \"OPEN_BROADCAST_CHANNELS\", {\n  enumerable: true,\n  get: function get() {\n    return _broadcastChannel.OPEN_BROADCAST_CHANNELS;\n  }\n});\nObject.defineProperty(exports, \"beLeader\", {\n  enumerable: true,\n  get: function get() {\n    return _leaderElection.beLeader;\n  }\n});\nObject.defineProperty(exports, \"clearNodeFolder\", {\n  enumerable: true,\n  get: function get() {\n    return _broadcastChannel.clearNodeFolder;\n  }\n});\nObject.defineProperty(exports, \"createLeaderElection\", {\n  enumerable: true,\n  get: function get() {\n    return _leaderElection.createLeaderElection;\n  }\n});\nObject.defineProperty(exports, \"enforceOptions\", {\n  enumerable: true,\n  get: function get() {\n    return _broadcastChannel.enforceOptions;\n  }\n});\n\nvar _broadcastChannel = require(\"./broadcast-channel\");\n\nvar _leaderElection = require(\"./leader-election\");","\"use strict\";\n\nvar _index = require(\"./index.js\");\n\n/**\n * because babel can only export on default-attribute,\n * we use this for the non-module-build\n * this ensures that users do not have to use\n * var BroadcastChannel = require('broadcast-channel').default;\n * but\n * var BroadcastChannel = require('broadcast-channel');\n */\nmodule.exports = {\n  BroadcastChannel: _index.BroadcastChannel,\n  createLeaderElection: _index.createLeaderElection,\n  clearNodeFolder: _index.clearNodeFolder,\n  enforceOptions: _index.enforceOptions,\n  beLeader: _index.beLeader\n};","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { IOC } from \"@airport/direction-indicator\";\nimport { TERMINAL_STORE } from \"@airport/terminal-map\";\nimport { BroadcastChannel as SoftBroadcastChannel } from '../node_modules/broadcast-channel/dist/lib/index.es5';\nlet WebMesageReceiver = class WebMesageReceiver {\n    init() {\n        this.isNativeBroadcastChannel = typeof BroadcastChannel === 'function';\n        const createChannel = () => {\n            this.communicationChannel = new SoftBroadcastChannel('clientCommunication', {\n                idb: {\n                    onclose: () => {\n                        // the onclose event is just the IndexedDB closing.\n                        // you should also close the channel before creating\n                        // a new one.\n                        this.communicationChannel.close();\n                        createChannel();\n                    },\n                },\n            });\n            this.communicationChannel.onmessage = (message) => {\n                this.transactionalReceiver.handleClientRequest(message);\n            };\n        };\n        createChannel();\n        window.addEventListener(\"message\", event => {\n            const message = event.data;\n            this.transactionalReceiver.handleAppRequest(message, event.origin, event.source);\n        }, false);\n    }\n    needMessageSerialization() {\n        return !this.isNativeBroadcastChannel;\n    }\n    sendMessageToClient(message) {\n        this.communicationChannel.postMessage(message);\n    }\n    sendMessageToApp() {\n    }\n};\n__decorate([\n    Inject()\n], WebMesageReceiver.prototype, \"transactionalReceiver\", void 0);\nWebMesageReceiver = __decorate([\n    Injected()\n], WebMesageReceiver);\nexport { WebMesageReceiver };\nexport function injectWebReceiver() {\n    const terminalStore = IOC.getSync(TERMINAL_STORE);\n    const webReciever = terminalStore.getWebReceiver();\n    webReciever.localDomain = 'localhost:31717';\n}\n//# sourceMappingURL=WebMessageReceiver.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nlet DomainRetriever = class DomainRetriever {\n    async retrieveDomain(domainName, domainNameMapByName, allDomains, newDomains) {\n        return domainNameMapByName.get(domainName);\n    }\n};\nDomainRetriever = __decorate([\n    Injected()\n], DomainRetriever);\nexport { DomainRetriever };\n//# sourceMappingURL=DomainRetriever.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { EntityRelationType, QueryType, } from '@airport/ground-control';\nlet SqlSchemaBuilder = class SqlSchemaBuilder {\n    async build(jsonApplication, existingApplicationMap, newJsonApplicationMap, context) {\n        await this.createApplication(jsonApplication, context);\n        for (const jsonEntity of jsonApplication.versions[jsonApplication.versions.length - 1].entities) {\n            await this.buildTable(jsonApplication, jsonEntity, existingApplicationMap, context);\n        }\n        const relatedJsonApplicationMap = new Map();\n        for (const jsonEntity of jsonApplication.versions[jsonApplication.versions.length - 1].entities) {\n            await this.buildForeignKeys(jsonApplication, jsonEntity, existingApplicationMap, newJsonApplicationMap, relatedJsonApplicationMap, context);\n        }\n    }\n    async buildTable(jsonApplication, jsonEntity, existingApplicationMap, context) {\n        const primaryKeyColumnNames = [];\n        const tableColumnsDdl = jsonEntity.columns.map((jsonColumn) => {\n            let columnDdl = `${jsonColumn.name} ${this.getColumnSuffix(jsonApplication, jsonEntity, jsonColumn)}`;\n            if (this.isPrimaryKeyColumn(jsonEntity, jsonColumn)) {\n                primaryKeyColumnNames.push(jsonColumn.name);\n            }\n            return columnDdl;\n        });\n        const createTableSuffix = this.getCreateTableSuffix(jsonApplication, jsonEntity);\n        const tableName = this.storeDriver.getTableName(jsonApplication, jsonEntity, context);\n        let primaryKeySubStatement = ``;\n        if (primaryKeyColumnNames.length) {\n            primaryKeySubStatement = this.getPrimaryKeyStatement(primaryKeyColumnNames);\n        }\n        const createTableDdl = `CREATE TABLE ${tableName} (\r\n\t\t${tableColumnsDdl.join(',\\n')}${primaryKeySubStatement}\r\n\t\t)${createTableSuffix}`;\n        await this.storeDriver.query(QueryType.DDL, createTableDdl, [], context, false);\n        let indexNumber = 0;\n        if (jsonEntity.tableConfig.columnIndexes) {\n            for (const indexConfig of jsonEntity.tableConfig.columnIndexes) {\n                const createIndexDdl = this.getIndexSql('idx_' + tableName + '_' + (++indexNumber), tableName, indexConfig.columnList, indexConfig.unique);\n                await this.storeDriver.query(QueryType.DDL, createIndexDdl, [], context, false);\n            }\n        }\n        if (jsonEntity.tableConfig.propertyIndexes) {\n            for (const indexConfig of jsonEntity.tableConfig.propertyIndexes) {\n                const columnNameList = [];\n                for (const jsonColumn of jsonEntity.columns) {\n                    for (const propertyRef of jsonColumn.propertyRefs) {\n                        if (propertyRef.index === indexConfig.propertyIndex) {\n                            columnNameList.push(jsonColumn.name);\n                            break;\n                        }\n                    }\n                }\n                const createIndexDdl = this.getIndexSql('idx_' + tableName + '_' + (++indexNumber), tableName, columnNameList, indexConfig.unique);\n                await this.storeDriver.query(QueryType.DDL, createIndexDdl, [], context, false);\n            }\n        }\n        //\n    }\n    async buildForeignKeys(jsonApplication, jsonEntity, existingApplicationMap, newJsonApplicationMap, relatedJsonApplicationMap, context) {\n        if (!jsonEntity.relations || !jsonEntity.relations.length) {\n            return;\n        }\n        const applicationVersion = jsonApplication.versions[jsonApplication.versions.length - 1];\n        const tableName = this.storeDriver.getTableName(jsonApplication, jsonEntity, context);\n        let foreignKeyNumber = 0;\n        for (const jsonRelation of jsonEntity.relations) {\n            if (jsonRelation.relationType !== EntityRelationType.MANY_TO_ONE) {\n                continue;\n            }\n            let relatedJsonApplication;\n            let relatedJsonEntity;\n            if (jsonRelation.relationTableApplication_Index\n                || jsonRelation.relationTableApplication_Index === 0) {\n                const referencedApplication = applicationVersion\n                    .referencedApplications[jsonRelation.relationTableApplication_Index];\n                let relatedFullApplication_Name = this.dbApplicationUtils\n                    .getFullApplication_NameFromDomainAndName(referencedApplication.domain, referencedApplication.name);\n                relatedJsonApplication = relatedJsonApplicationMap.get(relatedFullApplication_Name);\n                if (!relatedJsonApplication) {\n                    const relatedApplication = existingApplicationMap.get(relatedFullApplication_Name);\n                    if (relatedApplication) {\n                        // FIXME: this should be looked up though currentVersion - make sure it's populated\n                        // relatedJsonApplication = relatedApplication.currentVersion[0].applicationVersion.jsonApplication\n                        relatedJsonApplication = relatedApplication.versions[0].jsonApplication;\n                    }\n                    else {\n                        relatedJsonApplication = newJsonApplicationMap.get(relatedFullApplication_Name);\n                    }\n                    if (!relatedJsonApplication) {\n                        throw new Error(`Could not find related application ${relatedFullApplication_Name}\r\n            in either existing applications or newly installing applications.`);\n                    }\n                    relatedJsonApplicationMap.set(relatedFullApplication_Name, relatedJsonApplication);\n                }\n                const relatedApplicationVersion = relatedJsonApplication\n                    .versions[relatedJsonApplication.versions.length - 1];\n                relatedJsonEntity = relatedApplicationVersion.entities[jsonRelation.relationTableIndex];\n            }\n            else {\n                relatedJsonApplication = jsonApplication;\n                relatedJsonEntity = applicationVersion.entities[jsonRelation.relationTableIndex];\n            }\n            let foreignKeyColumnNames = [];\n            for (const jsonColumn of jsonEntity.columns) {\n                for (const propertyRef of jsonColumn.propertyRefs) {\n                    if (propertyRef.index === jsonRelation.propertyRef.index) {\n                        foreignKeyColumnNames.push(jsonColumn.name);\n                        break;\n                    }\n                }\n            }\n            const referencedTableName = this.storeDriver\n                .getTableName(relatedJsonApplication, relatedJsonEntity, context);\n            let referencedColumnNames = [];\n            for (const relatedIdColumnRef of relatedJsonEntity.idColumnRefs) {\n                referencedColumnNames.push(relatedJsonEntity.columns[relatedIdColumnRef.index].name);\n            }\n            const foreignKeySql = this.getForeignKeySql(tableName, 'fk_' + tableName + '_foreignKeyNumber', foreignKeyColumnNames, referencedTableName, referencedColumnNames);\n            if (foreignKeySql) {\n                await this.storeDriver.query(QueryType.DDL, foreignKeySql, [], context, false);\n            }\n        }\n    }\n    async buildForeignKeysForTable() {\n    }\n    isPrimaryKeyColumn(jsonEntity, jsonColumn) {\n        return jsonColumn.propertyRefs.some((propertyRef) => {\n            const jsonProperty = jsonEntity.properties[propertyRef.index];\n            if (jsonProperty.isId) {\n                return true;\n            }\n        });\n    }\n    /*\n    protected abstract isForeignKey(\n      jsonEntity: JsonApplicationEntity,\n      jsonColumn: JsonApplicationColumn\n    ): boolean\n    */\n    getPrimaryKeyStatement(columnNames) {\n        return `,\r\n\t\t\tPRIMARY KEY (\r\n\t\t\t${columnNames.join(',\\n')}\r\n\t\t\t)`;\n    }\n};\n__decorate([\n    Inject()\n], SqlSchemaBuilder.prototype, \"airportDatabase\", void 0);\n__decorate([\n    Inject()\n], SqlSchemaBuilder.prototype, \"dbApplicationUtils\", void 0);\n__decorate([\n    Inject()\n], SqlSchemaBuilder.prototype, \"sequenceDao\", void 0);\n__decorate([\n    Inject()\n], SqlSchemaBuilder.prototype, \"storeDriver\", void 0);\nSqlSchemaBuilder = __decorate([\n    Injected()\n], SqlSchemaBuilder);\nexport { SqlSchemaBuilder };\n//# sourceMappingURL=SqlSchemaBuilder.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ensureChildJsMap, } from '@airport/ground-control';\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet ApplicationChecker = class ApplicationChecker {\n    async check(jsonApplication) {\n        if (!jsonApplication) {\n            throw new Error(`Json Application not provided`);\n        }\n        if (!(jsonApplication.versions instanceof Array)) {\n            throw new Error('application.versions is not an array');\n        }\n        if (jsonApplication.versions.length !== 1) {\n            // FIXME: add support for application versioning\n            throw new Error('Currently only 1 version of application is supported');\n        }\n        await this.checkDomain(jsonApplication);\n    }\n    async checkDomain(jsonApplication) {\n        // TODO: implement domain checking\n    }\n    async checkDependencies(jsonApplications) {\n        const allReferencedApplicationMap = new Map();\n        const referencedApplicationMapByApplication = new Map();\n        for (const jsonApplication of jsonApplications) {\n            const lastJsonApplicationVersion = jsonApplication.versions[jsonApplication.versions.length - 1];\n            const referencedApplicationMapForApplication = ensureChildJsMap(ensureChildJsMap(referencedApplicationMapByApplication, jsonApplication.domain), jsonApplication.name);\n            for (const jsonReferencedApplication of lastJsonApplicationVersion.referencedApplications) {\n                ensureChildJsMap(allReferencedApplicationMap, jsonReferencedApplication.domain).set(jsonReferencedApplication.name, jsonReferencedApplication);\n                ensureChildJsMap(referencedApplicationMapForApplication, jsonReferencedApplication.domain).set(jsonReferencedApplication.name, jsonReferencedApplication);\n            }\n        }\n        this.pruneInGroupReferences(jsonApplications, allReferencedApplicationMap, referencedApplicationMapByApplication);\n        await this.pruneReferencesToExistingApplications(jsonApplications, allReferencedApplicationMap, referencedApplicationMapByApplication);\n        const applicationsWithValidDependencies = [];\n        const applicationsInNeedOfAdditionalDependencies = [];\n        const neededDependencies = [];\n        for (const dependenciesForDomain of allReferencedApplicationMap.values()) {\n            for (const dependency of dependenciesForDomain.values()) {\n                neededDependencies.push(dependency);\n            }\n        }\n        for (const jsonApplication of jsonApplications) {\n            const referencedApplicationMapForApplication = referencedApplicationMapByApplication.get(jsonApplication.domain).get(jsonApplication.name);\n            if (this.hasReferences(referencedApplicationMapForApplication)) {\n                applicationsInNeedOfAdditionalDependencies.push(jsonApplication);\n            }\n            else {\n                applicationsWithValidDependencies.push(jsonApplication);\n            }\n        }\n        return {\n            applicationsWithValidDependencies,\n            applicationsInNeedOfAdditionalDependencies,\n            neededDependencies\n        };\n    }\n    pruneInGroupReferences(jsonApplications, allReferencedApplicationMap, referencedApplicationMapByApplication) {\n        for (const jsonApplication of jsonApplications) {\n            // Remove every in-group reference for this application\n            for (const [_domainName, referenceMapForApplicationsOfDomain] of referencedApplicationMapByApplication) {\n                for (const [_applicationName, applicationsReferencedByAGivenApplication] of referenceMapForApplicationsOfDomain) {\n                    const applicationReferencesForDomain = applicationsReferencedByAGivenApplication.get(jsonApplication.domain);\n                    if (applicationReferencesForDomain) {\n                        applicationReferencesForDomain.delete(jsonApplication.name);\n                    }\n                }\n            }\n            const allApplicationReferencesForDomain = allReferencedApplicationMap.get(jsonApplication.domain);\n            if (allApplicationReferencesForDomain) {\n                allApplicationReferencesForDomain.delete(jsonApplication.name);\n            }\n        }\n    }\n    async pruneReferencesToExistingApplications(jsonApplications, allReferencedApplicationMap, referencedApplicationMapByApplication) {\n        const existingApplicationInfo = await this.findExistingApplications(allReferencedApplicationMap);\n        for (const applicationName of existingApplicationInfo.existingApplicationMapByName.keys()) {\n            const coreDomainAndApplication_Names = existingApplicationInfo.coreDomainAndApplication_NamesByApplication_Name.get(applicationName);\n            // Remove every reference for this existing application\n            for (const referenceMapForApplicationsOfDomain of referencedApplicationMapByApplication.values()) {\n                for (const applicationsReferencedByAGivenApplication of referenceMapForApplicationsOfDomain.values()) {\n                    const applicationReferencesForDomain = applicationsReferencedByAGivenApplication.get(coreDomainAndApplication_Names.domain);\n                    if (applicationReferencesForDomain) {\n                        applicationReferencesForDomain.delete(coreDomainAndApplication_Names.application);\n                    }\n                }\n            }\n            const allApplicationReferencesForDomain = allReferencedApplicationMap.get(coreDomainAndApplication_Names.domain);\n            if (allApplicationReferencesForDomain) {\n                allApplicationReferencesForDomain.delete(coreDomainAndApplication_Names.application);\n            }\n        }\n    }\n    async findExistingApplications(allReferencedApplicationMap) {\n        const fullApplication_Names = [];\n        const coreDomainAndApplication_NamesByApplication_Name = new Map();\n        for (const [domainName, allReferencedApplicationsForDomain] of allReferencedApplicationMap) {\n            for (const [coreApplication_Name, referencedApplication] of allReferencedApplicationsForDomain) {\n                const fullApplication_Name = this.dbApplicationUtils.\n                    getFullApplication_Name(referencedApplication);\n                fullApplication_Names.push(fullApplication_Name);\n                coreDomainAndApplication_NamesByApplication_Name.set(fullApplication_Name, {\n                    domain: domainName,\n                    application: coreApplication_Name\n                });\n            }\n        }\n        let existingApplicationMapByName;\n        if (!fullApplication_Names.length) {\n            existingApplicationMapByName = new Map();\n        }\n        else {\n            existingApplicationMapByName = await this.applicationDao.findMapByFullNames(fullApplication_Names);\n        }\n        return {\n            coreDomainAndApplication_NamesByApplication_Name,\n            existingApplicationMapByName\n        };\n    }\n    hasReferences(referencedApplicationMap) {\n        for (const referencesForDomain of referencedApplicationMap.values()) {\n            for (const _ of referencesForDomain) {\n                return true;\n            }\n        }\n        return false;\n    }\n};\n__decorate([\n    Inject()\n], ApplicationChecker.prototype, \"applicationDao\", void 0);\n__decorate([\n    Inject()\n], ApplicationChecker.prototype, \"dbApplicationUtils\", void 0);\nApplicationChecker = __decorate([\n    Injected()\n], ApplicationChecker);\nexport { ApplicationChecker };\n//# sourceMappingURL=ApplicationChecker.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet ApplicationLocator = class ApplicationLocator {\n    // private terminalStore: ITerminalStore\n    locateExistingApplicationVersionRecord(jsonApplication, terminalStore) {\n        const applicationVersionsForDomain_Name = terminalStore\n            .getLatestApplicationVersionMapByNames().get(jsonApplication.domain);\n        if (!applicationVersionsForDomain_Name) {\n            return null;\n        }\n        const fullApplication_Name = this.dbApplicationUtils.\n            getFullApplication_NameFromDomainAndName(jsonApplication.domain, jsonApplication.name);\n        const latestApplicationVersionForApplication = applicationVersionsForDomain_Name.get(fullApplication_Name);\n        const jsonApplicationVersion = jsonApplication.versions[0];\n        if (latestApplicationVersionForApplication\n            && latestApplicationVersionForApplication.integerVersion !== jsonApplicationVersion.integerVersion) {\n            throw new Error(`Multiple versions of applications are not yet supported`);\n        }\n        return latestApplicationVersionForApplication;\n    }\n    async locateLatestApplicationVersionByApplication_Name(fullApplication_Name, terminalStore) {\n        return terminalStore.getLatestApplicationVersionMapByFullApplication_Name()\n            .get(fullApplication_Name);\n    }\n};\n__decorate([\n    Inject()\n], ApplicationLocator.prototype, \"dbApplicationUtils\", void 0);\nApplicationLocator = __decorate([\n    Injected()\n], ApplicationLocator);\nexport { ApplicationLocator };\n//# sourceMappingURL=ApplicationLocator.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ApplicationStatus, ensureChildArray, ensureChildJsSet, } from '@airport/ground-control';\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet ApplicationComposer = class ApplicationComposer {\n    async compose(jsonApplications, context) {\n        // NOTE: application name contains domain name as a prefix\n        const jsonApplicationMapByFullName = new Map();\n        const terminalStore = context.terminalStore;\n        const allDomains = terminalStore.getDomains().slice();\n        const domainMapByName = new Map();\n        for (const domain of allDomains) {\n            domainMapByName.set(domain.name, domain);\n        }\n        const allApplications = terminalStore.getApplications().slice();\n        // NOTE: application fullName contains domain name as a prefix\n        const applicationMapByFullName = new Map();\n        for (const application of allApplications) {\n            applicationMapByFullName.set(application.fullName, application);\n        }\n        const newLatestApplicationVersions = [];\n        const newApplicationVersionMapByApplication_Name = new Map();\n        const newEntitiesMapByApplication_Name = new Map();\n        const newPropertiesMap = new Map();\n        const newRelationsMap = new Map();\n        const newColumnsMap = new Map();\n        const added = {\n            columns: [],\n            domains: [],\n            entities: [],\n            latestApplicationVersions: [],\n            properties: [],\n            propertyColumns: [],\n            relationColumns: [],\n            relations: [],\n            applicationReferences: [],\n            applications: [],\n            applicationVersions: []\n        };\n        const allApplicationVersionsByIds = [...terminalStore.getAllApplicationVersionsByIds()];\n        const all = {\n            columns: [],\n            domains: [],\n            entities: [],\n            latestApplicationVersions: [],\n            properties: [],\n            propertyColumns: [],\n            relationColumns: [],\n            relations: [],\n            applicationReferences: [],\n            applications: [],\n            applicationVersions: [] //\n        };\n        const allDdlObjects = {\n            all,\n            allApplicationVersionsByIds,\n            added\n        };\n        for (const jsonApplication of jsonApplications) {\n            jsonApplicationMapByFullName.set(this.dbApplicationUtils.\n                getFullApplication_Name(jsonApplication), jsonApplication);\n            const domain = await this.composeDomain(jsonApplication.domain, allDomains, added.domains, domainMapByName);\n            const application = this.composeApplication(domain, jsonApplication, allApplications, added.applications, applicationMapByFullName);\n            this.composeApplicationVersion(jsonApplication, application, newLatestApplicationVersions, added.applicationVersions, newApplicationVersionMapByApplication_Name);\n        }\n        const { newApplicationReferenceMap, newApplicationReferences } = await this.composeApplicationReferences(jsonApplicationMapByFullName, newApplicationVersionMapByApplication_Name, terminalStore, allDdlObjects, context.deepTraverseReferences);\n        added.applicationReferences = newApplicationReferences;\n        for (const applicationVersion of allApplicationVersionsByIds) {\n            if (applicationVersion) {\n                this.addApplicationVersionObjects(applicationVersion, all);\n            }\n        }\n        for (const jsonApplication of jsonApplications) {\n            const fullApplication_Name = this.dbApplicationUtils.\n                getFullApplication_Name(jsonApplication);\n            jsonApplicationMapByFullName.set(fullApplication_Name, jsonApplication);\n            const domain = domainMapByName.get(jsonApplication.domain);\n            const application = applicationMapByFullName.get(this.dbApplicationUtils.\n                getFullApplication_Name(jsonApplication));\n            if (!application.index) {\n                jsonApplication.lastIds = {\n                    ...this.terminalStore.getLastIds()\n                };\n                application.index = ++this.terminalStore.getLastIds().applications;\n            }\n            if (!domain._localId) {\n                domain._localId = ++this.terminalStore.getLastIds().domains;\n            }\n            const applicationVersion = newApplicationVersionMapByApplication_Name.get(application.fullName);\n            if (!applicationVersion._localId) {\n                applicationVersion._localId = ++this.terminalStore.getLastIds().applicationVersions;\n                applicationVersion.jsonApplication = jsonApplication;\n            }\n            this.composeApplicationEntities(jsonApplication, applicationVersion, newEntitiesMapByApplication_Name, added.entities);\n            this.composeApplicationProperties(jsonApplication, added.properties, newPropertiesMap, newEntitiesMapByApplication_Name);\n            await this.composeApplicationRelations(jsonApplication, added.relations, newRelationsMap, newEntitiesMapByApplication_Name, newPropertiesMap, newApplicationReferenceMap, terminalStore, allDdlObjects);\n            this.composeApplicationColumns(jsonApplication, added.columns, newColumnsMap, added.propertyColumns, newEntitiesMapByApplication_Name, newPropertiesMap);\n            await this.composeApplicationRelationColumns(jsonApplication, added.relationColumns, newApplicationVersionMapByApplication_Name, newApplicationReferenceMap, newRelationsMap, newColumnsMap, terminalStore, allDdlObjects);\n        }\n        this.addObjects(allDdlObjects.added, allDdlObjects.all);\n        for (const applicationVersion of allDdlObjects.all.applicationVersions) {\n            allDdlObjects.allApplicationVersionsByIds[applicationVersion._localId] = applicationVersion;\n        }\n        return allDdlObjects;\n    }\n    async getExistingLatestApplicationVersion(referencedApplication_Name, allDdlObjects) {\n        for (const latestApplicationVersion of allDdlObjects.all.latestApplicationVersions) {\n            if (latestApplicationVersion.application.fullName == referencedApplication_Name) {\n                return latestApplicationVersion;\n            }\n        }\n        throw new Error(`Cannot find application \"${referencedApplication_Name}\".`);\n    }\n    addApplicationVersionObjects(applicationVersion, ddlObjects) {\n        let foundDomain = false;\n        for (const domain of ddlObjects.domains) {\n            if (domain.name === applicationVersion.application.domain.name) {\n                foundDomain = true;\n                break;\n            }\n        }\n        if (!foundDomain) {\n            ddlObjects.domains.push(applicationVersion.application.domain);\n        }\n        let foundApplication = false;\n        for (const application of ddlObjects.applications) {\n            if (application.domain === applicationVersion.application.domain\n                && application.name === applicationVersion.application.name) {\n                foundApplication = true;\n                break;\n            }\n        }\n        if (!foundApplication) {\n            ddlObjects.applications.push(applicationVersion.application);\n        }\n        ddlObjects.applicationVersions.push(applicationVersion);\n        ddlObjects.latestApplicationVersions.push(applicationVersion);\n        ddlObjects.applicationReferences = ddlObjects.applicationReferences\n            .concat(applicationVersion.references);\n        ddlObjects.entities = ddlObjects.entities.concat(applicationVersion.entities);\n        for (const entity of applicationVersion.entities) {\n            ddlObjects.columns = ddlObjects.columns.concat(entity.columns);\n            ddlObjects.properties = ddlObjects.properties.concat(entity.properties);\n            let entityPropertyColumns = [];\n            for (const property of entity.properties) {\n                entityPropertyColumns = entityPropertyColumns\n                    .concat(property.propertyColumns);\n            }\n            ddlObjects.propertyColumns = ddlObjects.propertyColumns\n                .concat(entityPropertyColumns);\n            ddlObjects.relations = ddlObjects.relations.concat(entity.relations);\n            let entityRelationColumns = [];\n            for (const relation of entity.relations) {\n                entityRelationColumns = entityRelationColumns\n                    .concat(relation.manyRelationColumns);\n            }\n            ddlObjects.relationColumns = ddlObjects.relationColumns\n                .concat(entityRelationColumns);\n        }\n    }\n    addObjects(fromObjects, toObjects) {\n        toObjects.columns = toObjects.columns.concat(fromObjects.columns);\n        for (const fromDomain of fromObjects.domains) {\n            let foundDomain = false;\n            for (const toDomain of toObjects.domains) {\n                if (toDomain.name === fromDomain.name) {\n                    foundDomain = true;\n                    break;\n                }\n            }\n            if (!foundDomain) {\n                toObjects.domains.push(fromDomain);\n            }\n        }\n        toObjects.entities = toObjects.entities.concat(fromObjects.entities);\n        toObjects.latestApplicationVersions = toObjects.latestApplicationVersions\n            .concat(fromObjects.latestApplicationVersions);\n        toObjects.properties = toObjects.properties.concat(fromObjects.properties);\n        toObjects.propertyColumns = toObjects.propertyColumns\n            .concat(fromObjects.propertyColumns);\n        toObjects.relationColumns = toObjects.relationColumns\n            .concat(fromObjects.relationColumns);\n        toObjects.relations = toObjects.relations.concat(fromObjects.relations);\n        for (const fromApplication of fromObjects.applications) {\n            let foundApplication = false;\n            for (const toApplication of toObjects.applications) {\n                if (toApplication.domain === fromApplication.domain\n                    && toApplication.name === fromApplication.name) {\n                    foundApplication = true;\n                    break;\n                }\n            }\n            if (!foundApplication) {\n                toObjects.applications.push(fromApplication);\n            }\n        }\n        toObjects.applicationReferences = toObjects.applicationReferences\n            .concat(fromObjects.applicationReferences);\n        toObjects.applicationVersions = toObjects.applicationVersions\n            .concat(fromObjects.applicationVersions);\n    }\n    async composeDomain(domainName, allDomains, newDomains, domainMapByName) {\n        let domain = await this.domainRetriever.retrieveDomain(domainName, domainMapByName, allDomains, newDomains);\n        if (!domain) {\n            domain = {\n                _localId: null,\n                name: domainName,\n                applications: []\n            };\n            allDomains.push(domain);\n            newDomains.push(domain);\n            domainMapByName.set(domainName, domain);\n        }\n        return domain;\n    }\n    composeApplication(domain, jsonApplication, allApplications, newApplications, applicationMapByFullName) {\n        const fullApplication_Name = this.dbApplicationUtils.\n            getFullApplication_Name(jsonApplication);\n        let application = applicationMapByFullName.get(fullApplication_Name);\n        if (!application) {\n            application = {\n                domain,\n                index: null,\n                fullName: fullApplication_Name,\n                name: jsonApplication.name,\n                scope: 'public',\n                signature: 'localhost',\n                status: ApplicationStatus.CURRENT,\n            };\n            allApplications.push(application);\n            newApplications.push(application);\n            applicationMapByFullName.set(fullApplication_Name, application);\n        }\n        return application;\n    }\n    composeApplicationVersion(jsonApplication, application, newLatestApplicationVersions, newApplicationVersions, newApplicationVersionMapByApplication_Name) {\n        // Application versions are guaranteed to be new\n        let newApplicationVersion;\n        for (const applicationVersion of jsonApplication.versions) {\n            const versionParts = applicationVersion.versionString.split('.');\n            newApplicationVersion = {\n                _localId: null,\n                integerVersion: applicationVersion.integerVersion,\n                versionString: applicationVersion.versionString,\n                majorVersion: parseInt(versionParts[0]),\n                minorVersion: parseInt(versionParts[1]),\n                patchVersion: parseInt(versionParts[2]),\n                application,\n                jsonApplication,\n                entities: [],\n                references: [],\n                referencedBy: [],\n                entityMapByName: {},\n                referencesMapByName: {},\n                referencedByMapByName: {},\n            };\n            if (application.versions) {\n                application.versions.push(newApplicationVersion);\n            }\n            else {\n                application.versions = [newApplicationVersion];\n            }\n            newApplicationVersions.push(newApplicationVersion);\n        }\n        let newApplicationCurrentVersion = {\n            application,\n            applicationVersion: newApplicationVersion\n        };\n        // needed for normalOperation only\n        application.currentVersion = [newApplicationCurrentVersion];\n        newLatestApplicationVersions.push(newApplicationVersion);\n        newApplicationVersionMapByApplication_Name.set(application.fullName, newApplicationVersion);\n        return newApplicationVersion;\n    }\n    async composeApplicationReferences(jsonApplicationMapByName, newApplicationVersionMapByApplication_Name, terminalStore, allDdlObjects, deepTraverseReferences) {\n        const newApplicationReferenceMap = new Map();\n        const newApplicationReferenceLookup = new Map();\n        const newApplicationReferences = [];\n        for (const [applicationName, ownApplicationVersion] of newApplicationVersionMapByApplication_Name) {\n            const application = ownApplicationVersion.application;\n            const jsonApplication = jsonApplicationMapByName.get(application.fullName);\n            const lastJsonApplicationVersion = jsonApplication.versions[jsonApplication.versions.length - 1];\n            const applicationReferences = ensureChildArray(newApplicationReferenceMap, applicationName);\n            const applicationReferenceLookup = ensureChildJsSet(newApplicationReferenceLookup, applicationName);\n            for (const jsonReferencedApplication of lastJsonApplicationVersion.referencedApplications) {\n                const referencedFullApplication_Name = this.dbApplicationUtils.\n                    getFullApplication_Name(jsonReferencedApplication);\n                let referencedApplicationVersion = newApplicationVersionMapByApplication_Name.get(referencedFullApplication_Name);\n                if (!referencedApplicationVersion) {\n                    referencedApplicationVersion = await this.applicationLocator.locateLatestApplicationVersionByApplication_Name(referencedFullApplication_Name, terminalStore);\n                    if (!referencedApplicationVersion) {\n                        throw new Error(`Could not locate application:\r\n\t\t\t\t\t\t${referencedFullApplication_Name}\r\n\t\t\t\t\t\tin either existing applications or applications being currently processed`);\n                    }\n                    this.addApplicationVersionObjects(referencedApplicationVersion, allDdlObjects.all);\n                    if (deepTraverseReferences) {\n                        // This should cause another iteration over the outer loop to process newly added ApplicationVersion\n                        jsonApplicationMapByName.set(referencedFullApplication_Name, referencedApplicationVersion.jsonApplication);\n                        newApplicationVersionMapByApplication_Name.set(referencedFullApplication_Name, referencedApplicationVersion);\n                    }\n                }\n                const applicationReference = {\n                    index: jsonReferencedApplication.index,\n                    ownApplicationVersion,\n                    referencedApplicationVersion\n                };\n                if (!applicationReferenceLookup.has(jsonReferencedApplication.index)) {\n                    applicationReferenceLookup.add(jsonReferencedApplication.index);\n                    newApplicationReferences.push(applicationReference);\n                    applicationReferences.push(applicationReference);\n                }\n            }\n        }\n        return {\n            newApplicationReferenceMap,\n            newApplicationReferences\n        };\n    }\n    composeApplicationEntities(jsonApplication, applicationVersion, newEntitiesMapByApplication_Name, newEntities) {\n        const applicationName = this.dbApplicationUtils.\n            getFullApplication_Name(jsonApplication);\n        let index = 0;\n        // TODO: verify that jsonApplication.versions is always ordered ascending\n        const currentApplicationVersion = jsonApplication.versions[jsonApplication.versions.length - 1];\n        const jsonEntities = currentApplicationVersion.entities;\n        const newApplicationEntities = [];\n        for (const jsonEntity of jsonEntities) {\n            const entity = {\n                _localId: ++this.terminalStore.getLastIds().entities,\n                index: index++,\n                applicationVersion,\n                isLocal: jsonEntity.isLocal,\n                isAirEntity: jsonEntity.isAirEntity,\n                name: jsonEntity.name,\n                tableConfig: jsonEntity.tableConfig,\n                // columns: [],\n                // columnMap: {},\n                // idColumns: [],\n                // idColumnMap: {},\n                // relations: [],\n                // properties: [],\n                // propertyMap: {}\n            };\n            // applicationVersion.entities.push(entity)\n            newApplicationEntities.push(entity);\n            newEntities.push(entity);\n        }\n        newEntitiesMapByApplication_Name.set(applicationName, newApplicationEntities);\n        applicationVersion.entities = newApplicationEntities;\n    }\n    composeApplicationProperties(jsonApplication, newProperties, newPropertiesMap, newEntitiesMapByApplication_Name) {\n        const applicationName = this.dbApplicationUtils.\n            getFullApplication_Name(jsonApplication);\n        const currentApplicationVersion = jsonApplication.versions[jsonApplication.versions.length - 1];\n        const jsonEntities = currentApplicationVersion.entities;\n        const entities = newEntitiesMapByApplication_Name.get(applicationName);\n        const propertiesByEntityIndex = ensureChildArray(newPropertiesMap, applicationName);\n        jsonEntities.forEach((jsonEntity, tableIndex) => {\n            const entity = entities[tableIndex];\n            const propertiesForEntity = [];\n            propertiesByEntityIndex[tableIndex]\n                = propertiesForEntity;\n            let index = 0;\n            for (const jsonProperty of jsonEntity.properties) {\n                const property = {\n                    _localId: ++this.terminalStore.getLastIds().properties,\n                    index,\n                    entity,\n                    name: jsonProperty.name,\n                    isId: jsonProperty.isId,\n                };\n                propertiesForEntity[index] = property;\n                index++;\n                newProperties.push(property);\n            }\n        });\n    }\n    async composeApplicationRelations(jsonApplication, newRelations, newRelationsMap, newEntitiesMapByApplication_Name, newPropertiesMap, newApplicationReferenceMap, terminalStore, allDdlObjects) {\n        const applicationName = this.dbApplicationUtils.\n            getFullApplication_Name(jsonApplication);\n        const currentApplicationVersion = jsonApplication.versions[jsonApplication.versions.length - 1];\n        const jsonEntities = currentApplicationVersion.entities;\n        const entitiesForApplication = newEntitiesMapByApplication_Name.get(applicationName);\n        const propertiesByEntityIndex = newPropertiesMap.get(applicationName);\n        const relationsByEntityIndex = ensureChildArray(newRelationsMap, applicationName);\n        const referencesForApplication = newApplicationReferenceMap.get(applicationName);\n        for (let tableIndex = 0; tableIndex < jsonEntities.length; tableIndex++) {\n            const jsonEntity = jsonEntities[tableIndex];\n            const propertiesForEntity = propertiesByEntityIndex[tableIndex];\n            const relationsForEntity = [];\n            relationsByEntityIndex[tableIndex]\n                = relationsForEntity;\n            const entity = entitiesForApplication[tableIndex];\n            let index = 0;\n            const relations = [];\n            for (const jsonRelation of jsonEntity.relations) {\n                const property = propertiesForEntity[jsonRelation.propertyRef.index];\n                let referencedApplication_Name = applicationName;\n                if (jsonRelation.relationTableApplication_Index\n                    || jsonRelation.relationTableApplication_Index === 0) {\n                    const applicationReference = referencesForApplication[jsonRelation.relationTableApplication_Index];\n                    referencedApplication_Name = applicationReference.referencedApplicationVersion.application.fullName;\n                }\n                let entitiesArray = newEntitiesMapByApplication_Name.get(referencedApplication_Name);\n                if (!entitiesArray) {\n                    const applicationVersion = await this.getExistingLatestApplicationVersion(referencedApplication_Name, allDdlObjects);\n                    entitiesArray = applicationVersion.entities;\n                }\n                const relationEntity = entitiesArray[jsonRelation.relationTableIndex];\n                const relation = {\n                    entity,\n                    _localId: ++terminalStore.getLastIds().relations,\n                    index,\n                    foreignKey: jsonRelation.foreignKey,\n                    isId: property.isId,\n                    manyToOneElems: jsonRelation.manyToOneElems,\n                    property,\n                    oneToManyElems: jsonRelation.oneToManyElems,\n                    relationEntity,\n                    relationType: jsonRelation.relationType,\n                    // oneRelationColumns: [],\n                    // manyRelationColumns: []\n                };\n                // property.relation               = [relation]\n                // relationEntity.relations.push(relation)\n                relationsForEntity[index] = relation;\n                index++;\n                relations.push(relation);\n                newRelations.push(relation);\n            }\n        }\n    }\n    composeApplicationColumns(jsonApplication, newColumns, newColumnsMap, newPropertyColumns, newEntitiesMapByApplication_Name, newPropertiesMap) {\n        const applicationName = this.dbApplicationUtils.\n            getFullApplication_Name(jsonApplication);\n        const columnsByTable = [];\n        newColumnsMap.set(applicationName, columnsByTable);\n        const entitiesForApplication = newEntitiesMapByApplication_Name.get(applicationName);\n        const currentApplicationVersion = jsonApplication.versions[jsonApplication.versions.length - 1];\n        const jsonEntities = currentApplicationVersion.entities;\n        const propertiesForApplication = newPropertiesMap.get(applicationName);\n        jsonEntities.forEach((jsonEntity, tableIndex) => {\n            const entity = entitiesForApplication[tableIndex];\n            const columnsForTable = [];\n            columnsByTable[tableIndex] = columnsForTable;\n            const idColumnIndexes = [];\n            jsonEntity.idColumnRefs.forEach((idColumnRef, idColumnIndex) => {\n                idColumnIndexes[idColumnRef.index] = idColumnIndex;\n            });\n            const propertiesForEntity = propertiesForApplication[tableIndex];\n            jsonEntity.columns.forEach((jsonColumn, index) => {\n                const idColumndIndex = idColumnIndexes[index];\n                const column = {\n                    allocationSize: jsonColumn.allocationSize,\n                    entity,\n                    _localId: ++this.terminalStore.getLastIds().columns,\n                    idIndex: idColumndIndex,\n                    index,\n                    isGenerated: jsonColumn.isGenerated,\n                    manyRelationColumns: [],\n                    name: jsonColumn.name,\n                    notNull: jsonColumn.notNull,\n                    oneRelationColumns: [],\n                    precision: jsonColumn.precision,\n                    propertyColumns: [],\n                    scale: jsonColumn.scale,\n                    type: jsonColumn.type,\n                };\n                columnsForTable[index] = column;\n                newColumns.push(column);\n                jsonColumn.propertyRefs.forEach((propertyReference) => {\n                    const property = propertiesForEntity[propertyReference.index];\n                    const propertyColumn = {\n                        column,\n                        property\n                    };\n                    newPropertyColumns.push(propertyColumn);\n                });\n            });\n        });\n    }\n    async composeApplicationRelationColumns(jsonApplication, newRelationColumns, newApplicationVersionMapByApplication_Name, newApplicationReferenceMap, newRelationsMap, newColumnsMap, terminalStore, allDdlObjects) {\n        const applicationName = this.dbApplicationUtils.\n            getFullApplication_Name(jsonApplication);\n        const currentApplicationVersion = jsonApplication.versions[jsonApplication.versions.length - 1];\n        const jsonEntities = currentApplicationVersion.entities;\n        const columnsForApplication = newColumnsMap.get(applicationName);\n        const relationsForApplication = newRelationsMap.get(applicationName);\n        const applicationReferencesForApplication = newApplicationReferenceMap.get(applicationName);\n        for (let tableIndex = 0; tableIndex < jsonEntities.length; tableIndex++) {\n            const jsonEntity = jsonEntities[tableIndex];\n            const columnsForEntity = columnsForApplication[tableIndex];\n            const relationsForEntity = relationsForApplication[tableIndex];\n            for (let index = 0; index < jsonEntity.columns.length; index++) {\n                const jsonColumn = jsonEntity.columns[index];\n                const manyColumn = columnsForEntity[index];\n                const relationColumns = [];\n                for (const jsonRelationColumn of jsonColumn.manyRelationColumnRefs) {\n                    const manyRelation = relationsForEntity[jsonRelationColumn.manyRelationIndex];\n                    // if (!manyRelation.manyRelationColumns) {\n                    // \tmanyRelation.manyRelationColumns = []\n                    // }\n                    let oneRelationApplicationVersion;\n                    if (jsonRelationColumn.oneApplication_Index\n                        || jsonRelationColumn.oneApplication_Index === 0) {\n                        const applicationReference = applicationReferencesForApplication[jsonRelationColumn.oneApplication_Index];\n                        oneRelationApplicationVersion = applicationReference.referencedApplicationVersion;\n                    }\n                    else {\n                        oneRelationApplicationVersion = newApplicationVersionMapByApplication_Name.get(applicationName);\n                    }\n                    const referencedApplication_Name = oneRelationApplicationVersion.application.fullName;\n                    const oneTableColumnsMapForApplication = newColumnsMap.get(referencedApplication_Name);\n                    let oneTableColumns;\n                    let oneTableRelations;\n                    if (oneTableColumnsMapForApplication) {\n                        oneTableColumns = oneTableColumnsMapForApplication[jsonRelationColumn.oneTableIndex];\n                        oneTableRelations = newRelationsMap.get(oneRelationApplicationVersion.application.fullName)[jsonRelationColumn.oneTableIndex];\n                    }\n                    else {\n                        const applicationVersion = await this.getExistingLatestApplicationVersion(referencedApplication_Name, allDdlObjects);\n                        const entitiesArray = applicationVersion.entities;\n                        const entity = entitiesArray[jsonRelationColumn.oneTableIndex];\n                        oneTableColumns = entity.columns;\n                        oneTableRelations = entity.relations;\n                    }\n                    const oneColumn = oneTableColumns[jsonRelationColumn.oneColumnIndex];\n                    // if (!jsonRelationColumn.oneApplication_Index\n                    // \t&& !oneColumn.oneRelationColumns) {\n                    // \toneColumn.oneRelationColumns = []\n                    // }\n                    const oneRelation = oneTableRelations[jsonRelationColumn.oneRelationIndex];\n                    // if (!jsonRelationColumn.oneApplication_Index\n                    // \t&& !oneRelation.oneRelationColumns) {\n                    // \toneRelation.oneRelationColumns = []\n                    // }\n                    const relationColumn = {\n                        _localId: ++terminalStore.getLastIds().relationColumns,\n                        manyColumn,\n                        manyRelation,\n                        oneColumn,\n                        oneRelation,\n                        // FIXME: figure out how to many OneToMany-only relations\n                        parentRelation: manyRelation\n                    };\n                    // manyRelation.manyRelationColumns.push(relationColumn)\n                    // if (!jsonRelationColumn.oneApplication_Index) {\n                    // \toneColumn.oneRelationColumns.push(relationColumn)\n                    // \toneRelation.oneRelationColumns.push(relationColumn)\n                    // }\n                    relationColumns.push(relationColumn);\n                    newRelationColumns.push(relationColumn);\n                }\n                manyColumn.manyRelationColumns = []; // relationColumns\n            }\n        }\n    }\n};\n__decorate([\n    Inject()\n], ApplicationComposer.prototype, \"applicationLocator\", void 0);\n__decorate([\n    Inject()\n], ApplicationComposer.prototype, \"dbApplicationUtils\", void 0);\n__decorate([\n    Inject()\n], ApplicationComposer.prototype, \"domainRetriever\", void 0);\n__decorate([\n    Inject()\n], ApplicationComposer.prototype, \"terminalStore\", void 0);\nApplicationComposer = __decorate([\n    Injected()\n], ApplicationComposer);\nexport { ApplicationComposer };\n//# sourceMappingURL=ApplicationComposer.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet ApplicationRecorder = class ApplicationRecorder {\n    async record(ddlObjects, \n    // normalOperation: boolean,\n    context) {\n        await this.transactionManager.transactInternal(async () => {\n            // FIXME: add support for real application versioning\n            this.setDefaultVersioning(ddlObjects);\n            const domainDao = await this.getdomainDaoAsync();\n            await domainDao.checkAndInsertIfNeeded(ddlObjects.domains, context);\n            await this.applicationDao.insert(ddlObjects.applications, context);\n            await this.applicationVersionDao.insert(ddlObjects.applicationVersions, context);\n            await this.applicationReferenceDao.insert(ddlObjects.applicationReferences, context);\n            await this.applicationEntityDao.insert(ddlObjects.entities, context);\n            await this.applicationPropertyDao.insert(ddlObjects.properties, context);\n            await this.applicationRelationDao.insert(ddlObjects.relations, context);\n            await this.applicationColumnDao.insert(ddlObjects.columns, context);\n            await this.applicationPropertyColumnDao.insert(ddlObjects.propertyColumns, context);\n            await this.applicationRelationColumnDao.insert(ddlObjects.relationColumns, context);\n        }, context);\n    }\n    setDefaultVersioning(ddlObjects) {\n        for (const applicationReference of ddlObjects.applicationReferences) {\n            applicationReference.deprecatedSinceVersion = null;\n            applicationReference.removedInVersion = null;\n            applicationReference.sinceVersion = applicationReference.ownApplicationVersion;\n        }\n        for (const entity of ddlObjects.entities) {\n            entity.deprecatedSinceVersion = null;\n            entity.removedInVersion = null;\n            entity.sinceVersion = entity.applicationVersion;\n        }\n        for (const property of ddlObjects.properties) {\n            property.deprecatedSinceVersion = null;\n            property.removedInVersion = null;\n            property.sinceVersion = property.entity.applicationVersion;\n        }\n        for (const relation of ddlObjects.relations) {\n            relation.deprecatedSinceVersion = null;\n            relation.removedInVersion = null;\n            relation.sinceVersion = relation.entity.applicationVersion;\n        }\n        for (const column of ddlObjects.columns) {\n            column.deprecatedSinceVersion = null;\n            column.removedInVersion = null;\n            column.sinceVersion = column.entity.applicationVersion;\n        }\n        for (const propertyColumn of ddlObjects.propertyColumns) {\n            propertyColumn.deprecatedSinceVersion = null;\n            propertyColumn.removedInVersion = null;\n            propertyColumn.sinceVersion = propertyColumn.property.entity.applicationVersion;\n        }\n        for (const relationColumn of ddlObjects.relationColumns) {\n            relationColumn.deprecatedSinceVersion = null;\n            relationColumn.removedInVersion = null;\n            relationColumn.sinceVersion = relationColumn.parentRelation.entity.applicationVersion;\n        }\n    }\n    async bulkCreate(dao, entities, context) {\n        await dao.save(entities, context);\n    }\n};\n__decorate([\n    Inject()\n], ApplicationRecorder.prototype, \"applicationColumnDao\", void 0);\n__decorate([\n    Inject()\n], ApplicationRecorder.prototype, \"applicationDao\", void 0);\n__decorate([\n    Inject()\n], ApplicationRecorder.prototype, \"applicationEntityDao\", void 0);\n__decorate([\n    Inject()\n], ApplicationRecorder.prototype, \"applicationPropertyColumnDao\", void 0);\n__decorate([\n    Inject()\n], ApplicationRecorder.prototype, \"applicationPropertyDao\", void 0);\n__decorate([\n    Inject()\n], ApplicationRecorder.prototype, \"applicationReferenceDao\", void 0);\n__decorate([\n    Inject()\n], ApplicationRecorder.prototype, \"applicationRelationColumnDao\", void 0);\n__decorate([\n    Inject()\n], ApplicationRecorder.prototype, \"applicationRelationDao\", void 0);\n__decorate([\n    Inject()\n], ApplicationRecorder.prototype, \"applicationVersionDao\", void 0);\n__decorate([\n    Inject()\n], ApplicationRecorder.prototype, \"domainDao\", void 0);\n__decorate([\n    Inject()\n], ApplicationRecorder.prototype, \"transactionManager\", void 0);\nApplicationRecorder = __decorate([\n    Injected()\n], ApplicationRecorder);\nexport { ApplicationRecorder };\n//# sourceMappingURL=ApplicationRecorder.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbNumber, Entity, Id, Table } from '@airport/tarmaq-entity';\nlet Sequence = class Sequence {\n};\n__decorate([\n    Id(),\n    Column({ name: 'APPLICATION_INDEX', nullable: false }),\n    DbNumber()\n], Sequence.prototype, \"applicationIndex\", void 0);\n__decorate([\n    Id(),\n    Column({ name: 'TABLE_INDEX', nullable: false }),\n    DbNumber()\n], Sequence.prototype, \"tableIndex\", void 0);\n__decorate([\n    Id(),\n    Column({ name: 'COLUMN_INDEX', nullable: false }),\n    DbNumber()\n], Sequence.prototype, \"columnIndex\", void 0);\n__decorate([\n    Column({ name: 'SEQUENCE_INCREMENT_BY', nullable: false })\n], Sequence.prototype, \"incrementBy\", void 0);\n__decorate([\n    Column({ name: 'CURRENT_VALUE', nullable: false })\n], Sequence.prototype, \"currentValue\", void 0);\nSequence = __decorate([\n    Entity(),\n    Table({ name: 'SEQUENCES' })\n], Sequence);\nexport { Sequence };\n//# sourceMappingURL=Sequence.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbNumber, Entity, GeneratedValue, Id, Table } from '@airport/tarmaq-entity';\n/**\n * No actual records are inserted into this table, only used for the sequence\n */\nlet SystemWideOperationId = class SystemWideOperationId {\n};\n__decorate([\n    Id(),\n    Column({ name: 'SYSTEM_WIDE_OPERATION_LID', nullable: false }),\n    DbNumber(),\n    GeneratedValue()\n], SystemWideOperationId.prototype, \"_localId\", void 0);\nSystemWideOperationId = __decorate([\n    Entity(),\n    Table({ name: 'SYSTEM_WIDE_OPERATION_LIDS' })\n], SystemWideOperationId);\nexport { SystemWideOperationId };\n//# sourceMappingURL=SystemWideOperationId.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, Entity, GeneratedValue, Id, Table } from '@airport/tarmaq-entity';\n/**\n * A record of the Terminal running (being up at a given point in time)\n */\nlet TerminalRun = class TerminalRun {\n};\n__decorate([\n    Id(),\n    GeneratedValue(),\n    Column({ name: 'TERMINAL_RUN_LID' })\n], TerminalRun.prototype, \"_localId\", void 0);\n__decorate([\n    Column({ name: 'CREATE_TIMESTAMP', nullable: false })\n], TerminalRun.prototype, \"createTimestamp\", void 0);\n__decorate([\n    Column({ name: 'RANDOM_NUMBER', nullable: false })\n], TerminalRun.prototype, \"randomNumber\", void 0);\nTerminalRun = __decorate([\n    Entity(),\n    Table({ name: 'TERMINAL_RUNS' })\n], TerminalRun);\nexport { TerminalRun };\n//# sourceMappingURL=TerminalRun.js.map","import { airApi } from '@airport/aviation-communication';\nimport { Sequence, SystemWideOperationId, TerminalRun } from '../ddl/ddl';\nconst __constructors__ = {\n    Sequence: Sequence,\n    SystemWideOperationId: SystemWideOperationId,\n    TerminalRun: TerminalRun\n};\nexport const Q_APPLICATION = {\n    __constructors__,\n    domain: 'air',\n    name: '@airport/airport-code'\n};\nexport const Q = Q_APPLICATION;\nexport function diSet(dbEntityId) {\n    return airApi.dS(Q.__dbApplication__, dbEntityId);\n}\nexport function duoDiSet(dbEntityId) {\n    return airApi.ddS(Q.__dbApplication__, dbEntityId);\n}\nairApi.setQApplication(Q_APPLICATION);\n//# sourceMappingURL=qApplication.js.map","import { Dao, DaoQueryDecorators, } from '@airport/tarmaq-dao';\nimport { Q, duoDiSet, } from './qApplication';\n// Application Q object Dependency Injection readiness detection Dao\nexport class SQDIDao extends Dao {\n    constructor(dbEntityId) {\n        super(dbEntityId, Q);\n    }\n}\nexport class BaseSequenceDao extends SQDIDao {\n    constructor() {\n        super(0);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(0);\n    }\n}\nBaseSequenceDao.Find = new DaoQueryDecorators();\nBaseSequenceDao.FindOne = new DaoQueryDecorators();\nBaseSequenceDao.Search = new DaoQueryDecorators();\nBaseSequenceDao.SearchOne = new DaoQueryDecorators();\nexport class BaseSystemWideOperationIdDao extends SQDIDao {\n    constructor() {\n        super(1);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(1);\n    }\n}\nBaseSystemWideOperationIdDao.Find = new DaoQueryDecorators();\nBaseSystemWideOperationIdDao.FindOne = new DaoQueryDecorators();\nBaseSystemWideOperationIdDao.Search = new DaoQueryDecorators();\nBaseSystemWideOperationIdDao.SearchOne = new DaoQueryDecorators();\nexport class BaseTerminalRunDao extends SQDIDao {\n    constructor() {\n        super(2);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(2);\n    }\n}\nBaseTerminalRunDao.Find = new DaoQueryDecorators();\nBaseTerminalRunDao.FindOne = new DaoQueryDecorators();\nBaseTerminalRunDao.Search = new DaoQueryDecorators();\nBaseTerminalRunDao.SearchOne = new DaoQueryDecorators();\n//# sourceMappingURL=baseDaos.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { BaseTerminalRunDao } from '../generated/generated';\nlet TerminalRunDao = class TerminalRunDao extends BaseTerminalRunDao {\n};\nTerminalRunDao = __decorate([\n    Injected()\n], TerminalRunDao);\nexport { TerminalRunDao };\n//# sourceMappingURL=TerminalRunDao.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { PLUS } from '@airport/tarmaq-query';\nimport { Injected } from '@airport/direction-indicator';\nimport { BaseSequenceDao, Q } from '../generated/generated';\nlet SequenceDao = class SequenceDao extends BaseSequenceDao {\n    static diSet() {\n        return Q.__dbApplication__ && Q.__dbApplication__.currentVersion[0]\n            .applicationVersion.entities[0];\n    }\n    async incrementCurrentValues(context) {\n        const s = Q.Sequence;\n        await this.db.updateWhere({\n            UPDATE: s,\n            SET: {\n                currentValue: PLUS(s.currentValue, s.incrementBy)\n            }\n        }, context);\n    }\n    async incrementSequence(context) {\n        const s = Q.Sequence;\n        await this.db.updateWhere({\n            UPDATE: s,\n            SET: {\n                currentValue: PLUS(s.currentValue, s.incrementBy)\n            }\n        }, context);\n    }\n};\nSequenceDao = __decorate([\n    Injected()\n], SequenceDao);\nexport { SequenceDao };\n//# sourceMappingURL=SequenceDao.js.map","import { lib } from '@airport/direction-indicator';\nimport { SequenceDao } from './dao/SequenceDao';\nimport { TerminalRunDao } from './dao/TerminalRunDao';\nconst airportCode = lib('airport-code');\nexport const SEQUENCE_DAO = airportCode.token({\n    class: SequenceDao,\n    interface: 'ISequenceDao',\n    token: 'SEQUENCE_DAO'\n});\nexport const TERMINAL_RUN_DAO = airportCode.token({\n    class: TerminalRunDao,\n    interface: 'ITerminalRunDao',\n    token: 'TERMINAL_RUN_DAO'\n});\n//# sourceMappingURL=tokens.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\n// TODO: probably not needed, included application source populates itself\n// May be needed to populate applications from the database\nlet AirportDatabasePopulator = class AirportDatabasePopulator {\n    populate() {\n        // FIXME: implement\n        // this.airDb.applications\n        // this.airDb.qApplications\n    }\n};\nAirportDatabasePopulator = __decorate([\n    Injected()\n], AirportDatabasePopulator);\nexport { AirportDatabasePopulator };\n//# sourceMappingURL=AirportDatabasePopulator.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet DdlObjectLinker = class DdlObjectLinker {\n    link(allDdlObjects) {\n        const { all, allApplicationVersionsByIds, added } = allDdlObjects;\n        const { latestApplicationVersions, properties, relations, applicationReferences, applications } = added;\n        this.linkDomainsAndApplicationsAndVersions(allApplicationVersionsByIds, all.domains, applications, latestApplicationVersions, applicationReferences);\n        const entityArrayById = this.linkEntities(allApplicationVersionsByIds, all.entities, added.entities);\n        const { propertyMapById, relationMapById } = this.linkPropertiesAndRelations(properties, relations, entityArrayById);\n        this.linkColumns(propertyMapById, relationMapById, allDdlObjects, entityArrayById);\n    }\n    linkDomainsAndApplicationsAndVersions(allApplicationVersionsByIds, domains, applications, latestApplicationVersions, applicationReferences) {\n        const domainMapById = new Map();\n        domains.forEach((domain) => {\n            domainMapById.set(domain._localId, domain);\n        });\n        const applicationMapByIndex = new Map();\n        applications.forEach((application) => {\n            applicationMapByIndex.set(application.index, application);\n            const domain = domainMapById.get(application.domain._localId);\n            application.domain = domain;\n            domain.applications.push(application);\n        });\n        latestApplicationVersions.forEach((applicationVersion) => {\n            const application = applicationMapByIndex.get(applicationVersion.application.index);\n            let applicationCurrentVersion = {\n                application,\n                applicationVersion\n            };\n            application.currentVersion = [applicationCurrentVersion];\n            application.versions = [applicationVersion];\n            applicationVersion.application = application;\n            applicationVersion.entities = [];\n            applicationVersion.references = [];\n            applicationVersion.referencedBy = [];\n            applicationVersion.entityMapByName = {};\n            applicationVersion.referencesMapByName = {};\n            applicationVersion.referencedByMapByName = {};\n        });\n        applicationReferences.forEach((applicationReference) => {\n            const ownApplicationVersion = allApplicationVersionsByIds[applicationReference.ownApplicationVersion._localId];\n            const referencedApplicationVersion = allApplicationVersionsByIds[applicationReference.referencedApplicationVersion._localId];\n            ownApplicationVersion.references[applicationReference.index] = applicationReference;\n            ownApplicationVersion.referencesMapByName[referencedApplicationVersion.application.fullName] = applicationReference;\n            referencedApplicationVersion.referencedBy.push(applicationReference);\n            referencedApplicationVersion.referencedByMapByName[ownApplicationVersion.application.fullName] = applicationReference;\n            applicationReference.ownApplicationVersion = ownApplicationVersion;\n            applicationReference.referencedApplicationVersion = referencedApplicationVersion;\n        });\n    }\n    linkEntities(allApplicationVersionsByIds, allEntities, // All of the entities of newly created applications\n    addedEntities // All of the entities of newly created applications\n    // from the latest available versions\n    ) {\n        const entityArrayById = [];\n        allEntities.forEach((entity) => {\n            entityArrayById[entity._localId] = entity;\n        });\n        addedEntities.forEach((entity) => {\n            const applicationVersion = allApplicationVersionsByIds[entity.applicationVersion._localId];\n            entity.applicationVersion = applicationVersion;\n            applicationVersion.entities[entity.index] = entity;\n            applicationVersion.entityMapByName[entity.name] = entity;\n            entityArrayById[entity._localId] = entity;\n            entity.columns = [];\n            entity.properties = [];\n            entity.relations = [];\n            entity.relationReferences = [];\n            entity.columnMap = {};\n            entity.idColumns = [];\n            entity.idColumnMap = {};\n            entity.propertyMap = {};\n        });\n        return entityArrayById;\n    }\n    linkPropertiesAndRelations(properties, relations, entityArrayById) {\n        const propertyMapById = new Map();\n        properties.forEach((property) => {\n            // Entity is already property wired in\n            const entity = entityArrayById[property.entity._localId];\n            entity.properties[property.index] = property;\n            entity.propertyMap[property.name] = property;\n            property.entity = entity;\n            property.propertyColumns = [];\n            propertyMapById.set(property._localId, property);\n        });\n        const relationMapById = new Map();\n        relations.forEach((relation) => {\n            const entity = entityArrayById[relation.entity._localId];\n            entity.relations[relation.index] = relation;\n            let relationEntity = entityArrayById[relation.relationEntity._localId];\n            if (!relationEntity) {\n                relationEntity = this.terminalStore.getAllEntities()[relation.relationEntity._localId];\n            }\n            relationEntity.relationReferences.push(relation);\n            const property = propertyMapById.get(relation.property._localId);\n            relation.property = property;\n            property.relation = [relation];\n            relation.entity = entity;\n            relation.relationEntity = relationEntity;\n            relation.manyRelationColumns = [];\n            relation.oneRelationColumns = [];\n            relationMapById.set(relation._localId, relation);\n        });\n        return {\n            propertyMapById, relationMapById\n        };\n    }\n    linkColumns(propertyMapById, relationMapById, allDdlObjects, entityArrayById) {\n        const columnMapById = new Map();\n        allDdlObjects.all.columns.forEach((column) => {\n            columnMapById.set(column._localId, column);\n        });\n        allDdlObjects.added.columns.forEach((column) => {\n            columnMapById.set(column._localId, column);\n            const entity = entityArrayById[column.entity._localId];\n            entity.columns[column.index] = column;\n            entity.columnMap[column.name] = column;\n            if (column.idIndex || column.idIndex === 0) {\n                entity.idColumns[column.idIndex] = column;\n                entity.idColumnMap[column.name] = column;\n            }\n            column.entity = entity;\n        });\n        allDdlObjects.added.propertyColumns.forEach((propertyColumn) => {\n            const column = columnMapById.get(propertyColumn.column._localId);\n            column.propertyColumns.push(propertyColumn);\n            const property = propertyMapById.get(propertyColumn.property._localId);\n            property.propertyColumns.push(propertyColumn);\n            propertyColumn.column = column;\n            propertyColumn.property = property;\n        });\n        allDdlObjects.added.relationColumns.forEach((relationColumn) => {\n            let manyColumn = columnMapById.get(relationColumn.manyColumn._localId);\n            if (!manyColumn) {\n                manyColumn = this.terminalStore.getAllColumns()[relationColumn.manyColumn._localId];\n            }\n            manyColumn.manyRelationColumns.push(relationColumn);\n            let oneColumn = columnMapById.get(relationColumn.oneColumn._localId);\n            if (!oneColumn) {\n                oneColumn = this.terminalStore.getAllColumns()[relationColumn.oneColumn._localId];\n            }\n            oneColumn.oneRelationColumns.push(relationColumn);\n            let manyRelation;\n            if (relationColumn.manyRelation && relationColumn.manyRelation._localId) {\n                manyRelation = relationMapById.get(relationColumn.manyRelation._localId);\n                if (!manyRelation) {\n                    manyRelation = this.terminalStore.getAllRelations()[relationColumn.manyRelation._localId];\n                }\n                manyRelation.manyRelationColumns.push(relationColumn);\n            }\n            let oneRelation;\n            if (relationColumn.oneRelation && relationColumn.oneRelation._localId) {\n                oneRelation = relationMapById.get(relationColumn.oneRelation._localId);\n                if (!oneRelation) {\n                    oneRelation = this.terminalStore.getAllRelations()[relationColumn.oneRelation._localId];\n                }\n                oneRelation.oneRelationColumns.push(relationColumn);\n            }\n            relationColumn.manyColumn = manyColumn;\n            relationColumn.manyRelation = manyRelation;\n            relationColumn.oneColumn = oneColumn;\n            relationColumn.oneRelation = oneRelation;\n        });\n    }\n};\n__decorate([\n    Inject()\n], DdlObjectLinker.prototype, \"terminalStore\", void 0);\nDdlObjectLinker = __decorate([\n    Injected()\n], DdlObjectLinker);\nexport { DdlObjectLinker };\n//# sourceMappingURL=DdlObjectLinker.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet DdlObjectRetriever = class DdlObjectRetriever {\n    async retrieveDdlObjects() {\n        const applications = await this.applicationDao.findAllActive();\n        const applicationIndexes = [];\n        const domainIdSet = new Set();\n        applications.forEach(application => {\n            applicationIndexes.push(application.index);\n            domainIdSet.add(application.domain._localId);\n        });\n        applications.sort((application1, application2) => {\n            return application1.index - application2.index;\n        });\n        const domains = await this.domainDao.findByIdIn(Array.from(domainIdSet));\n        const allApplicationVersions = await this.applicationVersionDao\n            .findAllActiveOrderByApplication_IndexAndId();\n        let lastApplication_Index;\n        // const allApplicationVersionsByIds: IApplicationVersion[] = []\n        const latestApplicationVersions = [];\n        const applicationVersions = [];\n        for (const applicationVersion of allApplicationVersions) {\n            if (applicationVersion.application.index !== lastApplication_Index) {\n                latestApplicationVersions.push(applicationVersion);\n            }\n            // allApplicationVersionsByIds[applicationVersion._localId] = applicationVersion\n            lastApplication_Index = applicationVersion.application.index;\n            applicationVersions.push(applicationVersion);\n        }\n        const latestApplicationVersion_LocalIds = latestApplicationVersions.map(applicationVersion => applicationVersion._localId);\n        const applicationReferences = await this.applicationReferenceDao\n            .findAllForApplicationVersions(latestApplicationVersion_LocalIds);\n        const entities = await this.applicationEntityDao\n            .findAllForApplicationVersions(latestApplicationVersion_LocalIds);\n        const entityIds = entities.map(entity => entity._localId);\n        /*\n        const entityIds = entities.map(\n    entity => {\n        if (entity.tableConfig) {\n            entity.tableConfig = JSON.parse(entity.tableConfig as any)\n        }\n        return entity._localId\n    })\n         */\n        const properties = await this.applicationPropertyDao\n            .findAllForEntities(entityIds);\n        const propertyIds = properties.map(property => property._localId);\n        const relations = await this.applicationRelationDao\n            .findAllForProperties(propertyIds);\n        const columns = await this.applicationColumnDao\n            .findAllForEntities(entityIds);\n        const columnIds = columns.map(column => column._localId);\n        const propertyColumns = await this.applicationPropertyColumnDao\n            .findAllForColumns(columnIds);\n        const relationColumns = await this.applicationRelationColumnDao\n            .findAllForColumns(columnIds);\n        const lastTerminalState = this.terminalStore.getTerminalState();\n        const lastIds = {\n            columns: columns.length,\n            domains: domains.length,\n            entities: entities.length,\n            properties: properties.length,\n            propertyColumns: propertyColumns.length,\n            relationColumns: relationColumns.length,\n            relations: relations.length,\n            applications: applications.length,\n            applicationVersions: applicationVersions.length,\n        };\n        this.terminalStore.state.next({\n            ...lastTerminalState,\n            lastIds\n        });\n        return {\n            // allDomains: domains,\n            // allApplications: applications,\n            // allApplicationVersionsByIds,\n            columns,\n            domains,\n            entities,\n            latestApplicationVersions,\n            properties,\n            propertyColumns,\n            relationColumns,\n            relations,\n            applicationReferences,\n            applications,\n            applicationVersions\n        };\n    }\n};\n__decorate([\n    Inject()\n], DdlObjectRetriever.prototype, \"applicationColumnDao\", void 0);\n__decorate([\n    Inject()\n], DdlObjectRetriever.prototype, \"applicationDao\", void 0);\n__decorate([\n    Inject()\n], DdlObjectRetriever.prototype, \"applicationEntityDao\", void 0);\n__decorate([\n    Inject()\n], DdlObjectRetriever.prototype, \"applicationPropertyColumnDao\", void 0);\n__decorate([\n    Inject()\n], DdlObjectRetriever.prototype, \"applicationPropertyDao\", void 0);\n__decorate([\n    Inject()\n], DdlObjectRetriever.prototype, \"applicationReferenceDao\", void 0);\n__decorate([\n    Inject()\n], DdlObjectRetriever.prototype, \"applicationRelationColumnDao\", void 0);\n__decorate([\n    Inject()\n], DdlObjectRetriever.prototype, \"applicationRelationDao\", void 0);\n__decorate([\n    Inject()\n], DdlObjectRetriever.prototype, \"applicationVersionDao\", void 0);\n__decorate([\n    Inject()\n], DdlObjectRetriever.prototype, \"domainDao\", void 0);\n__decorate([\n    Inject()\n], DdlObjectRetriever.prototype, \"terminalStore\", void 0);\nDdlObjectRetriever = __decorate([\n    Injected()\n], DdlObjectRetriever);\nexport { DdlObjectRetriever };\n//# sourceMappingURL=DdlObjectRetriever.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { orderApplicationsInOrderOfPrecedence, setQApplicationEntities } from '@airport/air-traffic-control';\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet QueryEntityClassCreator = class QueryEntityClassCreator {\n    createAll(applications) {\n        const applicationsToCreate = orderApplicationsInOrderOfPrecedence(applications);\n        applicationsToCreate.map(dbApplication => this.create(dbApplication));\n    }\n    create(dbApplication) {\n        let qApplication = this.airportDatabase.QM[dbApplication.fullName];\n        // If the Application API source has already been loaded\n        if (qApplication) {\n            qApplication.__dbApplication__ = dbApplication;\n        }\n        else {\n            qApplication = {\n                __constructors__: {},\n                __qConstructors__: {},\n                __dbApplication__: dbApplication,\n                name: dbApplication.name,\n                domain: dbApplication.domain.name\n            };\n            this.airportDatabase.QM[dbApplication.fullName] = qApplication;\n        }\n        this.airportDatabase.Q[dbApplication.index] = qApplication;\n        setQApplicationEntities(dbApplication, qApplication, this.airportDatabase.qApplications, this.applicationUtils, this.relationManager);\n        return qApplication;\n    }\n};\n__decorate([\n    Inject()\n], QueryEntityClassCreator.prototype, \"airportDatabase\", void 0);\n__decorate([\n    Inject()\n], QueryEntityClassCreator.prototype, \"applicationUtils\", void 0);\n__decorate([\n    Inject()\n], QueryEntityClassCreator.prototype, \"relationManager\", void 0);\nQueryEntityClassCreator = __decorate([\n    Injected()\n], QueryEntityClassCreator);\nexport { QueryEntityClassCreator };\n//# sourceMappingURL=QueryEntityClassCreator.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet QueryObjectInitializer = class QueryObjectInitializer {\n    generateQObjectsAndPopulateStore(allDdlObjects) {\n        this.ddlObjectLinker.link(allDdlObjects);\n        this.queryEntityClassCreator.createAll(allDdlObjects.all.applications);\n        const lastTerminalState = this.terminalStore.getTerminalState();\n        const existingDomainMap = {};\n        for (const domain of lastTerminalState.domains) {\n            existingDomainMap[domain.name] = domain;\n        }\n        for (const domain of allDdlObjects.added.domains) {\n            delete existingDomainMap[domain.name];\n        }\n        const unmodifiedDomains = [];\n        for (const domainName in existingDomainMap) {\n            unmodifiedDomains.push(existingDomainMap[domainName]);\n        }\n        const existingApplicationMap = {};\n        for (const application of lastTerminalState.applications) {\n            existingApplicationMap[application.fullName] = application;\n        }\n        for (const application of allDdlObjects.added.applications) {\n            delete existingApplicationMap[application.fullName];\n            lastTerminalState.applicationMapByFullName\n                .set(application.fullName, application);\n        }\n        const unmodifiedApplications = [];\n        for (const applicationName in existingApplicationMap) {\n            unmodifiedApplications.push(existingApplicationMap[applicationName]);\n        }\n        this.terminalStore.state.next({\n            ...lastTerminalState,\n            domains: [\n                ...unmodifiedDomains,\n                ...allDdlObjects.added.domains\n            ],\n            applicationMapByFullName: lastTerminalState.applicationMapByFullName,\n            applications: [\n                ...unmodifiedApplications,\n                ...allDdlObjects.added.applications\n            ]\n        });\n    }\n    async initialize() {\n        const ddlObjects = await this.ddlObjectRetriever.retrieveDdlObjects();\n        const allApplicationVersionsByIds = [];\n        for (const applicationVersion of ddlObjects.applicationVersions) {\n            allApplicationVersionsByIds[applicationVersion._localId] = applicationVersion;\n        }\n        let allDdlObjects = {\n            all: ddlObjects,\n            allApplicationVersionsByIds,\n            added: ddlObjects\n        };\n        this.generateQObjectsAndPopulateStore(allDdlObjects);\n        return allDdlObjects;\n    }\n};\n__decorate([\n    Inject()\n], QueryObjectInitializer.prototype, \"ddlObjectLinker\", void 0);\n__decorate([\n    Inject()\n], QueryObjectInitializer.prototype, \"ddlObjectRetriever\", void 0);\n__decorate([\n    Inject()\n], QueryObjectInitializer.prototype, \"queryEntityClassCreator\", void 0);\n__decorate([\n    Inject()\n], QueryObjectInitializer.prototype, \"terminalStore\", void 0);\nQueryObjectInitializer = __decorate([\n    Injected()\n], QueryObjectInitializer);\nexport { QueryObjectInitializer };\n//# sourceMappingURL=QueryObjectInitializer.js.map","import { AIRPORT_DATABASE, APPLICATION_UTILS, RELATION_MANAGER } from '@airport/air-traffic-control';\nimport { APPLICATION_COLUMN_DAO, APPLICATION_DAO, APPLICATION_ENTITY_DAO, APPLICATION_PROPERTY_COLUMN_DAO, APPLICATION_PROPERTY_DAO, APPLICATION_REFERENCE_DAO, APPLICATION_RELATION_COLUMN_DAO, APPLICATION_RELATION_DAO, APPLICATION_VERSION_DAO, DOMAIN_DAO } from '@airport/airspace/lib/to_be_generated/runtime-index';\nimport { lib } from '@airport/direction-indicator';\nimport { TERMINAL_STORE } from '@airport/terminal-map';\nimport { AirportDatabasePopulator } from './AirportDatabasePopulator';\nimport { DdlObjectLinker } from './DdlObjectLinker';\nimport { DdlObjectRetriever } from './DdlObjectRetriever';\nimport { QueryEntityClassCreator } from './QueryEntityClassCreator';\nimport { QueryObjectInitializer } from './QueryObjectInitializer';\nconst takeoff = lib('takeoff');\nexport const AIRPORT_DATABASE_POPULATOR = takeoff.token({\n    class: AirportDatabasePopulator,\n    interface: 'IAirportDatabasePopulator',\n    token: 'AIRPORT_DATABASE_POPULATOR'\n});\nexport const DDL_OBJECT_LINKER = takeoff.token({\n    class: DdlObjectLinker,\n    interface: 'IDdlObjectLinker',\n    token: 'DDL_OBJECT_LINKER'\n});\nexport const DDL_OBJECT_RETRIEVER = takeoff.token({\n    class: DdlObjectRetriever,\n    interface: 'IDdlObjectRetriever',\n    token: 'DDL_OBJECT_RETRIEVER'\n});\nexport const QUERY_ENTITY_CLASS_CREATOR = takeoff.token({\n    class: QueryEntityClassCreator,\n    interface: 'IQueryEntityClassCreator',\n    token: 'QUERY_ENTITY_CLASS_CREATOR'\n});\nexport const QUERY_OBJECT_INITIALIZER = takeoff.token({\n    class: QueryObjectInitializer,\n    interface: 'IQueryObjectInitializer',\n    token: 'QUERY_OBJECT_INITIALIZER'\n});\nDDL_OBJECT_LINKER.setDependencies({\n    terminalStore: TERMINAL_STORE\n});\nDDL_OBJECT_RETRIEVER.setDependencies({\n    applicationColumnDao: APPLICATION_COLUMN_DAO,\n    applicationDao: APPLICATION_DAO,\n    applicationEntityDao: APPLICATION_ENTITY_DAO,\n    applicationPropertyColumnDao: APPLICATION_PROPERTY_COLUMN_DAO,\n    applicationPropertyDao: APPLICATION_PROPERTY_DAO,\n    applicationReferenceDao: APPLICATION_REFERENCE_DAO,\n    applicationRelationColumnDao: APPLICATION_RELATION_COLUMN_DAO,\n    applicationRelationDao: APPLICATION_RELATION_DAO,\n    applicationVersionDao: APPLICATION_VERSION_DAO,\n    domainDao: DOMAIN_DAO\n});\nQUERY_ENTITY_CLASS_CREATOR.setDependencies({\n    airportDatabase: AIRPORT_DATABASE,\n    applicationUtils: APPLICATION_UTILS,\n    relationManager: RELATION_MANAGER,\n});\nQUERY_OBJECT_INITIALIZER.setDependencies({\n    ddlObjectLinker: DDL_OBJECT_LINKER,\n    ddlObjectRetriever: DDL_OBJECT_RETRIEVER,\n    queryEntityClassCreator: QUERY_ENTITY_CLASS_CREATOR,\n    terminalStore: TERMINAL_STORE\n});\n//# sourceMappingURL=tokens.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet ApplicationInitializer = class ApplicationInitializer {\n    addNewApplicationVersionsToAll(ddlObjects) {\n        for (const applicationVersion of ddlObjects.added.applicationVersions) {\n            ddlObjects.allApplicationVersionsByIds[applicationVersion._localId] = applicationVersion;\n        }\n    }\n    async hydrate(jsonApplications, context) {\n        await this.stage(jsonApplications, context);\n        // Hydrate all DDL objects and Sequences\n        const ddlObjects = await this.queryObjectInitializer.initialize();\n        this.addNewApplicationVersionsToAll(ddlObjects);\n        this.setAirDbApplications(ddlObjects);\n        await this.sequenceGenerator.initialize(context);\n    }\n    /*\n     * Initialization scenarios:\n     *\n     * Brand new install - initialize BLUEPRINT applications\n     * Install new App - initialize New application (and any new dependency applications)\n     * Reload existing install - hydrate all applications\n     * Reload exiting App - nothing to do\n     */\n    async initialize(jsonApplications, context, checkDependencies, loadExistingApplications) {\n        const applicationsWithValidDependencies = await this.\n            getApplicationsWithValidDependencies(jsonApplications, checkDependencies);\n        const existingApplicationMap = new Map();\n        if (loadExistingApplications) {\n            const applications = await this.applicationDao.findAllWithJson();\n            for (const application of applications) {\n                existingApplicationMap.set(application.fullName, application);\n            }\n        }\n        const newJsonApplicationMap = new Map();\n        for (const jsonApplication of jsonApplications) {\n            const existingApplication = existingApplicationMap.get(this.dbApplicationUtils.\n                getFullApplication_Name(jsonApplication));\n            if (existingApplication) {\n                jsonApplication.lastIds = existingApplication.versions[0].jsonApplication.lastIds;\n            }\n            else {\n                newJsonApplicationMap.set(this.dbApplicationUtils.\n                    getFullApplication_Name(jsonApplication), jsonApplication);\n            }\n        }\n        let checkedApplicationsWithValidDependencies = [];\n        for (const jsonApplication of applicationsWithValidDependencies) {\n            const existingApplication = existingApplicationMap.get(this.dbApplicationUtils.\n                getFullApplication_Name(jsonApplication));\n            if (!existingApplication) {\n                checkedApplicationsWithValidDependencies.push(jsonApplication);\n                await this.applicationBuilder.build(jsonApplication, existingApplicationMap, newJsonApplicationMap, context);\n            }\n        }\n        const allDdlObjects = await this.applicationComposer.compose(checkedApplicationsWithValidDependencies, {\n            terminalStore: this.terminalStore\n        });\n        this.addNewApplicationVersionsToAll(allDdlObjects);\n        this.queryObjectInitializer.generateQObjectsAndPopulateStore(allDdlObjects);\n        this.setAirDbApplications(allDdlObjects);\n        await this.transactionManager.transactInternal(async (_transaction, context) => {\n            const newSequences = await this.applicationBuilder.buildAllSequences(applicationsWithValidDependencies, context);\n            await this.sequenceGenerator.initialize(context, newSequences);\n            await this.applicationRecorder.record(allDdlObjects.added, context);\n        }, context);\n    }\n    async initializeForAIRportApp(jsonApplication) {\n        const applicationsWithValidDependencies = await this.\n            getApplicationsWithValidDependencies([jsonApplication], false);\n        const ddlObjects = await this.applicationComposer.compose(applicationsWithValidDependencies, {\n            deepTraverseReferences: true,\n            terminalStore: this.terminalStore\n        });\n        this.addNewApplicationVersionsToAll(ddlObjects);\n        this.queryObjectInitializer.generateQObjectsAndPopulateStore(ddlObjects);\n        this.setAirDbApplications(ddlObjects);\n    }\n    async stage(jsonApplications, context) {\n        // Temporarily Initialize application DDL objects and Sequences to allow for normal hydration\n        const tempDdlObjects = await this.applicationComposer.compose(jsonApplications, {\n            terminalStore: this.terminalStore\n        });\n        this.addNewApplicationVersionsToAll(tempDdlObjects);\n        this.queryObjectInitializer.generateQObjectsAndPopulateStore(tempDdlObjects);\n        this.setAirDbApplications(tempDdlObjects);\n        const newSequences = await this.applicationBuilder.stageSequences(jsonApplications, context);\n        await this.sequenceGenerator.tempInitialize(context, newSequences);\n    }\n    async wait(milliseconds) {\n        return new Promise((resolve, _reject) => {\n            setTimeout(() => {\n                resolve();\n            }, milliseconds);\n        });\n    }\n    async getApplicationsWithValidDependencies(jsonApplications, checkDependencies) {\n        const jsonApplicationsToInstall = [];\n        for (const jsonApplication of jsonApplications) {\n            await this.applicationChecker.check(jsonApplication);\n            const existingApplication = this.applicationLocator.locateExistingApplicationVersionRecord(jsonApplication, this.terminalStore);\n            if (existingApplication) {\n                // Nothing needs to be done, we already have this application version\n                continue;\n            }\n            jsonApplicationsToInstall.push(jsonApplication);\n        }\n        let applicationsWithValidDependencies;\n        if (checkDependencies) {\n            const applicationReferenceCheckResults = await this.applicationChecker\n                .checkDependencies(jsonApplicationsToInstall);\n            if (applicationReferenceCheckResults.applicationsInNeedOfAdditionalDependencies.length) {\n                // const\n                for (let i = 0; i < applicationReferenceCheckResults.neededDependencies.length; i++) {\n                    const neededDependency = applicationReferenceCheckResults.neededDependencies[i];\n                    const fullApplication_Name = this.dbApplicationUtils.\n                        getFullApplication_Name(neededDependency);\n                    await this.nativeInitializeApplication(neededDependency.domain, neededDependency.name, fullApplication_Name);\n                }\n            }\n            applicationsWithValidDependencies = [\n                ...applicationReferenceCheckResults.applicationsWithValidDependencies,\n                ...applicationReferenceCheckResults.applicationsInNeedOfAdditionalDependencies\n            ];\n        }\n        else {\n            applicationsWithValidDependencies = jsonApplicationsToInstall;\n        }\n        return applicationsWithValidDependencies;\n    }\n    setAirDbApplications(ddlObjects) {\n        for (let application of ddlObjects.all.applications) {\n            this.airportDatabase.applications[application.index] = application;\n        }\n    }\n};\n__decorate([\n    Inject()\n], ApplicationInitializer.prototype, \"airportDatabase\", void 0);\n__decorate([\n    Inject()\n], ApplicationInitializer.prototype, \"applicationBuilder\", void 0);\n__decorate([\n    Inject()\n], ApplicationInitializer.prototype, \"applicationChecker\", void 0);\n__decorate([\n    Inject()\n], ApplicationInitializer.prototype, \"applicationComposer\", void 0);\n__decorate([\n    Inject()\n], ApplicationInitializer.prototype, \"applicationDao\", void 0);\n__decorate([\n    Inject()\n], ApplicationInitializer.prototype, \"applicationLocator\", void 0);\n__decorate([\n    Inject()\n], ApplicationInitializer.prototype, \"applicationRecorder\", void 0);\n__decorate([\n    Inject()\n], ApplicationInitializer.prototype, \"dbApplicationUtils\", void 0);\n__decorate([\n    Inject()\n], ApplicationInitializer.prototype, \"queryObjectInitializer\", void 0);\n__decorate([\n    Inject()\n], ApplicationInitializer.prototype, \"sequenceGenerator\", void 0);\n__decorate([\n    Inject()\n], ApplicationInitializer.prototype, \"terminalStore\", void 0);\n__decorate([\n    Inject()\n], ApplicationInitializer.prototype, \"transactionManager\", void 0);\nApplicationInitializer = __decorate([\n    Injected()\n], ApplicationInitializer);\nexport { ApplicationInitializer };\n//# sourceMappingURL=ApplicationInitializer.js.map","import { AIRPORT_DATABASE } from '@airport/air-traffic-control';\nimport { SEQUENCE_DAO } from '@airport/airport-code';\nimport { APPLICATION_COLUMN_DAO, APPLICATION_DAO, APPLICATION_ENTITY_DAO, APPLICATION_PROPERTY_COLUMN_DAO, APPLICATION_PROPERTY_DAO, APPLICATION_REFERENCE_DAO, APPLICATION_RELATION_COLUMN_DAO, APPLICATION_RELATION_DAO, APPLICATION_VERSION_DAO, DOMAIN_DAO } from '@airport/airspace/lib/to_be_generated/runtime-index';\nimport { lib } from '@airport/direction-indicator';\nimport { DB_APPLICATION_UTILS, SEQUENCE_GENERATOR } from '@airport/ground-control';\nimport { QUERY_OBJECT_INITIALIZER } from '@airport/takeoff';\nimport { DOMAIN_RETRIEVER, STORE_DRIVER, TERMINAL_STORE, TRANSACTION_MANAGER } from '@airport/terminal-map';\nimport { ApplicationInitializer } from './ApplicationInitializer';\nimport { SqlSchemaBuilder } from './builder/SqlSchemaBuilder';\nimport { ApplicationChecker } from './checker/ApplicationChecker';\nimport { ApplicationLocator } from './locator/ApplicationLocator';\nimport { ApplicationComposer } from './recorder/ApplicationComposer';\nimport { ApplicationRecorder } from './recorder/ApplicationRecorder';\nconst landing = lib('landing');\nexport const ABSTRACT_APPLICATION_INITIALIZER = landing.token({\n    class: ApplicationInitializer,\n    interface: 'class ApplicationInitializer',\n    token: 'ABSTRACT_APPLICATION_INITIALIZER'\n});\nexport const APPLICATION_BUILDER = landing.token({\n    class: null,\n    interface: 'ISchemaBuilder',\n    token: 'APPLICATION_BUILDER'\n});\nexport const APPLICATION_CHECKER = landing.token({\n    class: ApplicationChecker,\n    interface: 'IApplicationChecker',\n    token: 'APPLICATION_CHECKER'\n});\nexport const APPLICATION_COMPOSER = landing.token({\n    class: ApplicationComposer,\n    interface: 'IApplicationComposer',\n    token: 'APPLICATION_COMPOSER'\n});\nexport const APPLICATION_LOCATOR = landing.token({\n    class: ApplicationLocator,\n    interface: 'IApplicationLocator',\n    token: 'APPLICATION_LOCATOR'\n});\nexport const APPLICATION_RECORDER = landing.token({\n    class: ApplicationRecorder,\n    interface: 'IApplicationRecorder',\n    token: 'APPLICATION_RECORDER'\n});\nexport const SQL_SCHEMA_BUILDER = landing.token({\n    class: SqlSchemaBuilder,\n    interface: 'class SqlSchemaBuilder',\n    token: 'SQL_SCHEMA_BUILDER'\n});\nABSTRACT_APPLICATION_INITIALIZER.setDependencies({\n    airportDatabase: AIRPORT_DATABASE,\n    applicationBuilder: APPLICATION_BUILDER,\n    applicationChecker: APPLICATION_CHECKER,\n    applicationComposer: APPLICATION_COMPOSER,\n    applicationDao: APPLICATION_DAO,\n    applicationLocator: APPLICATION_LOCATOR,\n    applicationRecorder: APPLICATION_RECORDER,\n    dbApplicationUtils: DB_APPLICATION_UTILS,\n    queryObjectInitializer: QUERY_OBJECT_INITIALIZER,\n    sequenceGenerator: SEQUENCE_GENERATOR,\n    terminalStore: TERMINAL_STORE,\n    transactionManager: TRANSACTION_MANAGER\n});\nAPPLICATION_BUILDER.setDependencies({\n    airportDatabase: AIRPORT_DATABASE\n});\nAPPLICATION_CHECKER.setDependencies({\n    applicationDao: APPLICATION_DAO,\n    dbApplicationUtils: DB_APPLICATION_UTILS\n});\nAPPLICATION_COMPOSER.setDependencies({\n    applicationLocator: APPLICATION_LOCATOR,\n    dbApplicationUtils: DB_APPLICATION_UTILS,\n    domainRetriever: DOMAIN_RETRIEVER,\n    terminalStore: TERMINAL_STORE\n});\nAPPLICATION_LOCATOR.setDependencies({\n    dbApplicationUtils: DB_APPLICATION_UTILS,\n});\nAPPLICATION_RECORDER.setDependencies({\n    applicationColumnDao: APPLICATION_COLUMN_DAO,\n    applicationDao: APPLICATION_DAO,\n    applicationEntityDao: APPLICATION_ENTITY_DAO,\n    applicationPropertyColumnDao: APPLICATION_PROPERTY_COLUMN_DAO,\n    applicationPropertyDao: APPLICATION_PROPERTY_DAO,\n    applicationRecorder: APPLICATION_RECORDER,\n    applicationReferenceDao: APPLICATION_REFERENCE_DAO,\n    applicationRelationColumnDao: APPLICATION_RELATION_COLUMN_DAO,\n    applicationRelationDao: APPLICATION_RELATION_DAO,\n    applicationVersionDao: APPLICATION_VERSION_DAO,\n    domainDao: DOMAIN_DAO,\n    transactionManager: TRANSACTION_MANAGER\n});\nSQL_SCHEMA_BUILDER.setDependencies({\n    airportDatabase: AIRPORT_DATABASE,\n    dbApplicationUtils: DB_APPLICATION_UTILS,\n    sequenceDao: SEQUENCE_DAO,\n    storeDriver: STORE_DRIVER\n});\n//# sourceMappingURL=tokens.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { ApplicationInitializer } from \"@airport/landing\";\nlet WebApplicationInitializer = class WebApplicationInitializer extends ApplicationInitializer {\n    async nativeInitializeApplication(domain, application, fullApplication_Name) {\n        if (this.terminalStore.getReceiver().initializedApps\n            .has(fullApplication_Name)) {\n            return;\n        }\n        let appIframes = document.getElementsByName(fullApplication_Name);\n        let appIframe;\n        if (!appIframes.length) {\n            appIframe = document.createElement('iframe');\n            appIframe.src = 'http://' + domain + '/AIRport/apps/'\n                + application + '/index.html';\n            appIframe.name = fullApplication_Name;\n            appIframe.style.display = 'none';\n            document.body.appendChild(appIframe);\n        }\n        else {\n            appIframe = appIframes[0];\n        }\n        while (!this.terminalStore.getReceiver().initializedApps\n            .has(fullApplication_Name)) {\n            await this.wait(100);\n        }\n        this.terminalStore.getApplicationInitializer()\n            .applicationWindowMap.set(fullApplication_Name, appIframe.contentWindow);\n        this.terminalStore.getApplicationInitializer()\n            .initializingApplicationMap.set(fullApplication_Name, false);\n    }\n};\n__decorate([\n    Inject()\n], WebApplicationInitializer.prototype, \"terminalStore\", void 0);\nWebApplicationInitializer = __decorate([\n    Injected()\n], WebApplicationInitializer);\nexport { WebApplicationInitializer };\n//# sourceMappingURL=WebApplicationInitializer.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { IsolateMessageType, } from '@airport/apron';\nimport { TransactionalReceiver } from '@airport/terminal';\nimport { map } from 'rxjs/operators';\nlet WebTransactionalReceiver = class WebTransactionalReceiver extends TransactionalReceiver {\n    init() {\n        const ownDomain = window.location.hostname;\n        const mainDomainFragments = ownDomain.split('.');\n        if (mainDomainFragments[0] === 'www'\n            || mainDomainFragments[0].startsWith('random_')) {\n            mainDomainFragments.splice(0, 1);\n        }\n        const domainPrefix = '.' + mainDomainFragments.join('.');\n        // set domain to a random value so that an iframe cannot directly invoke logic in this domain\n        if (document.domain !== 'localhost') {\n            document.domain = 'random_' + Math.random() + '_' + Math.random() + domainPrefix;\n        }\n        const webReciever = this.terminalStore.getWebReceiver();\n        webReciever.domainPrefix = domainPrefix;\n        webReciever.mainDomainFragments = mainDomainFragments;\n    }\n    handleClientRequest(message) {\n        if (message.__received__) {\n            return;\n        }\n        message.__received__ = true;\n        // All requests need to have a application signature\n        // to know what application is being communicated to/from\n        if (!this.hasValidApplicationInfo(message)) {\n            return;\n        }\n        if (this.webMessageReciever.needMessageSerialization()) {\n            throw new Error(\"Deserialization is not yet implemented.\");\n            // FIXME: deserialize message\n        }\n        const webReciever = this.terminalStore.getWebReceiver();\n        if (webReciever.onClientMessageCallback) {\n            const receivedDate = new Date();\n            message.__receivedTime__ = receivedDate.getTime();\n            webReciever.onClientMessageCallback(message);\n        }\n        switch (message.category) {\n            case 'FromClient':\n                const fromClientRedirectedMessage = {\n                    ...message,\n                    __received__: false,\n                    __receivedTime__: null,\n                    category: 'FromClientRedirected'\n                };\n                this.handleFromClientRequest(fromClientRedirectedMessage).then();\n                break;\n            case 'IsConnectionReady':\n                this.ensureConnectionIsReady(message).then();\n                break;\n        }\n    }\n    handleAppRequest(message, messageOrigin, source) {\n        if (message.__received__) {\n            return;\n        }\n        message.__received__ = true;\n        // All requests need to have a application signature\n        // to know what application is being communicated to/from\n        if (!this.hasValidApplicationInfo(message)) {\n            return;\n        }\n        const webReciever = this.terminalStore.getWebReceiver();\n        if (webReciever.onClientMessageCallback) {\n            const receivedDate = new Date();\n            message.__receivedTime__ = receivedDate.getTime();\n            webReciever.onClientMessageCallback(message);\n        }\n        switch (message.category) {\n            case 'ToDb':\n                this.handleIsolateMessage(message, messageOrigin, source).then();\n                break;\n            case 'ToClient':\n                const interAppApiCallRequest = webReciever.pendingInterAppApiCallMessageMap.get(message.id);\n                const context = {};\n                this.endApiCall({\n                    application: message.application,\n                    domain: message.domain,\n                    methodName: message.methodName,\n                    objectName: message.objectName,\n                    transactionId: message.transactionId\n                }, message.errorMessage, context).then((success) => {\n                    if (interAppApiCallRequest) {\n                        interAppApiCallRequest.resolve(message);\n                    }\n                    else {\n                        const toClientRedirectedMessage = {\n                            ...message,\n                            __received__: false,\n                            __receivedTime__: null,\n                            application: message.application,\n                            args: message.args,\n                            category: 'ToClientRedirected',\n                            domain: message.domain,\n                            errorMessage: message.errorMessage,\n                            methodName: message.methodName,\n                            objectName: message.objectName,\n                            payload: message.payload,\n                            protocol: message.protocol,\n                            transactionId: message.transactionId\n                        };\n                        if (!success) {\n                            toClientRedirectedMessage.errorMessage = context.errorMessage;\n                            toClientRedirectedMessage.payload = null;\n                        }\n                        this.handleToClientRequest(toClientRedirectedMessage, messageOrigin)\n                            .then();\n                    }\n                });\n                break;\n            default:\n                break;\n        }\n    }\n    onMessage(callback) {\n        const webReciever = this.terminalStore.getWebReceiver();\n        webReciever.onClientMessageCallback = callback;\n    }\n    async nativeStartApiCall(message, context) {\n        return await this.startApiCall(message, context, async () => {\n            const fullApplication_Name = this.dbApplicationUtils.\n                getFullApplication_NameFromDomainAndName(message.domain, message.application);\n            const frameWindow = this.getFrameWindow(fullApplication_Name);\n            if (frameWindow) {\n                // Forward the request to the correct application iframe\n                frameWindow.postMessage(message, '*');\n            }\n            else {\n                throw new Error(`No Application IFrame found for: ${fullApplication_Name}`);\n            }\n        });\n    }\n    async nativeHandleApiCall(message, context) {\n        const messageCopy = {\n            ...message\n        };\n        delete messageCopy.__received__;\n        delete messageCopy.__receivedTime__;\n        messageCopy.category = 'FromClientRedirected';\n        const startDescriptor = await this.nativeStartApiCall(messageCopy, context);\n        if (!startDescriptor.isStarted) {\n            throw new Error(context.errorMessage);\n        }\n        let args, errorMessage, payload, transactionId;\n        if (startDescriptor.isFramework) {\n            try {\n                const fullApplication_Name = this.dbApplicationUtils\n                    .getFullApplication_NameFromDomainAndName(message.domain, message.application);\n                const application = this.terminalStore\n                    .getApplicationMapByFullName().get(fullApplication_Name);\n                if (!application) {\n                    throw new Error(`Could not find AIRport Framework Application: ${fullApplication_Name}`);\n                }\n                payload = await this.localApiServer.coreHandleRequest(message, application.currentVersion[0].applicationVersion.jsonApplication.versions[0].api);\n            }\n            catch (e) {\n                errorMessage = e.message ? e.message : e;\n                console.error(e);\n            }\n            args = message.args;\n            transactionId = message.transactionId;\n        }\n        else {\n            const replyMessage = await new Promise((resolve) => {\n                this.terminalStore.getWebReceiver().pendingInterAppApiCallMessageMap.set(messageCopy.id, {\n                    message: {\n                        ...messageCopy,\n                        category: 'FromDb',\n                        type: IsolateMessageType.CALL_API\n                    },\n                    resolve\n                });\n            });\n            args = replyMessage.args;\n            errorMessage = replyMessage.errorMessage;\n            payload = replyMessage.payload;\n            transactionId = replyMessage.transactionId;\n        }\n        const response = {\n            ...messageCopy,\n            category: 'FromDb',\n            args,\n            errorMessage,\n            payload,\n            transactionId\n        };\n        return response;\n    }\n    async ensureConnectionIsReady(message) {\n        const fullApplication_Name = this.dbApplicationUtils.\n            getFullApplication_NameFromDomainAndName(message.domain, message.application);\n        const applicationInitializing = this.terminalStore.getApplicationInitializer()\n            .initializingApplicationMap.get(fullApplication_Name);\n        if (applicationInitializing) {\n            return;\n        }\n        const applicationWindow = this.terminalStore.getApplicationInitializer()\n            .applicationWindowMap.get(fullApplication_Name);\n        if (!applicationWindow) {\n            this.terminalStore.getApplicationInitializer()\n                .initializingApplicationMap.set(fullApplication_Name, true);\n            await this.applicationInitializer.nativeInitializeApplication(message.domain, message.application, fullApplication_Name);\n        }\n        const connectionIsReadyMessage = {\n            application: message.application,\n            args: message.args,\n            category: 'ConnectionIsReady',\n            domain: message.domain,\n            errorMessage: null,\n            id: message.id,\n            hostDomain: message.hostDomain,\n            hostProtocol: message.hostProtocol,\n            methodName: message.methodName,\n            objectName: message.objectName,\n            protocol: window.location.protocol,\n            payload: null,\n            transactionId: message.transactionId\n        };\n        if (this.webMessageReciever.needMessageSerialization()) {\n            // FIXME: serialize message\n        }\n        this.webMessageReciever.sendMessageToClient(connectionIsReadyMessage);\n    }\n    hasValidApplicationInfo(message) {\n        return typeof message.domain === 'string' && message.domain.length >= 3\n            && typeof message.application === 'string' && message.application.length >= 3;\n    }\n    async handleFromClientRequest(message) {\n        const webReciever = this.terminalStore.getWebReceiver();\n        let numPendingMessagesFromHost = webReciever.pendingHostCounts.get(message.domain);\n        if (!numPendingMessagesFromHost) {\n            numPendingMessagesFromHost = 0;\n        }\n        if (numPendingMessagesFromHost > 4) {\n            // Prevent hosts from making local 'Denial of Service' attacks\n            return;\n        }\n        const fullApplication_Name = this.dbApplicationUtils.\n            getFullApplication_NameFromDomainAndName(message.domain, message.application);\n        let numPendingMessagesForApplication = webReciever.pendingApplicationCounts.get(fullApplication_Name);\n        if (!numPendingMessagesForApplication) {\n            numPendingMessagesForApplication = 0;\n        }\n        if (numPendingMessagesForApplication === -1) {\n            // Already could not install the application, may be a DOS attack, return right away\n            return;\n        }\n        webReciever.pendingHostCounts.set(message.domain, numPendingMessagesFromHost + 1);\n        webReciever.pendingApplicationCounts.set(fullApplication_Name, numPendingMessagesForApplication + 1);\n        if (!await this.ensureApplicationIsInstalled(fullApplication_Name)) {\n            this.relyToClientWithError(message, `Application is not installed`);\n            return;\n        }\n        const context = {};\n        if (!await this.nativeStartApiCall(message, context)) {\n            this.relyToClientWithError(message, context.errorMessage);\n        }\n    }\n    relyToClientWithError(message, errorMessage) {\n        const toClientRedirectedMessage = {\n            __received__: false,\n            __receivedTime__: null,\n            application: message.application,\n            args: message.args,\n            category: 'ToClientRedirected',\n            domain: message.domain,\n            errorMessage,\n            id: message.id,\n            hostDomain: message.hostDomain,\n            hostProtocol: message.hostProtocol,\n            methodName: message.methodName,\n            objectName: message.objectName,\n            payload: null,\n            protocol: message.protocol,\n            transactionId: message.transactionId\n        };\n        this.replyToClientRequest(toClientRedirectedMessage);\n    }\n    getFrameWindow(fullApplication_Name) {\n        const iframe = document\n            .getElementsByName(fullApplication_Name);\n        if (!iframe || !iframe[0]) {\n            return null;\n        }\n        return iframe[0].contentWindow;\n    }\n    async handleToClientRequest(message, messageOrigin) {\n        if (!await this.messageIsFromValidApp(message, messageOrigin)) {\n            return;\n        }\n        this.replyToClientRequest(message);\n    }\n    replyToClientRequest(message) {\n        const fullApplication_Name = this.dbApplicationUtils.\n            getFullApplication_NameFromDomainAndName(message.domain, message.application);\n        const webReciever = this.terminalStore.getWebReceiver();\n        let numMessagesFromHost = webReciever.pendingHostCounts.get(message.domain);\n        if (numMessagesFromHost > 0) {\n            webReciever.pendingHostCounts.set(message.domain, numMessagesFromHost - 1);\n        }\n        let numMessagesForApplication = webReciever.pendingApplicationCounts.get(fullApplication_Name);\n        if (numMessagesForApplication > 0) {\n            webReciever.pendingApplicationCounts.set(message.domain, numMessagesForApplication - 1);\n        }\n        // Forward the request to the source client\n        if (this.webMessageReciever.needMessageSerialization()) {\n            // FIXME: serialize message\n        }\n        this.webMessageReciever.sendMessageToClient(message);\n    }\n    async ensureApplicationIsInstalled(fullApplication_Name) {\n        if (!fullApplication_Name) {\n            return false;\n        }\n        return !!this.terminalStore.getApplicationInitializer()\n            .applicationWindowMap.get(fullApplication_Name);\n    }\n    async messageIsFromValidApp(message, messageOrigin) {\n        const applicationDomain = messageOrigin.split('//')[1];\n        const applicationDomainFragments = applicationDomain.split('.');\n        // Allow local debugging\n        if (applicationDomain.split(':')[0] === 'localhost') {\n            return true;\n        }\n        const webReciever = this.terminalStore.getWebReceiver();\n        const fullApplication_Name = this.dbApplicationUtils.\n            getFullApplication_NameFromDomainAndName(message.domain, message.application);\n        // Only accept requests from https protocol\n        if (!messageOrigin.startsWith(\"https\")\n            // and from application domains that match the fullApplication_Name\n            || applicationDomain !== fullApplication_Name + webReciever.domainPrefix) {\n            return false;\n        }\n        // Only accept requests from '${applicationName}.${mainDomain_Name}'\n        if (applicationDomainFragments.length !== webReciever.mainDomainFragments.length + 1) {\n            return false;\n        }\n        // Only accept requests from non-'www' domain (don't accept requests from self)\n        if (applicationDomainFragments[0] === 'www') {\n            return false;\n        }\n        const applicationDomainFirstFragment = applicationDomainFragments[0];\n        // check application domain-embedded signature and fullApplication_Name in message\n        // and make sure they result in a match\n        if (applicationDomainFirstFragment !== fullApplication_Name) {\n            return false;\n        }\n        // Make sure the application is installed\n        return !!this.terminalStore.getApplicationInitializer()\n            .applicationWindowMap.get(fullApplication_Name);\n    }\n    async handleIsolateMessage(message, messageOrigin, source) {\n        if (!await this.messageIsFromValidApp(message, messageOrigin)) {\n            return;\n        }\n        const webReciever = this.terminalStore.getWebReceiver();\n        const fullApplication_Name = this.dbApplicationUtils.\n            getFullApplication_NameFromDomainAndName(message.domain, message.application);\n        switch (message.type) {\n            case IsolateMessageType.SEARCH_UNSUBSCRIBE:\n                let isolateSubscriptionMap = webReciever.subsriptionMap.get(fullApplication_Name);\n                if (!isolateSubscriptionMap) {\n                    return;\n                }\n                let subscription = isolateSubscriptionMap.get(message.id);\n                if (!subscription) {\n                    return;\n                }\n                subscription.unsubscribe();\n                isolateSubscriptionMap.delete(message.id);\n                return;\n        }\n        let response;\n        if (message.type === IsolateMessageType.CALL_API) {\n            response = await this.nativeHandleApiCall(message, {\n                startedAt: new Date()\n            });\n        }\n        else {\n            response = await this.processMessage(message);\n        }\n        if (!response) {\n            return;\n        }\n        let shemaDomain_Name = fullApplication_Name + '.' + webReciever.localDomain;\n        switch (message.type) {\n            case IsolateMessageType.SEARCH:\n            case IsolateMessageType.SEARCH_ONE:\n                const observableDataResult = response;\n                observableDataResult.result.pipe(map(value => {\n                    window.postMessage(value, shemaDomain_Name);\n                }));\n                const subscription = observableDataResult.result.subscribe();\n                let isolateSubscriptionMap = webReciever.subsriptionMap.get(fullApplication_Name);\n                if (!isolateSubscriptionMap) {\n                    isolateSubscriptionMap = new Map();\n                    webReciever.subsriptionMap.set(fullApplication_Name, isolateSubscriptionMap);\n                }\n                isolateSubscriptionMap.set(message.id, subscription);\n                return;\n        }\n        source.postMessage(response, '*');\n    }\n};\n__decorate([\n    Inject()\n], WebTransactionalReceiver.prototype, \"applicationInitializer\", void 0);\n__decorate([\n    Inject()\n], WebTransactionalReceiver.prototype, \"dbApplicationUtils\", void 0);\n__decorate([\n    Inject()\n], WebTransactionalReceiver.prototype, \"localApiServer\", void 0);\n__decorate([\n    Inject()\n], WebTransactionalReceiver.prototype, \"terminalStore\", void 0);\n__decorate([\n    Inject()\n], WebTransactionalReceiver.prototype, \"webMessageReciever\", void 0);\nWebTransactionalReceiver = __decorate([\n    Injected()\n], WebTransactionalReceiver);\nexport { WebTransactionalReceiver };\n//# sourceMappingURL=WebTransactionalReceiver.js.map","import { LOCAL_API_SERVER } from \"@airport/apron\";\nimport { lib } from \"@airport/direction-indicator\";\nimport { DB_APPLICATION_UTILS } from \"@airport/ground-control\";\nimport { ACTOR_DAO } from '@airport/holding-pattern/lib/to_be_generated/runtime-index';\nimport { APPLICATION_DAO } from '@airport/airspace/lib/to_be_generated/runtime-index';\nimport { DATABASE_MANAGER, INTERNAL_RECORD_MANAGER } from \"@airport/terminal\";\nimport { APPLICATION_INITIALIZER, DOMAIN_RETRIEVER, TERMINAL_SESSION_MANAGER, TERMINAL_STORE, TRANSACTIONAL_RECEIVER, TRANSACTIONAL_SERVER } from \"@airport/terminal-map\";\nimport { DomainRetriever } from \"./DomainRetriever\";\nimport { WebApplicationInitializer } from \"./WebApplicationInitializer\";\nimport { WebMesageReceiver } from \"./WebMessageReceiver\";\nimport { WebTransactionalReceiver } from \"./WebTransactionalReceiver\";\nconst webTerminal = lib('web-terminal');\nDOMAIN_RETRIEVER.setClass(DomainRetriever);\nAPPLICATION_INITIALIZER.setClass(WebApplicationInitializer);\nexport const WEB_MESSAGE_RECEIVER = webTerminal.token({\n    class: WebMesageReceiver,\n    interface: 'IWebMessageReceiver',\n    token: 'WEB_MESSAGE_RECEIVER'\n});\nAPPLICATION_INITIALIZER.setDependencies({\n    terminalStore: TERMINAL_STORE\n});\nWEB_MESSAGE_RECEIVER.setDependencies({\n    transactionalReceiver: TRANSACTIONAL_RECEIVER\n});\nTRANSACTIONAL_RECEIVER.setClass(WebTransactionalReceiver);\nTRANSACTIONAL_RECEIVER.setDependencies({\n    actorDao: ACTOR_DAO,\n    applicationDao: APPLICATION_DAO,\n    applicationInitializer: APPLICATION_INITIALIZER,\n    databaseManager: DATABASE_MANAGER,\n    dbApplicationUtils: DB_APPLICATION_UTILS,\n    localApiServer: LOCAL_API_SERVER,\n    internalRecordManager: INTERNAL_RECORD_MANAGER,\n    terminalSessionManager: TERMINAL_SESSION_MANAGER,\n    terminalStore: TERMINAL_STORE,\n    transactionalServer: TRANSACTIONAL_SERVER,\n    webMessageReciever: WEB_MESSAGE_RECEIVER\n});\n//# sourceMappingURL=tokens.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ensureChildArray, setSeqGen, } from '@airport/ground-control';\nimport { Inject, Injected } from '@airport/direction-indicator';\n/**\n * Assumptions: 7/4/2019\n *\n * 1. Only a single process will be inserting records at any given point in time\n * a)  This means that the service worker running the the background will only\n * receive and temporarily store data (in IndexedDb, but won't be inserting\n * proper relational records)\n * b)  This also means that web-workers won't be doing parallel inserts\n *\n * In general, this is consistent with SqLites policy of only one modifying\n * operation at a time (while possibly multiple read ops)\n *\n *\n * With these assumptions in place, it is safe to synchronize sequence retrieval\n * in-memory.   Hence, SequenceBlocks are retired in favor of a simpler\n * Sequence-only solution\n *\n */\nlet SequenceGenerator = class SequenceGenerator {\n    get sequences() {\n        return this.terminalStore.getSequenceGenerator().sequences;\n    }\n    get sequenceBlocks() {\n        return this.terminalStore.getSequenceGenerator().sequenceBlocks;\n    }\n    get generatingSequenceNumbers() {\n        return this.terminalStore.getSequenceGenerator().generatingSequenceNumbers;\n    }\n    set generatingSequenceNumbers(generatingSequenceNumbers) {\n        this.terminalStore.getSequenceGenerator().generatingSequenceNumbers\n            = generatingSequenceNumbers;\n    }\n    exists(dbEntity) {\n        const generatedColumns = dbEntity.columns.filter(dbColumn => dbColumn.isGenerated);\n        if (!generatedColumns.length) {\n            return true;\n        }\n        const applicationSequences = this.sequences[dbEntity.applicationVersion.application.index];\n        if (!applicationSequences) {\n            return false;\n        }\n        const tableSequences = applicationSequences[dbEntity.index];\n        if (!tableSequences) {\n            return false;\n        }\n        return generatedColumns.every(dbColumn => !!tableSequences[dbColumn.index]);\n    }\n    async initialize(context, sequences) {\n        if (!sequences) {\n            sequences = await this.sequenceDao.findAll();\n        }\n        this.addSequences(sequences);\n        await this.sequenceDao.incrementCurrentValues(context);\n        setSeqGen(this);\n    }\n    async tempInitialize(context, sequences) {\n        this.addSequences(sequences);\n        setSeqGen(this);\n    }\n    async generateSequenceNumbers(dbColumns, numSequencesNeeded) {\n        if (!dbColumns.length) {\n            return [];\n        }\n        await this.waitForPreviousGeneration();\n        this.generatingSequenceNumbers = true;\n        try {\n            return await this.doGenerateSequenceNumbers(dbColumns, numSequencesNeeded);\n        }\n        finally {\n            this.generatingSequenceNumbers = false;\n        }\n    }\n    /**\n     * Keeping return value as number[][] in case we ever revert back\n     * to SequenceBlock-like solution\n     * @param dbColumns\n     * @param numSequencesNeeded\n     */\n    async doGenerateSequenceNumbers(dbColumns, numSequencesNeeded) {\n        const sequentialNumbers = [];\n        for (let i = 0; i < dbColumns.length; i++) {\n            const dbColumn = dbColumns[i];\n            let numColumnSequencesNeeded = numSequencesNeeded[i];\n            const columnNumbers = ensureChildArray(sequentialNumbers, i);\n            const dbEntity = dbColumn.propertyColumns[0].property.entity;\n            const application = dbEntity.applicationVersion.application;\n            let sequenceBlock = this.sequenceBlocks[application.index][dbEntity.index][dbColumn.index];\n            const sequence = this.sequences[application.index][dbEntity.index][dbColumn.index];\n            while (numColumnSequencesNeeded && sequenceBlock) {\n                columnNumbers.push(sequence.currentValue - sequenceBlock + 1);\n                numColumnSequencesNeeded--;\n                sequenceBlock--;\n            }\n            this.sequenceBlocks[application.index][dbEntity.index][dbColumn.index] = sequenceBlock;\n            if (numColumnSequencesNeeded) {\n                const numNewSequencesNeeded = sequence.incrementBy + numColumnSequencesNeeded;\n                const newSequence = { ...sequence };\n                newSequence.currentValue += numNewSequencesNeeded;\n                await this.sequenceDao.save(newSequence);\n                this.sequences[application.index][dbEntity.index][dbColumn.index] = newSequence;\n                sequenceBlock = numNewSequencesNeeded;\n                while (numColumnSequencesNeeded) {\n                    columnNumbers.push(sequence.currentValue - sequenceBlock + 1);\n                    numColumnSequencesNeeded--;\n                    sequenceBlock--;\n                }\n                this.sequenceBlocks[application.index][dbEntity.index][dbColumn.index] = sequenceBlock;\n            }\n        }\n        return sequentialNumbers;\n    }\n    waitForPreviousGeneration() {\n        return new Promise(resolve => {\n            this.isDoneGeneratingSeqNums(resolve);\n        });\n    }\n    isDoneGeneratingSeqNums(resolve) {\n        if (this.generatingSequenceNumbers) {\n            setTimeout(() => {\n                this.isDoneGeneratingSeqNums(resolve);\n            }, 20);\n        }\n        else {\n            resolve();\n        }\n    }\n    addSequences(sequences) {\n        for (const sequence of sequences) {\n            ensureChildArray(ensureChildArray(this.sequences, sequence.applicationIndex), sequence.tableIndex)[sequence.columnIndex] = sequence;\n            sequence.currentValue += sequence.incrementBy;\n            ensureChildArray(ensureChildArray(this.sequenceBlocks, sequence.applicationIndex), sequence.tableIndex)[sequence.columnIndex] = sequence.incrementBy;\n        }\n    }\n};\n__decorate([\n    Inject()\n], SequenceGenerator.prototype, \"sequenceDao\", void 0);\n__decorate([\n    Inject()\n], SequenceGenerator.prototype, \"terminalStore\", void 0);\nSequenceGenerator = __decorate([\n    Injected()\n], SequenceGenerator);\nexport { SequenceGenerator };\nexport function injectSequenceGenerator() {\n    console.log('injecting SequenceGenerator');\n}\n//# sourceMappingURL=SequenceGenerator.js.map","import { SEQUENCE_DAO } from \"@airport/airport-code\";\nimport { SEQUENCE_GENERATOR } from \"@airport/ground-control\";\nimport { TERMINAL_STORE } from \"@airport/terminal-map\";\nimport { SequenceGenerator } from \"./SequenceGenerator\";\nSEQUENCE_GENERATOR.setClass(SequenceGenerator);\nSEQUENCE_GENERATOR.setDependencies({\n    sequenceDao: SEQUENCE_DAO,\n    terminalStore: TERMINAL_STORE\n});\n//# sourceMappingURL=tokens.js.map","import { QueryType } from '@airport/ground-control';\nimport { SQLDialect, SqlDriver } from '@airport/fuel-hydrant-system';\n/**\n * Created by Papa on 11/27/2016.\n */\nexport class SqLiteDriver extends SqlDriver {\n    constructor() {\n        super();\n        this.maxValues = 999;\n    }\n    composeTableName(applicationName, tableName) {\n        return `${applicationName}__${tableName}`;\n    }\n    async doesTableExist(applicationName, tableName, context) {\n        const matchingTableNames = await this.findNative(\n        // ` SELECT tbl_name, sql from sqlite_master WHERE type = '${tableName}'`,\n        `SELECT\r\n\ttbl_name\r\nfrom\r\n\tsqlite_master\r\nWHERE\r\n\ttype = 'table'\r\n\tAND tbl_name = '${applicationName}__${tableName}'`, [], context);\n        return this.getNumberOfRows(matchingTableNames) === 1;\n    }\n    getSelectQuerySuffix(jsonQuery, context) {\n        return '';\n    }\n    getNumberOfRows(result) {\n        return this.getRows(result).length;\n    }\n    async dropTable(applicationName, tableName, context) {\n        const matchingTableNames = await this.findNative(`DROP TABLE '${applicationName}__${tableName}'`, [], context);\n        return matchingTableNames.length === 1;\n    }\n    async findNative(sqlQuery, parameters, context) {\n        let nativeParameters = parameters.map((value) => this.convertValueIn(value));\n        return await this.query(QueryType.SELECT, sqlQuery, nativeParameters, context);\n    }\n    async executeNative(sql, parameters, context) {\n        return await this.query(QueryType.MUTATE, sql, parameters, context);\n    }\n    convertValueIn(value) {\n        switch (typeof value) {\n            case 'boolean':\n                return value ? 1 : 0;\n            case 'number':\n            case 'string':\n                return value;\n            case 'undefined':\n                return null;\n            case 'object':\n                if (!value) {\n                    return null;\n                }\n                else if (value instanceof Date) {\n                    return value.getTime();\n                }\n                else {\n                    throw new Error(`Unexpected non-date object ${value}`);\n                }\n            default:\n                throw new Error(`Unexpected typeof value: ${typeof value}`);\n        }\n    }\n    isValueValid(value, sqlDataType, context) {\n        throw new Error('Method not implemented.');\n        // switch (sqlDataType) {\n        // \tcase SQLDataType.DATE:\n        // \tcase SQLDataType.NUMBER:\n        // }\n        // return false\n    }\n    async initTables(createQueries) {\n        for (let i = 0; i < createQueries.length; i++) {\n            let currentQuery = createQueries[i];\n            await currentQuery;\n        }\n    }\n    getDialect() {\n        return SQLDialect.SQLITE;\n    }\n}\n//# sourceMappingURL=SqLiteDriver.js.map","import { AbstractFunctionAdaptor } from '@airport/fuel-hydrant-system';\nimport { SQLDataType, SqlFunction } from '@airport/ground-control';\n/**\n * Created by Papa on 8/27/2016.\n */\nexport class SqLiteQueryAdaptor {\n    constructor() {\n        this.functionAdaptor = new SqlLiteFunctionAdaptor();\n    }\n    getParameterReference(parameterReferences, newReference) {\n        return '?';\n    }\n    dateToDbQuery(date) {\n        let milliseconds = date.getTime();\n        return '' + milliseconds;\n    }\n    getResultArray(rawResponse) {\n        return rawResponse.res.rows;\n    }\n    getResultCellValue(resultRow, columnName, index, dataType, defaultValue) {\n        let value = this.getResultCellRawValue(resultRow, columnName, index, dataType, defaultValue);\n        switch (dataType) {\n            case SQLDataType.BOOLEAN:\n                if (value !== null) {\n                    return !!value;\n                }\n                break;\n            case SQLDataType.DATE:\n                if (value !== null) {\n                    return new Date(value);\n                }\n                break;\n            case SQLDataType.JSON:\n                if (value !== null) {\n                    return JSON.parse(value);\n                }\n                break;\n            case SQLDataType.ANY:\n            case SQLDataType.NUMBER:\n            case SQLDataType.STRING:\n                return value;\n            default:\n                throw new Error(`Unexpected data type for column ${columnName}`);\n        }\n    }\n    getFunctionAdaptor() {\n        return this.functionAdaptor;\n    }\n    getOffsetFragment(offset) {\n        return `\r\nOFFSET\r\n\t${offset}`;\n    }\n    getLimitFragment(limit) {\n        return `\r\nLIMIT\r\n\t${limit}`;\n    }\n    getParameterValue(parameter) {\n        return this.getValue(parameter.value);\n    }\n    getValue(value, allowArrays = true) {\n        switch (typeof value) {\n            case 'boolean':\n                return value ? '1' : '0';\n            case 'number':\n            case 'string':\n                return value;\n            case 'object':\n                if (value instanceof Date) {\n                    return value.getTime();\n                }\n                else if (value instanceof Array) {\n                    return value.map(aValue => this.getValue(aValue, false));\n                }\n                throw new Error(`Unexpected object as a parameter.`);\n            default:\n                throw new Error(`Unexpected type of parameter '${typeof value}.'`);\n        }\n    }\n}\nexport class SqlLiteFunctionAdaptor extends AbstractFunctionAdaptor {\n    getFunctionCall(jsonFunctionCall, value, qEntityMapByAlias, sqlValueProvider, context) {\n        let param2;\n        switch (jsonFunctionCall.ft) {\n            case SqlFunction.ABS:\n                return `ABS(${value})`;\n            case SqlFunction.AVG:\n                return `AVG(${value})`;\n            case SqlFunction.COUNT:\n                return `COUNT(${value})`;\n            case SqlFunction.MAX:\n                return `MAX(${value})`;\n            case SqlFunction.MIN:\n                return `MIN(${value})`;\n            case SqlFunction.SUM:\n                return `SUM(${value})`;\n            case SqlFunction.UCASE:\n                return `UPPER(${value})`;\n            case SqlFunction.LCASE:\n                return `LOWER(${value})`;\n            case SqlFunction.MID:\n                let start = sqlValueProvider.getFunctionCallValue(jsonFunctionCall.p[0], context);\n                let length = sqlValueProvider.getFunctionCallValue(jsonFunctionCall.p[1], context);\n                return `SUBSTR(${value}, ${start}, ${length})`;\n            case SqlFunction.LEN:\n                return `LENGTH(${value})`;\n            case SqlFunction.ROUND:\n                let digits = sqlValueProvider.getFunctionCallValue(jsonFunctionCall.p[0], context);\n                return `ROUND(${value}, ${digits})`;\n            case SqlFunction.NOW:\n                return `DATE('now')`;\n            case SqlFunction.FORMAT:\n                let formatCall = `FORMAT('${value}', `;\n                for (let i = 0; i < jsonFunctionCall.p.length; i++) {\n                    let formatParam = jsonFunctionCall.p[i];\n                    formatParam = sqlValueProvider.getFunctionCallValue(formatParam, context);\n                    formatCall = `${formatCall}, ${formatParam}`;\n                }\n                formatCall += ')';\n                return formatCall;\n            case SqlFunction.REPLACE:\n                let param1 = sqlValueProvider.getFunctionCallValue(jsonFunctionCall.p[0], context);\n                param2 = sqlValueProvider.getFunctionCallValue(jsonFunctionCall.p[1], context);\n                return `REPLACE('${value}', ${param1}, ${param2})`;\n            case SqlFunction.TRIM:\n                return `TRIM(${value})`;\n            case SqlFunction.DISTINCT:\n                throw new Error(`Invalid placement of a distinct function`);\n            case SqlFunction.EXISTS:\n                throw new Error(`Invalid placement of an exists function`);\n            case SqlFunction.DIVIDE:\n                param2 = sqlValueProvider.getFunctionCallValue(jsonFunctionCall.p[0], context);\n                return `${value} / ${param2}`;\n            case SqlFunction.MINUS:\n                param2 = sqlValueProvider.getFunctionCallValue(jsonFunctionCall.p[0], context);\n                return `${value} - ${param2}`;\n            case SqlFunction.MULTIPLY:\n                param2 = sqlValueProvider.getFunctionCallValue(jsonFunctionCall.p[0], context);\n                return `${value} * ${param2}`;\n            case SqlFunction.PLUS:\n                param2 = sqlValueProvider.getFunctionCallValue(jsonFunctionCall.p[0], context);\n                return `${value} + ${param2}`;\n            case SqlFunction.CONCATENATE:\n                return jsonFunctionCall.p.reduce((acc, val) => {\n                    let primitiveValue = this.toString(sqlValueProvider.getFunctionCallValue(val, context));\n                    return acc + val;\n                }, this.toString(value));\n            case SqlFunction.COALESCE:\n                throw new Error('Not Implemented');\n            default:\n                throw new Error(`Unknown function type: ${jsonFunctionCall.ft}`);\n        }\n    }\n    toString(val) {\n        switch (typeof val) {\n            case 'string':\n                return val;\n            case 'boolean':\n            case 'number':\n                return val.toString();\n            case 'undefined':\n                return 'null';\n            case 'object':\n                if (val === null) {\n                    return 'null';\n                }\n                if (val instanceof Date) {\n                    return val.toJSON();\n                }\n                throw new Error(`Unsupported value for conversion to string.`);\n            default:\n                throw new Error(`Unsupported value for conversion to string.`);\n        }\n    }\n}\n//# sourceMappingURL=SqLiteQueryAdaptor.js.map","export class AbstractFunctionAdaptor {\n    getFunctionCalls(clause, innerValue, qEntityMapByAlias, sqlValueProvider, context) {\n        clause.appliedFunctions.forEach((appliedFunction) => {\n            innerValue = this.getFunctionCall(appliedFunction, innerValue, qEntityMapByAlias, sqlValueProvider, context);\n        });\n        return innerValue;\n    }\n}\n//# sourceMappingURL=SQLQueryAdaptor.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { SQLDataType, } from '@airport/ground-control';\nimport { SqlSchemaBuilder } from '@airport/landing';\nlet SqLiteApplicationBuilder = class SqLiteApplicationBuilder extends SqlSchemaBuilder {\n    async createApplication(jsonApplication, context) {\n        // Nothing to do\n    }\n    getColumnSuffix(jsonApplication, jsonEntity, jsonColumn) {\n        let primaryKeySuffix = '';\n        if (jsonColumn.notNull\n            || this.isPrimaryKeyColumn(jsonEntity, jsonColumn)) {\n            primaryKeySuffix = ' NOT NULL';\n        }\n        const suffix = primaryKeySuffix; // + autoincrementSuffix\n        switch (jsonColumn.type) {\n            case SQLDataType.ANY:\n                return suffix;\n            case SQLDataType.BOOLEAN:\n                return `INTEGER ${suffix}`;\n            case SQLDataType.DATE:\n                return `REAL ${suffix}`;\n            case SQLDataType.JSON:\n                return `TEXT ${suffix}`;\n            case SQLDataType.NUMBER:\n                if (suffix) {\n                    return `INTEGER ${suffix}`;\n                }\n                return 'REAL';\n            case SQLDataType.STRING:\n                return `TEXT ${suffix}`;\n            default:\n                throw new Error(`Unexpected data type for ${jsonApplication.name}.${jsonEntity.name}.${jsonColumn.name}`);\n        }\n    }\n    getCreateTableSuffix(jsonApplication, jsonEntity) {\n        return ` WITHOUT ROWID`;\n    }\n    async buildAllSequences(jsonApplications, context) {\n        console.log('buildAllSequences');\n        let allSequences = [];\n        for (const jsonApplication of jsonApplications) {\n            const qApplication = this.airportDatabase.QM[this.dbApplicationUtils.\n                getFullApplication_Name(jsonApplication)];\n            for (const jsonEntity of jsonApplication.versions[jsonApplication.versions.length - 1].entities) {\n                allSequences = allSequences.concat(this.buildSequences(qApplication.__dbApplication__, jsonEntity));\n            }\n        }\n        await this.sequenceDao.save(allSequences, context);\n        return allSequences;\n    }\n    stageSequences(jsonApplications, context) {\n        console.log('stageSequences');\n        let stagedSequences = [];\n        for (const jsonApplication of jsonApplications) {\n            const qApplication = this.airportDatabase.QM[this.dbApplicationUtils.\n                getFullApplication_Name(jsonApplication)];\n            for (const jsonEntity of jsonApplication.versions[jsonApplication.versions.length - 1].entities) {\n                stagedSequences = stagedSequences.concat(this.buildSequences(qApplication.__dbApplication__, jsonEntity));\n            }\n        }\n        return stagedSequences;\n    }\n    buildSequences(dbApplication, jsonEntity) {\n        const sequences = [];\n        for (const jsonColumn of jsonEntity.columns) {\n            if (!jsonColumn.isGenerated) {\n                continue;\n            }\n            let incrementBy = jsonColumn.allocationSize;\n            if (!incrementBy) {\n                incrementBy = 100;\n            }\n            sequences.push({\n                applicationIndex: dbApplication.index,\n                tableIndex: jsonEntity.index,\n                columnIndex: jsonColumn.index,\n                incrementBy,\n                currentValue: 0,\n            });\n        }\n        return sequences;\n    }\n    getIndexSql(indexName, tableName, columnNameList, unique) {\n        let uniquePrefix;\n        if (unique) {\n            uniquePrefix = ' UNIQUE';\n        }\n        else {\n            uniquePrefix = '';\n        }\n        return `CREATE${uniquePrefix} INDEX ${indexName}\r\n    ON ${tableName} (\r\n    ${columnNameList.join(', ')}\r\n    )`;\n    }\n    getForeignKeySql(tableName, foreignKeyName, foreignKeyColumnNames, referencedTableName, referencedColumnNames) {\n        // TODO: investigate adding foreign key support for SqLite.\n        // Right now there is no alter table command and it has to be baked\n        // into the CREATE TALBE command, though techniques for getting\n        // around this do exist:\n        // https://stackoverflow.com/questions/1884818/how-do-i-add-a-foreign-key-to-an-existing-sqlite-table\n        return null;\n    }\n};\n__decorate([\n    Inject()\n], SqLiteApplicationBuilder.prototype, \"airportDatabase\", void 0);\nSqLiteApplicationBuilder = __decorate([\n    Injected()\n], SqLiteApplicationBuilder);\nexport { SqLiteApplicationBuilder };\n//# sourceMappingURL=SqLiteApplicationBuilder.js.map","import { APPLICATION_BUILDER } from \"@airport/landing\";\nimport { SqLiteApplicationBuilder } from \"./SqLiteApplicationBuilder\";\nAPPLICATION_BUILDER.setClass(SqLiteApplicationBuilder);\n//# sourceMappingURL=tokens.js.map","import { SqlTransaction } from '@airport/fuel-hydrant-system';\nexport class SqlJsTransaction extends SqlTransaction {\n}\n//# sourceMappingURL=SqlJsTransaction.js.map","import { v4 as guidv4 } from \"uuid\";\nexport class SqlTransaction {\n    constructor(driver, parentTransaction) {\n        this.driver = driver;\n        this.parentTransaction = parentTransaction;\n        this.isSync = false;\n        this.initiator = {\n            application: '',\n            domain: '',\n            methodName: '',\n            objectName: ''\n        };\n        this.__container__ = driver.__container__;\n        this.id = guidv4();\n        this.type = driver.type;\n        if (parentTransaction) {\n            parentTransaction.childTransaction = this;\n        }\n    }\n    async query(queryType, query, params = [], context, saveTransaction = false) {\n        return this.driver.query(queryType, query, params, context, saveTransaction);\n    }\n    async doesTableExist(applicationName, tableName, context) {\n        return await this.driver.doesTableExist(applicationName, tableName, context);\n    }\n    async dropTable(applicationName, tableName, context) {\n        return await this.driver.dropTable(applicationName, tableName, context);\n    }\n    getEntityTableName(dbEntity, context) {\n        return this.driver.getEntityTableName(dbEntity, context);\n    }\n    getSelectQuerySuffix(jsonQuery, context) {\n        return this.driver.getSelectQuerySuffix(jsonQuery, context);\n    }\n    getTableName(application, table, context) {\n        return this.driver.getTableName(application, table, context);\n    }\n    async initialize(dbName, context) {\n        // Nothing to do\n    }\n    async startTransaction(transaction, context) {\n        throw new Error(`Nested transactions are not supported`);\n    }\n    async setupTransaction(context, parentTransaction) {\n        throw new Error(`Nested transactions are not supported`);\n    }\n    async tearDownTransaction(transaction, context) {\n        throw new Error(`Nested transactions are not supported`);\n    }\n    async commit(transaction, context) {\n        await this.driver.commit(this, context);\n    }\n    async rollback(transaction, context) {\n        await this.driver.rollback(this, context);\n    }\n    async deleteWhere(portableQuery, context) {\n        return await this.driver.deleteWhere(portableQuery, context);\n    }\n    async find(portableQuery, internalFragments, context, cachedSqlQueryId) {\n        return await this.driver.find(portableQuery, internalFragments, context, cachedSqlQueryId);\n    }\n    async findOne(portableQuery, internalFragments, context, cachedSqlQueryId) {\n        return await this.driver.findOne(portableQuery, internalFragments, context, cachedSqlQueryId);\n    }\n    async findNative(sqlQuery, parameters, context) {\n        return await this.driver.findNative(sqlQuery, parameters, context);\n    }\n    async insertValues(portableQuery, context, cachedSqlQueryId) {\n        return await this.driver.insertValues(portableQuery, context, cachedSqlQueryId);\n    }\n    async updateWhere(portableQuery, internalFragments, context) {\n        return await this.driver.updateWhere(portableQuery, internalFragments, context);\n    }\n    isValueValid(value, sqlDataType, context) {\n        return this.driver.isValueValid(value, sqlDataType, context);\n    }\n}\n//# sourceMappingURL=SqlTransaction.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { SQLDialect } from '@airport/fuel-hydrant-system';\nimport { QueryType, StoreType } from '@airport/ground-control';\nimport { SqLiteDriver } from '@airport/sqlite';\nimport { SqlJsTransaction } from './SqlJsTransaction';\nimport { Injected } from '@airport/direction-indicator';\n/**\n * Created by Papa on 11/27/2016.\n */\nlet SqlJsDriver = class SqlJsDriver extends SqLiteDriver {\n    constructor() {\n        super();\n        this.type = StoreType.SQLJS;\n    }\n    async initialize() {\n        const SQL = await initSqlJs({\n            // Required to load the wasm binary asynchronously. Of course, you can host it wherever you want\n            // You can omit locateFile completely when running in node\n            locateFile: file => `./${file}`\n        });\n        this._db = new SQL.Database();\n    }\n    async setupTransaction(context, parentTransaction) {\n        const transaction = new SqlJsTransaction(this, parentTransaction);\n        await this.internalSetupTransaction(transaction, context);\n        return transaction;\n    }\n    async internalStartTransaction(transaction, context) {\n        while (!this._db) {\n            await this.wait(50);\n        }\n        const command = `SAVEPOINT '${transaction.id}'`;\n        console.warn(command);\n        this._db.exec(command);\n    }\n    async internalCommit(transaction, context) {\n        while (!this._db) {\n            await this.wait(50);\n        }\n        const command = `RELEASE SAVEPOINT '${transaction.id}'`;\n        console.warn(command);\n        this._db.exec(command);\n    }\n    async internalRollback(transaction, context) {\n        while (!this._db) {\n            await this.wait(50);\n        }\n        const command = `ROLLBACK TO SAVEPOINT '${transaction.id}'`;\n        console.warn(command);\n        this._db.exec(command);\n    }\n    async query(queryType, query, params = [], context, saveTransaction = false) {\n        while (!this._db) {\n            await this.wait(50);\n        }\n        return new Promise((resolve, reject) => {\n            let stmt;\n            try {\n                if (!['TQ_BOOLEAN_FIELD_CHANGE', 'TQ_DATE_FIELD_CHANGE', 'TQ_NUMBER_FIELD_CHANGE', 'TQ_STRING_FIELD_CHANGE',\n                    'TQ_ENTITY_CHANGE', 'TQ_ENTITY_WHERE_CHANGE', 'TQ_TRANSACTION'].some((deltaTableName) => {\n                    return query.indexOf(deltaTableName) > -1;\n                })) {\n                    console.debug(query);\n                    console.debug(params);\n                }\n                stmt = this._db.prepare(query);\n                stmt.bind(params);\n                let results = [];\n                while (stmt.step()) {\n                    results.push(stmt.get());\n                }\n                console.debug(results);\n                resolve(results);\n            }\n            catch (error) {\n                reject(error);\n            }\n            finally {\n                if (stmt) {\n                    stmt.free();\n                }\n            }\n        });\n    }\n    handleError(error) {\n        throw error;\n    }\n    getRows(result) {\n        return result;\n    }\n    wait(milliseconds) {\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                resolve();\n            }, milliseconds);\n        });\n    }\n    getReturnValue(queryType, response) {\n        switch (queryType) {\n            case QueryType.MUTATE:\n                return response.rowsAffected;\n            case QueryType.SELECT:\n                return response.rows;\n            default:\n                return null;\n        }\n    }\n    getDialect() {\n        return SQLDialect.SQLITE;\n    }\n};\nSqlJsDriver = __decorate([\n    Injected()\n], SqlJsDriver);\nexport { SqlJsDriver };\n//# sourceMappingURL=SqlJsDriver.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { SqLiteQueryAdaptor } from \"@airport/sqlite\";\nimport { Injected } from '@airport/direction-indicator';\n/**\n * Created by Papa on 2/8/2017.\n */\nlet SqlJsQueryAdaptor = class SqlJsQueryAdaptor extends SqLiteQueryAdaptor {\n    getResultCellRawValue(resultRow, columnName, index, dataType, defaultValue) {\n        return resultRow[index];\n    }\n};\nSqlJsQueryAdaptor = __decorate([\n    Injected()\n], SqlJsQueryAdaptor);\nexport { SqlJsQueryAdaptor };\n//# sourceMappingURL=SqlJsQueryAdaptor.js.map","import { SQL_QUERY_ADAPTOR } from \"@airport/fuel-hydrant-system\";\nimport { STORE_DRIVER } from \"@airport/terminal-map\";\nimport { SqlJsDriver } from \"./SqlJsDriver\";\nimport { SqlJsQueryAdaptor } from \"./SqlJsQueryAdaptor\";\nSTORE_DRIVER.setClass(SqlJsDriver);\nSQL_QUERY_ADAPTOR.setClass(SqlJsQueryAdaptor);\n//# sourceMappingURL=tokens.js.map","import { injectTransactionalConnector, injectTransactionalServer } from '@airport/terminal';\nimport { injectAirportDatabase, injectEntityStateManager } from '@airport/tower';\nimport { injectWebReceiver } from './WebMessageReceiver';\nexport * from './DomainRetriever';\nexport * from './WebApplicationInitializer';\nexport * from './WebTransactionalReceiver';\nexport * from './WebMessageReceiver';\nexport * from './tokens';\nexport function injectTransactionalReceiver() {\n    console.log('Injecting TransactionalReceiver');\n    // injectMovingWalkway()\n    injectTransactionalConnector();\n    injectAirportDatabase();\n    injectTransactionalServer();\n    injectEntityStateManager();\n    injectWebReceiver();\n}\n//# sourceMappingURL=index.js.map",null,null,null,"import { IOC } from '@airport/direction-indicator';\nimport { injectSequenceGenerator } from '@airport/sequence';\nimport { DATABASE_MANAGER } from '@airport/terminal';\nexport * from './SqlJsDriver';\nexport * from './SqlJsQueryAdaptor';\nexport * from './SqlJsTransaction';\nexport * from './tokens';\ninjectSequenceGenerator();\nexport async function startDb(domainName) {\n    const dbManager = await IOC.get(DATABASE_MANAGER);\n    await dbManager.initWithDb(domainName, {});\n}\nexport async function closeDb() {\n}\n//# sourceMappingURL=index.js.map"],"names":["InjectionDomain","constructor","name","this","applicationMap","app","applicationName","Error","application","InjectionApplication","getApp","DOMAIN_MAP","domain","domainName","AIRPORT_DOMAIN","DependencyInjectionToken","descriptor","dependencyConfiguration","getInheritedDependencyConfiguration","class","getPath","token","setDependencies","_dependencyConfiguration","setClass","aClass","parentClass","Object","getPrototypeOf","returnedDependencyConfiguration","getClass","tokenMap","Map","autopilot","getFullName","get","interface","diToken","set","lib","libraryName","ContextType","Context","id","type","Container","__decorate","decorators","target","key","desc","d","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ContainerAccessor","getContainer","injectedObject","iocContainer","__container__","directionIndicator","AUTOPILOT_API_LOADER","CONTAINER_ACCESSOR","INTER_APP_API_CLIENT","ChildContainer","rootContainer","context","super","objectMap","doEventuallyGet","tokens","successCallback","errorCallback","firstDiNotSetClass","firstMissingClassToken","objects","doGetCore","setTimeout","doGet","console","log","filter","object","__initialized__","notInitializedObjectIndexes","map","index","objectPaths","push","join","message","isFramework","getSync","loadApiAutopilot","diSet","setDependencyGetters","init","result","Promise","then","_","manualInject","propertyName","dependencyToken","async","getByNames","tokenInterface","resolve","reject","eventuallyGet","DEPENDENCY_INJECTION","dbContainerMap","uiContainers","Set","db","dbContainer","DB","remove","container","delete","ui","componentName","UI","childContainer","add","extend","base","sub","methods","prototype","create","window","IOC","airApi","setQApplication","qApplication","dS","__dbApplication__","dbEntityId","ddS","AirEntityUtils","getCreatedBy","airEntity","actor","userAccount","encodeId","idObject","repository","GUID","_actorRecordId","parseEGUID","idString","idStringFragments","split","repositoryGUIDFragments","actorGUIDFragments","parseInt","setId","airEntityId","AIR_ENTITY_UTILS","ConstraintMode","Domain","targetObject","propertyKey","Application","versions","currentVersion","VersionedApplicationObject","ApplicationColumn","propertyColumns","manyRelationColumns","oneRelationColumns","ApplicationCurrentVersion","ApplicationEntity","columns","operations","properties","relations","relationReferences","columnMap","idColumns","idColumnMap","propertyMap","ApplicationOperation","ApplicationProperty","relation","ApplicationPropertyColumn","ApplicationReference","ApplicationRelation","ApplicationRelationColumn","ApplicationVersion","entities","references","referencedBy","entityMapByName","referencesMapByName","referencedByMapByName","Q_APPLICATION","__constructors__","Q","duoDiSet","column","file","entity","foreignkey","joincolumn","property","onetomany","table","JoinType","EntityRelationType","JSONRelationType","SortOrder","SqlFunction","JSONClauseObjectType","SQLDataType","EntityState","OperationCategory","SqlOperator","CRUDOperation","TransactionType","ChangeType","DistributionStrategy","QueryType","PlatformType","StoreType","IdGeneration","JsonStatementType","QueryResultType","OperationType","QueryInputKind","QueryParameterType","ApplicationStatus","NAME","ANY","BOOLEAN","DATE","NUMBER","STRING","ENTITY","TABLE","DATABASES","DEFINITION","VALUE","COLUMN_LIST","UNIQUE","FOREIGN_KEY","REFERENCED_COLUMN_NAME","COLUMN","ENUM_TYPE","ID","JOIN_COLUMN","JOIN_COLUMNS","JSON_TYPE","MANY_TO_ONE","ONE_TO_MANY","SUB_QUERY","MAPPED_BY","INDEXES","PRIMARY_KEY","APPLICATION","ACTOR_LID","ACTOR_RECORD_ID","ENTITY_NAME","LOCAL_ENTITY_NAME","REPOSITORY_LID","ORIGINAL_ACTOR_ID","ORIGINAL_ACTOR_RECORD_ID","ORIGINAL_REPOSITORY_ID","SYS_WIDE_OP_ID_APPLICATION","SYS_WIDE_OP_ID_ENTITY","systemWideOperationId","SYSTEM_WIDE_OPERATION_ID","TableMap","applicationVersionId","tableMap","ensure","tableIndex","allColumns","ColumnMapConstructor","ColumnMap","tableColumnMap","existsByStructure","columnIndex","DbApplicationUtils","getFullApplication_Name","getFullApplication_NameFromDomainAndName","indexOf","endsWith","domainPrefix","replace","lastIndexOf","applicationPrefix","fullApplication_Name","substring","getSequenceName","prefixedTableName","columnName","ApplicationMap","ensureEntity","TableMapConstructor","applicationVersion","_localId","applicationVersionLocalId","SyncColumnMap","SyncTableMap","applicationIndex","intersects","otherTableColumnMap","SyncApplicationMap","BlockSyncStatus","RepositorySyncStatus","TerminalSyncStatus","SEQ_GEN","ensureChildArray","parentContainer","childArray","ensureChildMap","childObject","ensureChildJsMap","childMap","ensureChildJsSet","childSet","undefinedToNull","value","undefined","setSeqGen","sequenceGenerator","groundControl","DB_APPLICATION_UTILS","ENTITY_STATE_MANAGER","SEQUENCE_GENERATOR","TRANSACTIONAL_CONNECTOR","UPDATE_CACHE_MANAGER","dbApplicationUtils","Y","airportSelectField","insert","update","ALL_FIELDS","__allFields__","isY","isN","cleanErrorMessageSelectStatement","errorMessageSelectStatement","hasOwnProperty","getErrorMessageSelectStatement","jsonSelectClause","JSON","parse","stringify","ALIASES","AliasCache","aliasPrefix","reset","getFollowingAlias","currentAlias","lastAlias","currentIndex","aliasString","AliasMap","aliasCache","aliasMap","getNextAlias","hasAliasFor","getExistingAlias","has","EntityAliases","entityAliasCache","columnAliasCache","parameterAliasCache","parameterAliases","ParameterAliases","getParams","getNewFieldColumnAliases","FieldColumnAliases","__driver__","dbEntity","getOnlyAlias","size","keys","next","alias","parameter","field","getParameters","parameters","forEach","_entityAliases","entityAliases","qField","dbProperty","tarmaqQuery","ENTITY_UTILS","QUERY_UTILS","tree","query","queryDefinition","Function","view","getQTree","convertMappedEntitySelect","SELECT","customEntity","selectProxy","fieldPrefix","fieldIndex","isQField","getInstance","q","Date","customField","addSubQuery","JoinFields","joinFrom","joinTo","isQEntity","ON","joinOperation","joinWhereClause","QEntity","applicationUtils","relationManager","fromClausePosition","dbRelation","joinType","QDriver","QEntityDriver","FULL_JOIN","right","INNER_JOIN","LEFT_JOIN","RIGHT_JOIN","equals","in","qEntity","childQEntities","entityFieldMap","entityRelations","currentChildIndex","instance","getQEntityConstructor","getRelationJson","columnAliases","queryUtils","fieldUtils","jsonRelation","ti","jt","rt","rep","getRootJoinEntity","si","getJoinRelationJson","getEntityRelationJson","getRootRelationJson","ENTITY_JOIN_ON","whereClauseToJSON","ENTITY_APPLICATION_RELATION","ri","isQTree","SUB_QUERY_ROOT","ENTITY_ROOT","getQ","joinChild","nextChildPosition","getNextChildJoinPosition","parentJoinEntity","isRootEntity","rootEntity","JoinTreeNode","childNodes","parentNode","addChildNode","joinTreeNode","childFromClausePositionArray","childPosition","getEntityRelationChildNode","getEntityRelationChildNodeByIndexes","relationIndex","matchingNodes","childNode","rootEntityPrefix","slice","jsonEntityRelation","childTreeNode","Operation","category","ValueOperation","lValue","rValue","l","o","EQUALS","greaterThan","GREATER_THAN","greaterThanOrEquals","GREATER_THAN_OR_EQUALS","IS_NOT_NULL","IS_NULL","IN","lessThan","LESS_THAN","lessThanOrEquals","LESS_THAN_OR_EQUALS","notEquals","NOT_EQUALS","NOT_IN","AND","ops","LogicalOperation","OR","verifyChildOps","LOGICAL","v","NOT","op","QRelation","parentQ","QAirEntityRelation","call","newQEntity","getNewQEntity","relationEntity","QOneToManyRelation","repationManager","QAirEntityOneToManyRelation","QTree","subQuery","QTreeDriver","SUB_QUERY_JOIN_ON","getTreeQuery","toJSON","BooleanOperation","FieldInOrderBy","sortOrder","fa","so","toEntityJSON","ci","dbColumn","pi","QField","objectType","__appliedFunctions__","applySqlFunction","sqlFunctionCall","appliedField","forSelectClause","__fieldSubQuery__","jsonField","appliedFunctions","appliedFunctionsToJson","ta","getPositionAlias","ot","dt","fieldSubQuery","getFieldQueryJson","FIELD_QUERY","asc","ASCENDING","DESCENDING","operableFunctionToJson","functionObject","valueToJSON","copyFunctions","appliedFunction","functionCallToJson","functionCall","p","ft","fromFunctionObject","Array","QOperableField","operation","values","QBooleanField","FIELD","QBooleanFunction","isQueryParameter","FIELD_FUNCTION","json","parameterAlias","DateOperation","QDateField","QDateFunction","NumberOperation","QNumberField","QNumberFunction","StringOperation","LIKE","QStringField","QStringFunction","QNullFunction","bool","primitive","date","num","str","wrapPrimitive","assertDataType","typesOfData","rowIndex","expectedDataTypes","getColumnName","getSqlFunctionCall","sqlFunction","getFunctionObject","selectClause","QDistinctFunction","getSelectClause","MAX","PLUS","numeric1","numeric2","StandAloneFunction","getSelect","distinct","parsedSelectClause","DISTINCT","DISTINCT_FUNCTION","QExistsFunction","operator","EXISTS","FUNCTION","getQuery","parsedQuery","ob","EXISTS_FUNCTION","MINUS","rawQueries","UntypedOperation","UNTYPED","QUntypedField","like","AbstractQuery","isEntityQuery","getNonEntityQuery","rawQuery","jsonQuery","createSelectCallback","from","fromClauseToJSON","FROM","F","W","WHERE","GB","groupByClauseToJSON","GROUP_BY","H","HAVING","OB","orderByClauseToJSON","ORDER_BY","L","LIMIT","O","OFFSET","fromClause","fromEntity","groupBy","orderBy","AbstractInsertValues","rawInsertValues","columnIndexes","validateColumn","tableConfig","columnApplication","entityApplication","valuesToJSON","valueSets","dbColumns","valueSet","datesToNumbers","getTime","getPrimitiveValue","AbstractUpdate","rawUpdate","U","UPDATE","S","setToJSON","SET","Delete","rawDelete","DF","DELETE_FROM","NON_ENTITY_SELECT_ERROR_MESSAGE","DistinguishableQuery","isHierarchicalEntityQuery","selectClauseToJSON","rawSelect","rawInnerSelect","innerSelect","nonDistinctSelectClauseToJSON","MappableQuery","select","isChildObject","EntityQuery","forUpdate","FOR_UPDATE","FieldQuery","jsonFieldQuery","getClauseDataType","selectField","InsertColumnValues","entityDriver","INSERT_INTO","insertInto","II","C","V","VALUES","InsertValues","driver","SheetQuery","TreeQuery","UpdateColumns","setClause","dbColumnMap","idDbColumnMap","UpdateProperties","rawSet","jsonSetClause","dbPropertyMap","setEntityFragmentsToJSON","rawSetFragment","dbPropertyChain","childDbRelationChain","isTopLevelFragment","getPropertyChainDesription","isId","childDbPropertyChain","setFragmentToJSON","dbRelationChain","matchingManyRelationColumn","manyRelationColumn","manyColumn","oneColumn","firstProperty","relationType","prefix","lastPrefix","ending","maxChainDepth","Lookup","ensureContext","doEnsureContext","lookup","queryResultType","search","one","QueryClass","queryMethod","entityUtils","getEntityQuery","queryFacade","searchOne","findOne","find","startedAt","EntityLookup","dao","mapResults","setNoCache","ChildClass","entityLookup","rawEntityQuery","ensureId","updateCacheManager","saveOriginalValues","EntityFind","graph","rawGraphQuery","ENTITY_GRAPH","rawTreeQuery","ENTITY_TREE","noCache","EntityFindOne","extendStatics","b","setPrototypeOf","__proto__","__extends","TypeError","String","__","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","e","rejected","done","apply","__generator","body","f","y","t","g","label","sent","trys","verb","throw","return","Symbol","iterator","n","pop","__values","s","m","__read","ar","error","__spreadArray","to","il","j","__await","__asyncGenerator","asyncIterator","a","resume","fulfill","settle","shift","__asyncValues","isFunction","createErrorClass","createImpl","ctorFunc","stack","UnsubscriptionError","_super","errors","err","toString","arrRemove","arr","item","splice","Subscription","initialTeardown","closed","_parentage","_teardowns","empty","unsubscribe","e_1","_a","e_2","_b","isArray","_parentage_1","_parentage_1_1","e_1_1","_teardowns_1","_teardowns_1_1","teardown_1","execTeardown","e_2_1","teardown","_hasParent","_addParent","parent","includes","_removeParent","EMPTY","EMPTY_SUBSCRIPTION","isSubscription","config","onUnhandledError","onStoppedNotification","useDeprecatedSynchronousErrorHandling","useDeprecatedNextContext","timeoutProvider","args","_i","delegate","clearTimeout","handle","reportUnhandledError","noop","errorContext","cb","isRoot","errorThrown","Subscriber","destination","_this","isStopped","EMPTY_OBSERVER","complete","SafeSubscriber","_next","_error","_complete","observerOrNext","context_1","bind","wrapForErrorHandling","defaultErrorHandler","handler","observable","identity","x","pipeFromArray","fns","input","reduce","prev","fn","Observable","subscribe","_subscribe","lift","source","subscriber","isObserver","_trySubscribe","sink","promiseCtor","getPromiseCtor","subscription","Symbol_observable","pipe","toPromise","operate","hasLift","liftedSource","OperatorSubscriber","onNext","onComplete","onError","onFinalize","ObjectUnsubscribedError","Subject","observers","hasError","thrownError","subject","AnonymousSubject","_throwIfClosed","copy","copy_1","copy_1_1","enumerable","configurable","_checkFinalizedStatuses","_innerSubscribe","asObservable","BehaviorSubject","_value","getValue","isArrayLike","isPromise","isInteropObservable","isAsyncIterable","obj","createInvalidObservableTypeError","isIterable","Symbol_iterator","readableStreamLikeToAsyncGenerator","readableStream","reader","getReader","read","releaseLock","isReadableStreamLike","innerFrom","obs","array","promise","fromAsyncIterable","iterable","iterable_1","iterable_1_1","asyncIterable","asyncIterable_1","asyncIterable_1_1","process","catch","executeSchedule","parentSubscription","scheduler","work","delay","repeat","scheduleSubscription","schedule","observeOn","subscribeOn","scheduleAsyncIterable","scheduled","scheduleObservable","scheduleArray","schedulePromise","scheduleIterable","scheduleReadableStreamLike","project","defaultCompare","NonEntityFind","rawFieldQuery","sheet","rawSheetQuery","cursorSize","callback","SHEET","TREE","rawNonEntityQuery","NonEntityFindOne","NonEntitySearch","NonEntitySearchOne","EntityDatabaseFacade","insertColumnValues","rawInsertColumnValues","ctx","withDbEntity","databaseFacade","insertValues","insertColumnValuesGenerateIds","insertValuesGenerateIds","updateColumnsWhere","rawUpdateColumns","updateWhere","deleteWhere","save","saveToDestination","repositoryDestination","previousEntity","FieldsSelect","ids","propertyNames","fields","manyToOnes","getRelationSelect","oneToManys","forRelations","selectFragment","Dao","internal","BaseSave","mapById","count","exists","entityId","findAll","entityIds","cacheForUpdate","findAllAsTrees","AirEntityId","isAirEntity","findIn","airEntityIds","markForDeletion","entityIdInfo","anEntity","entityStateManager","_repositoryId","ageSuitability","_find","_findUnique","records","sort","createdAt","_findOne","_search","_searchOne","DaoQueryDecorators","Graph","Tree","tarmaqDao","DAO","DATABASE_FACADE","LOOKUP","NON_ENTITY_FIND","NON_ENTITY_FIND_ONE","NON_ENTITY_SEARCH","NON_ENTITY_SEARCH_ONE","QUERY_FACADE","dbApplication","SQDIDao","BaseApplicationDao","Save","Find","FindOne","Search","SearchOne","BaseApplicationColumnDao","BaseApplicationCurrentVersionDao","BaseApplicationEntityDao","BaseApplicationOperationDao","BaseApplicationPropertyDao","BaseApplicationPropertyColumnDao","BaseApplicationReferenceDao","BaseApplicationRelationDao","BaseApplicationRelationColumnDao","BaseApplicationVersionDao","BaseDomainDao","DomainDao","findByIdIn","domainIds","findMapByNameWithNames","domainNames","domains","domainMapByNameWithNames","findOneByName","findByNames","names","findByName","checkAndInsertIfNeeded","existingDomains","existingDomainMap","existingDomain","newDomains","ApplicationColumnDao","findAllForEntities","applicationColumns","sc","applicationColumn","idIndex","isGenerated","allocationSize","notNull","precision","scale","deprecatedSinceVersion","removedInVersion","sinceVersion","ApplicationDao","findAllActive","findAllWithJson","jsonApplication","findMapByVersionIds","applicationVersionIds","applicationMapByIndex","sv","applications","fullName","majorVersion","minorVersion","patchVersion","findMaxIndex","airportDatabase","findMaxVersionedMapByApplicationAndDomain_Names","applicationDomain_Names","applicationNames","maxVersionedMapByApplicationAndDomain_Names","sMaV","sMiV","applicationLookupRecords","domainId","applicationLookupRecord","setStatusByIndexes","indexes","status","findMapByFullNames","fullApplication_Names","mapByFullName","record","findByDomain_NamesAndApplication_Names","findOneByDomain_NameAndApplication_Name","findByIndex","scope","signature","ApplicationEntityDao","findAllForApplicationVersions","se","applicationEntities","applicationEntity","isLocal","ApplicationPropertyColumnDao","findAllForColumns","columnIds","rc","applicationPropertyColumns","spc","applicationPropertyColumn","ApplicationPropertyDao","applicationProperties","sp","applicationProperty","ApplicationReferenceDao","sr","ownApplicationVersion","applicationReferences","applicationReference","referencedApplicationVersion","ApplicationRelationColumnDao","applicationRelationColumns","src","applicationRelationColumn","manyRelation","oneRelation","parentRelation","ApplicationRelationDao","findAllForProperties","propertyIds","applicationRelations","applicationRelation","foreignKey","manyToOneElems","oneToManyElems","ApplicationVersionDao","findAllActiveOrderByApplication_IndexAndId","integerVersion","applicationVersions","versionString","ApplicationUtils_1","ApplicationUtils","getDbEntity","isActorId","isActorRecordId","isRepositoryId","doCascade","crudOperation","CREATE","DELETE","qApplications","__qConstructors__","getEntityConstructor","getNewEntity","entityConstructor","isIdEmpty","idValue","isEmpty","isRelationColumn","isManyRelationColumn","isOneRelationColumn","getIdKey","entityObject","failOnNoId","idValueCallback","getIdKeyInfo","arrayByIdColumnIndex","idKeys","mapByIdColumnName","propertyNameChains","getColumnPropertyNameChainsAndValue","forIdKey","generateNegativeIdsForMissing","columnValuesAndPaths","getColumnValuesAndPaths","firstColumnValueAndPath","path","last","current","utils","valuesEqual","addRelationToEntitySelectClause","allowDefaults","forEachColumnTypeOfRelation","convertTo","propertySelectClause","firstPropertyNameChain","propertyNameLink","propertyObject","reason","markAsStub","forEachColumnOfRelation","failOnNoValue","dbRelationColumn","getColumnPaths","getSheetSelectFromSetClause","errorPrefix","actorIdColumnIndex","actorRecordIdColumnIndex","repositoryIdColumnIndex","systemWideOperationIdColumn","nonIdColumnSet","some","propertyColumn","addColumnToSheetSelect","inQueryColumnIndex","relationObject","breadCrumb","relationBreadCrumb","otherEntityColumn","relationValuesAndPaths","concat","propertyBreadCrumb","TEMP_ID","entitySelectClause","firstColumnPath","relationColumn","handleNoId","noIdValueCallback","EntityUtils","getObjectClassName","getClassName","clazz","objectExists","isAppliable","getRawQuery","theRawEntityQuery","ensureIdAtLevel","selectClauseFragment","subFragment","matchingQEntity","childQEntity","ensureRepositoryAndActorJoin","qActor","qRepository","repositoryJoinFound","actorJoinFound","findActorQEntity","FieldUtils","QMetadataUtils","getAllColumns","getAllNonGeneratedColumns","getAllInsertableColumns","airDb","getColumnQField","allQApplications","ChildQEntity","nextChildJoinPosition","qFieldOrRelation","qIdRelationConstructor","__qIdRelationConstructors__","getQRelation","addColumnQField","getQEntityIdRelationConstructor","QEntityIdRelation","appliationUtils","getQEntityIdFields","qEntityIdRelationMethods","addToObject","parentProperty","relationColumnMap","relationColumns","originalColumn","setQApplicationEntities","idColumn","relatedEntity","qConstructor","getOwnPropertyNames","applicationDependsOn","dependantApplication","dependsOnApplication_Index","applicationWithDepsMap","dependencies","QueryUtils","entityOrId","toObject","relationIdEntities","validateEntityId","entitiesOrIds","equalOperations","airEntityUtils","whereClause","jsonOperation","logicalOperation","jsonLogicalOperation","functionOperation","valueOperation","jsonValueOperation","convertLRValue","anRValue","databaseState","entityMap","functions","ABS","numeric","AVG","ADD","CONCAT","fragments","firstFragment","restOfFragments","CONCATENATE","COUNT","distinctFunction","DIVIDE","FORMAT","format","formatParameters","INTERSECT","LCASE","stringValue","LEN","ROUND","digits","MID","start","MIN","MODULUS","MULTIPLY","NOW","REPLACE","toReplace","replaceWith","SUBTRACT","SUM","TRIM","stringField","UCASE","UNION","UNION_ALL","QM","DatabaseStore","theDatabaseState","RelationManager","getAlias","getParentAlias","createRelatedQEntity","joinRelation","joinParentDriver","getSysWideOpId","getSysWideOpIds","numSequencesNeeded","sysWideOpIdGeneratedColumn","generateSequenceNumbers","Utils","strsToNums","strings","value1","value2","checkChildObjects","checkedKeys","compareNumbers","number1","number2","airTrafficControl","UTILS","AIRPORT_DATABASE","APPLICATION_UTILS","DATABASE_STORE","FIELD_UTILS","Q_METADATA_UTILS","RELATION_MANAGER","REPOSITORY_LOADER","databaseStore","transactionalConnector","trafficPattern","DOMAIN_DAO","APPLICATION_COLUMN_DAO","APPLICATION_DAO","APPLICATION_ENTITY_DAO","APPLICATION_PROPERTY_COLUMN_DAO","APPLICATION_PROPERTY_DAO","APPLICATION_REFERENCE_DAO","APPLICATION_RELATION_COLUMN_DAO","APPLICATION_RELATION_DAO","APPLICATION_VERSION_DAO","holdingPattern","REPOSITORY_API","REPOSITORY_MANAGER","UpdateState","OperationHistory","recordHistory","RecordHistory","newValues","oldValues","RecordHistoryNewValue","RecordHistoryOldValue","RepositoryTransactionType","RepositoryTransactionHistory","data","repositoryTransactionType","LOCAL","operationHistory","transactionHistory","saveTimestamp","TransactionHistory","repositoryTransactionHistories","repositoryTransactionHistoryMap","allOperationHistory","allRecordHistory","allRecordHistoryNewValues","allRecordHistoryOldValues","Actor","AirEntity","entityGUID","isNew","createdBy","Repository","repositoryTransactionHistory","repositoryApplications","repositoryClients","repositoryDatabases","repositoryTerminals","repositoryTypes","RepositoryApplication","RepositoryClient","RepositoryDatabase","RepositoryTerminal","RepositoryType","BaseActorDao","BaseOperationHistoryDao","BaseRecordHistoryDao","BaseRecordHistoryNewValueDao","BaseRecordHistoryOldValueDao","BaseRepositoryDao","BaseRepositoryApplicationDao","BaseRepositoryClientDao","BaseRepositoryDatabaseDao","BaseRepositoryTerminalDao","BaseRepositoryTransactionHistoryDao","BaseRepositoryTypeDao","BaseTransactionHistoryDao","RecordHistoryNewValueDao","findByRecordHistory_LocalIdIn","RecordHistory_LocalIds","rhnv","RecordHistoryOldValueDao","rhov","RepositoryTransactionHistoryDao","findWhereGUIDsIn","GUIDs","rth","findAllLocalChangesForRecordIds","changedRecordIds","repositoryTransactionHistoryMapByRepositoryId","th","oh","ae","av","rh","nv","repositoryEquals","repositoryId","idsForRepository","recordMapForRepository","actorRecordIdsByLocalIds","entityEquals","recordMapForEntity","actorEquals","actorId","recordsForActor","firstChangeTime","repoTransHistories","orderNumber","changeType","newValue","transactionType","repoTransHistory","rth1","rth2","updateSyncTimestamp","syncTimestamp","ActorDao","findWithDetailsAndGlobalIdsByIds","actorIds","findWithDetailsAndGlobalIdsByWhereClause","findMapsWithDetailsByGlobalIds","actorGUIDs","userAccountIds","terminalIds","actorMap","actorMapById","actors","findWithDetailsByGlobalIds","terminal","findByDomainAndApplication_Names","act","findOneByDomainAndApplication_Names_UserAccountGUID_TerminalGUID","userAccountGUID","terminalGUID","findByGUIDs","findWithUserAccountBy_LocalIdIn","actor_localIds","u","ranking","username","continent","country","metroArea","state","_localIds","getWhereClause","ap","owner","RepositoryDao","getRepositoryLoadInfo","repositorySource","repositoryGUID","immutable","REMOTE_SYNC","findReposWithDetailsAndSyncNodeIds","repositoryIds","findWithOwnerBy_LocalIds","findWithOwnerBy_LocalIdIn","repository_localIds","repositoryGUIDs","repositories","OperationHistoryDuo","getNewRecord","entityChangeType","rootTransaction","numberOfOperations","ew1","ew2","startId1","startId2","startRecordHistory","recordHistoryDuo","RecordHistoryDuo","addNewValue","recordHistoryNewValue","recordHistoryNewValueDuo","addOldValue","oldValue","recordHistoryOldValue","recordHistoryOldValueDuo","RecordHistoryNewValueDuo","RecordHistoryOldValueDuo","getRandomValues","rnds8","Uint8Array","rng","crypto","msCrypto","REGEX","validate","uuid","test","byteToHex","substr","v4","options","buf","offset","rnds","random","toLowerCase","RepositoryTransactionHistoryDuo","isRepositoryCreation","guidv4","newRecord","sortRepoTransHistories","repoTransHistory1","repoTransHistory2","syncTimeComparison","saveTimeComparison","startOperation","operationHistoryDuo","compareDates","date1","date2","time1","time2","TransactionHistoryDuo","transaction","getRepositoryTransaction","repositoryTransactionHistoryDuo","ApiObjectKind","checkIn","API_REGISTRY","API_VALIDATOR","containerAccessor","RepositoryApi","repositoryDao","repositoryName","repositoryManager","createRepository","ACTOR_DAO","OPERATION_HISTORY_DUO","RECORD_HISTORY_DUO","RECORD_HISTORY_NEW_VALUE_DUO","RECORD_HISTORY_OLD_VALUE_DUO","REPOSITORY_DAO","REPOSITORY_TRANSACTION_HISTORY_DAO","REPOSITORY_TRANSACTION_HISTORY_DUO","TRANSACTION_HISTORY_DUO","AirEntityType","internalTerminalState","applicationActors","applicationInitializer","applicationWindowMap","initializingApplicationMap","applicationMapByFullName","frameworkActor","internalConnector","dbName","internalCredentials","methodName","objectName","serverUrl","isServer","lastIds","receiver","initializedApps","initializingApps","sequences","sequenceBlocks","generatingSequenceNumbers","transactionManager","pendingTransactionQueue","rootTransactionInProgressMap","transactionInProgressMap","webReceiver","localDomain","mainDomainFragments","onClientMessageCallback","pendingApplicationCounts","pendingHostCounts","pendingInterAppApiCallMessageMap","subsriptionMap","TerminalState","terminalState","TerminalStore","getTerminalState","selectorManager","createRootSelector","getApplicationActors","createSelector","getApplicationInitializer","getApplicationActorMapByDomainAndApplication_Names","applicationActorsByDomainAndApplication_Names","applicationActor","applicationActorMapForDomain","actorsForApplication","getDomains","getDomainMapByName","domainsByName","getFrameworkActor","getInternalConnector","getIsServer","getLastIds","getLatestApplicationVersionMapByNames","latestApplicationVersionMapByNames","mapForDomain","getLatestApplicationVersionMapByFullApplication_Name","latestApplicationVersionMapByFullApplication_Name","applicationVersionsForDomain_Name","getAllApplicationVersionsByIds","allApplicationVersionsByIds","getLatestApplicationVersionsByApplication_Indexes","latestApplicationVersionsByApplication_Indexes","getApplicationMapByFullName","getApplications","getAllEntities","allEntities","latestApplicationVersion","getAllRelations","allRelations","getReceiver","getSequenceGenerator","getTerminal","getTransactionManager","getWebReceiver","tearDown","internalUserState","allSessions","sessionMapByEmail","UserState","userState","UserStore","getUserState","getAllSessions","getSessionMapByEmail","IsolateMessageType","AppState","applicationState","api","appState","NOT_INITIALIED","hostServer","mainDomain","observableMessageMap","pendingMessageMap","messageCallback","ApplicationStore","theApplicationState","SelectorManager","inputSelectors","sourceObservable","selector","keySelector","comparator","previousKey","first","currentKey","getSelector","stateObservable","currentValue","apron","APPLICATION_STORE","LOCAL_API_SERVER","SELECTOR_MANAGER","terminalMap","APPLICATION_INITIALIZER","DOMAIN_RETRIEVER","STORE_DRIVER","TERMINAL_SESSION_MANAGER","TERMINAL_STATE","TERMINAL_STORE","TRANSACTION_MANAGER","TRANSACTIONAL_RECEIVER","TRANSACTIONAL_SERVER","USER_STATE","USER_STORE","terminalStore","storeDriver","RepositoryLoader","loadRepository","repositoryExistenceChecked","repositoryLoadInfo","lastSyncTimestamp","remoteRepositoryTransactionHistory","now","synchronizationAdapter","synchronizationAdapterLoader","load","messages","getTransactionsForRepository","messageMapByGUID","history","synchronizationInManager","receiveMessages","RepositoryManager","initialize","userSession","terminalSessionManager","getUserSession","currentRootTransaction","newRepository","createRepositoryRecord","currentActor","goOffline","getUpdateState","setUpdateStateForAll","updateState","setUpdateState","getRepositoryRecord","ensureRepositoryScopeOnInsertValues","row","ensureRepositoryLinkOnUpdateWhere","ensureRepositoryScopeOnDeleteWhere","travelDocumentCheckpoint","USER_ACCOUNT_API","UserAccountApi","findUserAccount","privateId","userAccountApi","LocalAPIClient","pendingDemoMessageMap","demoListenerStarted","lastConnectionReadyCheckMap","initializeForWeb","htmlElements","document","getElementsByName","clientIframe","createElement","_demoServer","style","display","appendChild","addEventListener","event","__received__","receivedDate","__receivedTime__","checksForDomain","hasValidApplicationInfo","requestDemoMessage","onMessage","invokeApiMethod","isConnectionReady","wait","serializedParams","request","hostDomain","hostProtocol","protocol","location","response","payload","sendDemoRequest","errorMessage","queryResultsDeserializer","setPropertyDescriptors","deepCopyProperties","milliseconds","_reject","contentWindow","postMessage","sendLocalRequest","httpResponse","fetch","method","mode","cache","credentials","headers","referrerPolicy","startDemoListener","returnValue","handleDemoResponse","host","pendingRequest","AutopilotApiLoader","Proxy","interAppApiClient","localApiClient","OperationSerializer","serializeAsArray","serializedEntity","serialize","namePath","processedEntityMap","sequence","stubLookupTable","doSerialize","serializationStateManager","serializeAsDate","operationUniqueId","entityStub","getUniqueIdFieldName","isFirstProperty","propertyCopy","aProperty","SerializationStateManager_1","SerializationState","SerializationStateManager","getSerializationUniqueId","throwIfNotFound","serializationUniqueId","SERIALIZATION_UNIQUE_ID_FIELD","getEntityState","SERIALIZATION_STATE_FIELD","markAs","STUB","isStub","is","__serializationState__","toISOString","isDate","serializationState","QueryResultsDeserializer","deserialize","lookupTable","deserializedEntity","doDeserialize","alreadyDeserializedEntity","fromProperty","toProperty","doSetPropertyDescriptors","objectPrototype","pressurization","OPERATION_SERIALIZER","QUERY_RESULTS_DESERIALIZER","SERIALIZATION_STATE_MANAGER","UiStateManager_1","UiStateManager","isParentSchemaId","PARENT_SCHEMA_ID","arrayToRemoveFrom","STATE_FIELD","isDeleted","LOCAL_API_CLIENT","loadAutopilot","operationSerializer","Client","ClientType","Database","DatabaseType","Continent","Country","MetroArea","MetroAreaState","State","Terminal","TerminalType","Classification","Type","TypeClassification","UserAccount","InternalRecordManager","ensureApplicationRecords","transactInternal","_transaction","updateDomain","actorMapForDomain","actorDao","anApplication","applicationDao","lastTerminalState","initTerminal","getactorDaoAsync","getOriginalValues","updatedDomain","dbDomain","domainDao","setOriginalValues","replaced","InternalTransactionalConnector","callApi","portableQuery","cachedSqlQueryId","transactionalServer","ensureGeneratedValues","insertValuesGetLocalIds","updateValues","OnlineManager","online","goOnline","GO_ONLINE","repoRecords","findReposWithDetailsByIds","goOnlineCalls","repositoryGoOnline","all","deltaStore","remoteChangesSinceInitialGoOnline","transactions","repoTransaction","REMOTE","offlineDeltaStore","addRemoteChanges","remoteChangesIter","loadTransactionsSinceLastKnown","lastSyncedTransaction","remoteChanges","hasNext","unsyncedChanges","repositoryTransactionHistoryDao","findUnsyncedTransactions","syncStatus","SYNCHRONIZED","addChanges","changeListConfig","markChangesAsSynced","isOnline","TransactionalReceiver","processMessage","transactionId","theErrorMessage","theResult","doProcessMessage","APP_INITIALIZING","databaseManager","initFeatureApplications","internalRecordManager","APP_INITIALIZED","GET_LATEST_APPLICATION_VERSION_BY_APPLICATION_NAME","RETRIEVE_DOMAIN","DELETE_WHERE","deleteWhereMessage","FIND","findMessage","FIND_ONE","findOneMessage","INSERT_VALUES","insertValuesMessage","INSERT_VALUES_GET_IDS","insertValuesGetIdsMessage","SAVE","SAVE_TO_DESTINATION","saveMessage","saveToDestinationMessage","SEARCH","searchMessage","SEARCH_ONE","searchOneMessage","UPDATE_VALUES","updateValuesMessage","startApiCall","nativeHandleCallback","transactionCredentials","startTransaction","isStarted","getApiCallActor","initiator","doNativeHandleCallback","rollback","parentTransaction","endApiCall","commit","TransactionalServer","getTransactionFromContextOrCredentials","queryManager","getActor","saveResult","operationManager","performSave","numInsertedRecords","insertManager","numUpdatedRecords","updateManager","numDeletedRecords","deleteManager","tempActor","localTerminal","anActor","AbstractMutationManager","getPortableQuery","parameterMap","doInsertValues","columnValueLookups","columnValueLookup","nested","nextColumnValueLookup","repositoryApi","BLUEPRINT","apiObjectMap","manyRelationColumnRefs","propertyRefs","idColumnRefs","columnRef","referencedApplications","operationMap","isAsync","manyRelationIndex","oneApplication_Index","oneTableIndex","oneRelationIndex","oneColumnIndex","relationRef","propertyRef","relationTableIndex","mappedBy","relationTableApplication_Index","propertyIndexes","propertyIndex","unique","columnList","DatabaseManager","initialized","initNoDb","installStarterApplication","stage","initWithDb","hydrate","doesTableExist","doNotRecordHistory","isInitialized","jsonApplications","existingApplicationMap","applicationsToCreate","existingApplication","blueprintFile","DeleteManager","deleteCommand","isSync","selectCascadeTree","getCascadeSubTree","jsonDelete","jsonSelect","portableSelect","treesToDelete","recordsToDelete","repositoryIdSet","treeToDelete","recordRepositoryIds","recordTreeToDelete","recordsToDeleteForApplication","recordsToDeleteForRepository","recordToDelete","columnProcessed","childTrees","childDbEntity","childTree","foundValues","applicationRecordsToDelete","entityIndex","entityRecordsToDelete","entityRecordsToDeleteForRepo","historyManager","getNewRepositoryTransactionHistory","DELETE_ROWS","subTree","HistoryManager","getNewTransactionHistory","transactionHistoryDuo","InsertManager","internalInsertValues","verifyNoGeneratedColumns","jsonInsertValues","getIds","validateValueRowLength","columnIndexSet","columnsToPopulate","inStatementIndex","rowNumber","generatedColumns","ensureAirEntityIdValues","generateOnSync","addInsertHistory","numberOfInsertedRecords","firstValuesRow","numValuesInRow","valuesRow","allIds","_entityValues","actorIdColumn","sysWideOperationIdColumn","inStatementColumnIndex","isActorIdColumn","entityValues","idValues","generatedColumnIndexes","generatedColumn","generatedSequenceValues","generatedColumnIndex","generatedColumnSequenceValues","insertColumnIndex","generatedValue","actorRecordIdColumn","repositoryIdColumn","repositoryIdColumnQueryIndex","foundActorIdColumn","foundActorRecordIdColumn","foundSystemWideOperationIdColumn","isSaveOperation","missingRepositoryIdErrorMsg","Number","isInteger","operationsByRepo","repositoryIdIndex","actorIdIndex","actorRecordIdIndex","repositoryIdColumnNumber","actorIdColumnNumber","actorRecordIdColumnNumber","columnNumber","QueryManager","ensureRepositoryPresenceAndCurrentState","entityArray","populateEntityGuidEntitiesAndUserAccounts","observableQueryAdapter","wrapInObservable","repositoryLoader","entityMapByRepositoryLocalId","entityMapByActorRecordId","actorsToRetrieveUserAccountForByLocalId","markEntities","populateActorsAndUserAccounts","populateRepositories","currentEntities","processedEntitySet","propertyValue","relatedEntities","processRepositoryOrActor","entityMapByActorLocalId","isActor","actorIdSet","actorLocalId","actorLocalIds","entitiesWithoutActorObject","actorWithoutUserAccountObject","repositoryLocalIds","entiesWithoutRepositoryObject","TransactionManager","getInProgressTransactionById","transactionalCallback","transact","transactionManagerStore","checkForCircularDependencies","unshift","internalStartTransaction","setupTransaction","transactionCleared","clearTransaction","clearUserSessionRootTransaction","resumeParentOrPendingTransaction","ancestorTransaction","pendingTransaction","copyTransactionHistoryToParentTransaction","saveRepositoryHistory","activeQueries","rerunQueries","synchronizationOutManager","synchronizeOut","childTransactionHistory","parentTransactionHistory","parentRepositoryTransactionRecord","isSameSource","callHerarchy","getApiName","hierarchyTransaction","nameContainer","transactionHistoryIds","idGenerator","generateTransactionHistory_LocalIds","transactionHistory_LocalId","repositoryHistory_LocalIds","operationHistory_LocalIds","recordHistory_LocalIds","UpdateManager","internalFragments","recordHistoryMap","repositorySheetSelectInfo","addUpdateHistory","numUpdatedRows","previousDbEntity","addNewValueHistory","jsonUpdate","getSheetSelectFromSetClauseResult","recordsToUpdate","recordsByRepositoryId","groupRecordsByRepository","recordHistoryMapByRecordId","recordHistoryMapForRepository","UPDATE_ROWS","recordsForRepositoryId","recordToUpdate","recordHistoryMapForActor","sheetQuery","resultSetIndexByColumnIndex","selectDbColumns","updatedRecords","updatedRecord","CascadeGraphVerifier","verify","root","DependencyGraphResolver","getOperationsInOrder","unorderedDependencies","getEntitiesToPersist","resolveCircularDependencies","orderedDependencies","orderEntitiesToPersist","operationNodes","optimizePersistOperations","ensureUpdatesAreGroupedCorrectly","operatedOnEntities","operatedOnPassThroughs","dependsOn","dependency","deleteByCascade","allProcessedNodes","isCreate","isDelete","isPassThrough","isUpdate","getEntityStateTypeAsFlags","getOperationUniqueId","dependencyGraphNode","isExistingNode","circleTraversedFor","dependsOnByOUID","dependsOnOUID","fromDependencyForChild","isDependency","childDeleteByCascade","getStateFieldName","parentState","childDependencyLinkedNodes","node","nodeOUID","resolveCircularDependenciesForNode","currentlyTraversedNode","nodePath","entityPath","pathNode","entityLongName","orderedNodes","processedNodes","entityUid","nodeProcessed","operationsByApplication_Index","applicationOperationNodes","entityOperations","canBeCombined","dependencyUid","EntityGraphReconstructor","restoreEntityGraph","entitiesByOperationIndex","rootCopy","linkEntityGraph","lastOUID","isParentEntity","results","previouslyFoundEntity","entityCopy","copyEntityState","markAsOfParentSchema","isParentRelation","isManyToOne","assertRelationValueIsAnObject","assertManyToOneNotArray","assertOneToManyIsArray","previousDbApplication","propertyDbApplication","propertyCopyValue","relationValue","OperationManager","entityGraph","verifiedTree","cascadeGraphVerifier","entityGraphReconstructor","missingRepositoryRecords","topLevelObjectRepositories","structuralEntityValidator","missingRepositoryRecord","repositoryPropertyName","dependencyGraphResolver","rootDbEntity","saveActor","ownerActor","created","deleted","repositoryIdParts","updated","internalCreate","internalDelete","internalUpdate","rawInsert","qMetadataUtils","columnIndexesInValues","valuesFragment","columnValue","_propertyNameChains","idsAndGeneratedValues","entitySaveResult","generatedPropertyName","generatedPropertyValue","setFragment","idWhereFragments","runUpdate","originalEntity","updatedValue","propertyOriginalValue","_dbColumn","originalColumnValue","valuePropertyNameChain","childPropertyName","idQProperty","currentSetFragment","originalValue","whereFragment","valuesMapByColumn","entityIdWhereClauses","deletedValue","StructuralEntityValidator","operatedOnEntityIndicator","depth","fromOneToMany","parentRelationProperty","rootRelationRecord","parentRelationRecord","haveRootRelationRecord","levelObjectRepositoryMapByGUID","newRepositoryNeeded","relationIsOneToMany","isRelationNullable","isMissingRepositoryProperty","isRepositoryColumnAndNewRepositoryNeed","parentOneToManyElems","parentMappedBy","warn","isIdColumnEmpty","ensureIdValue","ensureNonRelationalValue","ensureRepositoryValidity","originalValues","originalRepository","originalActor","originalActorRecordId","throwUnexpectedProperty","QueryParameterDeserializer","queryName","deserializedParameters","deserializedParameter","deserializeParameter","jsonQueryParameter","parameterIndex","checkTypeOfParameter","RESULT_DATE","expectedParameterType","typeOfParameter","QueryResultsSerializer","manyObject","arrivalsNDepartures","REQUEST_MANAGER","OPERATION_DESERIALIZER","QUERY_PARAMETER_DESERIALIZER","QUERY_RESULTS_SERIALIZER","ActiveQueries","queries","cachedSqlQuery","markQueriesToRerun","sqlQuery","getFieldMap","rerun","runQuery","ObservableQueryAdapter","queryCallback","resultsSubject","augmentedResult","flightNumber","ACTIVE_QUERIES","OBSERVABLE_QUERY_ADAPTER","EntityOrderByParser","rootSelectClauseFragment","qValidator","getCommonOrderByFragment","orderByFields","orderByField","getOrderByFragment","joinTree","qEntityMapByAlias","orderByFragments","selectFragmentQueue","currentSelectFragment","joinNodeQueue","currentJoinNode","tableAlias","currentEntityOrderBy","orderByDbEntity","isForParentNode","validateReadProperty","allColumnsToSortBy","idColumnsToSortBy","dbPropertyColumn","childJoinNode","entityOrderByFragments","buildOrderByFragmentForEntity","finalOrderByColumnsFragments","inputOrderByPropertyNameSet","idColumnName","ExactOrderByParser","validator","validateAliasedFieldAccess","MappedOrderByParser","originalOrderBy","currentSelectFragmentFieldSet","GraphMtoMapper","mtoStubReferenceMap","addMtoReference","mtoStubReference","mtoEntityIdValue","mtoDbEntity","mtoEntitiesForTypeMap","mtoRelationField","populateMtos","mtoEntitiesForApplicationMap","mtoEntityId","mtosForEntity","mtoPropertyName","otmDbEntity","otmEntitiesForTypeMap","otmEntity","otmEntityId","mtoParentObject","GraphOtmMapper","mtoEntityReferenceMap","otmEntityReferenceMap","otmEntityField","mtoEntityReferenceMapForEntity","mapForOtmEntity","mtoCollection","addOtmReference","otmStubReference","otmEntityIdValue","otmRecordByPropertyName","otmPropertyName","otmObject","populateOtms","mtoEntityReferenceMapForApplication","entityWithOtmMap","referencedEntitiesByPropertyMap","otmProperty","referencedEntityArray","otmCollection","referencedEntity","AbstractObjectResultParser","addManyToOneStub","resultObject","relationInfos","manyToOneStub","haveAllIds","relationInfo","lastObject","currentObject","propertyNameChain","EntityGraphResultParser","entityMapByApplicationAndTableIndexes","otmStubBuffer","mtoStubBuffer","currentResultRow","otmMapper","mtoMapper","addEntity","entityAlias","addProperty","dataType","bufferManyToOneStub","relationDbEntity","relatedEntityId","bufferManyToOne","bufferBlankManyToOneStub","bufferManyToOneObject","childResultObject","bufferBlankManyToOneObject","bufferOneToManyStub","bufferOneToMany","bufferOneToManyCollection","bufferBlankOneToMany","otmEntityName","flushEntity","entityIdValue","currentEntity","getEntityToFlush","flushRelationStubBuffers","flushRow","bridge","parsedResults","entityMapForName","existingEntity","mergeEntities","sourceArray","targetArray","strict","sourceSet","sourceChild","sourceChildIdValue","targetChild","targetChildIdValue","otmStub","mtoStub","TreeResultParser","currentRowObjectMap","objectEqualityMap","lastRowObjectMap","currentObjectOneToManys","isDifferentOrDoesntExist","addOneToManyCollection","currentOtmCollection","lastOtmCollection","mergeEntity","isSameObjectAsLastRow","oneToManyProperty","currentOneToMany","currentMto","existingOneToMany","EntityTreeResultParser","addManyToOneReference","lastMtoStub","currentMtoStub","ObjectResultParserFactory","getObjectResultParser","TreeQueryResultParser","ClauseType","SQLWhereBase","dialect","sqlQueryAdapter","subStatementSqlGenerator","parameterReferences","fieldMap","jsonRelationMapByAlias","parameterReference","getParameterValue","getFunctionCallValue","rawValue","getFieldValue","FUNCTION_CALL","getFieldFunctionValue","aField","defaultCallback","aValue","isParameterReference","getParameterReference","getFunctionAdaptor","getFunctionCalls","addFunctionAlias","clauseField","clauseType","clauseFieldMember","MAPPED_SELECT_CLAUSE","WHERE_CLAUSE","subQuerySql","getTreeQuerySql","validateReadQEntityProperty","getEntityPropertyColumnName","addField","getComplexColumnFragment","jsonFieldSqlSubQuery","getFieldQuerySql","addSubQueryAlias","MANY_TO_ONE_RELATION","validateReadQEntityManyToOneRelation","getEntityManyToOneColumnName","applyOperator","getWHEREFragment","nestingPrefix","getLogicalWhereFragment","lValueSql","rValueSql","addFieldFromColumn","warning","getSimpleColumnFragment","selectSqlFragment","childOperations","childOperation","NaN","SQLNoJoinQuery","getTableFragment","fromRelation","addAs","firstDbEntity","tableName","getEntityTableName","firstQEntity","fromFragment","SQLDelete","toSQL","SQLInsertValues","validateInsertQEntity","getColumnsFragment","getValuesFragment","valuesClauseFragment","valuesArray","SQLDialect","EntityDefaults","getForAlias","defaultsForAlias","SQLQuery","entityDefaults","getEntityApplicationRelationFromJoin","leftQEntity","rightQEntity","entityRelation","parentAlias","joinTypeString","allJoinOnColumns","leftDbEntity","rightDbEntity","matchingRelations","manySideRelation","ownColumnName","referencedColumnName","leftColumn","rightColumn","onClause","joinOnColumn","joinWhereClauseOperator","SQLUpdate","updateFragment","getSetFragment","internalSetFragment","setClauseFragment","setFragments","validateUpdateColumn","addSetFragment","fieldValue","isManyToOneRelation","addManyToOneMappings","parentMapping","mappings","mapping","propertyChain","childMappings","SqlFunctionField","jsonClauseField","sqlValueProvider","NonEntitySQLQuery","subStatementQueryGenerator","addQEntityMapByAlias","sourceMap","joinTrees","buildFromJoinTree","getSELECTFragment","getFROMFragments","groupByFragment","getGroupByFragment","havingFragment","orderByFragment","orderByParser","offsetFragment","getOffsetFragment","getLimitFragment","getSelectQuerySuffix","joinRelations","joinNodeMap","jsonTree","jsonTrees","firstRelation","validateReadFromEntity","firstEntity","rightEntity","addFieldsToView","nonJoinedEntity","anotherTree","leftNode","rightNode","viewJoinRelation","viewAlias","addFieldsToViewForSelect","forFieldQueryAlias","hasDistinctClause","fieldName","fieldJson","aliasToSet","addFieldToViewForSelect","fieldQuery","getFieldSelectFragment","nestedObjectCallBack","columnSelectSqlFragment","getFROMFragment","parentTree","currentTree","currentRelation","leftEntity","joinOnClause","viewRelation","groupByField","FieldSQLQuery","parseQueryResults","bridgedQueryConfiguration","parsedResult","parseQueryResult","distinctClause","NON_MAPPED_SELECT_CLAUSE","resultRow","nextFieldIndex","getResultCellValue","TreeSQLQuery","queryParser","numProperties","SubStatementSqlGenerator","jsonTreeQuery","mappedSqlQuery","fieldSqlQuery","EntitySQLQuery","objectResultParserFactory","graphQueryConfiguration","finalSelectTree","setupSelectFields","lastResult","onlyJsonRelation","nextColumnIndex","numNonNullColumns","childSelectClauseFragment","__state__","haveRelationValues","columnAlias","sqlDataType","childEntityAlias","defaultValue","parentDbProperty","retrieveAllOwnFields","ofProperty","allFieldsSpecified","entityDefinitionHasIds","manyToOneRelation","selectSqlFragments","defaults","columnSelect","subSelectFragments","SheetSQLQuery","resultsFromSelect","IdGenerator","transactionHistory_LocalIdColumns","populateTransactionHistory_LocalIdColumns","doPopulateTransactionHistory_LocalIdColumns","transactionHistoryDbEntity","getHoldingPatternDbEntity","repoTransHistoryDbEntity","operationHistoryDbEntity","recordHistoryDbEntity","numRepositoryTransHistories","numOperationTransHistories","numRecordHistories","generatedSequenceNumbers","generateEntityIds","holdingPatternEntityName","CurrentState","SqlDriver","supportsLocalTransactions","getTableName","theTableName","composeTableName","internalSetupTransaction","tearDownTransaction","childTransaction","internalCommit","internalRollback","rollbackError","splitValues","numVals","sqlInsertValues","getDialect","sql","executeNative","sqlDelete","numberOfAffectedRecords","sqlUpdate","getSQLQuery","findNative","resultType","QueryResType","RAW","valuesInRow","maxValues","numRowsPerBatch","Math","floor","aSplitValues","QValidator","validateUpdateProperty","functionAlias","subQueryAlias","fieldAlias","fuelHydrantSystem","SUB_STATEMENT_SQL_GENERATOR","ID_GENERATOR","OBJECT_RESULT_PARSER_FACTORY","Q_VALIDATOR","SQL_QUERY_ADAPTOR","ABSTRACT_SQL_DRIVER","DebugSynchronizationAdapter","sinceSyncTimestamp","client","getRepositoryTransactions","fragment","sendTransactions","messagesByRepository","allSent","sendTransactionsForRepository","sendRepositoryTransactions","SynchronizationAdapterLoader","synchronizationSource","debugSynchronizationAdapter","SyncInActorChecker","ensureActors","messageActorIndexMap","checkActorApplication","checkActorTerminal","checkActorUserAccount","messageUserAccountIndex","missingActors","messageActor","terminals","userAccounts","SyncInApplicationChecker","ensureApplications","applicationCheckMap","checkApplicationsAndDomains","allApplication_Names","domainCheckMap","getNames","applicationCheck","domainCheck","found","domainsToCreate","applicationChecksByName","applicationChecksForDomain","applicationChecksForDomainMap","SyncInApplicationVersionChecker","ensureApplicationVersions","checkVersionsApplicationsDomains","applicationVersionCheckMap","applicationVersionDao","lastDomain_Name","lastApplication_Name","applicationVersionNumber","applicationChecks","SyncInChecker","checkMessage","syncInUserAccountChecker","ensureUserAccounts","syncInTerminalChecker","ensureTerminals","syncInApplicationChecker","syncInActorChecker","syncInRepositoryChecker","ensureRepositories","syncInApplicationVersionChecker","syncInDataChecker","checkData","SyncInDataChecker","applicationEntityMap","populateApplicationEntityMap","checkOperationHistories","applicationVersionsByIds","messageApplicationVersion","entitiesForDomain","entitiesForApplication","systemWideOperationIds","actorIdColumnMapByIndex","repositoryIdColumnMapByIndex","checkRecordHistories","recordHistories","checkNewValues","checkOldValues","referencedRepositories","SyncInRepositoryChecker","messageRepositoryIndexMap","checkRepository","missingRepositories","messageRepository","repositoryIndex","SyncInTerminalChecker","terminalGUIDs","messageTerminalIndexMap","terminalDao","missingTerminals","messageTerminal","addMissingTerminals","SyncInUserAccountChecker","userAccountGUIDs","messageUserAccountIndexMap","userAccountDao","missingUserAccounts","messageUserAccount","addMissingUserAccounts","SynchronizationConflict","SynchronizationConflict_Type","SynchronizationConflictValues","DataOrigin","ApplicationChangeStatus","RecordUpdateStage","BaseRecordUpdateStageDao","BaseSynchronizationConflictDao","BaseSynchronizationConflictValuesDao","SynchronizationConflictDao","synchronizationConflicts","synchronizationConflict","acknowledged","overwrittenRecordHistory","overwritingRecordHistory","SynchronizationConflictValuesDao","synchronizationConflictValues","scv","synchronizationConflictValue","MissingProvidedServiceTypeError_1","MissingProvidedServiceTypeError","identifier","Token_1","Token","ServiceNotFoundError_1","require$$0","ServiceNotFoundError","ContainerInstance_1","Container_1","require$$1","require$$2","require$$3","ContainerInstance","services","findService","globalContainer","of","service","scopedService","global","getServiceValue","clonedService","assign","getMany","filterServices","identifierOrServiceMetadata","newService","multiple","factory","paramTypes","getMetadata","params","initializeParams","param","transient","applyPropertyHandlers","paramType","paramHandler","handlers","isTypePrimitive","instanceId","globalInstance","instances","containerId","registerHandler","import","Service_1","Service","optionsOrServiceName","maybeFactory","serviceId","dependencies_1","factory_1","CannotInjectError_1","CannotInjectError","Inject_1","Inject","typeOrName","containerInstance","InjectMany_1","InjectMany","__export","exports","Container_2","require$$4","require$$5","default","RecordUpdateStageDao","rus","updateEntityWhereIds","idMap","updatedColumnIndexes","idsForActor","columnRus","columnSetClause","movingWalkway","RECORD_UPDATE_STAGE_DAO","SYNCHRONIZATION_CONFLICT_DAO","SYNCHRONIZATION_CONFLICT_VALUES_DAO","Stage1SyncedInDataProcessor","performStage1DataProcessing","repositoryTransactionHistoryMapByrepositoryLocalId","actorMayById","populateSystemWideOperationIds","repositoryLocalId","repoTransHistoriesForRepo","changedRecordsForRepo","idsForEntity","newValueMap","allRepoTransHistoryMapByRepoId","allRemoteRecordDeletions","getDeletedRecordIdsAndPopulateAllHistoryMap","localRepoTransHistoryMapByrepositoryLocalId","allLocalRecordDeletions","newlyFoundActorSet","repositoryTransactionHistoriesForRepository","newActors","newActor","repoTransHistoriesForRepository","recordCreations","recordUpdates","recordDeletions","syncConflictMapByRepoId","processCreation","processUpdate","processDeletion","numSystemWideOperationIds","ensureRecordHistoryLocalId","actorRecordLocalIdSetByActor","repositoryTransactionHistoryMapByRepoId","mergeArraysInMap","syncInUtils","ensureRecordMapForRepoInTable","recordUpdatesForRepoInTable","getRecordsForRepoInTable","recordDeletesForRepoInTable","allRemoteRecordDeletesForRepoInTable","allLocalRecordDeletesForRepoInTable","insertsForEntityInRepo","getRecord","getRecordInfo","hasRecordId","getRecordHistoryLocalId","remoteDeleteRecordHistoryLocalId","addSyncConflict","REMOTE_CREATE_REMOTELY_DELETED","createdRecord","ensureColumnValueMap","recordCreationsForRepoInTable","updatesForEntityInRepo","localDeleteRecordHistoryLocalId","REMOTE_UPDATE_LOCALLY_DELETED","LOCAL_UPDATE_REMOTELY_DELETED","ensureRecord","recordUpdate","REMOTE_UPDATE_LOCALLY_UPDATED","recordHistoryLocalId","deletesForEntityInRepo","recordCreationsForActorInRepoInTable","getRecordsForActor","recordUpdatesForActorInRepoInTable","recordMapByApplicationTableAndRepository","recordMapForApplication","recordMapForTable","recordMapForRepoInTable","recordMapByActor","actorRecordIdsForActor","synchronizationConflictType","syncConflict","createSynchronizationConflict","dataMap","Stage2SyncedInDataProcessor","applyChangesToDb","stage1Result","applicationsByApplicationVersion_LocalIdMap","performCreates","performUpdates","performDeletes","creationInApplicationMap","creationInTableMap","nonIdColumns","getNonIdColumnsInIndexOrder","creatingColumns","numInserts","creationForRepositoryMap","creationForActorMap","creationOfRowMap","rowValues","columnIndexedValues","col1IndexAndValue","col2IndexAndValue","currentNonIdColumnArrayIndex","nonIdColumn","column1","column2","finalUpdateMap","recordUpdateStage","applicationUpdateMap","finalApplicationUpdateMap","tableUpdateMap","finalTableUpdateMap","repositoryUpdateMap","actorUpdates","recordUpdateMap","getRecordKeyMap","columnUpdate","recordUpdateStageDao","updateMapForApplication","updateMapForTable","runUpdatesForTable","deletionInApplicationMap","deletionInTableMap","numClauses","repositoryWhereFragments","deletionForRepositoryMap","actorWhereFragments","actorRecordIdSet","updatedColumns","columnValueUpdate","updateKeyMap","childColumnUpdateKeyMap","recordKeyMap","SynchronizationInManager","existingRepositoryTransactionHistories","existingRepositoryTransactionHistory","messagesToProcess","orderedMessages","timeOrderMessages","isValidLastChangeTime","syncInChecker","twoStageSyncedInDataProcessor","syncMessages","message1","message2","history1","history2","remoteTimestamp","remoteFieldName","syncFieldName","ApplicationComparisonResult","SyncInUtils","TwoStageSyncedInDataProcessor","aggregateHistoryRecords","getDataStructures","updateLocalData","stage1SyncedInDataProcessor","allSyncConflicts","allSyncConflictValues","stage2SyncedInDataProcessor","synchronizationConflictDao","synchronizationConflictValuesDao","WITH_ID","WITH_RECORD_HISTORY","WITH_INDEX","SyncOutDataSerializer","historiesToSend","serializeMessage","lookups","actorInMessageIndexesById","applicationVersionInMessageIndexesById","lastInMessageActorIndex","lastInMessageApplicationVersionIndex","lastInMessageRepositoryIndex","repositoryInMessageIndexesById","inMessageUserAccountLookup","inMessageIndexesById","lastInMessageIndex","serializeRepositoryTransactionHistory","serializeRepositories","inMessageApplicationLookup","serializeActorsUserAccountsAndTerminals","serializeApplicationsAndVersions","actorIdsToFindBy","serializeUserAccounts","terminalInMessageIndexesById","serializeTerminals","applicationInMessageIndex","serializeApplication","actorInMessageIndex","lastInMessageTerminalIndex","terminalInMessageIndex","addUserAccountToMessage","userAccountInMessageIndex","getUserAccountInMessageIndex","repositoryIdsToFindBy","repositoryInMessageIndex","serializeRepository","operationHistory1","operationHistory2","serializedOperationHistory","serializeOperationHistory","serializeHistoryRepository","serializedRecordHistory","serializeRecordHistory","applicationVersionInMessageIndex","getActorInMessageIndex","dbColumMapByIndex","serializeNewValue","serializeOldValue","baseObject","getActorInMessageIndexById","serializeValue","valueRecord","valueFieldName","serailizedValue","getSerializedRepositoryId","SynchronizationOutManager","loadHistoryRepositories","syncOutDataSerializer","groupMessageMap","groupMessagesBySourceAndRepository","messageMapForSource","updateRepositoryTransactionHistories","repositoryIdsToLookup","repositoryMapById","ensureGlobalRepositoryIdentifiers","foundRepository","BaseClassificationDao","BaseClientDao","BaseClientTypeDao","BaseContinentDao","BaseCountryDao","BaseDatabaseDao","BaseDatabaseTypeDao","BaseMetroAreaDao","BaseMetroAreaStateDao","BaseStateDao","BaseTerminalDao","BaseTerminalTypeDao","BaseTypeDao","BaseTypeClassificationDao","BaseUserAccountDao","TerminalDao","findByOwnerIdsAndGUIDs","ownerIds","UserAccountDao","findByUserAccountNames","usernames","TERMINAL_DAO","USER_ACCOUNT_DAO","AddUserAccountErrorCodes","UserAccountManager","addUserAccount","email","password","existingUserAccounts","existingUserAccount","errorCode","USER_ACCOUNTNAME_TAKEN","passwordHash","sha512","subtle","digest","TextEncoder","encode","USER_ACCOUNT_MANAGER","serverLocationProtocol","sendMessage","packagedMessage","CLIENT","groundTransport","STAGE1_SYNCED_IN_DATA_PROCESSOR","STAGE2_SYNCED_IN_DATA_PROCESSOR","SYNC_IN_ACTOR_CHECKER","SYNC_IN_CHECKER","SYNC_IN_DATA_CHECKER","SYNC_IN_TERMINAL_CHECKER","SYNC_IN_REPOSITORY_CHECKER","SYNC_IN_APPLICATION_CHECKER","SYNC_IN_APPLICATION_VERSION_CHECKER","SYNC_IN_USER_ACCOUNT_CHECKER","SYNC_IN_UTILS","SYNCHRONIZATION_IN_MANAGER","SYNCHRONIZATION_OUT_MANAGER","SYNC_OUT_DATA_SERIALIZER","TWO_STAGE_SYNCED_IN_DATA_PROCESSOR","DEBUG_SYNCHRONIZATION_ADAPTER","SYNCHRONIZATION_ADAPTER_LOADER","cient","TerminalSessionManager","signUp","userAccountInfo","userAccountManager","userStore","session","login","requestObject","ABSTRACT_MUTATION_MANAGER","ABSTRACT_TRANSACTIONAL_RECEIVER","CASCADE_GRAPH_VERIFIER","DATABASE_MANAGER","DELETE_MANAGER","DEPENDENCY_GRAPH_RESOLVER","ENTITY_GRAPH_RECONSTRUCTOR","HISTORY_MANAGER","INSERT_MANAGER","INTERNAL_RECORD_MANAGER","ONLINE_MANAGER","OPERATION_MANAGER","QUERY_MANAGER","STRUCTURAL_ENTITY_VALIDATOR","UPDATE_MANAGER","localApiServer","ApiRegistry","applicationApi","applicationStore","findApiObjectAndOperation","apiInterfaceName","findObjectAndOperationForApi","apiObjectDefinition","apiOperation","apiObject","ApiValidator","LocalAPIServer","handleRequest","requestManager","coreHandleRequest","apiRegistry","OperationDeserializer","cleanJsonObject","valueCopy","EntityCopier","copyEntityForProcessing","doCopyEntityForProcessing","UpdateCacheManager","doSaveOriginalValues","processedEntities","originalValuesObject","nestedProperty","currentPropertyOriginalValue","setOperationState","entityState","hasId","hasGeneratedIds","propertyOriginalValuesObject","noOriginalValue","PASS_THROUGH","afterSaveModifications","updateOriginalValuesAfterSave","removeDeletedEntities","doUpdateOriginalValuesAfterSave","setIsDeleted","dbRelationProperty","EntityStateManager_1","EntityStateManager","markToCreate","markToUpdate","ORIGINAL_VALUES_PROPERTY","toEntity","isResultDate","OPERATION_UNIQUE_ID_FIELD","entityDescription","copyOperationUniqueId","DELETED_PROPERTY","DatabaseFacade","queryContext","ensureQueryContext","preSaveOperations","entityCopier","updateColumns","prepare","queryFunction","FunctionWrapper","QueryFacade","EntityAccumulator","applicationDomain","AirportDatabase","A","existingQApplication","getAccumulator","operationName","ENTITY_COPIER","util","isNode","PROMISE_RESOLVED_TRUE","PROMISE_RESOLVED_FALSE","microSeconds","ms","lastMs","additional","randomInt","min","max","randomToken","sleep","time","resolveWith","res","PROMISE_RESOLVED_VOID","__esModule","module","_typeof","averageResponseTime","canBeUsed","close","_util","channelName","messagesCallback","bc","BroadcastChannel","subFns","onmessage","msg","channelState","messageJson","_pubkey","_default","ObliviousSet","ttl","timeMap","removeTooOldValues","clear","obliviousSet","olderThen","fillOptionsWithDefaults","originalOptions","webWorkerSupport","idb","fallbackInterval","onclose","localstorage","removeTimeout","maxParallelWrites","useFastPath","cleanOldMessages","createDatabase","getAllMessages","objectStore","OBJECT_STORE_ID","ret","openCursor","onsuccess","ev","cursor","getIdb","getMessagesHigherThan","getOldMessages","removeMessageById","writeMessage","_obliviousSet","_options","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","openRequest","open","onupgradeneeded","createObjectStore","keyPath","autoIncrement","rej","onerror","readerUuid","writeObject","oncomplete","lastCursorId","keyRangeValue","IDBKeyRange","bound","Infinity","msgObk","tooOld","msgObj","eMIs","writeBlockPromise","readQueuePromises","_readLoop","readNewMessages","newerMessages","messagesCallbackTime","_filterMessage","msgObjA","msgObjB","addStorageEventListener","getLocalStorage","removeStorageEventListener","storageKey","localStorage","writeObj","setItem","createEvent","initEvent","dispatchEvent","listener","removeEventListener","ls","removeItem","userAgent","navigator","defaultTime","SIMULATE_CHANNELS","channel","_interopRequireDefault","methodChooser","chooseMethod","chooseMethods","METHODS","Boolean","_simulate","useMethod","_native","_indexedDb","_localstorage","require$$6","broadcastChannel","OPEN_BROADCAST_CHANNELS","clearNodeFolder","_methodChooser","enforceOptions","ENFORCED_OPTIONS","lastId","maybePromise","_iL","_onML","_addEL","_uMP","_befC","_prepP","_state","_post","sendPromise","_hasMessageListeners","_addListenerObject","listenerFn","listenerObject","hundredMsInMicro","minMessageTime","_startListening","_removeListenerObject","_stopListening","postInternal","listenObj","awaitPrepare","isClosed","USE_METHOD","on","exit","trace","WorkerGlobalScope","self","LISTENERS","startedListening","runAll","promises","run","leaderElection","beLeader","createLeaderElection","_leaderElector","responseTime","elector","LeaderElection","die","_unload","isLeader","hasLeader","isDead","_aplQ","_aplQC","_unl","_lstns","_dpL","_dpLC","hasLeaderListener","action","_sendMessage","leaderElector","msgJson","unloadFn","isLeaderListener","applyOnce","isFromFallbackInterval","_this2","stopCriteriaPromiseResolve","stopCriteria","stopCriteriaPromise","handleMessage","waitForAnswerTime","race","applyRun","awaitLeadership","_aLP","resolved","finish","whenDeathListener","tryOnFallBack","_awaitLeadershipOnce","onduplicate","_this3","uFn","_broadcastChannel","_leaderElection","index_es5","WebMesageReceiver","isNativeBroadcastChannel","createChannel","communicationChannel","SoftBroadcastChannel","transactionalReceiver","handleClientRequest","handleAppRequest","origin","needMessageSerialization","sendMessageToClient","sendMessageToApp","DomainRetriever","retrieveDomain","domainNameMapByName","allDomains","SqlSchemaBuilder","build","newJsonApplicationMap","createApplication","jsonEntity","buildTable","relatedJsonApplicationMap","buildForeignKeys","primaryKeyColumnNames","tableColumnsDdl","jsonColumn","columnDdl","getColumnSuffix","isPrimaryKeyColumn","createTableSuffix","getCreateTableSuffix","primaryKeySubStatement","getPrimaryKeyStatement","createTableDdl","DDL","indexNumber","indexConfig","createIndexDdl","getIndexSql","columnNameList","relatedJsonApplication","relatedJsonEntity","referencedApplication","relatedFullApplication_Name","relatedApplication","foreignKeyColumnNames","referencedTableName","referencedColumnNames","relatedIdColumnRef","foreignKeySql","getForeignKeySql","buildForeignKeysForTable","columnNames","ApplicationChecker","check","checkDomain","checkDependencies","allReferencedApplicationMap","referencedApplicationMapByApplication","lastJsonApplicationVersion","referencedApplicationMapForApplication","jsonReferencedApplication","pruneInGroupReferences","pruneReferencesToExistingApplications","applicationsWithValidDependencies","applicationsInNeedOfAdditionalDependencies","neededDependencies","dependenciesForDomain","hasReferences","_domainName","referenceMapForApplicationsOfDomain","_applicationName","applicationsReferencedByAGivenApplication","applicationReferencesForDomain","allApplicationReferencesForDomain","existingApplicationInfo","findExistingApplications","existingApplicationMapByName","coreDomainAndApplication_Names","coreDomainAndApplication_NamesByApplication_Name","allReferencedApplicationsForDomain","coreApplication_Name","referencedApplicationMap","referencesForDomain","ApplicationLocator","locateExistingApplicationVersionRecord","latestApplicationVersionForApplication","jsonApplicationVersion","locateLatestApplicationVersionByApplication_Name","ApplicationComposer","compose","jsonApplicationMapByFullName","domainMapByName","allApplications","newLatestApplicationVersions","newApplicationVersionMapByApplication_Name","newEntitiesMapByApplication_Name","newPropertiesMap","newRelationsMap","newColumnsMap","added","latestApplicationVersions","allDdlObjects","composeDomain","composeApplication","composeApplicationVersion","newApplicationReferenceMap","newApplicationReferences","composeApplicationReferences","deepTraverseReferences","addApplicationVersionObjects","composeApplicationEntities","composeApplicationProperties","composeApplicationRelations","composeApplicationColumns","composeApplicationRelationColumns","addObjects","getExistingLatestApplicationVersion","referencedApplication_Name","ddlObjects","foundDomain","foundApplication","entityPropertyColumns","entityRelationColumns","fromObjects","toObjects","fromDomain","toDomain","fromApplication","toApplication","domainRetriever","newApplications","CURRENT","newApplicationVersions","newApplicationVersion","versionParts","newApplicationCurrentVersion","jsonApplicationMapByName","newApplicationReferenceLookup","applicationReferenceLookup","referencedFullApplication_Name","applicationLocator","newEntities","jsonEntities","newApplicationEntities","newProperties","propertiesByEntityIndex","propertiesForEntity","jsonProperty","newRelations","relationsByEntityIndex","referencesForApplication","relationsForEntity","entitiesArray","newColumns","newPropertyColumns","columnsByTable","propertiesForApplication","columnsForTable","idColumnIndexes","idColumnRef","idColumnIndex","idColumndIndex","propertyReference","newRelationColumns","columnsForApplication","relationsForApplication","applicationReferencesForApplication","columnsForEntity","jsonRelationColumn","oneRelationApplicationVersion","oneTableColumnsMapForApplication","oneTableColumns","oneTableRelations","ApplicationRecorder","setDefaultVersioning","getdomainDaoAsync","applicationReferenceDao","applicationEntityDao","applicationPropertyDao","applicationRelationDao","applicationColumnDao","applicationPropertyColumnDao","applicationRelationColumnDao","bulkCreate","Sequence","SystemWideOperationId","TerminalRun","BaseSequenceDao","BaseSystemWideOperationIdDao","BaseTerminalRunDao","TerminalRunDao","SequenceDao","incrementCurrentValues","incrementBy","incrementSequence","airportCode","SEQUENCE_DAO","AirportDatabasePopulator","populate","DdlObjectLinker","link","linkDomainsAndApplicationsAndVersions","entityArrayById","linkEntities","propertyMapById","relationMapById","linkPropertiesAndRelations","linkColumns","domainMapById","applicationCurrentVersion","addedEntities","columnMapById","DdlObjectRetriever","retrieveDdlObjects","applicationIndexes","domainIdSet","application1","application2","allApplicationVersions","lastApplication_Index","latestApplicationVersion_LocalIds","QueryEntityClassCreator","createAll","applicationsWithDeps","applicationWithDependencies","orderedApplication1","orderedApplication2","applicationWithDeps","orderApplicationsInOrderOfPrecedence","QueryObjectInitializer","generateQObjectsAndPopulateStore","ddlObjectLinker","queryEntityClassCreator","unmodifiedDomains","unmodifiedApplications","ddlObjectRetriever","takeoff","DDL_OBJECT_LINKER","DDL_OBJECT_RETRIEVER","QUERY_ENTITY_CLASS_CREATOR","QUERY_OBJECT_INITIALIZER","ApplicationInitializer","addNewApplicationVersionsToAll","queryObjectInitializer","setAirDbApplications","loadExistingApplications","getApplicationsWithValidDependencies","checkedApplicationsWithValidDependencies","applicationBuilder","applicationComposer","newSequences","buildAllSequences","applicationRecorder","initializeForAIRportApp","tempDdlObjects","stageSequences","tempInitialize","jsonApplicationsToInstall","applicationChecker","applicationReferenceCheckResults","neededDependency","nativeInitializeApplication","landing","ABSTRACT_APPLICATION_INITIALIZER","APPLICATION_BUILDER","APPLICATION_CHECKER","APPLICATION_COMPOSER","APPLICATION_LOCATOR","APPLICATION_RECORDER","SQL_SCHEMA_BUILDER","sequenceDao","WebApplicationInitializer","appIframe","appIframes","WebTransactionalReceiver","hostname","startsWith","webReciever","webMessageReciever","fromClientRedirectedMessage","handleFromClientRequest","ensureConnectionIsReady","messageOrigin","handleIsolateMessage","interAppApiCallRequest","success","toClientRedirectedMessage","handleToClientRequest","nativeStartApiCall","frameWindow","getFrameWindow","nativeHandleApiCall","messageCopy","startDescriptor","replyMessage","CALL_API","connectionIsReadyMessage","numPendingMessagesFromHost","numPendingMessagesForApplication","ensureApplicationIsInstalled","relyToClientWithError","replyToClientRequest","iframe","messageIsFromValidApp","numMessagesFromHost","numMessagesForApplication","applicationDomainFragments","SEARCH_UNSUBSCRIBE","isolateSubscriptionMap","shemaDomain_Name","observableDataResult","webTerminal","WEB_MESSAGE_RECEIVER","SequenceGenerator","applicationSequences","tableSequences","every","addSequences","waitForPreviousGeneration","doGenerateSequenceNumbers","sequentialNumbers","numColumnSequencesNeeded","columnNumbers","sequenceBlock","numNewSequencesNeeded","newSequence","isDoneGeneratingSeqNums","SqLiteDriver","matchingTableNames","getNumberOfRows","getRows","dropTable","nativeParameters","convertValueIn","MUTATE","isValueValid","initTables","createQueries","currentQuery","SQLITE","SqlLiteFunctionAdaptor","clause","innerValue","getFunctionCall","jsonFunctionCall","param2","formatCall","formatParam","param1","acc","val","COALESCE","SqLiteApplicationBuilder","primaryKeySuffix","suffix","allSequences","buildSequences","stagedSequences","indexName","uniquePrefix","foreignKeyName","SqlJsTransaction","queryType","saveTransaction","SqlJsDriver","SQLJS","SQL","initSqlJs","locateFile","_db","command","exec","stmt","deltaTableName","debug","free","handleError","getReturnValue","rowsAffected","rows","SqlJsQueryAdaptor","functionAdaptor","newReference","dateToDbQuery","getResultArray","rawResponse","getResultCellRawValue","limit","allowArrays","airportApi","getAllApplications","getAllRepositories","dbManager","startDb"],"mappings":"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"}