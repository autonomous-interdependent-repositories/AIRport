{"version":3,"file":"bundle.js","sources":["../../../di/lib/Context.js","../../../di/lib/dependencyInjection/InjectionDomain.js","../../../di/lib/dependencyInjection/Token.js","../../../di/lib/dependencyInjection/InjectionApplication.js","../../../di/lib/tokens.js","../../../di/lib/dependencyInjection/Container.js","../../src/tokens.ts","../../src/CrossTabCommunicator.ts"],"sourcesContent":["export var ContextType;\n(function (ContextType) {\n    ContextType[\"DB\"] = \"DB\";\n    ContextType[\"UI\"] = \"UI\";\n})(ContextType || (ContextType = {}));\nexport class Context {\n    constructor(name, type) {\n        this.name = name;\n        this.type = type;\n    }\n}\n//# sourceMappingURL=Context.js.map","import { InjectionApplication } from './InjectionApplication';\nexport class InjectionDomain {\n    constructor(name) {\n        this.name = name;\n        this.applicationMap = {};\n    }\n    app(applicationName) {\n        if (this.applicationMap[applicationName]) {\n            throw new Error(`\r\n\t\t\tApplication already defined.\r\n\t\t\tDomain:      ${this.name}\r\n\t\t\tApplication: ${applicationName}\r\n\t\t\t`);\n        }\n        const application = new InjectionApplication(applicationName, this);\n        this.applicationMap[applicationName] = application;\n        return application;\n    }\n    getApp(applicationName) {\n        return this.applicationMap[applicationName];\n    }\n}\nconst DOMAIN_MAP = {};\nexport function domain(domainName) {\n    if (DOMAIN_MAP[domainName]) {\n        return DOMAIN_MAP[domainName];\n    }\n    const domain = new InjectionDomain(domainName);\n    DOMAIN_MAP[domainName] = domain;\n    return domain;\n}\nexport const AIRPORT_DOMAIN = domain('turbase.app');\n//# sourceMappingURL=InjectionDomain.js.map","export class DiToken {\n    constructor(application, name) {\n        this.application = application;\n        this.name = name;\n    }\n    getPath() {\n        return this.application.domain.name + ':' + this.application.name + ':' + this.name;\n    }\n}\n//# sourceMappingURL=Token.js.map","import { AIRPORT_DOMAIN } from './InjectionDomain';\nimport { DiToken } from './Token';\nexport class InjectionApplication {\n    constructor(name, domain) {\n        this.name = name;\n        this.domain = domain;\n        this.tokenMap = new Map();\n        this.autopilot = false;\n    }\n    token(name) {\n        const existingToken = this.tokenMap.get(name);\n        if (existingToken) {\n            throw new Error(`Token with name '${name}' has already been created`);\n        }\n        const diToken = new DiToken(this, name);\n        this.tokenMap.set(name, diToken);\n        return diToken;\n    }\n}\nexport function lib(libraryName) {\n    return AIRPORT_DOMAIN.app(libraryName);\n}\n//# sourceMappingURL=InjectionApplication.js.map","import { lib } from \"./dependencyInjection/InjectionApplication\";\nconst directionIndicator = lib('di');\nexport const AUTOPILOT_API_LOADER = directionIndicator.token('AUTOPILOT_API_LOADER');\n//# sourceMappingURL=tokens.js.map","import { Context, ContextType } from '../Context';\nimport { AUTOPILOT_API_LOADER } from '../tokens';\nimport { domain } from './InjectionDomain';\nimport { lib } from './InjectionApplication';\nconst classMap = new Map();\nlet numPendingInits = 0;\nconst objectMap = new Map();\nexport class Container {\n    set(token, clazz) {\n        classMap.set(token.name, clazz);\n        objectMap.set(token.name, null);\n    }\n}\nexport class ChildContainer extends Container {\n    // TODO: implement continuous upgrading\n    // classes: any[]  = []\n    // numPendingInits = 0\n    // theObjects: any[]  = []\n    constructor(context) {\n        super();\n        this.context = context;\n    }\n    doEventuallyGet(tokens, successCallback, errorCallback) {\n        let { firstDiNotSetClass, firstMissingClassToken, objects } = this.doGetCore(tokens);\n        if (firstMissingClassToken || firstDiNotSetClass) {\n            setTimeout(() => {\n                this.doEventuallyGet(tokens, successCallback, errorCallback);\n            }, 100);\n        }\n        else {\n            if (objects.length > 1) {\n                successCallback(objects);\n            }\n            else {\n                successCallback(objects[0]);\n            }\n        }\n    }\n    doGet(tokens, successCallback, errorCallback) {\n        const { firstDiNotSetClass, firstMissingClassToken, objects } = this.doGetCore(tokens);\n        if (firstDiNotSetClass) {\n            console.log(`Dependency Injection is not ready for token ${firstMissingClassToken.getPath()}\r\n\t\t\t, class: ${firstDiNotSetClass.name}. Delaying injection by 100ms`);\n            setTimeout(() => {\n                this.doGet(tokens, successCallback, errorCallback);\n            }, 100);\n            return;\n        }\n        else if (objects.filter(object => object && !object.__initialized__).length) {\n            const notInitializedObjectIndexes = objects.map((object, index) => object.__initialized__ ? -1 : index)\n                .filter(index => index !== -1);\n            const objectPaths = [];\n            for (const index of notInitializedObjectIndexes) {\n                objectPaths.push(tokens[index].getPath());\n            }\n            console.log(`Dependency Injection is not ready for tokens:\r\n\t\t\t\t ${objectPaths.join('\\n')}\r\n\t\t\t, these classes are not yet initialized, delaying injection by 100ms`);\n            setTimeout(() => {\n                this.doGet(tokens, successCallback, errorCallback);\n            }, 100);\n            return;\n        }\n        if (firstMissingClassToken) {\n            const message = 'Dependency Injection could not find class for token: '\n                + firstMissingClassToken.getPath();\n            console.log(message);\n            errorCallback(message);\n        }\n        else {\n            if (objects.length > 1) {\n                successCallback(objects);\n            }\n            else {\n                successCallback(objects[0]);\n            }\n        }\n    }\n    doGetCore(tokens) {\n        let firstMissingClassToken;\n        let firstDiNotSetClass;\n        const objects = tokens.map(token => {\n            if (firstMissingClassToken || firstDiNotSetClass) {\n                return;\n            }\n            let object = objectMap.get(token.name);\n            if (!object) {\n                if (!this.context.inAIRportApp && token.application.autopilot) {\n                    object = this.getSync(AUTOPILOT_API_LOADER)\n                        .loadApiAutopilot(token);\n                }\n                else {\n                    const clazz = classMap.get(token.name);\n                    if (!clazz) {\n                        firstMissingClassToken = token;\n                        return;\n                    }\n                    if (clazz.diSet && !clazz.diSet()) {\n                        firstMissingClassToken = token;\n                        firstDiNotSetClass = clazz;\n                        return;\n                    }\n                    object = new clazz();\n                }\n                object.__container__ = this;\n                objectMap.set(token.name, object);\n                if (!token.application.autopilot && object.init) {\n                    const result = object.init();\n                    if (result instanceof Promise) {\n                        result.then(_ => {\n                            object.__initialized__ = true;\n                            console.log(`${token.getPath()} initialized.`);\n                        });\n                    }\n                    else {\n                        object.__initialized__ = true;\n                        console.log(`${token.getPath()} initialized.`);\n                    }\n                }\n                else {\n                    object.__initialized__ = true;\n                }\n            }\n            return object;\n        });\n        return {\n            firstDiNotSetClass,\n            firstMissingClassToken,\n            objects\n        };\n    }\n    async getByNames(domainName, applicationName, tokenName) {\n        const injectionDomain = domain(domainName);\n        if (!injectionDomain) {\n            throw new Error(`Could nof find\r\n\tDomain:\r\n\t\t${domainName}\r\n\t\t`);\n        }\n        const application = domain(domainName).getApp(applicationName);\n        if (!application) {\n            throw new Error(`Could not find\r\n\tDomain:\r\n\t\t${domainName}\r\n\tApplication:\r\n\t\t${applicationName}\r\n\t\t`);\n        }\n        const token = application.tokenMap.get(tokenName);\n        if (!token) {\n            throw new Error(`Could not find token: ${tokenName}\r\n\tin Domain:\r\n\t\t${domainName}\r\n \tApplication:\r\n\t\t\t${applicationName}\r\n\t\t`);\n        }\n        return await this.get(token);\n    }\n    get(...tokens) {\n        return new Promise((resolve, reject) => {\n            this.doGet(tokens, resolve, reject);\n        });\n    }\n    eventuallyGet(...tokens) {\n        return new Promise((resolve, reject) => {\n            this.doEventuallyGet(tokens, resolve, reject);\n        });\n    }\n    getSync(...tokens) {\n        const { firstDiNotSetClass, firstMissingClassToken, objects } = this.doGetCore(tokens);\n        if (firstMissingClassToken) {\n            throw new Error('Dependency Injection could not find class for token: '\n                + firstMissingClassToken);\n        }\n        else if (firstDiNotSetClass) {\n            throw new Error('Dependency Injection is not ready for class: '\n                + firstDiNotSetClass.name);\n        }\n        if (objects.length > 1) {\n            return objects;\n        }\n        else {\n            return objects[0];\n        }\n    }\n}\nexport class RootContainer extends Container {\n    constructor() {\n        super(...arguments);\n        this.childContainers = new Set();\n        this.uiContainerMap = new Map();\n    }\n    db() {\n        if (!this.dbContainer) {\n            this.dbContainer = new ChildContainer(new Context(null, ContextType.DB));\n        }\n        return this.dbContainer;\n    }\n    remove(container) {\n        if (!container) {\n            return;\n        }\n        this.childContainers.delete(container);\n        if (container.context && container.context.name) {\n            this.uiContainerMap.get(container.context.name)\n                .delete(container);\n        }\n    }\n    ui(componentName) {\n        const context = new Context(componentName, ContextType.UI);\n        const container = this.addContainer(context);\n        let matchingUiContainerSet = this.uiContainerMap.get(componentName);\n        if (!matchingUiContainerSet) {\n            matchingUiContainerSet = new Set();\n            this.uiContainerMap.set(componentName, matchingUiContainerSet);\n        }\n        matchingUiContainerSet.add(container);\n        return container;\n    }\n    addContainer(context) {\n        const childContainer = new ChildContainer(context);\n        this.childContainers.add(childContainer);\n        return childContainer;\n    }\n}\nexport class InversionOfControl {\n    async get(...tokens) {\n        return await DI.db().get(...tokens);\n    }\n    async eventuallyGet(...tokens) {\n        return await DI.db().eventuallyGet(...tokens);\n    }\n    getSync(...tokens) {\n        return DI.db().getSync(...tokens);\n    }\n}\nexport const DI = new RootContainer();\nif (typeof window !== 'undefined') {\n    window.DI = DI;\n    window.lib = lib;\n    window.domain = domain;\n}\nexport const IOC = new InversionOfControl();\n//# sourceMappingURL=Container.js.map",null,null],"names":["ContextType","Context","constructor","name","type","this","InjectionDomain","applicationMap","app","applicationName","Error","application","InjectionApplication","getApp","DOMAIN_MAP","domain","domainName","AIRPORT_DOMAIN","DiToken","getPath","tokenMap","Map","autopilot","token","get","diToken","set","lib","libraryName","AUTOPILOT_API_LOADER","classMap","objectMap","Container","clazz","ChildContainer","context","super","doEventuallyGet","tokens","successCallback","errorCallback","firstDiNotSetClass","firstMissingClassToken","objects","doGetCore","setTimeout","length","doGet","console","log","filter","object","__initialized__","notInitializedObjectIndexes","map","index","objectPaths","push","join","message","inAIRportApp","getSync","loadApiAutopilot","diSet","__container__","init","result","Promise","then","_","getByNames","tokenName","resolve","reject","eventuallyGet","DI","arguments","childContainers","Set","uiContainerMap","db","dbContainer","DB","remove","container","delete","ui","componentName","UI","addContainer","matchingUiContainerSet","add","childContainer","window","IOC"],"mappings":"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"}