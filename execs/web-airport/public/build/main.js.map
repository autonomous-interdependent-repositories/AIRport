{"version":3,"file":"main.js","sources":["../../../../common/temp/node_modules/.pnpm/svelte@3.42.4/node_modules/svelte/internal/index.mjs","../../../../common/temp/node_modules/.pnpm/page@1.11.6/node_modules/page/page.js","../../src/App.svelte","../../../../libs/direction-indicator/lib/dependencyInjection/InjectionDomain.js","../../../../libs/direction-indicator/lib/dependencyInjection/Token.js","../../../../libs/direction-indicator/lib/dependencyInjection/InjectionApplication.js","../../../../libs/direction-indicator/lib/Context.js","../../../../libs/direction-indicator/lib/tokens.js","../../../../libs/direction-indicator/lib/dependencyInjection/Container.js","../../../../libs/direction-indicator/lib/dependencyInjection/ChildContainer.js","../../../../libs/direction-indicator/lib/dependencyInjection/RootContainer.js","../../../../libs/direction-indicator/lib/dependencyInjection/Injectable.js","../../../../libs/direction-indicator/lib/index.js","../../../../libs/direction-indicator/lib/dependencyInjection/InversionOfControl.js","../../../../apis/terminal-map/lib/core/UpdateState.js","../../../../apis/terminal-map/lib/metadata/RepositoryEntityType.js","../../../../apis/ground-control/lib/impl/query/TableMap.js","../../../../apis/ground-control/lib/impl/query/ColumnMap.js","../../../../apis/ground-control/lib/impl/query/DbApplicationUtils.js","../../../../apis/ground-control/lib/impl/query/ApplicationMap.js","../../../../apis/ground-control/lib/impl/sync/SyncColumnMap.js","../../../../apis/ground-control/lib/impl/sync/SyncTableMap.js","../../../../apis/ground-control/lib/impl/sync/SyncApplicationMap.js","../../../../apis/ground-control/lib/impl/sync/SyncStatus.js","../../../../apis/ground-control/lib/lingo/core/entity/Dictionary.js","../../../../apis/ground-control/lib/lingo/core/entity/Relation.js","../../../../apis/ground-control/lib/lingo/core/field/FieldInOrderBy.js","../../../../apis/ground-control/lib/lingo/core/field/Functions.js","../../../../apis/ground-control/lib/lingo/core/field/JSONClause.js","../../../../apis/ground-control/lib/lingo/core/operation/EntityStateManager.js","../../../../apis/ground-control/lib/lingo/core/operation/Operation.js","../../../../apis/ground-control/lib/lingo/data/sync/TransactionType.js","../../../../apis/ground-control/lib/lingo/data/ChangeType.js","../../../../apis/ground-control/lib/lingo/data/DistributionStrategy.js","../../../../apis/ground-control/lib/lingo/data/IStoreOperator.js","../../../../apis/ground-control/lib/lingo/data/PatformType.js","../../../../apis/ground-control/lib/lingo/data/storeInfo.js","../../../../apis/ground-control/lib/lingo/query/facade/Query.js","../../../../apis/ground-control/lib/lingo/query/QueryResultType.js","../../../../apis/ground-control/lib/lingo/application/Operation.js","../../../../apis/ground-control/lib/lingo/application/ApplicationStatus.js","../../../../apis/ground-control/lib/impl/utils/DatastructureUtils.js","../../../../apis/ground-control/lib/lingo/ITransactionalConnector.js","../../../../apis/ground-control/lib/tokens.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/tslib@2.1.0/node_modules/tslib/tslib.es6.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/util/isFunction.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/util/createErrorClass.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/util/UnsubscriptionError.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/util/arrRemove.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/Subscription.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/config.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/scheduler/timeoutProvider.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/util/reportUnhandledError.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/util/noop.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/NotificationFactories.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/util/errorContext.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/Subscriber.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/symbol/observable.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/util/identity.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/util/pipe.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/Observable.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/util/lift.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/util/ObjectUnsubscribedError.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/Subject.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/BehaviorSubject.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/util/isArrayLike.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/util/isPromise.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/util/isInteropObservable.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/util/isAsyncIterable.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/util/throwUnobservableError.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/symbol/iterator.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/util/isIterable.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/util/isReadableStreamLike.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/util/executeSchedule.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/operators/observeOn.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/operators/subscribeOn.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/scheduled/scheduleAsyncIterable.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/scheduled/scheduled.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/scheduled/scheduleObservable.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/scheduled/scheduleArray.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/scheduled/schedulePromise.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/scheduled/scheduleIterable.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/scheduled/scheduleReadableStreamLike.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/observable/from.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/operators/map.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/rxjs@7.4.0/node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js","../../../../apis/terminal-map/lib/store/theState.js","../../../../apis/terminal-map/lib/store/TerminalStore.js","../../../../libs/direction-indicator/lib/dependencyInjection/decorators.js","../../../../apis/air-traffic-control/lib/impl/core/entity/metadata/ColumnDecorators.js","../../../../apis/air-traffic-control/lib/impl/core/entity/Aliases.js","../../../../apis/air-traffic-control/lib/impl/core/operation/Operation.js","../../../../apis/air-traffic-control/lib/impl/core/operation/LogicalOperation.js","../../../../apis/air-traffic-control/lib/impl/core/entity/Relation.js","../../../../apis/air-traffic-control/lib/impl/core/operation/BooleanOperation.js","../../../../apis/air-traffic-control/lib/impl/core/field/FieldInOrderBy.js","../../../../apis/air-traffic-control/lib/impl/core/field/Field.js","../../../../apis/air-traffic-control/lib/impl/core/field/OperableField.js","../../../../apis/air-traffic-control/lib/impl/core/field/BooleanField.js","../../../../apis/air-traffic-control/lib/impl/core/operation/DateOperation.js","../../../../apis/air-traffic-control/lib/impl/core/field/DateField.js","../../../../apis/air-traffic-control/lib/impl/core/operation/NumberOperation.js","../../../../apis/air-traffic-control/lib/impl/core/field/NumberField.js","../../../../apis/air-traffic-control/lib/impl/core/operation/StringOperation.js","../../../../apis/air-traffic-control/lib/impl/core/field/StringField.js","../../../../apis/air-traffic-control/lib/impl/core/operation/UntypedOperation.js","../../../../apis/air-traffic-control/lib/impl/core/field/UntypedField.js","../../../../apis/air-traffic-control/lib/impl/utils/qApplicationBuilderUtils.js","../../../../apis/air-traffic-control/lib/impl/core/entity/OneToManyRelation.js","../../../../apis/air-traffic-control/lib/impl/core/field/NullFunction.js","../../../../apis/air-traffic-control/lib/impl/core/field/WrapperFunctions.js","../../../../apis/air-traffic-control/lib/impl/core/field/Functions.js","../../../../apis/air-traffic-control/lib/impl/query/facade/AbstractQuery.js","../../../../apis/air-traffic-control/lib/impl/query/facade/NonEntityQuery.js","../../../../apis/air-traffic-control/lib/impl/query/facade/TreeQuery.js","../../../../apis/air-traffic-control/lib/impl/core/Joins.js","../../../../apis/air-traffic-control/lib/impl/core/entity/Entity.js","../../../../apis/air-traffic-control/lib/impl/core/entity/JoinTreeNode.js","../../../../apis/air-traffic-control/lib/impl/core/entity/RelationManager.js","../../../../apis/air-traffic-control/lib/impl/query/api/Lookup.js","../../../../apis/air-traffic-control/lib/impl/query/api/EntityLookup.js","../../../../apis/air-traffic-control/lib/impl/query/api/EntityFind.js","../../../../apis/air-traffic-control/lib/impl/query/api/EntityFindOne.js","../../../../apis/air-traffic-control/lib/impl/query/facade/FieldQuery.js","../../../../apis/air-traffic-control/lib/impl/query/facade/SheetQuery.js","../../../../apis/air-traffic-control/lib/impl/query/api/NonEntityFind.js","../../../../apis/air-traffic-control/lib/impl/query/api/NonEntityFindOne.js","../../../../apis/air-traffic-control/lib/impl/query/api/NonEntitySearch.js","../../../../apis/air-traffic-control/lib/impl/query/api/NonEntitySearchOne.js","../../../../apis/air-traffic-control/lib/impl/query/facade/AbstractInsertValues.js","../../../../apis/air-traffic-control/lib/impl/query/facade/AbstractUpdate.js","../../../../apis/air-traffic-control/lib/impl/query/facade/Delete.js","../../../../apis/air-traffic-control/lib/impl/query/facade/EntityQuery.js","../../../../apis/air-traffic-control/lib/impl/query/facade/InsertColumnValues.js","../../../../apis/air-traffic-control/lib/impl/query/facade/InsertValues.js","../../../../apis/air-traffic-control/lib/impl/query/facade/UpdateColumns.js","../../../../apis/air-traffic-control/lib/impl/query/facade/UpdateProperties.js","../../../../apis/air-traffic-control/lib/impl/Utils.js","../../../../apis/air-traffic-control/lib/impl/utils/EntityUtils.js","../../../../apis/air-traffic-control/lib/impl/utils/FieldUtils.js","../../../../apis/air-traffic-control/lib/impl/utils/QMetadataUtils.js","../../../../apis/air-traffic-control/lib/impl/utils/QueryUtils.js","../../../../apis/air-traffic-control/lib/lingo/query/facade/Query.js","../../../../apis/air-traffic-control/lib/impl/utils/ApplicationUtils.js","../../../../apis/air-traffic-control/lib/impl/Constants.js","../../../../apis/air-traffic-control/lib/lingo/core/entity/metadata/ColumnDecorators.js","../../../../apis/air-traffic-control/lib/impl/databaseState.js","../../../../apis/air-traffic-control/lib/lingo/DatabaseStore.js","../../../../apis/air-traffic-control/lib/tokens.js","../../../../apis/check-in/lib/EntityDatabaseFacade.js","../../../../apis/check-in/lib/dao/DaoFindOneStub.js","../../../../apis/check-in/lib/dao/DaoFindStub.js","../../../../apis/check-in/lib/dao/DaoSearchOneStub.js","../../../../apis/check-in/lib/dao/DaoSearchStub.js","../../../../apis/check-in/lib/dao/DaoStub.js","../../../../apis/check-in/lib/dao/Dao.js","../../../../apis/check-in/lib/dao/DaoQueryDecorators.js","../../../../apis/check-in/lib/api/ApiOperation.js","../../../../apis/check-in/lib/Duo.js","../../../../apis/check-in/lib/Selector.js","../../../../apis/check-in/lib/SequenceGenerator.js","../../../../apis/check-in/lib/tokens.js","../../../../apis/terminal-map/lib/tokens.js","../../../../engines/terminal/lib/core/repository/RepositoryLoader.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/rng.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/regex.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/validate.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/stringify.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/v4.js","../../../../engines/terminal/lib/core/repository/RepositoryManager.js","../../../../schemas/holding-pattern/lib/ddl/history/OperationHistory.js","../../../../apis/air-traffic-control/lib/impl/core/entity/metadata/EntityDecorators.js","../../../../schemas/holding-pattern/lib/ddl/history/RecordHistory.js","../../../../schemas/holding-pattern/lib/ddl/history/RecordHistoryNewValue.js","../../../../schemas/holding-pattern/lib/ddl/history/RecordHistoryOldValue.js","../../../../schemas/holding-pattern/lib/ddl/history/RepositoryTransactionType.js","../../../../schemas/holding-pattern/lib/ddl/history/RepositoryTransactionHistory.js","../../../../schemas/holding-pattern/lib/ddl/history/TransactionHistory.js","../../../../schemas/holding-pattern/lib/ddl/infrastructure/Actor.js","../../../../schemas/holding-pattern/lib/ddl/repository/Repository.js","../../../../schemas/holding-pattern/lib/ddl/repository/RepositoryEntity.js","../../../../schemas/holding-pattern/lib/ddl/repository/RepositoryApplication.js","../../../../schemas/holding-pattern/lib/ddl/traditional/ChildRepoRow.js","../../../../schemas/holding-pattern/lib/ddl/traditional/ChildRow.js","../../../../schemas/holding-pattern/lib/ddl/traditional/ImmutableRepoRow.js","../../../../schemas/holding-pattern/lib/ddl/traditional/ImmutableRow.js","../../../../schemas/holding-pattern/lib/ddl/traditional/MutableRepoRow.js","../../../../schemas/holding-pattern/lib/ddl/traditional/MutableRow.js","../../../../schemas/holding-pattern/lib/ddl/traditional/ReferenceRow.js","../../../../schemas/holding-pattern/lib/generated/qApplication.js","../../../../schemas/holding-pattern/lib/generated/baseDaos.js","../../../../schemas/holding-pattern/lib/generated/baseDuos.js","../../../../schemas/holding-pattern/lib/dao/history/RecordHistoryNewValueDao.js","../../../../schemas/holding-pattern/lib/duo/history/OperationHistoryDuo.js","../../../../schemas/holding-pattern/lib/duo/history/RecordHistoryDuo.js","../../../../schemas/holding-pattern/lib/duo/history/RecordHistoryNewValueDuo.js","../../../../schemas/holding-pattern/lib/duo/history/RecordHistoryOldValueDuo.js","../../../../schemas/holding-pattern/lib/duo/history/RepositoryTransactionHistoryDuo.js","../../../../schemas/holding-pattern/lib/duo/history/TransactionHistoryDuo.js","../../../../schemas/holding-pattern/lib/dao/history/RepositoryTransactionHistoryDao.js","../../../../schemas/holding-pattern/lib/dao/infrastructure/ActorDao.js","../../../../schemas/holding-pattern/lib/dao/repository/RepositoryDao.js","../../../../schemas/holding-pattern/lib/tokens.js","../../../../schemas/holding-pattern/lib/dao/history/RecordHistoryOldValueDao.js","../../../../schemas/holding-pattern/lib/to_be_generated/common-tokens.js","../../../../schemas/holding-pattern/lib/to_be_generated/runtime-tokens.js","../../../../schemas/travel-document-checkpoint/lib/ddl/Agt.js","../../../../schemas/travel-document-checkpoint/lib/ddl/Continent.js","../../../../schemas/travel-document-checkpoint/lib/ddl/Country.js","../../../../schemas/travel-document-checkpoint/lib/ddl/Terminal.js","../../../../schemas/travel-document-checkpoint/lib/ddl/TerminalAgt.js","../../../../schemas/travel-document-checkpoint/lib/ddl/User.js","../../../../schemas/travel-document-checkpoint/lib/ddl/UserTerminal.js","../../../../schemas/travel-document-checkpoint/lib/ddl/UserTerminalAgt.js","../../../../schemas/travel-document-checkpoint/lib/generated/qApplication.js","../../../../schemas/travel-document-checkpoint/lib/generated/baseDaos.js","../../../../schemas/travel-document-checkpoint/lib/dao/TerminalDao.js","../../../../schemas/travel-document-checkpoint/lib/dao/UserDao.js","../../../../schemas/travel-document-checkpoint/lib/api/UserApi.js","../../../../apis/check-in/lib/api/Api.js","../../../../schemas/travel-document-checkpoint/lib/to_be_generated/common-tokens.js","../../../../schemas/travel-document-checkpoint/lib/to_be_generated/runtime-tokens.js","../../../../engines/terminal/lib/data/InternalRecordManager.js","../../../../engines/terminal/lib/net/InternalTransactionalConnector.js","../../../../engines/terminal/lib/net/OnlineManager.js","../../../../apis/apron/lib/isolate/IsolateMessage.js","../../../../apis/apron/lib/state/ApplicationState.js","../../../../apis/apron/lib/state/theApplicationState.js","../../../../apis/apron/lib/state/ApplicationStore.js","../../../../apis/apron/lib/tokens.js","../../../../engines/terminal/lib/net/TransactionalReceiver.js","../../../../engines/terminal/lib/net/TransactionalServer.js","../../../../engines/terminal/lib/orchestration/AbstractMutationManager.js","../../../../schemas/airport-code/lib/generated/application.js","../../../../libs/blueprint/lib/index.js","../../../../schemas/travel-document-checkpoint/lib/generated/application.js","../../../../schemas/airspace/lib/generated/application.js","../../../../schemas/holding-pattern/lib/generated/application.js","../../../../schemas/moving-walkway/lib/generated/application.js","../../../../engines/terminal/lib/orchestration/DatabaseManager.js","../../../../engines/terminal/lib/orchestration/DeleteManager.js","../../../../engines/terminal/lib/orchestration/HistoryManager.js","../../../../engines/terminal/lib/orchestration/InsertManager.js","../../../../engines/terminal/lib/orchestration/QueryManager.js","../../../../engines/terminal/lib/orchestration/TransactionManager.js","../../../../engines/terminal/lib/orchestration/UpdateManager.js","../../../../engines/terminal/lib/processing/CascadeGraphVerifier.js","../../../../engines/terminal/lib/processing/DependencyGraphResolver.js","../../../../engines/terminal/lib/processing/EntityGraphReconstructor.js","../../../../engines/terminal/lib/processing/OperationContext.js","../../../../engines/terminal/lib/processing/OperationManager.js","../../../../engines/terminal/lib/processing/StructuralEntityValidator.js","../../../../engines/terminal/lib/serialize/QueryParameterDeserializer.js","../../../../engines/terminal/lib/serialize/QueryResultsSerializer.js","../../../../engines/terminal/lib/shared/PlatformUtils.js","../../../../engines/terminal/lib/ClientQueryManager.js","../../../../schemas/airspace/lib/ddl/application/Domain.js","../../../../schemas/airspace/lib/ddl/application/Application.js","../../../../schemas/airspace/lib/ddl/application/VersionedApplicationObject.js","../../../../schemas/airspace/lib/ddl/application/ApplicationColumn.js","../../../../schemas/airspace/lib/ddl/application/ApplicationCurrentVersion.js","../../../../schemas/airspace/lib/ddl/application/ApplicationEntity.js","../../../../schemas/airspace/lib/ddl/application/ApplicationOperation.js","../../../../schemas/airspace/lib/ddl/application/ApplicationProperty.js","../../../../schemas/airspace/lib/ddl/application/ApplicationPropertyColumn.js","../../../../schemas/airspace/lib/ddl/application/ApplicationReference.js","../../../../schemas/airspace/lib/ddl/application/ApplicationRelation.js","../../../../schemas/airspace/lib/ddl/application/ApplicationRelationColumn.js","../../../../schemas/airspace/lib/ddl/application/ApplicationVersion.js","../../../../schemas/airspace/lib/generated/qApplication.js","../../../../schemas/airspace/lib/generated/baseDaos.js","../../../../schemas/airspace/lib/generated/baseDuos.js","../../../../schemas/airspace/lib/dao/DomainDao.js","../../../../schemas/airspace/lib/dao/ApplicationColumnDao.js","../../../../schemas/airspace/lib/dao/ApplicationDao.js","../../../../schemas/airspace/lib/dao/ApplicationEntityDao.js","../../../../schemas/airspace/lib/dao/ApplicationPropertyColumnDao.js","../../../../schemas/airspace/lib/dao/ApplicationPropertyDao.js","../../../../schemas/airspace/lib/dao/ApplicationReferenceDao.js","../../../../schemas/airspace/lib/dao/ApplicationRelationColumnDao.js","../../../../schemas/airspace/lib/dao/ApplicationRelationDao.js","../../../../schemas/airspace/lib/dao/ApplicationVersionDao.js","../../../../schemas/airspace/lib/duo/ApplicationVersionDuo.js","../../../../schemas/airspace/lib/tokens.js","../../../../libs/fuel-hydrant-system/lib/orderBy/EntityOrderByParser.js","../../../../libs/fuel-hydrant-system/lib/orderBy/AbstractEntityOrderByParser.js","../../../../libs/fuel-hydrant-system/lib/orderBy/ExactOrderByParser.js","../../../../libs/fuel-hydrant-system/lib/orderBy/MappedOrderByParser.js","../../../../libs/fuel-hydrant-system/lib/result/entity/GraphMtoMapper.js","../../../../libs/fuel-hydrant-system/lib/result/entity/GraphOtmMapper.js","../../../../libs/fuel-hydrant-system/lib/result/entity/IEntityResultParser.js","../../../../libs/fuel-hydrant-system/lib/result/entity/EntityGraphResultParser.js","../../../../libs/fuel-hydrant-system/lib/result/TreeResultParser.js","../../../../libs/fuel-hydrant-system/lib/result/entity/EntityTreeResultParser.js","../../../../libs/fuel-hydrant-system/lib/result/entity/ObjectResultParserFactory.js","../../../../libs/fuel-hydrant-system/lib/result/TreeQueryResultParser.js","../../../../libs/fuel-hydrant-system/lib/sql/core/SQLWhereBase.js","../../../../libs/fuel-hydrant-system/lib/sql/core/SQLNoJoinQuery.js","../../../../libs/fuel-hydrant-system/lib/sql/core/SQLDelete.js","../../../../libs/fuel-hydrant-system/lib/sql/core/SQLInsertValues.js","../../../../libs/fuel-hydrant-system/lib/sql/core/SQLQuery.js","../../../../libs/fuel-hydrant-system/lib/sql/core/SQLUpdate.js","../../../../libs/fuel-hydrant-system/lib/sql/SqlFunctionField.js","../../../../libs/fuel-hydrant-system/lib/sql/NonEntitySQLQuery.js","../../../../libs/fuel-hydrant-system/lib/sql/FieldSQLQuery.js","../../../../libs/fuel-hydrant-system/lib/sql/TreeSQLQuery.js","../../../../libs/fuel-hydrant-system/lib/sql/core/SubStatementSqlGenerator.js","../../../../libs/fuel-hydrant-system/lib/sql/EntitySQLQuery.js","../../../../libs/fuel-hydrant-system/lib/sql/SheetSQLQuery.js","../../../../libs/fuel-hydrant-system/lib/store/ActiveQueries.js","../../../../libs/fuel-hydrant-system/lib/store/IdGenerator.js","../../../../libs/fuel-hydrant-system/lib/store/RecordState.js","../../../../libs/fuel-hydrant-system/lib/store/SqlDriver.js","../../../../libs/fuel-hydrant-system/lib/validation/Validator.js","../../../../libs/fuel-hydrant-system/lib/tokens.js","../../../../libs/ground-transport/lib/adapters/DebugSynchronizationAdapter.js","../../../../libs/ground-transport/lib/adapters/SynchronizationAdapterLoader.js","../../../../libs/ground-transport/lib/synchronization/in/checker/SyncInActorChecker.js","../../../../libs/ground-transport/lib/synchronization/in/checker/SyncInApplicationChecker.js","../../../../libs/ground-transport/lib/synchronization/in/checker/SyncInApplicationVersionChecker.js","../../../../libs/ground-transport/lib/synchronization/in/checker/SyncInChecker.js","../../../../libs/ground-transport/lib/synchronization/in/checker/SyncInDataChecker.js","../../../../libs/ground-transport/lib/synchronization/in/checker/SyncInRepositoryChecker.js","../../../../libs/ground-transport/lib/synchronization/in/checker/SyncInTerminalChecker.js","../../../../libs/ground-transport/lib/synchronization/in/checker/SyncInUserChecker.js","../../../../schemas/moving-walkway/lib/ddl/conflict/SynchronizationConflict.js","../../../../schemas/moving-walkway/lib/ddl/conflict/SynchronizationConflictType.js","../../../../schemas/moving-walkway/lib/ddl/conflict/SynchronizationConflictValues.js","../../../../schemas/moving-walkway/lib/ddl/values/DataOrigin.js","../../../../schemas/moving-walkway/lib/ddl/values/ApplicationChangeStatus.js","../../../../schemas/moving-walkway/lib/ddl/RecordUpdateStage.js","../../../../schemas/moving-walkway/lib/generated/qApplication.js","../../../../schemas/moving-walkway/lib/generated/baseDaos.js","../../../../schemas/moving-walkway/lib/dao/conflict/SynchronizationConflictDao.js","../../../../schemas/moving-walkway/lib/dao/conflict/SynchronizationConflictValuesDao.js","../../../../schemas/moving-walkway/lib/dao/RecordUpdateStageDao.js","../../../../schemas/moving-walkway/lib/tokens.js","../../../../libs/ground-transport/lib/synchronization/in/Stage1SyncedInDataProcessor.js","../../../../libs/ground-transport/lib/synchronization/in/Stage2SyncedInDataProcessor.js","../../../../libs/ground-transport/lib/synchronization/in/SynchronizationInManager.js","../../../../libs/ground-transport/lib/synchronization/in/SyncInUtils.js","../../../../libs/ground-transport/lib/synchronization/in/TwoStageSyncedInDataProcessor.js","../../../../libs/ground-transport/lib/synchronization/out/converter/SyncOutDataSerializer.js","../../../../libs/ground-transport/lib/synchronization/out/SynchronizationOutManager.js","../../../../nonhub/client/lib/NonhubClient.js","../../../../nonhub/client/lib/tokens.js","../../../../libs/ground-transport/lib/tokens.js","../../../../engines/terminal/lib/tokens.js","../../../../engines/terminal/lib/index.js","../../../../engines/tower/lib/core/api/ApiRegistry.js","../../../../engines/tower/lib/core/api/ApiValidator.js","../../../../engines/tower/lib/core/api/LocalApiServer.js","../../../../engines/tower/lib/core/api/OperationDeserializer.js","../../../../engines/tower/lib/core/data/EntityCopier.js","../../../../engines/tower/lib/core/data/UpdateCacheManager.js","../../../../engines/tower/lib/core/EntityStateManager.js","../../../../engines/tower/lib/facade/DatabaseFacade.js","../../../../engines/tower/lib/facade/QueryFacade.js","../../../../engines/tower/lib/AirportDatabase.js","../../../../engines/tower/lib/tokens.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/broadcast-channel@4.10.0/node_modules/broadcast-channel/dist/lib/util.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/@babel/runtime@7.17.8/node_modules/@babel/runtime/helpers/interopRequireDefault.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/@babel/runtime@7.17.8/node_modules/@babel/runtime/helpers/typeof.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/broadcast-channel@4.10.0/node_modules/broadcast-channel/dist/lib/methods/native.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/oblivious-set@1.0.0/node_modules/oblivious-set/dist/es/index.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/broadcast-channel@4.10.0/node_modules/broadcast-channel/dist/lib/options.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/broadcast-channel@4.10.0/node_modules/broadcast-channel/dist/lib/methods/indexed-db.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/broadcast-channel@4.10.0/node_modules/broadcast-channel/dist/lib/methods/localstorage.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/broadcast-channel@4.10.0/node_modules/broadcast-channel/dist/lib/methods/simulate.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/broadcast-channel@4.10.0/node_modules/broadcast-channel/dist/lib/method-chooser.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/broadcast-channel@4.10.0/node_modules/broadcast-channel/dist/lib/broadcast-channel.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/unload@2.3.1/node_modules/unload/dist/es/browser.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/unload@2.3.1/node_modules/unload/dist/es/index.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/broadcast-channel@4.10.0/node_modules/broadcast-channel/dist/lib/leader-election.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/broadcast-channel@4.10.0/node_modules/broadcast-channel/dist/lib/index.js","../../../../../../DIN/sapoto-net/common/temp/node_modules/.pnpm/broadcast-channel@4.10.0/node_modules/broadcast-channel/dist/lib/index.es5.js","../../../web-terminal/lib/WebMessageReceiver.js","../../../web-terminal/lib/DomainRetriever.js","../../../../generators/landing/lib/builder/SqlApplicationBuilder.js","../../../../generators/landing/lib/checker/ApplicationChecker.js","../../../../generators/landing/lib/locator/ApplicationLocator.js","../../../../generators/landing/lib/recorder/ApplicationComposer.js","../../../../generators/landing/lib/recorder/ApplicationRecorder.js","../../../../schemas/airport-code/lib/ddl/Sequence.js","../../../../schemas/airport-code/lib/ddl/SystemWideOperationId.js","../../../../schemas/airport-code/lib/ddl/TerminalRun.js","../../../../schemas/airport-code/lib/generated/qApplication.js","../../../../schemas/airport-code/lib/generated/baseDaos.js","../../../../schemas/airport-code/lib/dao/TerminalRunDao.js","../../../../schemas/airport-code/lib/dao/SequenceDao.js","../../../../schemas/airport-code/lib/tokens.js","../../../../generators/takeoff/lib/AirportDatabasePopulator.js","../../../../generators/takeoff/lib/DdlObjectLinker.js","../../../../generators/takeoff/lib/DdlObjectRetriever.js","../../../../generators/takeoff/lib/QueryEntityClassCreator.js","../../../../generators/takeoff/lib/QueryObjectInitializer.js","../../../../generators/takeoff/lib/tokens.js","../../../../generators/landing/lib/ApplicationInitializer.js","../../../../generators/landing/lib/tokens.js","../../../web-terminal/lib/WebApplicationInitializer.js","../../../web-terminal/lib/WebTransactionalReceiver.js","../../../web-terminal/lib/tokens.js","../../../../db/sequence/lib/SequenceGenerator.js","../../../../db/sequence/lib/tokens.js","../../../../db/sqlite/lib/SqLiteDriver.js","../../../../db/sqlite/lib/SqLiteQueryAdaptor.js","../../../../libs/fuel-hydrant-system/lib/adaptor/SQLQueryAdaptor.js","../../../../db/sqlite/lib/SqLiteApplicationBuilder.js","../../../../db/sqlite/lib/tokens.js","../../../../db/sqljs/lib/SqlJsTransaction.js","../../../../libs/fuel-hydrant-system/lib/store/SqlTransaction.js","../../../../db/sqljs/lib/SqlJsDriver.js","../../../../db/sqljs/lib/SqlJsQueryAdaptor.js","../../../../db/sqljs/lib/tokens.js","../../../web-terminal/lib/index.js","../../src/main.ts","../../src/framework.ts","../../../../db/sqljs/lib/index.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.42.4' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.page = factory());\n}(this, (function () { 'use strict';\n\nvar isarray = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n/**\n * Expose `pathToRegexp`.\n */\nvar pathToRegexp_1 = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {String} str\n * @return {Array}\n */\nfunction parse (str) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue\n    }\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var suffix = res[6];\n    var asterisk = res[7];\n\n    var repeat = suffix === '+' || suffix === '*';\n    var optional = suffix === '?' || suffix === '*';\n    var delimiter = prefix || '/';\n    var pattern = capture || group || (asterisk ? '.*' : '[^' + delimiter + ']+?');\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      pattern: escapeGroup(pattern)\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {String}   str\n * @return {Function}\n */\nfunction compile (str) {\n  return tokensToFunction(parse(str))\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^' + tokens[i].pattern + '$');\n    }\n  }\n\n  return function (obj) {\n    var path = '';\n    var data = obj || {};\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received \"' + value + '\"')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encodeURIComponent(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      segment = encodeURIComponent(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {String} str\n * @return {String}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {String} group\n * @return {String}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {RegExp} re\n * @param  {Array}  keys\n * @return {RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys;\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {String}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {RegExp} path\n * @param  {Array}  keys\n * @return {RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {Array}  path\n * @param  {Array}  keys\n * @param  {Object} options\n * @return {RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {String} path\n * @param  {Array}  keys\n * @param  {Object} options\n * @return {RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  var tokens = parse(path);\n  var re = tokensToRegExp(tokens, options);\n\n  // Attach keys back to the regexp.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] !== 'string') {\n      keys.push(tokens[i]);\n    }\n  }\n\n  return attachKeys(re, keys)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {Array}  tokens\n * @param  {Array}  keys\n * @param  {Object} options\n * @return {RegExp}\n */\nfunction tokensToRegExp (tokens, options) {\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = '';\n  var lastToken = tokens[tokens.length - 1];\n  var endsWithSlash = typeof lastToken === 'string' && /\\/$/.test(lastToken);\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = token.pattern;\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (prefix) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithSlash ? route.slice(0, -2) : route) + '(?:\\\\/(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithSlash ? '' : '(?=\\\\/|$)';\n  }\n\n  return new RegExp('^' + route, flags(options))\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(String|RegExp|Array)} path\n * @param  {Array}                 [keys]\n * @param  {Object}                [options]\n * @return {RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  keys = keys || [];\n\n  if (!isarray(keys)) {\n    options = keys;\n    keys = [];\n  } else if (!options) {\n    options = {};\n  }\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, keys, options)\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(path, keys, options)\n  }\n\n  return stringToRegexp(path, keys, options)\n}\n\npathToRegexp_1.parse = parse_1;\npathToRegexp_1.compile = compile_1;\npathToRegexp_1.tokensToFunction = tokensToFunction_1;\npathToRegexp_1.tokensToRegExp = tokensToRegExp_1;\n\n/**\n   * Module dependencies.\n   */\n\n  \n\n  /**\n   * Short-cuts for global-object checks\n   */\n\n  var hasDocument = ('undefined' !== typeof document);\n  var hasWindow = ('undefined' !== typeof window);\n  var hasHistory = ('undefined' !== typeof history);\n  var hasProcess = typeof process !== 'undefined';\n\n  /**\n   * Detect click event\n   */\n  var clickEvent = hasDocument && document.ontouchstart ? 'touchstart' : 'click';\n\n  /**\n   * To work properly with the URL\n   * history.location generated polyfill in https://github.com/devote/HTML5-History-API\n   */\n\n  var isLocation = hasWindow && !!(window.history.location || window.location);\n\n  /**\n   * The page instance\n   * @api private\n   */\n  function Page() {\n    // public things\n    this.callbacks = [];\n    this.exits = [];\n    this.current = '';\n    this.len = 0;\n\n    // private things\n    this._decodeURLComponents = true;\n    this._base = '';\n    this._strict = false;\n    this._running = false;\n    this._hashbang = false;\n\n    // bound functions\n    this.clickHandler = this.clickHandler.bind(this);\n    this._onpopstate = this._onpopstate.bind(this);\n  }\n\n  /**\n   * Configure the instance of page. This can be called multiple times.\n   *\n   * @param {Object} options\n   * @api public\n   */\n\n  Page.prototype.configure = function(options) {\n    var opts = options || {};\n\n    this._window = opts.window || (hasWindow && window);\n    this._decodeURLComponents = opts.decodeURLComponents !== false;\n    this._popstate = opts.popstate !== false && hasWindow;\n    this._click = opts.click !== false && hasDocument;\n    this._hashbang = !!opts.hashbang;\n\n    var _window = this._window;\n    if(this._popstate) {\n      _window.addEventListener('popstate', this._onpopstate, false);\n    } else if(hasWindow) {\n      _window.removeEventListener('popstate', this._onpopstate, false);\n    }\n\n    if (this._click) {\n      _window.document.addEventListener(clickEvent, this.clickHandler, false);\n    } else if(hasDocument) {\n      _window.document.removeEventListener(clickEvent, this.clickHandler, false);\n    }\n\n    if(this._hashbang && hasWindow && !hasHistory) {\n      _window.addEventListener('hashchange', this._onpopstate, false);\n    } else if(hasWindow) {\n      _window.removeEventListener('hashchange', this._onpopstate, false);\n    }\n  };\n\n  /**\n   * Get or set basepath to `path`.\n   *\n   * @param {string} path\n   * @api public\n   */\n\n  Page.prototype.base = function(path) {\n    if (0 === arguments.length) return this._base;\n    this._base = path;\n  };\n\n  /**\n   * Gets the `base`, which depends on whether we are using History or\n   * hashbang routing.\n\n   * @api private\n   */\n  Page.prototype._getBase = function() {\n    var base = this._base;\n    if(!!base) return base;\n    var loc = hasWindow && this._window && this._window.location;\n\n    if(hasWindow && this._hashbang && loc && loc.protocol === 'file:') {\n      base = loc.pathname;\n    }\n\n    return base;\n  };\n\n  /**\n   * Get or set strict path matching to `enable`\n   *\n   * @param {boolean} enable\n   * @api public\n   */\n\n  Page.prototype.strict = function(enable) {\n    if (0 === arguments.length) return this._strict;\n    this._strict = enable;\n  };\n\n\n  /**\n   * Bind with the given `options`.\n   *\n   * Options:\n   *\n   *    - `click` bind to click events [true]\n   *    - `popstate` bind to popstate [true]\n   *    - `dispatch` perform initial dispatch [true]\n   *\n   * @param {Object} options\n   * @api public\n   */\n\n  Page.prototype.start = function(options) {\n    var opts = options || {};\n    this.configure(opts);\n\n    if (false === opts.dispatch) return;\n    this._running = true;\n\n    var url;\n    if(isLocation) {\n      var window = this._window;\n      var loc = window.location;\n\n      if(this._hashbang && ~loc.hash.indexOf('#!')) {\n        url = loc.hash.substr(2) + loc.search;\n      } else if (this._hashbang) {\n        url = loc.search + loc.hash;\n      } else {\n        url = loc.pathname + loc.search + loc.hash;\n      }\n    }\n\n    this.replace(url, null, true, opts.dispatch);\n  };\n\n  /**\n   * Unbind click and popstate event handlers.\n   *\n   * @api public\n   */\n\n  Page.prototype.stop = function() {\n    if (!this._running) return;\n    this.current = '';\n    this.len = 0;\n    this._running = false;\n\n    var window = this._window;\n    this._click && window.document.removeEventListener(clickEvent, this.clickHandler, false);\n    hasWindow && window.removeEventListener('popstate', this._onpopstate, false);\n    hasWindow && window.removeEventListener('hashchange', this._onpopstate, false);\n  };\n\n  /**\n   * Show `path` with optional `state` object.\n   *\n   * @param {string} path\n   * @param {Object=} state\n   * @param {boolean=} dispatch\n   * @param {boolean=} push\n   * @return {!Context}\n   * @api public\n   */\n\n  Page.prototype.show = function(path, state, dispatch, push) {\n    var ctx = new Context(path, state, this),\n      prev = this.prevContext;\n    this.prevContext = ctx;\n    this.current = ctx.path;\n    if (false !== dispatch) this.dispatch(ctx, prev);\n    if (false !== ctx.handled && false !== push) ctx.pushState();\n    return ctx;\n  };\n\n  /**\n   * Goes back in the history\n   * Back should always let the current route push state and then go back.\n   *\n   * @param {string} path - fallback path to go back if no more history exists, if undefined defaults to page.base\n   * @param {Object=} state\n   * @api public\n   */\n\n  Page.prototype.back = function(path, state) {\n    var page = this;\n    if (this.len > 0) {\n      var window = this._window;\n      // this may need more testing to see if all browsers\n      // wait for the next tick to go back in history\n      hasHistory && window.history.back();\n      this.len--;\n    } else if (path) {\n      setTimeout(function() {\n        page.show(path, state);\n      });\n    } else {\n      setTimeout(function() {\n        page.show(page._getBase(), state);\n      });\n    }\n  };\n\n  /**\n   * Register route to redirect from one path to other\n   * or just redirect to another route\n   *\n   * @param {string} from - if param 'to' is undefined redirects to 'from'\n   * @param {string=} to\n   * @api public\n   */\n  Page.prototype.redirect = function(from, to) {\n    var inst = this;\n\n    // Define route from a path to another\n    if ('string' === typeof from && 'string' === typeof to) {\n      page.call(this, from, function(e) {\n        setTimeout(function() {\n          inst.replace(/** @type {!string} */ (to));\n        }, 0);\n      });\n    }\n\n    // Wait for the push state and replace it with another\n    if ('string' === typeof from && 'undefined' === typeof to) {\n      setTimeout(function() {\n        inst.replace(from);\n      }, 0);\n    }\n  };\n\n  /**\n   * Replace `path` with optional `state` object.\n   *\n   * @param {string} path\n   * @param {Object=} state\n   * @param {boolean=} init\n   * @param {boolean=} dispatch\n   * @return {!Context}\n   * @api public\n   */\n\n\n  Page.prototype.replace = function(path, state, init, dispatch) {\n    var ctx = new Context(path, state, this),\n      prev = this.prevContext;\n    this.prevContext = ctx;\n    this.current = ctx.path;\n    ctx.init = init;\n    ctx.save(); // save before dispatching, which may redirect\n    if (false !== dispatch) this.dispatch(ctx, prev);\n    return ctx;\n  };\n\n  /**\n   * Dispatch the given `ctx`.\n   *\n   * @param {Context} ctx\n   * @api private\n   */\n\n  Page.prototype.dispatch = function(ctx, prev) {\n    var i = 0, j = 0, page = this;\n\n    function nextExit() {\n      var fn = page.exits[j++];\n      if (!fn) return nextEnter();\n      fn(prev, nextExit);\n    }\n\n    function nextEnter() {\n      var fn = page.callbacks[i++];\n\n      if (ctx.path !== page.current) {\n        ctx.handled = false;\n        return;\n      }\n      if (!fn) return unhandled.call(page, ctx);\n      fn(ctx, nextEnter);\n    }\n\n    if (prev) {\n      nextExit();\n    } else {\n      nextEnter();\n    }\n  };\n\n  /**\n   * Register an exit route on `path` with\n   * callback `fn()`, which will be called\n   * on the previous context when a new\n   * page is visited.\n   */\n  Page.prototype.exit = function(path, fn) {\n    if (typeof path === 'function') {\n      return this.exit('*', path);\n    }\n\n    var route = new Route(path, null, this);\n    for (var i = 1; i < arguments.length; ++i) {\n      this.exits.push(route.middleware(arguments[i]));\n    }\n  };\n\n  /**\n   * Handle \"click\" events.\n   */\n\n  /* jshint +W054 */\n  Page.prototype.clickHandler = function(e) {\n    if (1 !== this._which(e)) return;\n\n    if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n    if (e.defaultPrevented) return;\n\n    // ensure link\n    // use shadow dom when available if not, fall back to composedPath()\n    // for browsers that only have shady\n    var el = e.target;\n    var eventPath = e.path || (e.composedPath ? e.composedPath() : null);\n\n    if(eventPath) {\n      for (var i = 0; i < eventPath.length; i++) {\n        if (!eventPath[i].nodeName) continue;\n        if (eventPath[i].nodeName.toUpperCase() !== 'A') continue;\n        if (!eventPath[i].href) continue;\n\n        el = eventPath[i];\n        break;\n      }\n    }\n\n    // continue ensure link\n    // el.nodeName for svg links are 'a' instead of 'A'\n    while (el && 'A' !== el.nodeName.toUpperCase()) el = el.parentNode;\n    if (!el || 'A' !== el.nodeName.toUpperCase()) return;\n\n    // check if link is inside an svg\n    // in this case, both href and target are always inside an object\n    var svg = (typeof el.href === 'object') && el.href.constructor.name === 'SVGAnimatedString';\n\n    // Ignore if tag has\n    // 1. \"download\" attribute\n    // 2. rel=\"external\" attribute\n    if (el.hasAttribute('download') || el.getAttribute('rel') === 'external') return;\n\n    // ensure non-hash for the same path\n    var link = el.getAttribute('href');\n    if(!this._hashbang && this._samePath(el) && (el.hash || '#' === link)) return;\n\n    // Check for mailto: in the href\n    if (link && link.indexOf('mailto:') > -1) return;\n\n    // check target\n    // svg target is an object and its desired value is in .baseVal property\n    if (svg ? el.target.baseVal : el.target) return;\n\n    // x-origin\n    // note: svg links that are not relative don't call click events (and skip page.js)\n    // consequently, all svg links tested inside page.js are relative and in the same origin\n    if (!svg && !this.sameOrigin(el.href)) return;\n\n    // rebuild path\n    // There aren't .pathname and .search properties in svg links, so we use href\n    // Also, svg href is an object and its desired value is in .baseVal property\n    var path = svg ? el.href.baseVal : (el.pathname + el.search + (el.hash || ''));\n\n    path = path[0] !== '/' ? '/' + path : path;\n\n    // strip leading \"/[drive letter]:\" on NW.js on Windows\n    if (hasProcess && path.match(/^\\/[a-zA-Z]:\\//)) {\n      path = path.replace(/^\\/[a-zA-Z]:\\//, '/');\n    }\n\n    // same page\n    var orig = path;\n    var pageBase = this._getBase();\n\n    if (path.indexOf(pageBase) === 0) {\n      path = path.substr(pageBase.length);\n    }\n\n    if (this._hashbang) path = path.replace('#!', '');\n\n    if (pageBase && orig === path && (!isLocation || this._window.location.protocol !== 'file:')) {\n      return;\n    }\n\n    e.preventDefault();\n    this.show(orig);\n  };\n\n  /**\n   * Handle \"populate\" events.\n   * @api private\n   */\n\n  Page.prototype._onpopstate = (function () {\n    var loaded = false;\n    if ( ! hasWindow ) {\n      return function () {};\n    }\n    if (hasDocument && document.readyState === 'complete') {\n      loaded = true;\n    } else {\n      window.addEventListener('load', function() {\n        setTimeout(function() {\n          loaded = true;\n        }, 0);\n      });\n    }\n    return function onpopstate(e) {\n      if (!loaded) return;\n      var page = this;\n      if (e.state) {\n        var path = e.state.path;\n        page.replace(path, e.state);\n      } else if (isLocation) {\n        var loc = page._window.location;\n        page.show(loc.pathname + loc.search + loc.hash, undefined, undefined, false);\n      }\n    };\n  })();\n\n  /**\n   * Event button.\n   */\n  Page.prototype._which = function(e) {\n    e = e || (hasWindow && this._window.event);\n    return null == e.which ? e.button : e.which;\n  };\n\n  /**\n   * Convert to a URL object\n   * @api private\n   */\n  Page.prototype._toURL = function(href) {\n    var window = this._window;\n    if(typeof URL === 'function' && isLocation) {\n      return new URL(href, window.location.toString());\n    } else if (hasDocument) {\n      var anc = window.document.createElement('a');\n      anc.href = href;\n      return anc;\n    }\n  };\n\n  /**\n   * Check if `href` is the same origin.\n   * @param {string} href\n   * @api public\n   */\n  Page.prototype.sameOrigin = function(href) {\n    if(!href || !isLocation) return false;\n\n    var url = this._toURL(href);\n    var window = this._window;\n\n    var loc = window.location;\n\n    /*\n       When the port is the default http port 80 for http, or 443 for\n       https, internet explorer 11 returns an empty string for loc.port,\n       so we need to compare loc.port with an empty string if url.port\n       is the default port 80 or 443.\n       Also the comparition with `port` is changed from `===` to `==` because\n       `port` can be a string sometimes. This only applies to ie11.\n    */\n    return loc.protocol === url.protocol &&\n      loc.hostname === url.hostname &&\n      (loc.port === url.port || loc.port === '' && (url.port == 80 || url.port == 443)); // jshint ignore:line\n  };\n\n  /**\n   * @api private\n   */\n  Page.prototype._samePath = function(url) {\n    if(!isLocation) return false;\n    var window = this._window;\n    var loc = window.location;\n    return url.pathname === loc.pathname &&\n      url.search === loc.search;\n  };\n\n  /**\n   * Remove URL encoding from the given `str`.\n   * Accommodates whitespace in both x-www-form-urlencoded\n   * and regular percent-encoded form.\n   *\n   * @param {string} val - URL component to decode\n   * @api private\n   */\n  Page.prototype._decodeURLEncodedURIComponent = function(val) {\n    if (typeof val !== 'string') { return val; }\n    return this._decodeURLComponents ? decodeURIComponent(val.replace(/\\+/g, ' ')) : val;\n  };\n\n  /**\n   * Create a new `page` instance and function\n   */\n  function createPage() {\n    var pageInstance = new Page();\n\n    function pageFn(/* args */) {\n      return page.apply(pageInstance, arguments);\n    }\n\n    // Copy all of the things over. In 2.0 maybe we use setPrototypeOf\n    pageFn.callbacks = pageInstance.callbacks;\n    pageFn.exits = pageInstance.exits;\n    pageFn.base = pageInstance.base.bind(pageInstance);\n    pageFn.strict = pageInstance.strict.bind(pageInstance);\n    pageFn.start = pageInstance.start.bind(pageInstance);\n    pageFn.stop = pageInstance.stop.bind(pageInstance);\n    pageFn.show = pageInstance.show.bind(pageInstance);\n    pageFn.back = pageInstance.back.bind(pageInstance);\n    pageFn.redirect = pageInstance.redirect.bind(pageInstance);\n    pageFn.replace = pageInstance.replace.bind(pageInstance);\n    pageFn.dispatch = pageInstance.dispatch.bind(pageInstance);\n    pageFn.exit = pageInstance.exit.bind(pageInstance);\n    pageFn.configure = pageInstance.configure.bind(pageInstance);\n    pageFn.sameOrigin = pageInstance.sameOrigin.bind(pageInstance);\n    pageFn.clickHandler = pageInstance.clickHandler.bind(pageInstance);\n\n    pageFn.create = createPage;\n\n    Object.defineProperty(pageFn, 'len', {\n      get: function(){\n        return pageInstance.len;\n      },\n      set: function(val) {\n        pageInstance.len = val;\n      }\n    });\n\n    Object.defineProperty(pageFn, 'current', {\n      get: function(){\n        return pageInstance.current;\n      },\n      set: function(val) {\n        pageInstance.current = val;\n      }\n    });\n\n    // In 2.0 these can be named exports\n    pageFn.Context = Context;\n    pageFn.Route = Route;\n\n    return pageFn;\n  }\n\n  /**\n   * Register `path` with callback `fn()`,\n   * or route `path`, or redirection,\n   * or `page.start()`.\n   *\n   *   page(fn);\n   *   page('*', fn);\n   *   page('/user/:id', load, user);\n   *   page('/user/' + user.id, { some: 'thing' });\n   *   page('/user/' + user.id);\n   *   page('/from', '/to')\n   *   page();\n   *\n   * @param {string|!Function|!Object} path\n   * @param {Function=} fn\n   * @api public\n   */\n\n  function page(path, fn) {\n    // <callback>\n    if ('function' === typeof path) {\n      return page.call(this, '*', path);\n    }\n\n    // route <path> to <callback ...>\n    if ('function' === typeof fn) {\n      var route = new Route(/** @type {string} */ (path), null, this);\n      for (var i = 1; i < arguments.length; ++i) {\n        this.callbacks.push(route.middleware(arguments[i]));\n      }\n      // show <path> with [state]\n    } else if ('string' === typeof path) {\n      this['string' === typeof fn ? 'redirect' : 'show'](path, fn);\n      // start [options]\n    } else {\n      this.start(path);\n    }\n  }\n\n  /**\n   * Unhandled `ctx`. When it's not the initial\n   * popstate then redirect. If you wish to handle\n   * 404s on your own use `page('*', callback)`.\n   *\n   * @param {Context} ctx\n   * @api private\n   */\n  function unhandled(ctx) {\n    if (ctx.handled) return;\n    var current;\n    var page = this;\n    var window = page._window;\n\n    if (page._hashbang) {\n      current = isLocation && this._getBase() + window.location.hash.replace('#!', '');\n    } else {\n      current = isLocation && window.location.pathname + window.location.search;\n    }\n\n    if (current === ctx.canonicalPath) return;\n    page.stop();\n    ctx.handled = false;\n    isLocation && (window.location.href = ctx.canonicalPath);\n  }\n\n  /**\n   * Escapes RegExp characters in the given string.\n   *\n   * @param {string} s\n   * @api private\n   */\n  function escapeRegExp(s) {\n    return s.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1');\n  }\n\n  /**\n   * Initialize a new \"request\" `Context`\n   * with the given `path` and optional initial `state`.\n   *\n   * @constructor\n   * @param {string} path\n   * @param {Object=} state\n   * @api public\n   */\n\n  function Context(path, state, pageInstance) {\n    var _page = this.page = pageInstance || page;\n    var window = _page._window;\n    var hashbang = _page._hashbang;\n\n    var pageBase = _page._getBase();\n    if ('/' === path[0] && 0 !== path.indexOf(pageBase)) path = pageBase + (hashbang ? '#!' : '') + path;\n    var i = path.indexOf('?');\n\n    this.canonicalPath = path;\n    var re = new RegExp('^' + escapeRegExp(pageBase));\n    this.path = path.replace(re, '') || '/';\n    if (hashbang) this.path = this.path.replace('#!', '') || '/';\n\n    this.title = (hasDocument && window.document.title);\n    this.state = state || {};\n    this.state.path = path;\n    this.querystring = ~i ? _page._decodeURLEncodedURIComponent(path.slice(i + 1)) : '';\n    this.pathname = _page._decodeURLEncodedURIComponent(~i ? path.slice(0, i) : path);\n    this.params = {};\n\n    // fragment\n    this.hash = '';\n    if (!hashbang) {\n      if (!~this.path.indexOf('#')) return;\n      var parts = this.path.split('#');\n      this.path = this.pathname = parts[0];\n      this.hash = _page._decodeURLEncodedURIComponent(parts[1]) || '';\n      this.querystring = this.querystring.split('#')[0];\n    }\n  }\n\n  /**\n   * Push state.\n   *\n   * @api private\n   */\n\n  Context.prototype.pushState = function() {\n    var page = this.page;\n    var window = page._window;\n    var hashbang = page._hashbang;\n\n    page.len++;\n    if (hasHistory) {\n        window.history.pushState(this.state, this.title,\n          hashbang && this.path !== '/' ? '#!' + this.path : this.canonicalPath);\n    }\n  };\n\n  /**\n   * Save the context state.\n   *\n   * @api public\n   */\n\n  Context.prototype.save = function() {\n    var page = this.page;\n    if (hasHistory) {\n        page._window.history.replaceState(this.state, this.title,\n          page._hashbang && this.path !== '/' ? '#!' + this.path : this.canonicalPath);\n    }\n  };\n\n  /**\n   * Initialize `Route` with the given HTTP `path`,\n   * and an array of `callbacks` and `options`.\n   *\n   * Options:\n   *\n   *   - `sensitive`    enable case-sensitive routes\n   *   - `strict`       enable strict matching for trailing slashes\n   *\n   * @constructor\n   * @param {string} path\n   * @param {Object=} options\n   * @api private\n   */\n\n  function Route(path, options, page) {\n    var _page = this.page = page || globalPage;\n    var opts = options || {};\n    opts.strict = opts.strict || _page._strict;\n    this.path = (path === '*') ? '(.*)' : path;\n    this.method = 'GET';\n    this.regexp = pathToRegexp_1(this.path, this.keys = [], opts);\n  }\n\n  /**\n   * Return route middleware with\n   * the given callback `fn()`.\n   *\n   * @param {Function} fn\n   * @return {Function}\n   * @api public\n   */\n\n  Route.prototype.middleware = function(fn) {\n    var self = this;\n    return function(ctx, next) {\n      if (self.match(ctx.path, ctx.params)) {\n        ctx.routePath = self.path;\n        return fn(ctx, next);\n      }\n      next();\n    };\n  };\n\n  /**\n   * Check if this route matches `path`, if so\n   * populate `params`.\n   *\n   * @param {string} path\n   * @param {Object} params\n   * @return {boolean}\n   * @api private\n   */\n\n  Route.prototype.match = function(path, params) {\n    var keys = this.keys,\n      qsIndex = path.indexOf('?'),\n      pathname = ~qsIndex ? path.slice(0, qsIndex) : path,\n      m = this.regexp.exec(decodeURIComponent(pathname));\n\n    if (!m) return false;\n\n    delete params[0];\n\n    for (var i = 1, len = m.length; i < len; ++i) {\n      var key = keys[i - 1];\n      var val = this.page._decodeURLEncodedURIComponent(m[i]);\n      if (val !== undefined || !(hasOwnProperty.call(params, key.name))) {\n        params[key.name] = val;\n      }\n    }\n\n    return true;\n  };\n\n\n  /**\n   * Module exports.\n   */\n\n  var globalPage = createPage();\n  var page_js = globalPage;\n  var default_1 = globalPage;\n\npage_js.default = default_1;\n\nreturn page_js;\n\n})));\n","<style type=\"text/css\">\r\n</style>\r\n\r\n<script lang=\"ts\">\r\nimport { onMount } from 'svelte';\r\nimport page from 'page';\r\n\r\npage('/:uiPath', (context) => {\r\n  console.log(context);\r\n});\r\npage();\r\n\r\nonMount(async () => {});\r\n</script>\r\n","import { InjectionApplication } from './InjectionApplication';\nexport class InjectionDomain {\n    constructor(name) {\n        this.name = name;\n        this.applicationMap = {};\n    }\n    app(applicationName) {\n        if (this.applicationMap[applicationName]) {\n            throw new Error(`\r\n\t\t\tApplication already defined.\r\n\t\t\tDomain:      ${this.name}\r\n\t\t\tApplication: ${applicationName}\r\n\t\t\t`);\n        }\n        const application = new InjectionApplication(applicationName, this);\n        this.applicationMap[applicationName] = application;\n        return application;\n    }\n    getApp(applicationName) {\n        return this.applicationMap[applicationName];\n    }\n}\nconst DOMAIN_MAP = {};\nexport function domain(domainName) {\n    if (DOMAIN_MAP[domainName]) {\n        return DOMAIN_MAP[domainName];\n    }\n    const domain = new InjectionDomain(domainName);\n    DOMAIN_MAP[domainName] = domain;\n    return domain;\n}\nexport const AIRPORT_DOMAIN = domain('turbase.app');\n//# sourceMappingURL=InjectionDomain.js.map","export class DependencyInjectionToken {\n    constructor(application, descriptor) {\n        this.application = application;\n        this.descriptor = descriptor;\n    }\n    get dependencyConfiguration() {\n        return this.getInheritedDependencyConfiguration(this.descriptor.class);\n    }\n    getPath() {\n        return this.application.domain.name + ':' + this.application.name + ':'\n            + this.descriptor.token;\n    }\n    setDependencies(dependencyConfiguration) {\n        if (this._dependencyConfiguration) {\n            this._dependencyConfiguration = {\n                ...this._dependencyConfiguration,\n                ...dependencyConfiguration\n            };\n        }\n        else {\n            this._dependencyConfiguration = dependencyConfiguration;\n        }\n        if (!this.descriptor.class) {\n            return;\n        }\n        if (this.descriptor.class.dependencyConfiguration) {\n            this.descriptor.class.dependencyConfiguration = {\n                ...this.descriptor.class.dependencyConfiguration,\n                ...dependencyConfiguration\n            };\n        }\n        else {\n            this.descriptor.class.dependencyConfiguration = dependencyConfiguration;\n        }\n    }\n    setClass(aClass) {\n        this.descriptor.class = aClass;\n        aClass.dependencyConfiguration = this._dependencyConfiguration;\n    }\n    getInheritedDependencyConfiguration(aClass) {\n        const parentClass = Object.getPrototypeOf(aClass);\n        let returnedDependencyConfiguration = {};\n        if (parentClass) {\n            returnedDependencyConfiguration = this.getInheritedDependencyConfiguration(parentClass);\n        }\n        const dependencyConfiguration = aClass.dependencyConfiguration;\n        if (dependencyConfiguration) {\n            returnedDependencyConfiguration = {\n                ...returnedDependencyConfiguration,\n                ...dependencyConfiguration\n            };\n        }\n        return returnedDependencyConfiguration;\n    }\n}\n//# sourceMappingURL=Token.js.map","import { AIRPORT_DOMAIN } from './InjectionDomain';\nimport { DependencyInjectionToken } from './Token';\nexport class InjectionApplication {\n    constructor(name, domain) {\n        this.name = name;\n        this.domain = domain;\n        this.tokenMap = new Map();\n        this.autopilot = false;\n    }\n    token(descriptor) {\n        const existingToken = this.tokenMap.get(descriptor.token);\n        if (existingToken) {\n            throw new Error(`Token with name '${name}' has already been created`);\n        }\n        const diToken = new DependencyInjectionToken(this, descriptor);\n        this.tokenMap.set(descriptor.token, diToken);\n        return diToken;\n    }\n}\nexport function lib(libraryName) {\n    return AIRPORT_DOMAIN.app(libraryName);\n}\n//# sourceMappingURL=InjectionApplication.js.map","export var ContextType;\n(function (ContextType) {\n    ContextType[\"DB\"] = \"DB\";\n    ContextType[\"UI\"] = \"UI\";\n})(ContextType || (ContextType = {}));\nexport class Context {\n    constructor(id, type) {\n        this.id = id;\n        this.type = type;\n    }\n}\n//# sourceMappingURL=Context.js.map","import { lib } from \"./dependencyInjection/InjectionApplication\";\nconst directionIndicator = lib('direction-indicator');\nexport const AUTOPILOT_API_LOADER = directionIndicator.token({\n    class: null,\n    interface: 'IAutopilotApiLoader',\n    token: 'AUTOPILOT_API_LOADER'\n});\n//# sourceMappingURL=tokens.js.map","export class Container {\n}\n//# sourceMappingURL=Container.js.map","import { AUTOPILOT_API_LOADER } from \"../tokens\";\nimport { Container } from \"./Container\";\nimport { domain } from \"./InjectionDomain\";\nexport class ChildContainer extends Container {\n    constructor(rootContainer, context) {\n        super();\n        this.rootContainer = rootContainer;\n        this.context = context;\n        // TODO: implement continuous upgrading\n        // classes: any[]  = []\n        // numPendingInits = 0\n        // theObjects: any[]  = []\n        this.objectMap = new Map();\n    }\n    doEventuallyGet(tokens, successCallback, errorCallback) {\n        let { firstDiNotSetClass, firstMissingClassToken, objects } = this.doGetCore(tokens);\n        if (firstMissingClassToken || firstDiNotSetClass) {\n            setTimeout(() => {\n                this.doEventuallyGet(tokens, successCallback, errorCallback);\n            }, 100);\n        }\n        else {\n            if (objects.length > 1) {\n                successCallback(objects);\n            }\n            else {\n                successCallback(objects[0]);\n            }\n        }\n    }\n    doGet(tokens, successCallback, errorCallback) {\n        const { firstDiNotSetClass, firstMissingClassToken, objects } = this.doGetCore(tokens);\n        if (firstDiNotSetClass) {\n            console.log(`Dependency Injection is not ready for token ${firstMissingClassToken.getPath()}\r\n\t\t\t, class: ${firstDiNotSetClass.name}. Delaying injection by 100ms`);\n            setTimeout(() => {\n                this.doGet(tokens, successCallback, errorCallback);\n            }, 100);\n            return;\n        }\n        else if (objects.filter(object => object && !object.__initialized__).length) {\n            const notInitializedObjectIndexes = objects.map((object, index) => object.__initialized__ ? -1 : index)\n                .filter(index => index !== -1);\n            const objectPaths = [];\n            for (const index of notInitializedObjectIndexes) {\n                objectPaths.push(tokens[index].getPath());\n            }\n            console.log(`Dependency Injection is not ready for tokens:\r\n\t\t\t\t ${objectPaths.join('\\n')}\r\n\t\t\t, these classes are not yet initialized, delaying injection by 100ms`);\n            setTimeout(() => {\n                this.doGet(tokens, successCallback, errorCallback);\n            }, 100);\n            return;\n        }\n        if (firstMissingClassToken) {\n            const message = 'Dependency Injection could not find class for token: '\n                + firstMissingClassToken.getPath();\n            console.log(message);\n            errorCallback(message);\n        }\n        else {\n            if (objects.length > 1) {\n                successCallback(objects);\n            }\n            else {\n                successCallback(objects[0]);\n            }\n        }\n    }\n    doGetCore(tokens) {\n        let firstMissingClassToken;\n        let firstDiNotSetClass;\n        const objects = tokens.map(token => {\n            if (firstMissingClassToken || firstDiNotSetClass) {\n                return;\n            }\n            let object = this.objectMap.get(token.descriptor.token);\n            if (!object) {\n                if (!this.rootContainer.isFramework && token.application.autopilot) {\n                    object = this.getSync(AUTOPILOT_API_LOADER)\n                        .loadApiAutopilot(token);\n                }\n                else {\n                    // NOTE: object pooling is not supported, see RootContainer for why\n                    // const rootObjectPool = this.rootContainer.objectPoolMap.get(token.descriptor.token);\n                    // if (rootObjectPool && rootObjectPool.length) {\n                    //     object = rootObjectPool.pop()\n                    // } else {\n                    const aClass = token.descriptor.class;\n                    if (!aClass) {\n                        firstMissingClassToken = token;\n                        return;\n                    }\n                    if (aClass.diSet && !aClass.diSet()) {\n                        firstMissingClassToken = token;\n                        firstDiNotSetClass = aClass;\n                        return;\n                    }\n                    object = new aClass();\n                    this.setDependencyGetters(object, token);\n                    // }\n                }\n                object.__container__ = this;\n                this.objectMap.set(token.descriptor.token, object);\n                if (!token.application.autopilot && object.init) {\n                    const result = object.init();\n                    if (result instanceof Promise) {\n                        result.then(_ => {\n                            object.__initialized__ = true;\n                            console.log(`${token.getPath()} initialized.`);\n                        });\n                    }\n                    else {\n                        object.__initialized__ = true;\n                        console.log(`${token.getPath()} initialized.`);\n                    }\n                }\n                else {\n                    object.__initialized__ = true;\n                }\n            }\n            return object;\n        });\n        return {\n            firstDiNotSetClass,\n            firstMissingClassToken,\n            objects\n        };\n    }\n    setDependencyGetters(object, token) {\n        if (!token.dependencyConfiguration) {\n            return;\n        }\n        const dependencyConfiguration = token.dependencyConfiguration;\n        for (let propertyName in dependencyConfiguration) {\n            delete object[propertyName];\n            const dependencyToken = dependencyConfiguration[propertyName];\n            Object.defineProperty(object, propertyName, {\n                get() {\n                    this.__container__;\n                    return this.__container__.getSync(dependencyToken);\n                }\n            });\n            object['get' + propertyName + 'Async'] = async function () {\n                await this.get(dependencyToken);\n            };\n        }\n    }\n    async getByNames(domainName, applicationName, tokenName) {\n        const injectionDomain = domain(domainName);\n        if (!injectionDomain) {\n            throw new Error(`Could nof find\r\n\tDomain:\r\n\t\t${domainName}\r\n\t\t`);\n        }\n        const application = domain(domainName).getApp(applicationName);\n        if (!application) {\n            throw new Error(`Could not find\r\n\tDomain:\r\n\t\t${domainName}\r\n\tApplication:\r\n\t\t${applicationName}\r\n\t\t`);\n        }\n        const token = application.tokenMap.get(tokenName);\n        if (!token) {\n            throw new Error(`Could not find token: ${tokenName}\r\n\tin Domain:\r\n\t\t${domainName}\r\n \tApplication:\r\n\t\t\t${applicationName}\r\n\t\t`);\n        }\n        return await this.get(token);\n    }\n    get(...tokens) {\n        return new Promise((resolve, reject) => {\n            this.doGet(tokens, resolve, reject);\n        });\n    }\n    eventuallyGet(...tokens) {\n        return new Promise((resolve, reject) => {\n            this.doEventuallyGet(tokens, resolve, reject);\n        });\n    }\n    getSync(...tokens) {\n        const { firstDiNotSetClass, firstMissingClassToken, objects } = this.doGetCore(tokens);\n        if (firstMissingClassToken) {\n            throw new Error('Dependency Injection could not find class for token: '\n                + firstMissingClassToken.getPath());\n        }\n        else if (firstDiNotSetClass) {\n            throw new Error('Dependency Injection is not ready for class: '\n                + firstDiNotSetClass.name);\n        }\n        if (objects.length > 1) {\n            return objects;\n        }\n        else {\n            return objects[0];\n        }\n    }\n}\n//# sourceMappingURL=ChildContainer.js.map","import { Context, ContextType } from \"../Context\";\nimport { ChildContainer } from \"./ChildContainer\";\nimport { Container } from \"./Container\";\nexport class RootContainer extends Container {\n    constructor() {\n        super(...arguments);\n        this.isFramework = false;\n        this.dbContainerMap = new Map();\n        this.uiContainers = new Set();\n    }\n    // NOTE: Object pooling is not supported because of possible callbacks\n    // that are out of synchronous flow of a transaction.  Thus objects are\n    // retained in the container even after the container is removed\n    // in order to allow for transactionId reference\n    // objectPoolMap: Map<string, any[]> = new Map();\n    db(id = null) {\n        let dbContainer = this.dbContainerMap.get(id);\n        if (!dbContainer) {\n            dbContainer = new ChildContainer(this, new Context(id, ContextType.DB));\n            this.dbContainerMap.set(id, dbContainer);\n        }\n        return dbContainer;\n    }\n    remove(container) {\n        if (!container) {\n            return;\n        }\n        const dbContainer = this.dbContainerMap.get(container.context.id);\n        if (dbContainer) {\n            this.dbContainerMap.delete(container.context.id);\n            // NOTE: objectPooling is not supported, see above\n            // const objectTokens = dbContainer.objectMap.keys()\n            // for (const objectToken of objectTokens) {\n            // const object = dbContainer.objectMap.get(objectToken)\n            // let objectPool = this.objectPoolMap.get(objectToken)\n            // if (!objectPool) {\n            //     objectPool = []\n            //     this.objectPoolMap.set(objectToken, objectPool)\n            // }\n            // objectPool.push(object)\n            // }\n        }\n        else {\n            this.uiContainers.delete(container);\n        }\n    }\n    ui(componentName) {\n        const context = new Context(componentName, ContextType.UI);\n        const childContainer = new ChildContainer(this, context);\n        this.uiContainers.add(childContainer);\n        return childContainer;\n    }\n}\nexport const DEPENDENCY_INJECTION = new RootContainer();\n//# sourceMappingURL=RootContainer.js.map","import { Container } from './Container';\nexport function container(injectable) {\n    const iocContainer = injectable.__container__;\n    if (!iocContainer) {\n        throw new Error('\"container\" is not set on injectable object.');\n    }\n    if (!(iocContainer instanceof Container)) {\n        throw new Error('\"container\" property of injectable is not an' +\n            'instance of @airport/direction-indicator Container');\n    }\n    return iocContainer;\n}\n//# sourceMappingURL=Injectable.js.map","import { lib } from './dependencyInjection/InjectionApplication';\nimport { domain } from './dependencyInjection/InjectionDomain';\nimport { InversionOfControl } from './dependencyInjection/InversionOfControl';\nimport { DEPENDENCY_INJECTION } from './dependencyInjection/RootContainer';\nexport * from './autopilot/IAutopilotApiLoader';\nexport * from './autopilot/IApiAutopilot';\nexport * from './dependencyInjection/interfaces/IChildContainer';\nexport * from './dependencyInjection/interfaces/IContainer';\nexport * from './dependencyInjection/interfaces/IRootContainer';\nexport * from './dependencyInjection/ChildContainer';\nexport * from './dependencyInjection/Container';\nexport * from './dependencyInjection/decorators';\nexport * from './dependencyInjection/Injectable';\nexport * from './dependencyInjection/InjectionApplication';\nexport * from './dependencyInjection/InjectionDomain';\nexport * from './dependencyInjection/InversionOfControl';\nexport * from './dependencyInjection/RootContainer';\nexport * from './dependencyInjection/Token';\nexport * from './Context';\nexport * from './tokens';\nif (typeof window !== 'undefined') {\n    window.DEPENDENCY_INJECTION = DEPENDENCY_INJECTION;\n    window.lib = lib;\n    window.domain = domain;\n}\nexport const IOC = new InversionOfControl();\n//# sourceMappingURL=index.js.map","import { DEPENDENCY_INJECTION } from \"./RootContainer\";\nexport class InversionOfControl {\n    async get(...tokens) {\n        return await DEPENDENCY_INJECTION.db().get(...tokens);\n    }\n    async eventuallyGet(...tokens) {\n        return await DEPENDENCY_INJECTION.db().eventuallyGet(...tokens);\n    }\n    getSync(...tokens) {\n        return DEPENDENCY_INJECTION.db().getSync(...tokens);\n    }\n}\n//# sourceMappingURL=InversionOfControl.js.map","export var UpdateState;\n(function (UpdateState) {\n    UpdateState[\"GO_ONLINE\"] = \"GO_ONLINE\";\n    UpdateState[\"REMOTE\"] = \"REMOTE\";\n    UpdateState[\"LOCAL\"] = \"LOCAL\";\n})(UpdateState || (UpdateState = {}));\n//# sourceMappingURL=UpdateState.js.map","/**\n * Created by Papa on 4/16/2017.\n */\nexport var RepositoryEntityType;\n(function (RepositoryEntityType) {\n    RepositoryEntityType[\"NOT_REPOSITORY_ENTITY\"] = \"NOT_REPOSITORY_ENTITY\";\n    RepositoryEntityType[\"REPOSITORY_ENTITY\"] = \"REPOSITORY_ENTITY\";\n})(RepositoryEntityType || (RepositoryEntityType = {}));\nexport const REPOSITORY_ID = 'REPOSITORY_ID';\nexport const REPOSITORY_FIELD = 'repository';\n//# sourceMappingURL=RepositoryEntityType.js.map","import { ColumnMap } from \"./ColumnMap\";\n/**\n * Created by Papa on 9/10/2016.\n */\nexport const ALL_TABLE_COLUMNS = 'A';\nexport class TableMap {\n    constructor(applicationVersionId, tableMap = {}) {\n        this.applicationVersionId = applicationVersionId;\n        this.tableMap = tableMap;\n    }\n    ensure(tableIndex, allColumns = false, ColumnMapConstructor = ColumnMap) {\n        let tableColumnMap = this.tableMap[tableIndex];\n        if (!tableColumnMap) {\n            tableColumnMap = new ColumnMapConstructor(tableIndex, allColumns);\n            this.tableMap[tableIndex] = tableColumnMap;\n        }\n        return tableColumnMap;\n    }\n    existsByStructure(tableIndex, columnIndex) {\n        let tableColumnMap = this.tableMap[tableIndex];\n        if (!tableColumnMap) {\n            return false;\n        }\n        return !!tableColumnMap.columnMap[columnIndex];\n    }\n}\n//# sourceMappingURL=TableMap.js.map","import { ALL_TABLE_COLUMNS } from \"./TableMap\";\nexport class ColumnMap {\n    constructor(tableIndex, allColumns = false) {\n        this.tableIndex = tableIndex;\n        this.columnMap = {};\n        if (allColumns) {\n            this.columnMap[ALL_TABLE_COLUMNS] = true;\n        }\n    }\n    ensure(columnIndex) {\n        this.columnMap[columnIndex] = true;\n    }\n}\n//# sourceMappingURL=ColumnMap.js.map","export function getFullApplicationName({ domain, name, }) {\n    if (domain.name) {\n        domain = domain.name;\n    }\n    return getFullApplicationNameFromDomainAndName(domain, name);\n}\nexport function getFullApplicationNameFromDomainAndName(domainName, applicationName) {\n    if (domainName.indexOf('___') > -1) {\n        throw new Error('Domain Name cannot contain \"___\" (3 consecutive underscores) in it.');\n    }\n    if (domainName.endsWith('.')\n        || domainName.endsWith('-')\n        || domainName.endsWith(':')\n        || domainName.endsWith('__')) {\n        throw new Error('Domain Name cannot end with \".\", \"-\", \":\" or \"__\"');\n    }\n    const domainPrefix = domainName\n        .replace(/\\./g, '_dot_')\n        .replace(/-/g, '_dash_')\n        .replace(/:/g, '_colon_');\n    if (domainPrefix.indexOf('___') > -1) {\n        throw new Error('Domain Name cannot have with \".\", \"-\", \":\", or \"_\" right next to each other.');\n    }\n    if (applicationName.indexOf('_') > -1) {\n        throw new Error('Application Name cannot contain \"_\" in it.');\n    }\n    if (applicationName.indexOf('@') !== applicationName.lastIndexOf('@')) {\n        throw new Error('Application Name cannot have more than one \"@\" in it.');\n    }\n    if (applicationName.indexOf('@') > 0) {\n        throw new Error('Application Name cannot contain \"@\" after the first character in it.');\n    }\n    if (applicationName.indexOf('/') !== applicationName.lastIndexOf('/')) {\n        throw new Error('Application Name cannot have more than one \"/\" in it.');\n    }\n    const applicationPrefix = applicationName\n        .replace(/@/g, '_at_')\n        .replace(/\\//g, '_slash_')\n        .replace(/-/g, '_dash_');\n    if (applicationPrefix.endsWith('_')) {\n        throw new Error('Application Name cannot end with \"@\", \"/\" or \".\"');\n    }\n    if (applicationPrefix.indexOf('___') > -1) {\n        throw new Error('Application Name cannot have with \"@\", \"/\", \".\" or \"_\" right next to each other.');\n    }\n    return `${domainPrefix}___${applicationPrefix}`;\n}\nexport function getSequenceName(prefixedTableName, columnName) {\n    return `${prefixedTableName}_${columnName}__SEQUENCE`;\n}\n//# sourceMappingURL=DbApplicationUtils.js.map","import { TableMap } from \"./TableMap\";\nexport class ApplicationMap {\n    constructor(applicationMap = {}) {\n        this.applicationMap = applicationMap;\n    }\n    ensureEntity(entity, allColumns = false, TableMapConstructor = TableMap) {\n        return this.ensure(entity.applicationVersion.id, entity.index, allColumns, TableMapConstructor);\n    }\n    ensure(applicationIndex, tableIndex, allColumns = false, TableMapConstructor = TableMap) {\n        let tableMap = this.applicationMap[applicationIndex];\n        if (!tableMap) {\n            tableMap = new TableMapConstructor(applicationIndex);\n            this.applicationMap[applicationIndex] = tableMap;\n        }\n        return tableMap.ensure(tableIndex, allColumns);\n    }\n    existsByStructure(applicationIndex, tableIndex, columnIndex) {\n        let tableMap = this.applicationMap[applicationIndex];\n        if (!tableMap) {\n            return false;\n        }\n        return tableMap.existsByStructure(tableIndex, columnIndex);\n    }\n}\n//# sourceMappingURL=ApplicationMap.js.map","import { ColumnMap } from \"../query/ColumnMap\";\nexport class SyncColumnMap extends ColumnMap {\n    constructor(tableIndex, allColumns = false) {\n        super(tableIndex, allColumns);\n    }\n}\n//# sourceMappingURL=SyncColumnMap.js.map","import { ALL_TABLE_COLUMNS, TableMap } from \"../query/TableMap\";\nimport { SyncColumnMap } from \"./SyncColumnMap\";\n/**\n * Created by Papa on 10/7/2016.\n */\nexport class SyncTableMap extends TableMap {\n    constructor(applicationIndex, tableMap) {\n        super(applicationIndex, tableMap);\n    }\n    ensureEntity(tableIndex, allColumns = false) {\n        return super.ensure(tableIndex, allColumns, SyncColumnMap);\n    }\n    intersects(columnMap) {\n        for (let tableIndex in this.tableMap) {\n            if (columnMap.tableMap[tableIndex]) {\n                let tableColumnMap = this.tableMap[tableIndex];\n                let otherTableColumnMap = columnMap.tableMap[tableIndex];\n                if (tableColumnMap[ALL_TABLE_COLUMNS] || tableColumnMap[ALL_TABLE_COLUMNS]) {\n                    return true;\n                }\n                for (let columnIndex in tableColumnMap.columnMap) {\n                    if (otherTableColumnMap.columnMap[columnIndex]) {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=SyncTableMap.js.map","import { ApplicationMap } from \"../query/ApplicationMap\";\nimport { SyncTableMap } from \"./SyncTableMap\";\nexport class SyncApplicationMap extends ApplicationMap {\n    constructor(applicationMap) {\n        super(applicationMap);\n    }\n    ensureEntity(entity, allColumns = false) {\n        return super.ensureEntity(entity, allColumns, SyncTableMap);\n    }\n    intersects(applicationMap) {\n        for (const applicationIndex in this.applicationMap) {\n            if (applicationMap.applicationMap[applicationIndex]) {\n                const syncTableMap = new SyncTableMap(parseInt(applicationIndex), this.applicationMap[applicationIndex].tableMap);\n                if (syncTableMap.intersects(applicationMap.applicationMap[applicationIndex])) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=SyncApplicationMap.js.map","export var BlockSyncStatus;\n(function (BlockSyncStatus) {\n    // Sync request has been sent but no reply has come yet\n    BlockSyncStatus[\"SYNCHRONIZING\"] = \"SYNCHRONIZING\";\n    // Sync has been acknowledged by the AGT\n    BlockSyncStatus[\"SYNCHRONIZED\"] = \"SYNCHRONIZED\";\n    // Sync has not been acked by AGT so, requesting sync status from AGT\n    BlockSyncStatus[\"REQUESTING_SYNC_STATUS\"] = \"REQUESTING_SYNC_STATUS\";\n    /*\n       Do not re-sync until AGT starts responds with a request for more data.\n       NOTE: no need of a separate status, state is maintained on SharingNode level.\n     */\n    // RESYNC_SUSPENDED = 'RESYNC_SUSPENDED',\n    // AGT requested re-sync for this block, send it again\n    BlockSyncStatus[\"RESYNC_REQUESTED\"] = \"RESYNC_REQUESTED\";\n})(BlockSyncStatus || (BlockSyncStatus = {}));\nexport var RepositorySyncStatus;\n(function (RepositorySyncStatus) {\n    // Actively syncing this repository\n    RepositorySyncStatus[\"ACTIVE\"] = \"ACTIVE\";\n    // AGT is not responding, temporarily pending AGT responses\n    RepositorySyncStatus[\"PENDING\"] = \"PENDING\";\n    // AGT (or TM) delayed sync of this repository (for a period of time)\n    RepositorySyncStatus[\"DELAYED\"] = \"DELAYED\";\n    // AGT (or TM) suspended sync of this repository\n    RepositorySyncStatus[\"SUSPENDED\"] = \"SUSPENDED\";\n    // AGT (or TM) temporarily rerouted syncing of this repository to a different AGT\n    RepositorySyncStatus[\"TEMPORARILY_REROUTED\"] = \"TEMPORARILY_REROUTED\";\n    // AGT (or TM) permanently rerouted syncing of this repository to a different AGT\n    RepositorySyncStatus[\"PERMANENTLY_REROUTED\"] = \"PERMANENTLY_REROUTED\";\n})(RepositorySyncStatus || (RepositorySyncStatus = {}));\nexport var TerminalSyncStatus;\n(function (TerminalSyncStatus) {\n    // Terminal is actively syncing\n    TerminalSyncStatus[\"ACTIVE\"] = \"ACTIVE\";\n    // Terminal syncing has been suspended\n    TerminalSyncStatus[\"SUSPENDED\"] = \"SUSPENDED\";\n})(TerminalSyncStatus || (TerminalSyncStatus = {}));\n//# sourceMappingURL=SyncStatus.js.map","/**\n * Column keys.\n */\nexport var column;\n(function (column) {\n    /**\n     * Name property of the column.\n     * @type {string}\n     */\n    column.NAME = 'name';\n    /**\n     * Column data types.\n     */\n    let type;\n    (function (type) {\n        type.ANY = 'any';\n        type.BOOLEAN = 'boolean';\n        type.DATE = 'Date';\n        type.NUMBER = 'number';\n        type.STRING = 'string';\n    })(type = column.type || (column.type = {}));\n})(column || (column = {}));\n/**\n * File level keys.\n */\nexport var file;\n(function (file) {\n    file.ENTITY = 'Entity';\n    file.TABLE = 'Table';\n})(file || (file = {}));\n/**\n * Entity configuration keys.\n */\nexport var entity;\n(function (entity) {\n    entity.DATABASES = 'databases';\n})(entity || (entity = {}));\n/**\n * Foreign Key configuration keys.\n */\nexport var foreignkey;\n(function (foreignkey) {\n    foreignkey.DEFINITION = 'foreignKeyDefinition';\n    foreignkey.NAME = 'name';\n    foreignkey.VALUE = 'value';\n})(foreignkey || (foreignkey = {}));\n/**\n * Index configuration keys.\n */\nexport var index;\n(function (index) {\n    index.COLUMN_LIST = 'columnList';\n    index.NAME = 'name';\n    index.UNIQUE = 'unique';\n})(index || (index = {}));\n/**\n * JoinColumn configuration keys.\n */\nexport var joincolumn;\n(function (joincolumn) {\n    joincolumn.FOREIGN_KEY = 'foreignKey';\n    joincolumn.REFERENCED_COLUMN_NAME = 'referencedColumnName';\n    joincolumn.VALUE = 'value';\n})(joincolumn || (joincolumn = {}));\n/**\n * Property annotation keys.\n */\nexport var property;\n(function (property) {\n    property.COLUMN = 'Column';\n    property.ENUM_TYPE = 'Enum';\n    property.ID = 'Id';\n    property.JOIN_COLUMN = 'JoinColumn';\n    property.JOIN_COLUMNS = 'JoinColumns';\n    property.JSON_TYPE = 'Json';\n    property.MANY_TO_ONE = 'ManyToOne';\n    property.ONE_TO_MANY = 'OneToMany';\n    // R_JOIN_COLUMN(s) are not needed since Repository relations are now\n    // standardized - simple (@ManyToOne) and (@OneToMany) suffice.\n    // export const R_JOIN_COLUMN    = 'RJoinColumn';\n    // export const R_JOIN_COLUMNS   = 'RJoinColumns';\n    property.SUB_QUERY = 'SubQuery';\n    // export const WHERE_JOIN_TABLE = 'WhereJoinTable';\n})(property || (property = {}));\n/**\n * OneToMany configuration keys.\n */\nexport var onetomany;\n(function (onetomany) {\n    onetomany.MAPPED_BY = 'mappedBy';\n})(onetomany || (onetomany = {}));\n/**\n * Table configuration keys.\n */\nexport var table;\n(function (table) {\n    table.INDEXES = 'indexes';\n    table.NAME = 'name';\n    table.PRIMARY_KEY = 'primaryKey';\n    table.APPLICATION = 'application';\n})(table || (table = {}));\n/**\n * Name of the RepositoryId column\n * @type {string}\n */\nexport var repositoryEntity;\n(function (repositoryEntity) {\n    repositoryEntity.ACTOR_ID = 'ACTOR_ID';\n    repositoryEntity.ACTOR_RECORD_ID = 'ACTOR_RECORD_ID';\n    repositoryEntity.ENTITY_NAME = 'RepositoryEntity';\n    repositoryEntity.FOREIGN_KEY = 'REPOSITORY_ID';\n    repositoryEntity.LOCAL_ENTITY_NAME = 'LocalRepositoryEntity';\n    repositoryEntity.REPOSITORY_ID = 'REPOSITORY_ID';\n    repositoryEntity.ORIGINAL_ACTOR_ID = 'ORIGINAL_ACTOR_ID';\n    repositoryEntity.ORIGINAL_ACTOR_RECORD_ID = 'ORIGINAL_ACTOR_RECORD_ID';\n    repositoryEntity.ORIGINAL_REPOSITORY_ID = 'ORIGINAL_REPOSITORY_ID';\n    repositoryEntity.SYS_WIDE_OP_ID_APPLICATION = 'air____at_airport_slash_airport_dash_code';\n    repositoryEntity.SYS_WIDE_OP_ID_ENTITY = 'SystemWideOperationId';\n    repositoryEntity.systemWideOperationId = 'systemWideOperationId';\n    repositoryEntity.SYSTEM_WIDE_OPERATION_ID = 'SYSTEM_WIDE_OPERATION_ID';\n})(repositoryEntity || (repositoryEntity = {}));\n//# sourceMappingURL=Dictionary.js.map","/**\n * SQL Join contentType.\n */\nexport var JoinType;\n(function (JoinType) {\n    JoinType[\"FULL_JOIN\"] = \"FULL_JOIN\";\n    JoinType[\"INNER_JOIN\"] = \"INNER_JOIN\";\n    JoinType[\"LEFT_JOIN\"] = \"LEFT_JOIN\";\n    JoinType[\"RIGHT_JOIN\"] = \"RIGHT_JOIN\";\n})(JoinType || (JoinType = {}));\n/**\n * Type of Entity Relation\n */\nexport var EntityRelationType;\n(function (EntityRelationType) {\n    EntityRelationType[\"ONE_TO_MANY\"] = \"ONE_TO_MANY\";\n    EntityRelationType[\"MANY_TO_ONE\"] = \"MANY_TO_ONE\";\n})(EntityRelationType || (EntityRelationType = {}));\n/**\n * Serialized relation contentType.\n */\nexport var JSONRelationType;\n(function (JSONRelationType) {\n    // Join of an entity with the ON clause\n    JSONRelationType[\"ENTITY_JOIN_ON\"] = \"ENTITY_JOIN_ON\";\n    // Join of an entity via a application relation\n    JSONRelationType[\"ENTITY_APPLICATION_RELATION\"] = \"ENTITY_APPLICATION_RELATION\";\n    // The root entity in a join\n    JSONRelationType[\"ENTITY_ROOT\"] = \"ENTITY_ROOT\";\n    // Join of a sub-query (with the ON clause)\n    JSONRelationType[\"SUB_QUERY_JOIN_ON\"] = \"SUB_QUERY_JOIN_ON\";\n    // The root sub-query in a join\n    JSONRelationType[\"SUB_QUERY_ROOT\"] = \"SUB_QUERY_ROOT\";\n})(JSONRelationType || (JSONRelationType = {}));\n//# sourceMappingURL=Relation.js.map","/**\n * Order of a sorted field, as specified in the ORDER BY clause.\n */\nexport var SortOrder;\n(function (SortOrder) {\n    SortOrder[\"ASCENDING\"] = \"ASCENDING\";\n    SortOrder[\"DESCENDING\"] = \"DESCENDING\";\n})(SortOrder || (SortOrder = {}));\n//# sourceMappingURL=FieldInOrderBy.js.map","/**\n * Extracted from http://www.w3schools.com/sql/sql_functions.asp\n */\nexport var SqlFunction;\n(function (SqlFunction) {\n    // SQL Aggregate Functions\n    // SQL aggregate functions return a single value, calculated from values in a column.\n    // Useful Aggregate functions:\n    SqlFunction[\"ABS\"] = \"ABS\";\n    SqlFunction[\"AVG\"] = \"AVG\";\n    SqlFunction[\"COUNT\"] = \"COUNT\";\n    //FIRST, // not in SqLite: Returns the first value\n    //LAST, // not in SqLite: Returns the last value\n    SqlFunction[\"MAX\"] = \"MAX\";\n    SqlFunction[\"MIN\"] = \"MIN\";\n    SqlFunction[\"SUM\"] = \"SUM\";\n    //SQL Scalar functions\n    //SQL scalar functions return a single value, based on the input value.\n    // Useful scalar functions:\n    SqlFunction[\"UCASE\"] = \"UCASE\";\n    SqlFunction[\"LCASE\"] = \"LCASE\";\n    SqlFunction[\"MID\"] = \"MID\";\n    SqlFunction[\"LEN\"] = \"LEN\";\n    SqlFunction[\"ROUND\"] = \"ROUND\";\n    SqlFunction[\"NOW\"] = \"NOW\";\n    SqlFunction[\"FORMAT\"] = \"FORMAT\";\n    // Added\n    SqlFunction[\"REPLACE\"] = \"REPLACE\";\n    SqlFunction[\"TRIM\"] = \"TRIM\";\n    // Other\n    SqlFunction[\"DISTINCT\"] = \"DISTINCT\";\n    SqlFunction[\"EXISTS\"] = \"EXISTS\";\n    // Algebra Operators\n    SqlFunction[\"DIVIDE\"] = \"DIVIDE\";\n    SqlFunction[\"MINUS\"] = \"MINUS\";\n    SqlFunction[\"MODULUS\"] = \"MODULUS\";\n    SqlFunction[\"MULTIPLY\"] = \"MULTIPLY\";\n    SqlFunction[\"PLUS\"] = \"PLUS\";\n    // Concatenate '||' functions\n    SqlFunction[\"CONCATENATE\"] = \"CONCATENATE\";\n    // Other functions\n    SqlFunction[\"COALESCE\"] = \"COALESCE\";\n})(SqlFunction || (SqlFunction = {}));\n//# sourceMappingURL=Functions.js.map","/**\n * All possible types of serialized JSON clauses.\n */\nexport var JSONClauseObjectType;\n(function (JSONClauseObjectType) {\n    JSONClauseObjectType[\"FIELD\"] = \"FIELD\";\n    JSONClauseObjectType[\"FIELD_FUNCTION\"] = \"FIELD_FUNCTION\";\n    JSONClauseObjectType[\"FIELD_QUERY\"] = \"FIELD_QUERY\";\n    JSONClauseObjectType[\"DISTINCT_FUNCTION\"] = \"DISTINCT_FUNCTION\";\n    JSONClauseObjectType[\"EXISTS_FUNCTION\"] = \"EXISTS_FUNCTION\";\n    JSONClauseObjectType[\"MANY_TO_ONE_RELATION\"] = \"MANY_TO_ONE_RELATION\"; // A many-to-one relation (used in a query)\n})(JSONClauseObjectType || (JSONClauseObjectType = {}));\n/**\n * Types of data\n */\nexport var SQLDataType;\n(function (SQLDataType) {\n    // Allowing ANY allows developers to de-type their data\n    SQLDataType[\"ANY\"] = \"ANY\";\n    SQLDataType[\"BOOLEAN\"] = \"BOOLEAN\";\n    SQLDataType[\"DATE\"] = \"DATE\";\n    // Allowing JSON allows developers to de-normalize their data\n    SQLDataType[\"JSON\"] = \"JSON\";\n    SQLDataType[\"NUMBER\"] = \"NUMBER\";\n    SQLDataType[\"STRING\"] = \"STRING\";\n})(SQLDataType || (SQLDataType = {}));\nexport function getSqlDataType(type) {\n    switch (type) {\n        case 'any':\n            return SQLDataType.ANY;\n        case 'boolean':\n            return SQLDataType.BOOLEAN;\n        case 'Date':\n            return SQLDataType.DATE;\n        case 'Json':\n            return SQLDataType.JSON;\n        case 'number':\n            return SQLDataType.NUMBER;\n        case 'string':\n            return SQLDataType.STRING;\n        default:\n            throw new Error(`Uknown type: ${type}`);\n    }\n}\n//# sourceMappingURL=JSONClause.js.map","export var EntityState;\n(function (EntityState) {\n    EntityState[\"CREATE\"] = \"CREATE\";\n    EntityState[\"DATE\"] = \"DATE\";\n    EntityState[\"DELETE\"] = \"DELETE\";\n    // TODO: PARENT_ID is currently not implemented.  It is meant for @ManyToOne()\n    // references when nothing is returned except for the id fields of the relation\n    EntityState[\"PARENT_ID\"] = \"PARENT_ID\";\n    EntityState[\"PASS_THROUGH\"] = \"PASS_THROUGH\";\n    EntityState[\"STUB\"] = \"STUB\";\n    EntityState[\"UPDATE\"] = \"UPDATE\";\n    // Json fields promote application de-normalization and a currently not implemented\n    // except for internal APIs\n    // RESULT_JSON = 'RESULT_JSON',\n    // RESULT_JSON_ARRAY = 'RESULT_JSON_ARRAY'\n})(EntityState || (EntityState = {}));\n//# sourceMappingURL=EntityStateManager.js.map","/**\n * Category of a SQL contentType\n */\nexport var OperationCategory;\n(function (OperationCategory) {\n    OperationCategory[\"BOOLEAN\"] = \"BOOLEAN\";\n    OperationCategory[\"DATE\"] = \"DATE\";\n    OperationCategory[\"FUNCTION\"] = \"FUNCTION\";\n    OperationCategory[\"LOGICAL\"] = \"LOGICAL\";\n    OperationCategory[\"NUMBER\"] = \"NUMBER\";\n    OperationCategory[\"STRING\"] = \"STRING\";\n    OperationCategory[\"UNTYPED\"] = \"UNTYPED\"; // Operation on an untyped field\n})(OperationCategory || (OperationCategory = {}));\nexport var SqlOperator;\n(function (SqlOperator) {\n    SqlOperator[\"AND\"] = \"AND\";\n    SqlOperator[\"EQUALS\"] = \"EQUALS\";\n    SqlOperator[\"EXISTS\"] = \"EXISTS\";\n    SqlOperator[\"GREATER_THAN\"] = \"GREATER_THAN\";\n    SqlOperator[\"GREATER_THAN_OR_EQUALS\"] = \"GREATER_THAN_OR_EQUALS\";\n    SqlOperator[\"IN\"] = \"IN\";\n    SqlOperator[\"IS_NOT_NULL\"] = \"IS_NOT_NULL\";\n    SqlOperator[\"IS_NULL\"] = \"IS_NULL\";\n    SqlOperator[\"LESS_THAN\"] = \"LESS_THAN\";\n    SqlOperator[\"LESS_THAN_OR_EQUALS\"] = \"LESS_THAN_OR_EQUALS\";\n    SqlOperator[\"LIKE\"] = \"LIKE\";\n    SqlOperator[\"OR\"] = \"OR\";\n    SqlOperator[\"NOT\"] = \"NOT\";\n    SqlOperator[\"NOT_EQUALS\"] = \"NOT_EQUALS\";\n    SqlOperator[\"NOT_IN\"] = \"NOT_IN\";\n})(SqlOperator || (SqlOperator = {}));\nexport var CRUDOperation;\n(function (CRUDOperation) {\n    CRUDOperation[\"CREATE\"] = \"CREATE\";\n    CRUDOperation[\"READ\"] = \"READ\";\n    CRUDOperation[\"UPDATE\"] = \"UPDATE\";\n    CRUDOperation[\"DELETE\"] = \"DELETE\";\n})(CRUDOperation || (CRUDOperation = {}));\n//# sourceMappingURL=Operation.js.map","export var TransactionType;\n(function (TransactionType) {\n    TransactionType[\"LOCAL\"] = \"LOCAL\";\n    TransactionType[\"REMOTE_SYNC\"] = \"REMOTE_SYNC\";\n})(TransactionType || (TransactionType = {}));\n//# sourceMappingURL=TransactionType.js.map","export var ChangeType;\n(function (ChangeType) {\n    ChangeType[\"DELETE_ROWS\"] = \"DELETE_ROWS\";\n    ChangeType[\"INSERT_VALUES\"] = \"INSERT_VALUES\";\n    ChangeType[\"UPDATE_ROWS\"] = \"UPDATE_ROWS\";\n})(ChangeType || (ChangeType = {}));\n//# sourceMappingURL=ChangeType.js.map","/**\n * Possible distribution strategies for Change List Federations.\n *\n * A common (and only currently supported) basic setup:\n *\n * There is always a Single Shared Store (S3).\n * There are always at least one or more 'Personal' Stores.\n *\n * The stores communicate via servers that propagate data from\n * personal stores to the shared store.\n *\n * What differs is how this propagation is accomplished.\n *\n * In the future, we'll add a truly distributed setup, without any S3s.\n */\nexport var DistributionStrategy;\n(function (DistributionStrategy) {\n    /**\n     *  The server is aware of all Personal Stores and it\n     *  subscribes to any possible changes in any of these stores.\n     *  It is the server's responsibility to update the S3.\n     */\n    DistributionStrategy[\"S3_SECURE_POLL\"] = \"S3_SECURE_POLL\";\n    /**\n     * There is no need for a server, all clients are aware of S3\n     * and are responsible for pushing their changes to it.\n     */\n    DistributionStrategy[\"S3_DISTIBUTED_PUSH\"] = \"S3_DISTIBUTED_PUSH\";\n})(DistributionStrategy || (DistributionStrategy = {}));\n//# sourceMappingURL=DistributionStrategy.js.map","export var QueryType;\n(function (QueryType) {\n    QueryType[\"DDL\"] = \"DDL\";\n    QueryType[\"SELECT\"] = \"SELECT\";\n    QueryType[\"MUTATE\"] = \"MUTATE\";\n})(QueryType || (QueryType = {}));\n//# sourceMappingURL=IStoreOperator.js.map","export var PlatformType;\n(function (PlatformType) {\n    PlatformType[\"GOOGLE_DOCS\"] = \"GOOGLE_DOCS\";\n    PlatformType[\"IN_MEMORY\"] = \"IN_MEMORY\";\n    PlatformType[\"OFFLINE\"] = \"OFFLINE\";\n    PlatformType[\"STUB\"] = \"STUB\";\n})(PlatformType || (PlatformType = {}));\n//# sourceMappingURL=PatformType.js.map","export var StoreType;\n(function (StoreType) {\n    StoreType[\"COCKROACHDB\"] = \"COCKROACHDB\";\n    StoreType[\"MYSQL\"] = \"MYSQL\";\n    StoreType[\"POSTGRESQL\"] = \"POSTGRESQL\";\n    StoreType[\"REMOTE\"] = \"REMOTE\";\n    StoreType[\"SQLITE\"] = \"SQLITE\";\n    StoreType[\"SQLJS\"] = \"SQLJS\";\n    StoreType[\"WEB_SQL\"] = \"WEB_SQL\";\n})(StoreType || (StoreType = {}));\nexport var IdGeneration;\n(function (IdGeneration) {\n    IdGeneration[\"ENTITY_CHANGE_ID\"] = \"ENTITY_CHANGE_ID\";\n})(IdGeneration || (IdGeneration = {}));\n//# sourceMappingURL=storeInfo.js.map","export var JsonStatementType;\n(function (JsonStatementType) {\n    JsonStatementType[\"ENTITY_QUERY\"] = \"ENTITY_QUERY\";\n    JsonStatementType[\"NON_ENTITY_QUERY\"] = \"NON_ENTITY_QUERY\";\n})(JsonStatementType || (JsonStatementType = {}));\n//# sourceMappingURL=Query.js.map","export var QueryResultType;\n(function (QueryResultType) {\n    // Ordered query result with bridging for all MtOs and OtM\n    QueryResultType[\"ENTITY_GRAPH\"] = \"ENTITY_GRAPH\";\n    // Ordered query result, with objects grouped hierarchically by entity\n    QueryResultType[\"ENTITY_TREE\"] = \"ENTITY_TREE\";\n    // Ordered query result, with objects grouped hierarchically by mapping\n    QueryResultType[\"TREE\"] = \"TREE\";\n    // Flat array query result, with no forced ordering or grouping\n    QueryResultType[\"SHEET\"] = \"SHEET\";\n    // A single field query result, with no forced ordering or grouping\n    QueryResultType[\"FIELD\"] = \"FIELD\";\n    // Raw result, returned by a SQL string query\n    QueryResultType[\"RAW\"] = \"RAW\";\n    // ENTITY_GRAPH with all arrays returned as a MappedEntityArray\n    QueryResultType[\"MAPPED_ENTITY_GRAPH\"] = \"MAPPED_ENTITY_GRAPH\";\n    // ENTITY_TREE with all arrays returned as a MappedEntityArray\n    QueryResultType[\"MAPPED_ENTITY_TREE\"] = \"MAPPED_ENTITY_TREE\";\n})(QueryResultType || (QueryResultType = {}));\n//# sourceMappingURL=QueryResultType.js.map","export var OperationType;\n(function (OperationType) {\n    OperationType[\"DELETE\"] = \"DELETE\";\n    OperationType[\"FIND_ONE_GRAPH\"] = \"FIND_ONE_GRAPH\";\n    OperationType[\"FIND_ONE_TREE\"] = \"FIND_ONE_TREE\";\n    OperationType[\"FIND_GRAPH\"] = \"FIND_GRAPH\";\n    OperationType[\"FIND_TREE\"] = \"FIND_TREE\";\n    OperationType[\"SAVE\"] = \"SAVE\";\n    OperationType[\"SEARCH_ONE_GRAPH\"] = \"SEARCH_ONE_GRAPH\";\n    OperationType[\"SEARCH_ONE_TREE\"] = \"SEARCH_ONE_TREE\";\n    OperationType[\"SEARCH_GRAPH\"] = \"SEARCH_GRAPH\";\n    OperationType[\"SEARCH_TREE\"] = \"SEARCH_TREE\";\n})(OperationType || (OperationType = {}));\nexport var QueryInputKind;\n(function (QueryInputKind) {\n    QueryInputKind[\"PARAMETER\"] = \"PARAMETER\";\n    QueryInputKind[\"Q\"] = \"Q\";\n    QueryInputKind[\"QENTITY\"] = \"QENTITY\";\n})(QueryInputKind || (QueryInputKind = {}));\nexport var QueryParameterType;\n(function (QueryParameterType) {\n    QueryParameterType[\"BOOLEAN\"] = \"BOOLEAN\";\n    QueryParameterType[\"DATE\"] = \"DATE\";\n    QueryParameterType[\"NUMBER\"] = \"NUMBER\";\n    QueryParameterType[\"STRING\"] = \"STRING\";\n})(QueryParameterType || (QueryParameterType = {}));\n//# sourceMappingURL=Operation.js.map","export var ApplicationStatus;\n(function (ApplicationStatus) {\n    ApplicationStatus[\"CURRENT\"] = \"CURRENT\";\n    ApplicationStatus[\"MISSING\"] = \"MISSING\";\n    ApplicationStatus[\"NEEDS_UPGRADES\"] = \"NEEDS_UPGRADES\";\n    ApplicationStatus[\"STUB\"] = \"STUB\";\n})(ApplicationStatus || (ApplicationStatus = {}));\n//# sourceMappingURL=ApplicationStatus.js.map","export function ensureChildArray(parentContainer, index) {\n    let childArray;\n    if (parentContainer instanceof Map) {\n        childArray = parentContainer.get(index);\n    }\n    else {\n        childArray = parentContainer[index];\n    }\n    if (!childArray) {\n        childArray = [];\n        if (parentContainer instanceof Map) {\n            parentContainer.set(index, childArray);\n        }\n        else {\n            parentContainer[index] = childArray;\n        }\n    }\n    return childArray;\n}\nexport function ensureChildMap(parentContainer, index) {\n    let childObject;\n    if (parentContainer instanceof Map) {\n        childObject = parentContainer.get(index);\n        if (!childObject) {\n            childObject = {};\n            parentContainer.set(index, childObject);\n        }\n    }\n    else {\n        childObject = parentContainer[index];\n        if (!childObject) {\n            childObject = {};\n            parentContainer[index] = childObject;\n        }\n    }\n    return childObject;\n}\nexport function ensureChildJsMap(parentContainer, index) {\n    let childMap = parentContainer.get(index);\n    if (!childMap) {\n        childMap = new Map();\n        parentContainer.set(index, childMap);\n    }\n    return childMap;\n}\nexport function ensureChildJsSet(parentContainer, index) {\n    let childSet = parentContainer.get(index);\n    if (!childSet) {\n        childSet = new Set();\n        parentContainer.set(index, childSet);\n    }\n    return childSet;\n}\nexport function undefinedToNull(value) {\n    return value === undefined ? null : value;\n}\n//# sourceMappingURL=DatastructureUtils.js.map","export const INTERNAL_APP = '@airport/terminal';\nexport const INTERNAL_DOMAIN = 'internal://domain';\n//# sourceMappingURL=ITransactionalConnector.js.map","import { lib } from '@airport/direction-indicator';\nconst groundControl = lib('ground-control');\nexport const ENTITY_STATE_MANAGER = groundControl.token({\n    class: null,\n    interface: 'IEntityStateManager',\n    token: 'ENTITY_STATE_MANAGER'\n});\nexport const INTER_APP_API_CLIENT = groundControl.token({\n    class: null,\n    interface: 'IInterAppAPIClient',\n    token: 'INTER_APP_API_CLIENT'\n});\nexport const OPERATION_CONTEXT_LOADER = groundControl.token({\n    class: null,\n    interface: 'IOperationContextLoader',\n    token: 'OPERATION_CONTEXT_LOADER'\n});\nexport const TRANSACTIONAL_CONNECTOR = groundControl.token({\n    class: null,\n    interface: 'ITransactionalConnector',\n    token: 'TRANSACTIONAL_CONNECTOR'\n});\n//# sourceMappingURL=tokens.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export function isFunction(value) {\n    return typeof value === 'function';\n}\n//# sourceMappingURL=isFunction.js.map","export function createErrorClass(createImpl) {\n    var _super = function (instance) {\n        Error.call(instance);\n        instance.stack = new Error().stack;\n    };\n    var ctorFunc = createImpl(_super);\n    ctorFunc.prototype = Object.create(Error.prototype);\n    ctorFunc.prototype.constructor = ctorFunc;\n    return ctorFunc;\n}\n//# sourceMappingURL=createErrorClass.js.map","import { createErrorClass } from './createErrorClass';\nexport var UnsubscriptionError = createErrorClass(function (_super) {\n    return function UnsubscriptionErrorImpl(errors) {\n        _super(this);\n        this.message = errors\n            ? errors.length + \" errors occurred during unsubscription:\\n\" + errors.map(function (err, i) { return i + 1 + \") \" + err.toString(); }).join('\\n  ')\n            : '';\n        this.name = 'UnsubscriptionError';\n        this.errors = errors;\n    };\n});\n//# sourceMappingURL=UnsubscriptionError.js.map","export function arrRemove(arr, item) {\n    if (arr) {\n        var index = arr.indexOf(item);\n        0 <= index && arr.splice(index, 1);\n    }\n}\n//# sourceMappingURL=arrRemove.js.map","import { __read, __spreadArray, __values } from \"tslib\";\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { arrRemove } from './util/arrRemove';\nvar Subscription = (function () {\n    function Subscription(initialTeardown) {\n        this.initialTeardown = initialTeardown;\n        this.closed = false;\n        this._parentage = null;\n        this._teardowns = null;\n    }\n    Subscription.prototype.unsubscribe = function () {\n        var e_1, _a, e_2, _b;\n        var errors;\n        if (!this.closed) {\n            this.closed = true;\n            var _parentage = this._parentage;\n            if (_parentage) {\n                this._parentage = null;\n                if (Array.isArray(_parentage)) {\n                    try {\n                        for (var _parentage_1 = __values(_parentage), _parentage_1_1 = _parentage_1.next(); !_parentage_1_1.done; _parentage_1_1 = _parentage_1.next()) {\n                            var parent_1 = _parentage_1_1.value;\n                            parent_1.remove(this);\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (_parentage_1_1 && !_parentage_1_1.done && (_a = _parentage_1.return)) _a.call(_parentage_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                else {\n                    _parentage.remove(this);\n                }\n            }\n            var initialTeardown = this.initialTeardown;\n            if (isFunction(initialTeardown)) {\n                try {\n                    initialTeardown();\n                }\n                catch (e) {\n                    errors = e instanceof UnsubscriptionError ? e.errors : [e];\n                }\n            }\n            var _teardowns = this._teardowns;\n            if (_teardowns) {\n                this._teardowns = null;\n                try {\n                    for (var _teardowns_1 = __values(_teardowns), _teardowns_1_1 = _teardowns_1.next(); !_teardowns_1_1.done; _teardowns_1_1 = _teardowns_1.next()) {\n                        var teardown_1 = _teardowns_1_1.value;\n                        try {\n                            execTeardown(teardown_1);\n                        }\n                        catch (err) {\n                            errors = errors !== null && errors !== void 0 ? errors : [];\n                            if (err instanceof UnsubscriptionError) {\n                                errors = __spreadArray(__spreadArray([], __read(errors)), __read(err.errors));\n                            }\n                            else {\n                                errors.push(err);\n                            }\n                        }\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (_teardowns_1_1 && !_teardowns_1_1.done && (_b = _teardowns_1.return)) _b.call(_teardowns_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n            if (errors) {\n                throw new UnsubscriptionError(errors);\n            }\n        }\n    };\n    Subscription.prototype.add = function (teardown) {\n        var _a;\n        if (teardown && teardown !== this) {\n            if (this.closed) {\n                execTeardown(teardown);\n            }\n            else {\n                if (teardown instanceof Subscription) {\n                    if (teardown.closed || teardown._hasParent(this)) {\n                        return;\n                    }\n                    teardown._addParent(this);\n                }\n                (this._teardowns = (_a = this._teardowns) !== null && _a !== void 0 ? _a : []).push(teardown);\n            }\n        }\n    };\n    Subscription.prototype._hasParent = function (parent) {\n        var _parentage = this._parentage;\n        return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _parentage = this._parentage;\n        this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n    };\n    Subscription.prototype._removeParent = function (parent) {\n        var _parentage = this._parentage;\n        if (_parentage === parent) {\n            this._parentage = null;\n        }\n        else if (Array.isArray(_parentage)) {\n            arrRemove(_parentage, parent);\n        }\n    };\n    Subscription.prototype.remove = function (teardown) {\n        var _teardowns = this._teardowns;\n        _teardowns && arrRemove(_teardowns, teardown);\n        if (teardown instanceof Subscription) {\n            teardown._removeParent(this);\n        }\n    };\n    Subscription.EMPTY = (function () {\n        var empty = new Subscription();\n        empty.closed = true;\n        return empty;\n    })();\n    return Subscription;\n}());\nexport { Subscription };\nexport var EMPTY_SUBSCRIPTION = Subscription.EMPTY;\nexport function isSubscription(value) {\n    return (value instanceof Subscription ||\n        (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe)));\n}\nfunction execTeardown(teardown) {\n    if (isFunction(teardown)) {\n        teardown();\n    }\n    else {\n        teardown.unsubscribe();\n    }\n}\n//# sourceMappingURL=Subscription.js.map","export var config = {\n    onUnhandledError: null,\n    onStoppedNotification: null,\n    Promise: undefined,\n    useDeprecatedSynchronousErrorHandling: false,\n    useDeprecatedNextContext: false,\n};\n//# sourceMappingURL=config.js.map","import { __read, __spreadArray } from \"tslib\";\nexport var timeoutProvider = {\n    setTimeout: function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var delegate = timeoutProvider.delegate;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.setTimeout) || setTimeout).apply(void 0, __spreadArray([], __read(args)));\n    },\n    clearTimeout: function (handle) {\n        var delegate = timeoutProvider.delegate;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearTimeout) || clearTimeout)(handle);\n    },\n    delegate: undefined,\n};\n//# sourceMappingURL=timeoutProvider.js.map","import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\nexport function reportUnhandledError(err) {\n    timeoutProvider.setTimeout(function () {\n        var onUnhandledError = config.onUnhandledError;\n        if (onUnhandledError) {\n            onUnhandledError(err);\n        }\n        else {\n            throw err;\n        }\n    });\n}\n//# sourceMappingURL=reportUnhandledError.js.map","export function noop() { }\n//# sourceMappingURL=noop.js.map","export var COMPLETE_NOTIFICATION = (function () { return createNotification('C', undefined, undefined); })();\nexport function errorNotification(error) {\n    return createNotification('E', undefined, error);\n}\nexport function nextNotification(value) {\n    return createNotification('N', value, undefined);\n}\nexport function createNotification(kind, value, error) {\n    return {\n        kind: kind,\n        value: value,\n        error: error,\n    };\n}\n//# sourceMappingURL=NotificationFactories.js.map","import { config } from '../config';\nvar context = null;\nexport function errorContext(cb) {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n        var isRoot = !context;\n        if (isRoot) {\n            context = { errorThrown: false, error: null };\n        }\n        cb();\n        if (isRoot) {\n            var _a = context, errorThrown = _a.errorThrown, error = _a.error;\n            context = null;\n            if (errorThrown) {\n                throw error;\n            }\n        }\n    }\n    else {\n        cb();\n    }\n}\nexport function captureError(err) {\n    if (config.useDeprecatedSynchronousErrorHandling && context) {\n        context.errorThrown = true;\n        context.error = err;\n    }\n}\n//# sourceMappingURL=errorContext.js.map","import { __extends, __read, __spreadArray } from \"tslib\";\nimport { isFunction } from './util/isFunction';\nimport { isSubscription, Subscription } from './Subscription';\nimport { config } from './config';\nimport { reportUnhandledError } from './util/reportUnhandledError';\nimport { noop } from './util/noop';\nimport { nextNotification, errorNotification, COMPLETE_NOTIFICATION } from './NotificationFactories';\nimport { timeoutProvider } from './scheduler/timeoutProvider';\nimport { captureError } from './util/errorContext';\nvar Subscriber = (function (_super) {\n    __extends(Subscriber, _super);\n    function Subscriber(destination) {\n        var _this = _super.call(this) || this;\n        _this.isStopped = false;\n        if (destination) {\n            _this.destination = destination;\n            if (isSubscription(destination)) {\n                destination.add(_this);\n            }\n        }\n        else {\n            _this.destination = EMPTY_OBSERVER;\n        }\n        return _this;\n    }\n    Subscriber.create = function (next, error, complete) {\n        return new SafeSubscriber(next, error, complete);\n    };\n    Subscriber.prototype.next = function (value) {\n        if (this.isStopped) {\n            handleStoppedNotification(nextNotification(value), this);\n        }\n        else {\n            this._next(value);\n        }\n    };\n    Subscriber.prototype.error = function (err) {\n        if (this.isStopped) {\n            handleStoppedNotification(errorNotification(err), this);\n        }\n        else {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    Subscriber.prototype.complete = function () {\n        if (this.isStopped) {\n            handleStoppedNotification(COMPLETE_NOTIFICATION, this);\n        }\n        else {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (!this.closed) {\n            this.isStopped = true;\n            _super.prototype.unsubscribe.call(this);\n            this.destination = null;\n        }\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        try {\n            this.destination.error(err);\n        }\n        finally {\n            this.unsubscribe();\n        }\n    };\n    Subscriber.prototype._complete = function () {\n        try {\n            this.destination.complete();\n        }\n        finally {\n            this.unsubscribe();\n        }\n    };\n    return Subscriber;\n}(Subscription));\nexport { Subscriber };\nvar SafeSubscriber = (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(observerOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        var next;\n        if (isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            (next = observerOrNext.next, error = observerOrNext.error, complete = observerOrNext.complete);\n            var context_1;\n            if (_this && config.useDeprecatedNextContext) {\n                context_1 = Object.create(observerOrNext);\n                context_1.unsubscribe = function () { return _this.unsubscribe(); };\n            }\n            else {\n                context_1 = observerOrNext;\n            }\n            next = next === null || next === void 0 ? void 0 : next.bind(context_1);\n            error = error === null || error === void 0 ? void 0 : error.bind(context_1);\n            complete = complete === null || complete === void 0 ? void 0 : complete.bind(context_1);\n        }\n        _this.destination = {\n            next: next ? wrapForErrorHandling(next, _this) : noop,\n            error: wrapForErrorHandling(error !== null && error !== void 0 ? error : defaultErrorHandler, _this),\n            complete: complete ? wrapForErrorHandling(complete, _this) : noop,\n        };\n        return _this;\n    }\n    return SafeSubscriber;\n}(Subscriber));\nexport { SafeSubscriber };\nfunction wrapForErrorHandling(handler, instance) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        try {\n            handler.apply(void 0, __spreadArray([], __read(args)));\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                captureError(err);\n            }\n            else {\n                reportUnhandledError(err);\n            }\n        }\n    };\n}\nfunction defaultErrorHandler(err) {\n    throw err;\n}\nfunction handleStoppedNotification(notification, subscriber) {\n    var onStoppedNotification = config.onStoppedNotification;\n    onStoppedNotification && timeoutProvider.setTimeout(function () { return onStoppedNotification(notification, subscriber); });\n}\nexport var EMPTY_OBSERVER = {\n    closed: true,\n    next: noop,\n    error: defaultErrorHandler,\n    complete: noop,\n};\n//# sourceMappingURL=Subscriber.js.map","export var observable = (function () { return (typeof Symbol === 'function' && Symbol.observable) || '@@observable'; })();\n//# sourceMappingURL=observable.js.map","export function identity(x) {\n    return x;\n}\n//# sourceMappingURL=identity.js.map","import { identity } from './identity';\nexport function pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\nexport function pipeFromArray(fns) {\n    if (fns.length === 0) {\n        return identity;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\n//# sourceMappingURL=pipe.js.map","import { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription } from './Subscription';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nimport { errorContext } from './util/errorContext';\nvar Observable = (function () {\n    function Observable(subscribe) {\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var _this = this;\n        var subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n        errorContext(function () {\n            var _a = _this, operator = _a.operator, source = _a.source;\n            subscriber.add(operator\n                ?\n                    operator.call(subscriber, source)\n                : source\n                    ?\n                        _this._subscribe(subscriber)\n                    :\n                        _this._trySubscribe(subscriber));\n        });\n        return subscriber;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            sink.error(err);\n        }\n    };\n    Observable.prototype.forEach = function (next, promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                try {\n                    next(value);\n                }\n                catch (err) {\n                    reject(err);\n                    subscription === null || subscription === void 0 ? void 0 : subscription.unsubscribe();\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        var _a;\n        return (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber);\n    };\n    Observable.prototype[Symbol_observable] = function () {\n        return this;\n    };\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i] = arguments[_i];\n        }\n        return pipeFromArray(operations)(this);\n    };\n    Observable.prototype.toPromise = function (promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return (value = x); }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexport { Observable };\nfunction getPromiseCtor(promiseCtor) {\n    var _a;\n    return (_a = promiseCtor !== null && promiseCtor !== void 0 ? promiseCtor : config.Promise) !== null && _a !== void 0 ? _a : Promise;\n}\nfunction isObserver(value) {\n    return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\nfunction isSubscriber(value) {\n    return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\n}\n//# sourceMappingURL=Observable.js.map","import { isFunction } from './isFunction';\nexport function hasLift(source) {\n    return isFunction(source === null || source === void 0 ? void 0 : source.lift);\n}\nexport function operate(init) {\n    return function (source) {\n        if (hasLift(source)) {\n            return source.lift(function (liftedSource) {\n                try {\n                    return init(liftedSource, this);\n                }\n                catch (err) {\n                    this.error(err);\n                }\n            });\n        }\n        throw new TypeError('Unable to lift unknown Observable type');\n    };\n}\n//# sourceMappingURL=lift.js.map","import { __extends } from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nvar OperatorSubscriber = (function (_super) {\n    __extends(OperatorSubscriber, _super);\n    function OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize) {\n        var _this = _super.call(this, destination) || this;\n        _this.onFinalize = onFinalize;\n        _this._next = onNext\n            ? function (value) {\n                try {\n                    onNext(value);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n            }\n            : _super.prototype._next;\n        _this._error = onError\n            ? function (err) {\n                try {\n                    onError(err);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : _super.prototype._error;\n        _this._complete = onComplete\n            ? function () {\n                try {\n                    onComplete();\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : _super.prototype._complete;\n        return _this;\n    }\n    OperatorSubscriber.prototype.unsubscribe = function () {\n        var _a;\n        var closed = this.closed;\n        _super.prototype.unsubscribe.call(this);\n        !closed && ((_a = this.onFinalize) === null || _a === void 0 ? void 0 : _a.call(this));\n    };\n    return OperatorSubscriber;\n}(Subscriber));\nexport { OperatorSubscriber };\n//# sourceMappingURL=OperatorSubscriber.js.map","import { createErrorClass } from './createErrorClass';\nexport var ObjectUnsubscribedError = createErrorClass(function (_super) {\n    return function ObjectUnsubscribedErrorImpl() {\n        _super(this);\n        this.name = 'ObjectUnsubscribedError';\n        this.message = 'object unsubscribed';\n    };\n});\n//# sourceMappingURL=ObjectUnsubscribedError.js.map","import { __extends, __values } from \"tslib\";\nimport { Observable } from './Observable';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\nvar Subject = (function (_super) {\n    __extends(Subject, _super);\n    function Subject() {\n        var _this = _super.call(this) || this;\n        _this.closed = false;\n        _this.observers = [];\n        _this.isStopped = false;\n        _this.hasError = false;\n        _this.thrownError = null;\n        return _this;\n    }\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype._throwIfClosed = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n    };\n    Subject.prototype.next = function (value) {\n        var _this = this;\n        errorContext(function () {\n            var e_1, _a;\n            _this._throwIfClosed();\n            if (!_this.isStopped) {\n                var copy = _this.observers.slice();\n                try {\n                    for (var copy_1 = __values(copy), copy_1_1 = copy_1.next(); !copy_1_1.done; copy_1_1 = copy_1.next()) {\n                        var observer = copy_1_1.value;\n                        observer.next(value);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (copy_1_1 && !copy_1_1.done && (_a = copy_1.return)) _a.call(copy_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n        });\n    };\n    Subject.prototype.error = function (err) {\n        var _this = this;\n        errorContext(function () {\n            _this._throwIfClosed();\n            if (!_this.isStopped) {\n                _this.hasError = _this.isStopped = true;\n                _this.thrownError = err;\n                var observers = _this.observers;\n                while (observers.length) {\n                    observers.shift().error(err);\n                }\n            }\n        });\n    };\n    Subject.prototype.complete = function () {\n        var _this = this;\n        errorContext(function () {\n            _this._throwIfClosed();\n            if (!_this.isStopped) {\n                _this.isStopped = true;\n                var observers = _this.observers;\n                while (observers.length) {\n                    observers.shift().complete();\n                }\n            }\n        });\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = this.closed = true;\n        this.observers = null;\n    };\n    Object.defineProperty(Subject.prototype, \"observed\", {\n        get: function () {\n            var _a;\n            return ((_a = this.observers) === null || _a === void 0 ? void 0 : _a.length) > 0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Subject.prototype._trySubscribe = function (subscriber) {\n        this._throwIfClosed();\n        return _super.prototype._trySubscribe.call(this, subscriber);\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        this._throwIfClosed();\n        this._checkFinalizedStatuses(subscriber);\n        return this._innerSubscribe(subscriber);\n    };\n    Subject.prototype._innerSubscribe = function (subscriber) {\n        var _a = this, hasError = _a.hasError, isStopped = _a.isStopped, observers = _a.observers;\n        return hasError || isStopped\n            ? EMPTY_SUBSCRIPTION\n            : (observers.push(subscriber), new Subscription(function () { return arrRemove(observers, subscriber); }));\n    };\n    Subject.prototype._checkFinalizedStatuses = function (subscriber) {\n        var _a = this, hasError = _a.hasError, thrownError = _a.thrownError, isStopped = _a.isStopped;\n        if (hasError) {\n            subscriber.error(thrownError);\n        }\n        else if (isStopped) {\n            subscriber.complete();\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable));\nexport { Subject };\nvar AnonymousSubject = (function (_super) {\n    __extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        var _this = _super.call(this) || this;\n        _this.destination = destination;\n        _this.source = source;\n        return _this;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.next) === null || _b === void 0 ? void 0 : _b.call(_a, value);\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.error) === null || _b === void 0 ? void 0 : _b.call(_a, err);\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.complete) === null || _b === void 0 ? void 0 : _b.call(_a);\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var _a, _b;\n        return (_b = (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber)) !== null && _b !== void 0 ? _b : EMPTY_SUBSCRIPTION;\n    };\n    return AnonymousSubject;\n}(Subject));\nexport { AnonymousSubject };\n//# sourceMappingURL=Subject.js.map","import { __extends } from \"tslib\";\nimport { Subject } from './Subject';\nvar BehaviorSubject = (function (_super) {\n    __extends(BehaviorSubject, _super);\n    function BehaviorSubject(_value) {\n        var _this = _super.call(this) || this;\n        _this._value = _value;\n        return _this;\n    }\n    Object.defineProperty(BehaviorSubject.prototype, \"value\", {\n        get: function () {\n            return this.getValue();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    BehaviorSubject.prototype._subscribe = function (subscriber) {\n        var subscription = _super.prototype._subscribe.call(this, subscriber);\n        !subscription.closed && subscriber.next(this._value);\n        return subscription;\n    };\n    BehaviorSubject.prototype.getValue = function () {\n        var _a = this, hasError = _a.hasError, thrownError = _a.thrownError, _value = _a._value;\n        if (hasError) {\n            throw thrownError;\n        }\n        this._throwIfClosed();\n        return _value;\n    };\n    BehaviorSubject.prototype.next = function (value) {\n        _super.prototype.next.call(this, (this._value = value));\n    };\n    return BehaviorSubject;\n}(Subject));\nexport { BehaviorSubject };\n//# sourceMappingURL=BehaviorSubject.js.map","export var isArrayLike = (function (x) { return x && typeof x.length === 'number' && typeof x !== 'function'; });\n//# sourceMappingURL=isArrayLike.js.map","import { isFunction } from \"./isFunction\";\nexport function isPromise(value) {\n    return isFunction(value === null || value === void 0 ? void 0 : value.then);\n}\n//# sourceMappingURL=isPromise.js.map","import { observable as Symbol_observable } from '../symbol/observable';\nimport { isFunction } from './isFunction';\nexport function isInteropObservable(input) {\n    return isFunction(input[Symbol_observable]);\n}\n//# sourceMappingURL=isInteropObservable.js.map","import { isFunction } from './isFunction';\nexport function isAsyncIterable(obj) {\n    return Symbol.asyncIterator && isFunction(obj === null || obj === void 0 ? void 0 : obj[Symbol.asyncIterator]);\n}\n//# sourceMappingURL=isAsyncIterable.js.map","export function createInvalidObservableTypeError(input) {\n    return new TypeError(\"You provided \" + (input !== null && typeof input === 'object' ? 'an invalid object' : \"'\" + input + \"'\") + \" where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.\");\n}\n//# sourceMappingURL=throwUnobservableError.js.map","export function getSymbolIterator() {\n    if (typeof Symbol !== 'function' || !Symbol.iterator) {\n        return '@@iterator';\n    }\n    return Symbol.iterator;\n}\nexport var iterator = getSymbolIterator();\n//# sourceMappingURL=iterator.js.map","import { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from './isFunction';\nexport function isIterable(input) {\n    return isFunction(input === null || input === void 0 ? void 0 : input[Symbol_iterator]);\n}\n//# sourceMappingURL=isIterable.js.map","import { __asyncGenerator, __await, __generator } from \"tslib\";\nimport { isFunction } from './isFunction';\nexport function readableStreamLikeToAsyncGenerator(readableStream) {\n    return __asyncGenerator(this, arguments, function readableStreamLikeToAsyncGenerator_1() {\n        var reader, _a, value, done;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    reader = readableStream.getReader();\n                    _b.label = 1;\n                case 1:\n                    _b.trys.push([1, , 9, 10]);\n                    _b.label = 2;\n                case 2:\n                    if (!true) return [3, 8];\n                    return [4, __await(reader.read())];\n                case 3:\n                    _a = _b.sent(), value = _a.value, done = _a.done;\n                    if (!done) return [3, 5];\n                    return [4, __await(void 0)];\n                case 4: return [2, _b.sent()];\n                case 5: return [4, __await(value)];\n                case 6: return [4, _b.sent()];\n                case 7:\n                    _b.sent();\n                    return [3, 2];\n                case 8: return [3, 10];\n                case 9:\n                    reader.releaseLock();\n                    return [7];\n                case 10: return [2];\n            }\n        });\n    });\n}\nexport function isReadableStreamLike(obj) {\n    return isFunction(obj === null || obj === void 0 ? void 0 : obj.getReader);\n}\n//# sourceMappingURL=isReadableStreamLike.js.map","import { __asyncValues, __awaiter, __generator, __values } from \"tslib\";\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { Observable } from '../Observable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isIterable } from '../util/isIterable';\nimport { isReadableStreamLike, readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nimport { isFunction } from '../util/isFunction';\nimport { reportUnhandledError } from '../util/reportUnhandledError';\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport function innerFrom(input) {\n    if (input instanceof Observable) {\n        return input;\n    }\n    if (input != null) {\n        if (isInteropObservable(input)) {\n            return fromInteropObservable(input);\n        }\n        if (isArrayLike(input)) {\n            return fromArrayLike(input);\n        }\n        if (isPromise(input)) {\n            return fromPromise(input);\n        }\n        if (isAsyncIterable(input)) {\n            return fromAsyncIterable(input);\n        }\n        if (isIterable(input)) {\n            return fromIterable(input);\n        }\n        if (isReadableStreamLike(input)) {\n            return fromReadableStreamLike(input);\n        }\n    }\n    throw createInvalidObservableTypeError(input);\n}\nexport function fromInteropObservable(obj) {\n    return new Observable(function (subscriber) {\n        var obs = obj[Symbol_observable]();\n        if (isFunction(obs.subscribe)) {\n            return obs.subscribe(subscriber);\n        }\n        throw new TypeError('Provided object does not correctly implement Symbol.observable');\n    });\n}\nexport function fromArrayLike(array) {\n    return new Observable(function (subscriber) {\n        for (var i = 0; i < array.length && !subscriber.closed; i++) {\n            subscriber.next(array[i]);\n        }\n        subscriber.complete();\n    });\n}\nexport function fromPromise(promise) {\n    return new Observable(function (subscriber) {\n        promise\n            .then(function (value) {\n            if (!subscriber.closed) {\n                subscriber.next(value);\n                subscriber.complete();\n            }\n        }, function (err) { return subscriber.error(err); })\n            .then(null, reportUnhandledError);\n    });\n}\nexport function fromIterable(iterable) {\n    return new Observable(function (subscriber) {\n        var e_1, _a;\n        try {\n            for (var iterable_1 = __values(iterable), iterable_1_1 = iterable_1.next(); !iterable_1_1.done; iterable_1_1 = iterable_1.next()) {\n                var value = iterable_1_1.value;\n                subscriber.next(value);\n                if (subscriber.closed) {\n                    return;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (iterable_1_1 && !iterable_1_1.done && (_a = iterable_1.return)) _a.call(iterable_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        subscriber.complete();\n    });\n}\nexport function fromAsyncIterable(asyncIterable) {\n    return new Observable(function (subscriber) {\n        process(asyncIterable, subscriber).catch(function (err) { return subscriber.error(err); });\n    });\n}\nexport function fromReadableStreamLike(readableStream) {\n    return fromAsyncIterable(readableStreamLikeToAsyncGenerator(readableStream));\n}\nfunction process(asyncIterable, subscriber) {\n    var asyncIterable_1, asyncIterable_1_1;\n    var e_2, _a;\n    return __awaiter(this, void 0, void 0, function () {\n        var value, e_2_1;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    _b.trys.push([0, 5, 6, 11]);\n                    asyncIterable_1 = __asyncValues(asyncIterable);\n                    _b.label = 1;\n                case 1: return [4, asyncIterable_1.next()];\n                case 2:\n                    if (!(asyncIterable_1_1 = _b.sent(), !asyncIterable_1_1.done)) return [3, 4];\n                    value = asyncIterable_1_1.value;\n                    subscriber.next(value);\n                    if (subscriber.closed) {\n                        return [2];\n                    }\n                    _b.label = 3;\n                case 3: return [3, 1];\n                case 4: return [3, 11];\n                case 5:\n                    e_2_1 = _b.sent();\n                    e_2 = { error: e_2_1 };\n                    return [3, 11];\n                case 6:\n                    _b.trys.push([6, , 9, 10]);\n                    if (!(asyncIterable_1_1 && !asyncIterable_1_1.done && (_a = asyncIterable_1.return))) return [3, 8];\n                    return [4, _a.call(asyncIterable_1)];\n                case 7:\n                    _b.sent();\n                    _b.label = 8;\n                case 8: return [3, 10];\n                case 9:\n                    if (e_2) throw e_2.error;\n                    return [7];\n                case 10: return [7];\n                case 11:\n                    subscriber.complete();\n                    return [2];\n            }\n        });\n    });\n}\n//# sourceMappingURL=innerFrom.js.map","export function executeSchedule(parentSubscription, scheduler, work, delay, repeat) {\n    if (delay === void 0) { delay = 0; }\n    if (repeat === void 0) { repeat = false; }\n    var scheduleSubscription = scheduler.schedule(function () {\n        work();\n        if (repeat) {\n            parentSubscription.add(this.schedule(null, delay));\n        }\n        else {\n            this.unsubscribe();\n        }\n    }, delay);\n    parentSubscription.add(scheduleSubscription);\n    if (!repeat) {\n        return scheduleSubscription;\n    }\n}\n//# sourceMappingURL=executeSchedule.js.map","import { executeSchedule } from '../util/executeSchedule';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport function observeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return operate(function (source, subscriber) {\n        source.subscribe(new OperatorSubscriber(subscriber, function (value) { return executeSchedule(subscriber, scheduler, function () { return subscriber.next(value); }, delay); }, function () { return executeSchedule(subscriber, scheduler, function () { return subscriber.complete(); }, delay); }, function (err) { return executeSchedule(subscriber, scheduler, function () { return subscriber.error(err); }, delay); }));\n    });\n}\n//# sourceMappingURL=observeOn.js.map","import { operate } from '../util/lift';\nexport function subscribeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return operate(function (source, subscriber) {\n        subscriber.add(scheduler.schedule(function () { return source.subscribe(subscriber); }, delay));\n    });\n}\n//# sourceMappingURL=subscribeOn.js.map","import { Observable } from '../Observable';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function scheduleAsyncIterable(input, scheduler) {\n    if (!input) {\n        throw new Error('Iterable cannot be null');\n    }\n    return new Observable(function (subscriber) {\n        executeSchedule(subscriber, scheduler, function () {\n            var iterator = input[Symbol.asyncIterator]();\n            executeSchedule(subscriber, scheduler, function () {\n                iterator.next().then(function (result) {\n                    if (result.done) {\n                        subscriber.complete();\n                    }\n                    else {\n                        subscriber.next(result.value);\n                    }\n                });\n            }, 0, true);\n        });\n    });\n}\n//# sourceMappingURL=scheduleAsyncIterable.js.map","import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isReadableStreamLike } from '../util/isReadableStreamLike';\nimport { scheduleReadableStreamLike } from './scheduleReadableStreamLike';\nexport function scheduled(input, scheduler) {\n    if (input != null) {\n        if (isInteropObservable(input)) {\n            return scheduleObservable(input, scheduler);\n        }\n        if (isArrayLike(input)) {\n            return scheduleArray(input, scheduler);\n        }\n        if (isPromise(input)) {\n            return schedulePromise(input, scheduler);\n        }\n        if (isAsyncIterable(input)) {\n            return scheduleAsyncIterable(input, scheduler);\n        }\n        if (isIterable(input)) {\n            return scheduleIterable(input, scheduler);\n        }\n        if (isReadableStreamLike(input)) {\n            return scheduleReadableStreamLike(input, scheduler);\n        }\n    }\n    throw createInvalidObservableTypeError(input);\n}\n//# sourceMappingURL=scheduled.js.map","import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nexport function scheduleObservable(input, scheduler) {\n    return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n//# sourceMappingURL=scheduleObservable.js.map","import { Observable } from '../Observable';\nexport function scheduleArray(input, scheduler) {\n    return new Observable(function (subscriber) {\n        var i = 0;\n        return scheduler.schedule(function () {\n            if (i === input.length) {\n                subscriber.complete();\n            }\n            else {\n                subscriber.next(input[i++]);\n                if (!subscriber.closed) {\n                    this.schedule();\n                }\n            }\n        });\n    });\n}\n//# sourceMappingURL=scheduleArray.js.map","import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nexport function schedulePromise(input, scheduler) {\n    return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n//# sourceMappingURL=schedulePromise.js.map","import { Observable } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from '../util/isFunction';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function scheduleIterable(input, scheduler) {\n    return new Observable(function (subscriber) {\n        var iterator;\n        executeSchedule(subscriber, scheduler, function () {\n            iterator = input[Symbol_iterator]();\n            executeSchedule(subscriber, scheduler, function () {\n                var _a;\n                var value;\n                var done;\n                try {\n                    (_a = iterator.next(), value = _a.value, done = _a.done);\n                }\n                catch (err) {\n                    subscriber.error(err);\n                    return;\n                }\n                if (done) {\n                    subscriber.complete();\n                }\n                else {\n                    subscriber.next(value);\n                }\n            }, 0, true);\n        });\n        return function () { return isFunction(iterator === null || iterator === void 0 ? void 0 : iterator.return) && iterator.return(); };\n    });\n}\n//# sourceMappingURL=scheduleIterable.js.map","import { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nexport function scheduleReadableStreamLike(input, scheduler) {\n    return scheduleAsyncIterable(readableStreamLikeToAsyncGenerator(input), scheduler);\n}\n//# sourceMappingURL=scheduleReadableStreamLike.js.map","import { scheduled } from '../scheduled/scheduled';\nimport { innerFrom } from './innerFrom';\nexport function from(input, scheduler) {\n    return scheduler ? scheduled(input, scheduler) : innerFrom(input);\n}\n//# sourceMappingURL=from.js.map","import { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport function map(project, thisArg) {\n    return operate(function (source, subscriber) {\n        var index = 0;\n        source.subscribe(new OperatorSubscriber(subscriber, function (value) {\n            subscriber.next(project.call(thisArg, value, index++));\n        }));\n    });\n}\n//# sourceMappingURL=map.js.map","import { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport function distinctUntilChanged(comparator, keySelector) {\n    if (keySelector === void 0) { keySelector = identity; }\n    comparator = comparator !== null && comparator !== void 0 ? comparator : defaultCompare;\n    return operate(function (source, subscriber) {\n        var previousKey;\n        var first = true;\n        source.subscribe(new OperatorSubscriber(subscriber, function (value) {\n            var currentKey = keySelector(value);\n            if (first || !comparator(previousKey, currentKey)) {\n                first = false;\n                previousKey = currentKey;\n                subscriber.next(value);\n            }\n        }));\n    });\n}\nfunction defaultCompare(a, b) {\n    return a === b;\n}\n//# sourceMappingURL=distinctUntilChanged.js.map","/**\n * For logic classes to be hot-swappable for quick upgrades all state is contained\n * in one non-reloadable BehaviorSubject.\n */\nimport { INTERNAL_DOMAIN } from \"@airport/ground-control\";\nimport { BehaviorSubject } from \"rxjs\";\nexport const internalTerminalState = new BehaviorSubject({\n    applicationActors: [],\n    applications: [],\n    domains: [],\n    frameworkActor: null,\n    internalConnector: {\n        dbName: '',\n        internalCredentials: {\n            application: null,\n            domain: INTERNAL_DOMAIN,\n            methodName: null,\n            objectName: null\n        },\n        serverUrl: ''\n    },\n    lastIds: {\n        columns: 0,\n        domains: 0,\n        entities: 0,\n        properties: 0,\n        propertyColumns: 0,\n        relations: 0,\n        relationColumns: 0,\n        applications: 0,\n        applicationVersions: 0\n    },\n    receiver: {\n        initializedApps: new Set(),\n        initializingApps: new Set(),\n    },\n    terminal: null,\n    transactionManager: {\n        pendingTransactionQueue: [],\n        rootTransactionInProgressMap: new Map(),\n        transactionInProgressMap: new Map()\n    },\n    webReceiver: {\n        domainPrefix: '',\n        localDomain: '',\n        mainDomainFragments: [],\n        onClientMessageCallback: null,\n        pendingApplicationCounts: new Map(),\n        pendingHostCounts: new Map(),\n        pendingInterAppApiCallMessageMap: new Map(),\n        subsriptionMap: new Map()\n    }\n});\n//# sourceMappingURL=theState.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ensureChildJsMap } from '@airport/ground-control';\nimport { internalTerminalState } from './theState';\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet TerminalStore = class TerminalStore {\n    async init() {\n        this.state = internalTerminalState;\n        this.getTerminalState = this.selectorManager.createRootSelector(this.state);\n        this.getApplicationActors = this.selectorManager.createSelector(this.getTerminalState, terminal => terminal.applicationActors);\n        this.getApplicationActorMapByDomainAndApplicationNames = this.selectorManager.createSelector(this.getApplicationActors, applicationActors => {\n            const applicationActorsByDomainAndApplicationNames = new Map();\n            for (const applicationActor of applicationActors) {\n                const applicationActorMapForDomain = ensureChildJsMap(applicationActorsByDomainAndApplicationNames, applicationActor.application.domain.name);\n                let actorsForApplication = applicationActorMapForDomain\n                    .get(applicationActor.application.name);\n                if (!actorsForApplication) {\n                    actorsForApplication = [];\n                    applicationActorMapForDomain.set(applicationActor.application.name, actorsForApplication);\n                }\n                actorsForApplication.push(applicationActor);\n            }\n            return applicationActorsByDomainAndApplicationNames;\n        });\n        this.getDomains = this.selectorManager.createSelector(this.getTerminalState, terminal => terminal.domains);\n        this.getDomainMapByName = this.selectorManager.createSelector(this.getDomains, domains => {\n            const domainsByName = new Map();\n            for (const domain of domains) {\n                domainsByName.set(domain.name, domain);\n            }\n            return domainsByName;\n        });\n        this.getFrameworkActor = this.selectorManager.createSelector(this.getTerminalState, terminal => terminal.frameworkActor);\n        this.getInternalConnector = this.selectorManager.createSelector(this.getTerminalState, terminalState => terminalState.internalConnector);\n        this.getLastIds = this.selectorManager.createSelector(this.getTerminalState, terminalState => terminalState.lastIds);\n        this.getLatestApplicationVersionMapByNames = this.selectorManager.createSelector(this.getDomains, domains => {\n            const latestApplicationVersionMapByNames = new Map();\n            for (const domain of domains) {\n                const mapForDomain = ensureChildJsMap(latestApplicationVersionMapByNames, domain.name);\n                for (const application of domain.applications) {\n                    mapForDomain.set(application.name, application.currentVersion[0].applicationVersion);\n                }\n            }\n            return latestApplicationVersionMapByNames;\n        });\n        this.getLatestApplicationVersionMapByFullApplicationName = this.selectorManager.createSelector(this.getLatestApplicationVersionMapByNames, (latestApplicationVersionMapByNames) => {\n            const latestApplicationVersionMapByFullApplicationName = new Map();\n            for (const applicationVersionsForDomainName of latestApplicationVersionMapByNames.values()) {\n                for (const applicationVersion of applicationVersionsForDomainName.values()) {\n                    latestApplicationVersionMapByFullApplicationName.set(applicationVersion.application.fullName, applicationVersion);\n                }\n            }\n            return latestApplicationVersionMapByFullApplicationName;\n        });\n        this.getAllApplicationVersionsByIds = this.selectorManager.createSelector(this.getDomains, domains => {\n            const allApplicationVersionsByIds = [];\n            for (const domain of domains) {\n                for (const application of domain.applications) {\n                    for (const applicationVersion of application.versions) {\n                        allApplicationVersionsByIds[applicationVersion.id] = applicationVersion;\n                    }\n                }\n            }\n            return allApplicationVersionsByIds;\n        });\n        this.getLatestApplicationVersionsByApplicationIndexes = this.selectorManager.createSelector(this.getDomains, domains => {\n            const latestApplicationVersionsByApplicationIndexes = [];\n            for (const domain of domains) {\n                for (const application of domain.applications) {\n                    latestApplicationVersionsByApplicationIndexes[application.index]\n                        = application.currentVersion[0].applicationVersion;\n                }\n            }\n            return latestApplicationVersionsByApplicationIndexes;\n        });\n        this.getApplications = this.selectorManager.createSelector(this.getTerminalState, terminal => terminal.applications);\n        this.getAllEntities = this.selectorManager.createSelector(this.getLatestApplicationVersionsByApplicationIndexes, latestApplicationVersionsByApplicationIndexes => {\n            const allEntities = [];\n            for (const latestApplicationVersion of latestApplicationVersionsByApplicationIndexes) {\n                if (!latestApplicationVersion) {\n                    continue;\n                }\n                for (const entity of latestApplicationVersion.entities) {\n                    allEntities[entity.id] = entity;\n                }\n            }\n            return allEntities;\n        });\n        this.getAllColumns = this.selectorManager.createSelector(this.getAllEntities, allEntities => {\n            const allColumns = [];\n            for (const entity of allEntities) {\n                if (!entity) {\n                    continue;\n                }\n                for (const column of entity.columns) {\n                    allColumns[column.id] = column;\n                }\n            }\n            return allColumns;\n        });\n        this.getAllRelations = this.selectorManager.createSelector(this.getAllEntities, allEntities => {\n            const allRelations = [];\n            for (const entity of allEntities) {\n                if (!entity) {\n                    continue;\n                }\n                for (const relation of entity.relations) {\n                    allRelations[relation.id] = relation;\n                }\n            }\n            return allRelations;\n        });\n        this.getReceiver = this.selectorManager.createSelector(this.getTerminalState, terminal => terminal.receiver);\n        this.getTransactionManager = this.selectorManager.createSelector(this.getTerminalState, terminal => terminal.transactionManager);\n        this.getWebReceiver = this.selectorManager.createSelector(this.getTerminalState, terminal => terminal.webReceiver);\n    }\n    tearDown() {\n    }\n};\n__decorate([\n    Inject()\n], TerminalStore.prototype, \"selectorManager\", void 0);\nTerminalStore = __decorate([\n    Injected()\n], TerminalStore);\nexport { TerminalStore };\n//# sourceMappingURL=TerminalStore.js.map","export const Injected = function () {\n    return function (constructor) {\n        // No runtime logic required.\n    };\n};\nexport const Inject = function () {\n    return function (targetObject, propertyKey) {\n        // No runtime logic required.\n    };\n};\n//# sourceMappingURL=decorators.js.map","/**\n * Created by Papa on 8/20/2016.\n */\nexport const Id = function () {\n    return function (targetObject, propertyKey) {\n        // No runtime logic required.\n    };\n};\nexport const Column = function (columnConfiguration) {\n    return function (targetObject, propertyKey) {\n        // No runtime logic required.\n    };\n};\nexport const JoinColumn = function (joinColumnConfiguration) {\n    return function (targetObject, propertyKey) {\n        // No runtime logic required.\n    };\n};\nexport const JoinColumns = function (joinColumnConfigurations) {\n    return function (targetObject, propertyKey) {\n        // No runtime logic required.\n    };\n};\n/**\n * Function used to add a clause to a Join\n export interface AddToJoinFunction<QOtm extends IQEntity, QMto extends IQEntity> {\n    (\n        otm: QOtm, // One-to-Many IQEntity\n        mto: QMto // Many-to-One IQEntity\n    ): JSONBaseOperation;\n}\n */\n// export const WhereJoinTable: WhereJoinTableDecorator<any, any> = function <QOtm extends\n// IQEntityInternal, QMto extends IQEntityInternal>( addToJoinFunction: AddToJoinFunction<QOtm,\n// QMto>, // Function to add to the join joinFunctionWithOperator?: andOperator | orOperator //\n// How to add the function to the join ) { return function ( targetObject: any, propertyKey:\n// string ) { // No runtime logic required. } };\nexport const SubQuery = function (addToJoinFunction) {\n    return function (targetObject, propertyKey) {\n        // No runtime logic required.\n    };\n};\nexport const RJoinColumn = function (rJoinColumnConfiguration) {\n    return function (targetObject, propertyKey) {\n        // No runtime logic required.\n    };\n};\nexport const RJoinColumns = function (joinColumnConfigurations) {\n    return function (targetObject, propertyKey) {\n        // No runtime logic required.\n    };\n};\nexport const Json = function () {\n    return function (targetObject, propertyKey) {\n        // No runtime logic required.\n    };\n};\nexport const DbAny = function () {\n    return function (targetObject, propertyKey) {\n        // No runtime logic required.\n    };\n};\nexport const DbBoolean = function () {\n    return function (targetObject, propertyKey) {\n        // No runtime logic required.\n    };\n};\nexport const DbDate = function () {\n    return function (targetObject, propertyKey) {\n        // No runtime logic required.\n    };\n};\nexport const DbNumber = function () {\n    return function (targetObject, propertyKey) {\n        // No runtime logic required.\n    };\n};\nexport const DbString = function () {\n    return function (targetObject, propertyKey) {\n        // No runtime logic required.\n    };\n};\nexport const Transient = function () {\n    return function (targetObject, propertyKey) {\n        // No runtime logic required.\n    };\n};\nexport const ManyToOne = function (elements) {\n    return function (targetObject, propertyKey) {\n        // No runtime logic required.\n    };\n};\nexport const OneToMany = function (elements) {\n    return function (targetObject, propertyKey) {\n        // No runtime logic required.\n    };\n};\nexport const GeneratedValue = function () {\n    return function (targetObject, propertyKey) {\n        // No runtime logic required.\n    };\n};\nexport const SequenceGenerator = function () {\n    return function (targetObject, propertyKey) {\n        // No runtime logic required.\n    };\n};\nexport const TraditionalServerSeq = function () {\n    return function (targetObject, propertyKey) {\n        // No runtime logic required.\n    };\n};\n//# sourceMappingURL=ColumnDecorators.js.map","/**\n * Created by Papa on 10/18/2016.\n */\nconst ALIASES = ['a', 'b', 'c', 'd', 'e',\n    'f', 'g', 'h', 'i', 'j',\n    'k', 'l', 'm', 'n', 'o',\n    'p', 'q', 'r', 's', 't',\n    'u', 'v', 'w', 'x', 'y', 'z'];\nexport class AliasCache {\n    constructor(aliasPrefix = '') {\n        this.aliasPrefix = aliasPrefix;\n        this.reset();\n    }\n    getFollowingAlias() {\n        let currentAlias = this.lastAlias;\n        for (var i = 2; i >= 0; i--) {\n            let currentIndex = currentAlias[i];\n            currentIndex = (currentIndex + 1) % 26;\n            currentAlias[i] = currentIndex;\n            if (currentIndex !== 0) {\n                break;\n            }\n        }\n        let aliasString = this.aliasPrefix;\n        for (var i = 0; i < 3; i++) {\n            aliasString += ALIASES[currentAlias[i]];\n        }\n        if (aliasString === 'add') {\n            aliasString = this.getFollowingAlias();\n        }\n        return aliasString;\n    }\n    reset() {\n        this.lastAlias = [-1, -1, -1];\n    }\n}\nexport class AliasMap {\n    constructor(aliasCache) {\n        this.aliasCache = aliasCache;\n        this.aliasMap = new Map();\n    }\n    getNextAlias(object) {\n        if (this.hasAliasFor(object)) {\n            return this.getExistingAlias(object);\n        }\n        let aliasString = this.aliasCache.getFollowingAlias();\n        this.aliasMap.set(object, aliasString);\n        return aliasString;\n    }\n    hasAliasFor(object) {\n        return this.aliasMap.has(object);\n    }\n}\nexport class EntityAliases extends AliasMap {\n    constructor(entityAliasCache = new AliasCache('E'), columnAliasCache = new AliasCache('C'), parameterAliasCache = new AliasCache('P')) {\n        super(entityAliasCache);\n        this.columnAliasCache = columnAliasCache;\n        this.parameterAliases = new ParameterAliases(parameterAliasCache);\n    }\n    getParams( //\n    ) {\n        return this.parameterAliases;\n    }\n    getNewFieldColumnAliases() {\n        return new FieldColumnAliases(this, this.columnAliasCache);\n    }\n    getExistingAlias(entity) {\n        if (!this.hasAliasFor(entity)) {\n            throw new Error(`No alias found for entity ${entity.__driver__.dbEntity.name}`);\n        }\n        return this.aliasMap.get(entity);\n    }\n    getOnlyAlias( //\n    ) {\n        if (this.aliasMap.size !== 1) {\n            return `Expecting only 1 entry in Field's alias map`;\n        }\n        return this.aliasMap.get(this.aliasMap.keys().next().value);\n    }\n}\nexport class ParameterAliases extends AliasMap {\n    constructor(aliasCache) {\n        super(aliasCache);\n    }\n    getNextAlias(object) {\n        if (this.hasAliasFor(object)) {\n            return this.getExistingAlias(object).alias;\n        }\n        let aliasString = this.aliasCache.getFollowingAlias();\n        let parameter = {\n            alias: aliasString,\n            value: object.value\n        };\n        this.aliasMap.set(object, parameter);\n        return aliasString;\n    }\n    getExistingAlias(field) {\n        if (!this.hasAliasFor(field)) {\n            throw new Error(`No alias found for a parameter`);\n        }\n        return this.aliasMap.get(field);\n    }\n    getParameters( //\n    ) {\n        let parameters = {};\n        this.aliasMap.forEach((value, key) => {\n            parameters[value.alias] = value;\n        });\n        return parameters;\n    }\n}\nexport class FieldColumnAliases extends AliasMap {\n    constructor(_entityAliases, aliasCache) {\n        super(aliasCache);\n        this._entityAliases = _entityAliases;\n    }\n    get entityAliases( //\n    ) {\n        return this._entityAliases;\n    }\n    getExistingAlias(field) {\n        if (!this.hasAliasFor(field)) {\n            const qField = field;\n            throw new Error(`No alias found for property ${qField.dbProperty.entity.name}.${qField.dbProperty.name}`);\n        }\n        return this.aliasMap.get(field);\n    }\n}\n//# sourceMappingURL=Aliases.js.map","import { SqlOperator } from \"@airport/ground-control\";\n/**\n * Created by Papa on 4/21/2016.\n */\nexport class Operation {\n    constructor(category) {\n        this.category = category;\n    }\n}\nexport class ValueOperation extends Operation {\n    constructor(category) {\n        super(category);\n        this.category = category;\n    }\n    equals(lValue, rValue) {\n        return {\n            c: this.category,\n            l: lValue,\n            o: SqlOperator.EQUALS,\n            r: rValue\n        };\n    }\n    greaterThan(lValue, rValue) {\n        return {\n            c: this.category,\n            l: lValue,\n            o: SqlOperator.GREATER_THAN,\n            r: rValue\n        };\n    }\n    greaterThanOrEquals(lValue, rValue) {\n        return {\n            c: this.category,\n            l: lValue,\n            o: SqlOperator.GREATER_THAN_OR_EQUALS,\n            r: rValue\n        };\n    }\n    isNotNull(lValue) {\n        return {\n            c: this.category,\n            l: lValue,\n            o: SqlOperator.IS_NOT_NULL\n        };\n    }\n    isNull(lValue) {\n        return {\n            c: this.category,\n            l: lValue,\n            o: SqlOperator.IS_NULL\n        };\n    }\n    in(lValue, rValue) {\n        return {\n            c: this.category,\n            l: lValue,\n            o: SqlOperator.IN,\n            r: rValue\n        };\n    }\n    lessThan(lValue, rValue) {\n        return {\n            c: this.category,\n            l: lValue,\n            o: SqlOperator.LESS_THAN,\n            r: rValue\n        };\n    }\n    lessThanOrEquals(lValue, rValue) {\n        return {\n            c: this.category,\n            l: lValue,\n            o: SqlOperator.LESS_THAN_OR_EQUALS,\n            r: rValue\n        };\n    }\n    notEquals(lValue, rValue) {\n        return {\n            c: this.category,\n            l: lValue,\n            o: SqlOperator.NOT_EQUALS,\n            r: lValue\n        };\n    }\n    notIn(lValue, rValue) {\n        return {\n            c: this.category,\n            l: lValue,\n            o: SqlOperator.NOT_IN,\n            r: rValue\n        };\n    }\n}\n//# sourceMappingURL=Operation.js.map","import { OperationCategory, SqlOperator } from \"@airport/ground-control\";\nimport { Operation } from \"./Operation\";\n/**\n * Created by Papa on 4/21/2016.\n */\nexport const and = function (...ops) {\n    return new LogicalOperation().and(ops);\n};\nexport const or = function (...ops) {\n    return new LogicalOperation().or(ops);\n};\nexport const not = function (op) {\n    return new LogicalOperation().not(op);\n};\nexport class LogicalOperation extends Operation {\n    constructor() {\n        super(null);\n    }\n    static verifyChildOps(ops) {\n        if (!ops || !ops.length) {\n            throw new Error(`No child operations provided`);\n        }\n    }\n    and(ops) {\n        return {\n            c: OperationCategory.LOGICAL,\n            o: SqlOperator.AND,\n            v: ops\n        };\n    }\n    or(ops) {\n        return {\n            c: OperationCategory.LOGICAL,\n            o: SqlOperator.OR,\n            v: ops\n        };\n    }\n    not(op) {\n        return {\n            c: OperationCategory.LOGICAL,\n            o: SqlOperator.NOT,\n            v: op\n        };\n    }\n}\n//# sourceMappingURL=LogicalOperation.js.map","import { JoinType } from '@airport/ground-control';\nimport { extend } from '../../utils/qApplicationBuilderUtils';\nimport { and } from '../operation/LogicalOperation';\n/**\n * Created by Papa on 4/26/2016.\n */\n/*\n * Cannot use 'class' syntax because it brakes dynamic creation of subclasses.\n * With 'class' browser reports:\n *   Class constructor QRelation cannot be invoked without 'new'\n * When calling:\n *   Q...Relation.base.constructor.call(this, relation, qEntity)\n */\nexport function QRelation(dbRelation, parentQ, appliationUtils, relationManager) {\n    this.dbRelation = dbRelation;\n    this.parentQ = parentQ;\n    this.appliationUtils = appliationUtils;\n    this.relationManager = relationManager;\n}\nQRelation.prototype.innerJoin = function () {\n    return this.getNewQEntity(JoinType.INNER_JOIN);\n};\nQRelation.prototype.leftJoin = function () {\n    return this.getNewQEntity(JoinType.LEFT_JOIN);\n};\nQRelation.prototype.getNewQEntity = function (joinType) {\n    const dbEntity = this.dbRelation.relationEntity;\n    const qEntityConstructor = this.applicationUtils.getQEntityConstructor(this.dbRelation.relationEntity);\n    let newQEntity = new qEntityConstructor(dbEntity, this.appliationUtils, this.relationManager, this.relationManager.getNextChildJoinPosition(this.parentQ.__driver__), this.dbRelation, joinType, this.appliationUtils, this.relationManager);\n    newQEntity.__driver__.parentJoinEntity = this.parentQ;\n    return newQEntity;\n};\nexport function QRepositoryEntityRelation(dbRelation, parentQ) {\n    QRepositoryEntityRelation.base.constructor.call(this, dbRelation, parentQ);\n}\nQRepositoryEntityRelation.prototype.equals = function (entity) {\n    let thisRelation = this;\n    let other = entity;\n    return and(thisRelation.actor.id.equals(other.actor.id), thisRelation.actorRecordId.equals(other.actorRecordId), thisRelation.id.equals(other.repository.id));\n};\nextend(QRelation, QRepositoryEntityRelation, {});\n//# sourceMappingURL=Relation.js.map","import { OperationCategory, } from \"@airport/ground-control\";\nimport { ValueOperation } from \"./Operation\";\n/**\n * Created by Papa on 6/20/2016.\n */\nexport class BooleanOperation extends ValueOperation {\n    constructor() {\n        super(OperationCategory.BOOLEAN);\n    }\n}\n//# sourceMappingURL=BooleanOperation.js.map","/**\n * Created by Papa on 10/16/2016.\n */\nexport class FieldInOrderBy {\n    constructor(field, sortOrder) {\n        this.field = field;\n        this.sortOrder = sortOrder;\n    }\n    toJSON(columnAliases) {\n        if (!columnAliases.hasAliasFor(this.field)) {\n            throw new Error(`Field used in order by clause is not present in select clause`);\n        }\n        return {\n            fa: columnAliases.getExistingAlias(this.field),\n            so: this.sortOrder\n        };\n    }\n    toEntityJSON() {\n        let qField = this.field;\n        return {\n            fa: undefined,\n            ci: qField.dbColumn.index,\n            pi: qField.dbProperty.index,\n            ti: qField.dbProperty.entity.index,\n            si: qField.dbProperty.entity.applicationVersion.id,\n            so: this.sortOrder\n        };\n    }\n}\n//# sourceMappingURL=FieldInOrderBy.js.map","import { JSONClauseObjectType, SortOrder } from '@airport/ground-control';\nimport { FieldInOrderBy } from './FieldInOrderBy';\n/**\n * Created by Papa on 4/21/2016.\n */\nexport class QField {\n    constructor(dbColumn, dbProperty, q, objectType) {\n        this.dbColumn = dbColumn;\n        this.dbProperty = dbProperty;\n        this.q = q;\n        this.objectType = objectType;\n        this.__appliedFunctions__ = [];\n    }\n    /**\n     protected getFieldKey() {\n        let rootEntityPrefix = columnAliases.entityAliases.getExistingAlias(this.parentQ.getRootJoinEntity());\n        let key = `${relationManager.getPositionAlias(rootEntityPrefix, this.parentQ.fromClausePosition)}.${this.fieldName}`;\n        return key;\n    }\n     */\n    applySqlFunction(sqlFunctionCall) {\n        let appliedField = this.getInstance();\n        appliedField.__appliedFunctions__.push(sqlFunctionCall);\n        return appliedField;\n    }\n    toJSON(columnAliases, forSelectClause, queryUtils, fieldUtils, relationManager) {\n        let alias;\n        if (forSelectClause) {\n            alias = columnAliases.getNextAlias(this);\n        }\n        let rootEntityPrefix;\n        if (this.__fieldSubQuery__) {\n            rootEntityPrefix = columnAliases.entityAliases.getOnlyAlias();\n        }\n        else {\n            rootEntityPrefix = columnAliases.entityAliases.getExistingAlias(this.q.__driver__.getRootJoinEntity());\n        }\n        let jsonField = {\n            appliedFunctions: this.appliedFunctionsToJson(this.__appliedFunctions__, columnAliases, queryUtils, fieldUtils, relationManager),\n            si: this.dbProperty.entity.applicationVersion.id,\n            ti: this.dbProperty.entity.index,\n            fa: alias,\n            pi: this.dbProperty.index,\n            ci: this.dbColumn.index,\n            ta: relationManager.getPositionAlias(rootEntityPrefix, this.q.__driver__.fromClausePosition),\n            ot: this.objectType,\n            dt: this.dbColumn.type\n        };\n        if (this.__fieldSubQuery__) {\n            jsonField.fieldSubQuery = fieldUtils.getFieldQueryJson(this.__fieldSubQuery__, columnAliases.entityAliases, queryUtils);\n            jsonField.ot = JSONClauseObjectType.FIELD_QUERY;\n        }\n        return jsonField;\n    }\n    asc() {\n        return new FieldInOrderBy(this, SortOrder.ASCENDING);\n    }\n    desc() {\n        return new FieldInOrderBy(this, SortOrder.DESCENDING);\n    }\n    addSubQuery(subQuery) {\n        let appliedField = this.getInstance();\n        appliedField.__fieldSubQuery__ = subQuery;\n        return appliedField;\n    }\n    operableFunctionToJson(functionObject, columnAliases, forSelectClause, queryUtils, fieldUtils, relationManager) {\n        let alias;\n        if (forSelectClause) {\n            alias = columnAliases.getNextAlias(this);\n        }\n        return {\n            appliedFunctions: this.appliedFunctionsToJson(this.__appliedFunctions__, columnAliases, queryUtils, fieldUtils, relationManager),\n            fa: alias,\n            ot: this.objectType,\n            dt: this.dbColumn.type,\n            v: this.valueToJSON(functionObject, columnAliases, false, true, queryUtils, fieldUtils, relationManager)\n        };\n    }\n    copyFunctions(field) {\n        field.__appliedFunctions__ = this.__appliedFunctions__.slice();\n        return field;\n    }\n    appliedFunctionsToJson(appliedFunctions, columnAliases, queryUtils, fieldUtils, relationManager) {\n        if (!appliedFunctions) {\n            return appliedFunctions;\n        }\n        return appliedFunctions.map((appliedFunction) => {\n            return this.functionCallToJson(appliedFunction, columnAliases, queryUtils, fieldUtils, relationManager);\n        });\n    }\n    functionCallToJson(functionCall, columnAliases, queryUtils, fieldUtils, relationManager) {\n        let parameters;\n        if (functionCall.p) {\n            parameters = functionCall.p.map((parameter) => {\n                return this.valueToJSON(parameter, columnAliases, false, false, queryUtils, fieldUtils, relationManager);\n            });\n        }\n        return {\n            ft: functionCall.ft,\n            p: parameters\n        };\n    }\n    valueToJSON(functionObject, columnAliases, forSelectClause, fromFunctionObject, queryUtils, fieldUtils, relationManager) {\n        if (!functionObject) {\n            throw new Error(`Function object must be provided to valueToJSON function.`);\n        }\n        if (!fromFunctionObject && functionObject instanceof QField) {\n            return functionObject.toJSON(columnAliases, forSelectClause, queryUtils, fieldUtils, relationManager);\n        }\n        let value = functionObject.value;\n        switch (typeof value) {\n            case 'boolean':\n            case 'number':\n            case 'string':\n                return columnAliases.entityAliases.getParams()\n                    .getNextAlias(functionObject);\n            case 'object':\n                if (value instanceof Date) {\n                    return columnAliases.entityAliases.getParams()\n                        .getNextAlias(functionObject);\n                }\n                else if (value instanceof Array) {\n                    return columnAliases.entityAliases.getParams()\n                        .getNextAlias(functionObject);\n                }\n                else if (value === null) {\n                    return columnAliases.entityAliases.getParams()\n                        .getNextAlias(functionObject);\n                }\n                else {\n                    throw new Error(`Unexpected query parameter type allowed types are:\r\nboolean | Date | Date[] | number | number[] | string | string[]\r\n`);\n                }\n            case 'undefined':\n                throw new Error(`Undefined is not allowed as a query parameter`);\n            default:\n                throw new Error(`Unexpected query parameter type allowed types are:\r\nboolean | Date | Date[] | number | number[] | string | string[]\r\n`);\n        }\n        // TODO: this never gets called, is this needed?\n        /*\n        if (value === null || value instanceof Date) {\n            return columnAliases.entityAliases.getParams()\n                .getNextAlias(functionObject as IQFunction<any>)\n        }\n        if (value instanceof QField) {\n            return value.toJSON(columnAliases, forSelectClause, queryUtils, fieldUtils, relationManager)\n        }\n        // must be a field sub-query\n        let rawFieldQuery: RawFieldQuery<any> = value\n        return fieldUtils.getFieldQueryJson(\n            rawFieldQuery, columnAliases.entityAliases, queryUtils)\n         */\n    }\n}\n//# sourceMappingURL=Field.js.map","import { QField } from \"./Field\";\n/**\n * Created by Papa on 10/25/2016.\n */\nexport class QOperableField extends QField {\n    constructor(dbColumn, dbProperty, q, objectType, operation) {\n        super(dbColumn, dbProperty, q, objectType);\n        this.operation = operation;\n    }\n    equals(value) {\n        if (value instanceof Function) {\n            value = value();\n        }\n        return this.operation.equals(this, value);\n    }\n    greaterThan(value) {\n        if (value instanceof Function) {\n            value = value();\n        }\n        return this.operation.greaterThan(this, value);\n    }\n    greaterThanOrEquals(value) {\n        if (value instanceof Function) {\n            value = value();\n        }\n        return this.operation.greaterThanOrEquals(this, value);\n    }\n    isNotNull() {\n        return this.operation.isNotNull(this);\n    }\n    isNull() {\n        return this.operation.isNull(this);\n    }\n    in(value) {\n        if (value instanceof Function) {\n            value = value();\n        }\n        return this.operation.in(this, value);\n    }\n    lessThan(value) {\n        if (value instanceof Function) {\n            value = value();\n        }\n        return this.operation.lessThan(this, value);\n    }\n    lessThanOrEquals(value) {\n        if (value instanceof Function) {\n            value = value();\n        }\n        return this.operation.lessThanOrEquals(this, value);\n    }\n    notEquals(value) {\n        if (value instanceof Function) {\n            value = value();\n        }\n        return this.operation.notEquals(this, value);\n    }\n    notIn(values) {\n        values = values.map((value) => {\n            if (value instanceof Function) {\n                return value();\n            }\n            return value;\n        });\n        return this.operation.notIn(this, values);\n    }\n}\n//# sourceMappingURL=OperableField.js.map","import { JSONClauseObjectType, SQLDataType } from '@airport/ground-control';\nimport { BooleanOperation } from '../operation/BooleanOperation';\nimport { QOperableField } from './OperableField';\nexport class QBooleanField extends QOperableField {\n    constructor(dbColumn, dbProperty, q, objectType = JSONClauseObjectType.FIELD) {\n        super(dbColumn, dbProperty, q, objectType, new BooleanOperation());\n    }\n    getInstance(qEntity = this.q) {\n        return this.copyFunctions(new QBooleanField(this.dbColumn, this.dbProperty, qEntity, this.objectType));\n    }\n}\nexport class QBooleanFunction extends QBooleanField {\n    constructor(value, isQueryParameter = false) {\n        super({ type: SQLDataType.BOOLEAN }, null, null, JSONClauseObjectType.FIELD_FUNCTION);\n        this.value = value;\n        this.isQueryParameter = isQueryParameter;\n    }\n    getInstance() {\n        return this.copyFunctions(new QBooleanFunction(this.value));\n    }\n    toJSON(columnAliases, forSelectClause, queryUtils, fieldUtils, relationManager) {\n        let json = this.operableFunctionToJson(this, columnAliases, forSelectClause, queryUtils, fieldUtils, relationManager);\n        if (this.isQueryParameter) {\n            this.parameterAlias = json.v;\n        }\n        return json;\n    }\n}\n//# sourceMappingURL=BooleanField.js.map","import { OperationCategory } from \"@airport/ground-control\";\nimport { ValueOperation } from \"./Operation\";\n/**\n * Created by Papa on 6/20/2016.\n */\nexport class DateOperation extends ValueOperation {\n    constructor() {\n        super(OperationCategory.DATE);\n    }\n}\n//# sourceMappingURL=DateOperation.js.map","import { JSONClauseObjectType, SQLDataType } from '@airport/ground-control';\nimport { DateOperation } from '../operation/DateOperation';\nimport { QOperableField } from './OperableField';\nexport class QDateField extends QOperableField {\n    constructor(dbColumn, dbProperty, q, objectType = JSONClauseObjectType.FIELD) {\n        super(dbColumn, dbProperty, q, objectType, new DateOperation());\n    }\n    getInstance(qEntity = this.q) {\n        return this.copyFunctions(new QDateField(this.dbColumn, this.dbProperty, qEntity, this.objectType));\n    }\n}\nexport class QDateFunction extends QDateField {\n    constructor(value, isQueryParameter = false) {\n        super({ type: SQLDataType.DATE }, null, null, JSONClauseObjectType.FIELD_FUNCTION);\n        this.value = value;\n        this.isQueryParameter = isQueryParameter;\n    }\n    getInstance() {\n        return this.copyFunctions(new QDateFunction(this.value, this.isQueryParameter));\n    }\n    toJSON(columnAliases, forSelectClause, queryUtils, fieldUtils, relationManager) {\n        let json = this.operableFunctionToJson(this, columnAliases, forSelectClause, queryUtils, fieldUtils, relationManager);\n        if (this.isQueryParameter) {\n            this.parameterAlias = json.v;\n        }\n        return json;\n    }\n}\nexport class QDateArrayFunction extends QDateFunction {\n    constructor(value, isQueryParameter) {\n        super(value, isQueryParameter);\n        this.value = value;\n    }\n    getInstance() {\n        return this.copyFunctions(new QDateArrayFunction(this.value, this.isQueryParameter));\n    }\n}\n//# sourceMappingURL=DateField.js.map","import { OperationCategory } from \"@airport/ground-control\";\nimport { ValueOperation } from \"./Operation\";\n/**\n * Created by Papa on 6/20/2016.\n */\nexport class NumberOperation extends ValueOperation {\n    constructor() {\n        super(OperationCategory.NUMBER);\n    }\n}\n//# sourceMappingURL=NumberOperation.js.map","import { JSONClauseObjectType, SQLDataType } from '@airport/ground-control';\nimport { NumberOperation } from '../operation/NumberOperation';\nimport { QOperableField } from './OperableField';\nexport class QNumberField extends QOperableField {\n    constructor(dbColumn, dbProperty, q, objectType = JSONClauseObjectType.FIELD) {\n        super(dbColumn, dbProperty, q, objectType, new NumberOperation());\n    }\n    getInstance(qEntity = this.q) {\n        return this.copyFunctions(new QNumberField(this.dbColumn, this.dbProperty, qEntity, this.objectType));\n    }\n}\nexport class QNumberFunction extends QNumberField {\n    constructor(value, isQueryParameter = false) {\n        super({ type: SQLDataType.NUMBER }, null, null, JSONClauseObjectType.FIELD_FUNCTION);\n        this.value = value;\n        this.isQueryParameter = isQueryParameter;\n    }\n    getInstance() {\n        return this.copyFunctions(new QNumberFunction(this.value, this.isQueryParameter));\n    }\n    toJSON(columnAliases, forSelectClause, queryUtils, fieldUtils, relationManager) {\n        let json = this.operableFunctionToJson(this, columnAliases, forSelectClause, queryUtils, fieldUtils, relationManager);\n        if (this.isQueryParameter) {\n            this.parameterAlias = json.v;\n        }\n        return json;\n    }\n}\nexport class QNumberArrayFunction extends QNumberFunction {\n    constructor(value, isQueryParameter) {\n        super(value, isQueryParameter);\n        this.value = value;\n    }\n    getInstance() {\n        return this.copyFunctions(new QNumberArrayFunction(this.value, this.isQueryParameter));\n    }\n}\n//# sourceMappingURL=NumberField.js.map","import { OperationCategory, SqlOperator } from \"@airport/ground-control\";\nimport { ValueOperation } from \"./Operation\";\n/**\n * Created by Papa on 6/20/2016.\n */\nexport class StringOperation extends ValueOperation {\n    constructor() {\n        super(OperationCategory.STRING);\n    }\n    like(lValue, rValue\n    // TODO: implement ReqExp\n    //| RegExp\n    ) {\n        return {\n            c: this.category,\n            l: lValue,\n            o: SqlOperator.LIKE,\n            r: rValue\n        };\n    }\n}\n//# sourceMappingURL=StringOperation.js.map","import { JSONClauseObjectType, SQLDataType } from '@airport/ground-control';\nimport { StringOperation } from '../operation/StringOperation';\nimport { QOperableField } from './OperableField';\nexport class QStringField extends QOperableField {\n    constructor(dbColumn, dbProperty, q, objectType = JSONClauseObjectType.FIELD) {\n        super(dbColumn, dbProperty, q, objectType, new StringOperation());\n    }\n    getInstance(qEntity = this.q) {\n        return this.copyFunctions(new QStringField(this.dbColumn, this.dbProperty, qEntity, this.objectType));\n    }\n    like(value) {\n        if (value instanceof Function) {\n            value = value();\n        }\n        return this.operation.like(this, value);\n    }\n}\nexport class QStringFunction extends QStringField {\n    constructor(value, isQueryParameter = false) {\n        super({ type: SQLDataType.STRING }, null, null, JSONClauseObjectType.FIELD_FUNCTION);\n        this.value = value;\n        this.isQueryParameter = isQueryParameter;\n    }\n    getInstance() {\n        return this.copyFunctions(new QStringFunction(this.value, this.isQueryParameter));\n    }\n    toJSON(columnAliases, forSelectClause, queryUtils, fieldUtils, relationManager) {\n        let json = this.operableFunctionToJson(this, columnAliases, forSelectClause, queryUtils, fieldUtils, relationManager);\n        if (this.isQueryParameter) {\n            this.parameterAlias = json.v;\n        }\n        return json;\n    }\n}\nexport class QStringArrayFunction extends QStringFunction {\n    constructor(value, isQueryParameter) {\n        super(value, isQueryParameter);\n        this.value = value;\n    }\n    getInstance() {\n        return this.copyFunctions(new QStringArrayFunction(this.value, this.isQueryParameter));\n    }\n}\n//# sourceMappingURL=StringField.js.map","import { OperationCategory, SqlOperator } from \"@airport/ground-control\";\nimport { ValueOperation } from \"./Operation\";\n/**\n * Created by papa on 7/13/17.\n */\nexport class UntypedOperation extends ValueOperation {\n    constructor() {\n        super(OperationCategory.UNTYPED);\n    }\n    like(lValue, rValue\n    // TODO: implement ReqExp\n    //| RegExp\n    ) {\n        return {\n            c: this.category,\n            l: lValue,\n            o: SqlOperator.LIKE,\n            r: rValue\n        };\n    }\n}\n//# sourceMappingURL=UntypedOperation.js.map","import { JSONClauseObjectType } from '@airport/ground-control';\nimport { UntypedOperation } from '../operation/UntypedOperation';\nimport { QOperableField } from './OperableField';\nexport class QUntypedField extends QOperableField {\n    constructor(dbColumn, dbProperty, q, objectType = JSONClauseObjectType.FIELD) {\n        super(dbColumn, dbProperty, q, objectType, new UntypedOperation());\n    }\n    getInstance(qEntity = this.q) {\n        return this.copyFunctions(new QUntypedField(this.dbColumn, this.dbProperty, qEntity, this.objectType));\n    }\n    like(value) {\n        if (value instanceof Function) {\n            value = value();\n        }\n        return this.operation.like(this, value);\n    }\n}\nexport class QUntypedFunction extends QUntypedField {\n    constructor(value, isQueryParameter = false) {\n        // super(<any>{type: SQLDataType.ANY}, null, null, JSONClauseObjectType.FIELD_FUNCTION)\n        super({ type: null }, null, null, JSONClauseObjectType.FIELD_FUNCTION);\n        this.value = value;\n        this.isQueryParameter = isQueryParameter;\n        throw new Error(`Untyped data type is not supported`);\n    }\n    getInstance() {\n        return this.copyFunctions(new QUntypedFunction(this.value));\n    }\n    toJSON(columnAliases, forSelectClause, queryUtils, fieldUtils, relationManager) {\n        let json = this.operableFunctionToJson(this, columnAliases, forSelectClause, queryUtils, fieldUtils, relationManager);\n        if (this.isQueryParameter) {\n            this.parameterAlias = json.v;\n        }\n        return json;\n    }\n}\n//# sourceMappingURL=UntypedField.js.map","import { EntityRelationType, SQLDataType } from '@airport/ground-control';\nimport { QEntity } from '../core/entity/Entity';\nimport { QOneToManyRelation, QRepositoryEntityOneToManyRelation } from '../core/entity/OneToManyRelation';\nimport { QRelation, QRepositoryEntityRelation } from '../core/entity/Relation';\nimport { QBooleanField } from '../core/field/BooleanField';\nimport { QDateField } from '../core/field/DateField';\nimport { QNumberField } from '../core/field/NumberField';\nimport { QStringField } from '../core/field/StringField';\nimport { QUntypedField } from '../core/field/UntypedField';\n/**\n * From:\n * http://js-bits.blogspot.com/2010/08/javascript-inheritance-done-right.html\n * Via:\n * https://stackoverflow.com/questions/6617780/how-to-call-parent-constructor\n */\nexport function extend(base, sub, methods) {\n    sub.prototype = Object.create(base.prototype);\n    sub.prototype.constructor = sub;\n    sub.base = base.prototype;\n    // Copy the methods passed in to the prototype\n    for (const name in methods) {\n        sub.prototype[name] = methods[name];\n    }\n    // so we can define the constructor inline\n    return sub;\n}\nexport function getColumnQField(entity, property, q, column) {\n    switch (column.type) {\n        case SQLDataType.ANY:\n            return new QUntypedField(column, property, q);\n        case SQLDataType.BOOLEAN:\n            return new QBooleanField(column, property, q);\n        case SQLDataType.DATE:\n            return new QDateField(column, property, q);\n        case SQLDataType.NUMBER:\n            return new QNumberField(column, property, q);\n        case SQLDataType.JSON:\n        case SQLDataType.STRING:\n            return new QStringField(column, property, q);\n        default:\n            throw new Error(`Unsupported data type for property ${entity.applicationVersion.application.name}.${entity.name}.${property.name}`);\n    }\n}\nexport function getQRelation(entity, property, q, allQApplications, applicationUtils, relationManager) {\n    const relation = property.relation[0];\n    switch (relation.relationType) {\n        case EntityRelationType.MANY_TO_ONE:\n            const relationEntity = relation.relationEntity;\n            const relationApplication = relationEntity.applicationVersion.application;\n            const qIdRelationConstructor = allQApplications[relationApplication.index]\n                .__qIdRelationConstructors__[relationEntity.index];\n            // return new qIdRelationConstructor(relationEntity, property, q)\n            return new qIdRelationConstructor(relation.relationEntity, relation, q);\n        case EntityRelationType.ONE_TO_MANY:\n            if (entity.isRepositoryEntity) {\n                return new QRepositoryEntityOneToManyRelation(relation, q, applicationUtils, relationManager);\n            }\n            else {\n                return new QOneToManyRelation(relation, q, applicationUtils, relationManager);\n            }\n        default:\n            throw new Error(`Unknown EntityRelationType: ${relation.relationType}.`);\n    }\n}\nexport function getQEntityConstructor(allQApplications) {\n    // ChildQEntity refers to the constructor\n    var ChildQEntity = function (entity, applicationUtils, relationManager, nextChildJoinPosition, dbRelation, joinType) {\n        ChildQEntity.base.constructor.call(this, entity, nextChildJoinPosition, dbRelation, joinType);\n        entity.properties.forEach((property) => {\n            let qFieldOrRelation;\n            if (property.relation && property.relation.length) {\n                qFieldOrRelation = getQRelation(entity, property, this, allQApplications, applicationUtils, relationManager);\n                for (const propertyColumn of property.propertyColumns) {\n                    addColumnQField(entity, property, this, propertyColumn.column);\n                }\n            }\n            else {\n                qFieldOrRelation = addColumnQField(entity, property, this, property.propertyColumns[0].column);\n            }\n            this[property.name] = qFieldOrRelation;\n        });\n        // entity.__qConstructor__ = ChildQEntity\n    };\n    extend(QEntity, ChildQEntity, {});\n    return ChildQEntity;\n}\nexport function addColumnQField(entity, property, q, column) {\n    const qFieldOrRelation = getColumnQField(entity, property, q, column);\n    q.__driver__.allColumns[column.index]\n        = qFieldOrRelation;\n    if (column.idIndex || column.idIndex === 0) {\n        q.__driver__.idColumns[column.idIndex]\n            = qFieldOrRelation;\n    }\n    return qFieldOrRelation;\n}\nexport function getQEntityIdRelationConstructor(dbEntity) {\n    function QEntityIdRelation(entity, relation, qEntity) {\n        QEntityIdRelation.base.constructor.call(this, relation, qEntity);\n        getQEntityIdFields(this, entity, qEntity, relation.property);\n        // (<any>entity).__qConstructor__.__qIdRelationConstructor__ = QEntityIdRelation\n    }\n    if (dbEntity.isRepositoryEntity) {\n        extend(QRepositoryEntityRelation, QEntityIdRelation, {});\n    }\n    else {\n        extend(QRelation, QEntityIdRelation, {});\n    }\n    return QEntityIdRelation;\n}\n/**\n * Set all fields behind an id relation.  For example\n *\n * QA.id\n *\n * or\n *\n * QA.rel1.id\n *\n * or\n *\n * QA.rel2.otherRel.id\n * QA.rel2.id\n *\n * @param addToObject  Object to add to (Ex: QA | QA.rel1 | QA.rel2.otherRel\n * @param relationEntity  Entity to which the fields belong (Ex: QA, QRel1, QRel2, QOtherRel)\n * @param utils\n * @param parentProperty  The parent property from which the current property was\n *    navigated to\n * @param relationColumnMap  DbColumn map for the current path of properties\n *  (QA.rel2.otherRel), keyed by the column from the One side of the relation\n */\nexport function getQEntityIdFields(addToObject, relationEntity, qEntity, parentProperty, relationColumnMap) {\n    if (!relationColumnMap) {\n        const parentRelation = parentProperty.relation[0];\n        const relationColumns = parentRelation.manyRelationColumns;\n        relationColumnMap = new Map();\n        for (const relationColumn of relationColumns) {\n            relationColumnMap.set(relationColumn.oneColumn, relationColumn.manyColumn);\n        }\n    }\n    relationEntity.properties.forEach((property) => {\n        if (!property.isId) {\n            return;\n        }\n        let qFieldOrRelation;\n        // If it's a relation property (and therefore has backing columns)\n        if (property.relation && property.relation.length) {\n            const relation = property.relation[0];\n            const relationColumns = relation.manyRelationColumns;\n            for (const relationColumn of relationColumns) {\n                const originalColumn = relationColumnMap.get(relationColumn.manyColumn);\n                // Remove the mapping of the parent relation\n                relationColumnMap.delete(relationColumn.manyColumn);\n                // And replace it with the nested relation\n                relationColumnMap.set(relationColumn.oneColumn, originalColumn);\n            }\n            qFieldOrRelation = getQEntityIdFields({}, relation.relationEntity, qEntity, parentProperty, relationColumnMap);\n        }\n        else {\n            const originalColumn = relationColumnMap.get(property.propertyColumns[0].column);\n            qFieldOrRelation = getColumnQField(relationEntity, parentProperty, qEntity, originalColumn);\n        }\n        addToObject[property.name] = qFieldOrRelation;\n    });\n    return addToObject;\n}\nexport function setQApplicationEntities(application, qApplication, allQApplications) {\n    // const entities = orderEntitiesByIdDependencies(application.currentVersion[0].applicationVersion.entities,\n    // application)\n    qApplication.__qIdRelationConstructors__ = [];\n    qApplication.__qConstructors__ = {};\n    // let haveMissingDependencies\n    // do {\n    // \thaveMissingDependencies = false\n    // NOTE: only need to compute the keys of entities for Many-to-One(s)\n    // Many-to-Ones must reference the table by primary key in order to\n    // guarantee a single record.  Any other type of join may return multiple\n    // records and is in fact a Many-to-Many\n    application.currentVersion[0].applicationVersion.entities.forEach((\n    // entities.forEach((\n    entity) => {\n        // NOTE: an @Id column is guaranteed to be present in only one property\n        for (const idColumn of entity.idColumns) {\n            if (idColumn.manyRelationColumns\n                && idColumn.manyRelationColumns.length) {\n                const oneColumn = idColumn.manyRelationColumns[0].oneColumn;\n                const relatedEntity = oneColumn.entity;\n                const relatedQApplication = allQApplications[relatedEntity.applicationVersion.application.index];\n                if (!relatedQApplication) {\n                    throw new Error(`QApplication not yet initialized for ID relation:\r\n\t\t\t\t\t${entity.name}.${oneColumn.name}\r\n\t\t\t\t\t`);\n                }\n                // const manyColumn = idColumn.manyRelationColumns[0].manyColumn\n                // if (relatedEntity.id === manyColumn.entity.id\n                // \t&& relatedEntity.applicationVersion.application.index\n                // \t=== manyColumn.entity.applicationVersion.application.index) {\n                // \tcontinue\n                // }\n                // const relatedQEntityConstructor =\n                // qApplication.__qConstructors__[relatedEntity.index] if (!relatedQEntityConstructor)\n                // { throw new Error(`QEntity not yet initialized for ID relation:\n                // ${entity.name}.${manyColumn.name} `) haveMissingDependencies = true }\n            }\n        }\n        const qIdRelationConstructor = getQEntityIdRelationConstructor(entity);\n        qApplication.__qIdRelationConstructors__[entity.index] = qIdRelationConstructor;\n        // TODO: compute many-to-many relations\n        const qConstructor = getQEntityConstructor(allQApplications);\n        qApplication.__qConstructors__[entity.index] = qConstructor;\n        if (!Object.getOwnPropertyNames(qApplication)\n            .filter(propertyName => propertyName === entity.name).length) {\n            Object.defineProperty(qApplication, entity.name, {\n                get: function () {\n                    return new this.__qConstructors__[entity.index](entity);\n                }\n            });\n        }\n    });\n    // } while (haveMissingDependencies)\n}\nexport function orderApplicationsInOrderOfPrecedence(applications) {\n    const applicationWithDepsMap = new Map();\n    const applicationsWithDeps = applications.map(application => {\n        const dependencies = new Set();\n        for (const applicationReference of application.currentVersion[0]\n            .applicationVersion.references) {\n            dependencies.add(applicationReference.referencedApplicationVersion.application.index);\n        }\n        const applicationWithDependencies = {\n            application,\n            dependencies\n        };\n        applicationWithDepsMap.set(application.index, applicationWithDependencies);\n        return applicationWithDependencies;\n    });\n    applicationsWithDeps.sort((orderedApplication1, orderedApplication2) => {\n        if (applicationDependsOn(orderedApplication1, orderedApplication2.application.index, applicationWithDepsMap)) {\n            return 1;\n        }\n        else if (applicationDependsOn(orderedApplication2, orderedApplication1.application.index, applicationWithDepsMap)) {\n            return -1;\n        }\n        return 0;\n    });\n    return applicationsWithDeps.map(applicationWithDeps => applicationWithDeps.application);\n}\nexport function applicationDependsOn(dependantApplication, dependsOnApplicationIndex, applicationWithDepsMap) {\n    if (dependantApplication.dependencies.has(dependsOnApplicationIndex)) {\n        return true;\n    }\n    // for(const dependencyApplicationIndex of dependantApplication.dependencies) {\n    //\n    // }\n    return false;\n}\n//# sourceMappingURL=qApplicationBuilderUtils.js.map","import { extend } from '../../utils/qApplicationBuilderUtils';\nimport { QRelation, QRepositoryEntityRelation } from './Relation';\n/**\n * Created by Papa on 10/25/2016.\n */\n/*\n * Cannot use 'class' syntax because it brakes dynamic creation of subclasses.\n * With 'class' browser reports:\n *   Class constructor QRelation cannot be invoked without 'new'\n * When calling:\n *   Q...Relation.base.constructor.call(this, relation, qEntity)\n */\nexport function QOneToManyRelation(dbRelation, parentQ, applicationUtils, repationManager) {\n    QOneToManyRelation.base.constructor.call(this, dbRelation, parentQ, applicationUtils, repationManager);\n}\nextend(QRelation, QOneToManyRelation, {});\nexport function QRepositoryEntityOneToManyRelation(dbRelation, parentQ, applicationUtils, repationManager) {\n    QRepositoryEntityOneToManyRelation.base.constructor.call(this, dbRelation, parentQ, applicationUtils, repationManager);\n}\nextend(QRepositoryEntityRelation, QRepositoryEntityOneToManyRelation, {});\n//# sourceMappingURL=OneToManyRelation.js.map","import { JSONClauseObjectType } from '@airport/ground-control';\nimport { QField } from './Field';\n/**\n * Created by Papa on 11/29/2016.\n */\nexport class QNullFunction extends QField {\n    constructor() {\n        super(null, null, null, JSONClauseObjectType.FIELD_FUNCTION);\n        this.value = null;\n    }\n    getInstance() {\n        return this.copyFunctions(new QNullFunction());\n    }\n    toJSON(columnAliases, forSelectClause, queryUtils, fieldUtils, relationManager) {\n        return this.operableFunctionToJson(this, columnAliases, forSelectClause, queryUtils, fieldUtils, relationManager);\n    }\n}\n//# sourceMappingURL=NullFunction.js.map","import { SQLDataType } from '@airport/ground-control';\nimport { QBooleanFunction } from './BooleanField';\nimport { QDateFunction } from './DateField';\nimport { QNullFunction } from './NullFunction';\nimport { QNumberFunction } from './NumberField';\nimport { QStringFunction } from './StringField';\n/**\n * Created by Papa on 12/31/2016.\n */\nexport const bool = function (primitive) {\n    if (typeof primitive !== 'boolean') {\n        throw new Error(`bool() accepts booleans only.`);\n    }\n    return new QBooleanFunction(primitive);\n};\nexport const date = function (primitive) {\n    if (!(primitive instanceof Date)) {\n        throw new Error(`date() accepts Dates only.`);\n    }\n    return new QDateFunction(primitive);\n};\nexport const num = function (primitive) {\n    if (typeof primitive !== 'number') {\n        throw new Error(`num() accepts numbers only.`);\n    }\n    return new QNumberFunction(primitive);\n};\nexport const str = function (primitive) {\n    if (typeof primitive !== 'string') {\n        throw new Error(`str() accepts strings only.`);\n    }\n    return new QStringFunction(primitive);\n};\nexport function wrapPrimitive(value) {\n    switch (typeof value) {\n        case 'boolean':\n            return bool(value);\n        case 'number':\n            return num(value);\n        case 'string':\n            return str(value);\n        case 'undefined':\n            throw new Error(`Cannot use an 'undefined' value in an operation.`);\n    }\n    if (value === null) {\n        return new QNullFunction();\n    }\n    if (value instanceof Date) {\n        return date(value);\n    }\n    return value;\n}\nexport function getPrimitiveValue(value, dbColumn, rowIndex, datesToNumbers = true) {\n    switch (dbColumn.type) {\n        case SQLDataType.ANY: {\n            assertDataType([\n                'boolean', 'number', 'object', 'string'\n            ], dbColumn, rowIndex, value);\n            break;\n        }\n        case SQLDataType.BOOLEAN: {\n            assertDataType([\n                'boolean'\n            ], dbColumn, rowIndex, value);\n            break;\n        }\n        case SQLDataType.DATE: {\n            assertDataType([\n                'number', 'object'\n            ], dbColumn, rowIndex, value);\n            break;\n        }\n        case SQLDataType.JSON: {\n            assertDataType([\n                'object'\n            ], dbColumn, rowIndex, value);\n            break;\n        }\n        case SQLDataType.NUMBER: {\n            assertDataType([\n                'number'\n            ], dbColumn, rowIndex, value);\n            break;\n        }\n        case SQLDataType.STRING: {\n            assertDataType([\n                'string'\n            ], dbColumn, rowIndex, value);\n            break;\n        }\n        default:\n            throw new Error('Unexpected SQLDataType: ' + dbColumn.type);\n    }\n    switch (typeof value) {\n        case 'boolean':\n            return value ? 1 : 0;\n        case 'number':\n        case 'string':\n            // FIXME: prevent SQL injection\n            return value;\n        case 'object': {\n            if (value === null) {\n                return value;\n            }\n            if (value instanceof Date) {\n                if (dbColumn.type !== SQLDataType.DATE) {\n                    throw new Error(`Unexpected Date object for row: ${rowIndex + 1}, column: ${getColumnName(dbColumn)}`);\n                }\n                return datesToNumbers ? value.getTime() : value;\n            }\n            else {\n                if (dbColumn.type !== SQLDataType.JSON) {\n                    throw new Error(`Unexpected Json object for row: ${rowIndex + 1}, column: ${getColumnName(dbColumn)}`);\n                }\n                return JSON.stringify(value);\n            }\n        }\n        case 'undefined':\n            throw new Error(`Cannot use an 'undefined' value in an operation.`);\n        default:\n            throw new Error(`Unexpected object in operation.`);\n    }\n}\nfunction assertDataType(typesOfData, dbColumn, rowIndex, value) {\n    if (typesOfData.indexOf(typeof value) < -1) {\n        const expectedDataTypes = typesOfData.join(', ');\n        throw new Error(`Unexpected typeof value for row: ${rowIndex + 1}, column: ${getColumnName(dbColumn)}.  Expecting: ${expectedDataTypes}`);\n    }\n}\nfunction getColumnName(dbColumn) {\n    return dbColumn.name\n        ? dbColumn.name\n        : dbColumn.propertyColumns[0].property.name;\n}\n//# sourceMappingURL=WrapperFunctions.js.map","import { JSONClauseObjectType, OperationCategory, SQLDataType, SqlFunction, SqlOperator } from '@airport/ground-control';\nimport { QBooleanField, QBooleanFunction } from './BooleanField';\nimport { QDateField, QDateFunction } from './DateField';\nimport { QNumberField, QNumberFunction } from './NumberField';\nimport { QOperableField } from './OperableField';\nimport { QStringField, QStringFunction } from './StringField';\nimport { bool, date, num, str } from './WrapperFunctions';\nfunction getSqlFunctionCall(sqlFunction, parameters) {\n    if (parameters) {\n        parameters = parameters.map((parameter) => {\n            switch (typeof parameter) {\n                case 'boolean':\n                    return bool(parameter);\n                case 'number':\n                    return num(parameter);\n                case 'string':\n                    return str(parameter);\n                case 'undefined':\n                    throw new Error(`'undefined' cannot be used as a function parameter`);\n            }\n            if (parameter instanceof Date) {\n                return date(parameter);\n            }\n            return parameter;\n        });\n    }\n    return {\n        ft: sqlFunction,\n        p: parameters\n    };\n}\nexport const abs = function (numeric) {\n    if (numeric instanceof QNumberField) {\n        return numeric.applySqlFunction(getSqlFunctionCall(SqlFunction.AVG));\n    }\n    else {\n        return new QNumberFunction(numeric).applySqlFunction(getSqlFunctionCall(SqlFunction.ABS));\n    }\n};\nexport const avg = function (numeric) {\n    if (numeric instanceof QNumberField) {\n        return numeric.applySqlFunction(getSqlFunctionCall(SqlFunction.AVG));\n    }\n    else {\n        return new QNumberFunction(numeric).applySqlFunction(getSqlFunctionCall(SqlFunction.AVG));\n    }\n};\nexport function getFunctionObject(value) {\n    switch (typeof value) {\n        case 'boolean':\n            return new QBooleanFunction(value);\n        case 'number':\n            return new QNumberFunction(value);\n        case 'string':\n            return new QStringFunction(value);\n    }\n    if (value instanceof Date) {\n        return new QDateFunction(value);\n    }\n    let selectClause = value.select;\n    if (selectClause instanceof QDistinctFunction) {\n        selectClause = selectClause.getSelectClause();\n    }\n    if (selectClause instanceof QBooleanField) {\n        return new QBooleanFunction(value);\n    }\n    else if (selectClause instanceof QDateField) {\n        return new QDateFunction(value);\n    }\n    else if (selectClause instanceof QNumberField) {\n        return new QNumberFunction(value);\n    }\n    else if (selectClause instanceof QStringField) {\n        return new QStringFunction(value);\n    }\n    throw new Error(`Function rValue must be a primitive, Date, Field or Field query`);\n}\nexport const count = function (value) {\n    if (value instanceof QOperableField) {\n        return value.applySqlFunction(getSqlFunctionCall(SqlFunction.COUNT));\n    }\n    else {\n        return getFunctionObject(value)\n            .applySqlFunction(getSqlFunctionCall(SqlFunction.COUNT));\n    }\n};\nexport const max = function (value) {\n    if (value instanceof QOperableField) {\n        return value.applySqlFunction(getSqlFunctionCall(SqlFunction.MAX));\n    }\n    else {\n        return getFunctionObject(value)\n            .applySqlFunction(getSqlFunctionCall(SqlFunction.MAX));\n    }\n};\nexport const min = function (value) {\n    if (value instanceof QOperableField) {\n        return value.applySqlFunction(getSqlFunctionCall(SqlFunction.MIN));\n    }\n    else {\n        return getFunctionObject(value)\n            .applySqlFunction(getSqlFunctionCall(SqlFunction.MIN));\n    }\n};\nexport const sum = function (numeric) {\n    if (numeric instanceof QNumberField) {\n        return numeric.applySqlFunction(getSqlFunctionCall(SqlFunction.SUM));\n    }\n    else {\n        return new QNumberFunction(numeric)\n            .applySqlFunction(getSqlFunctionCall(SqlFunction.SUM));\n    }\n};\nexport const plus = function (numeric1, numeric2) {\n    if (numeric1 instanceof QNumberField) {\n        return numeric1.applySqlFunction(getSqlFunctionCall(SqlFunction.PLUS, [numeric2]));\n    }\n    else {\n        return new QNumberFunction(numeric1)\n            .applySqlFunction(getSqlFunctionCall(SqlFunction.PLUS, [numeric2]));\n    }\n};\nexport function coalesce(...values) {\n    if (!values || !values.length) {\n        throw new Error(`No arguments provided to the coalesce function`);\n    }\n    let dataType;\n    const firstValue = values[0];\n    // if (firstValue instanceof QUntypedField) {\n    // \tdataType = SQLDataType.ANY\n    // } else \n    if (firstValue instanceof QBooleanField || typeof firstValue === 'boolean') {\n        dataType = SQLDataType.BOOLEAN;\n    }\n    else if (firstValue instanceof QDateField || firstValue instanceof Date) {\n        dataType = SQLDataType.DATE;\n    }\n    else if (firstValue instanceof QNumberField || typeof firstValue === 'number') {\n        dataType = SQLDataType.NUMBER;\n    }\n    else if (firstValue instanceof QStringField || typeof firstValue === 'string') {\n        dataType = SQLDataType.STRING;\n    }\n    else {\n        throw new Error(`Unexpected Field Type: ${firstValue.constructor.name}`);\n        // dataType = SQLDataType.ANY\n    }\n    const otherValues = values.slice(1, values.length);\n    if (firstValue instanceof QOperableField) {\n        return firstValue.applySqlFunction(getSqlFunctionCall(SqlFunction.COALESCE, otherValues));\n    }\n    else {\n        switch (dataType) {\n            // case SQLDataType.ANY:\n            // \treturn new QUntypedFunction(<any>firstValue)\n            // \t\t.applySqlFunction(getSqlFunctionCall(SqlFunction.PLUS, otherValues))\n            case SQLDataType.BOOLEAN:\n                return new QBooleanFunction(firstValue)\n                    .applySqlFunction(getSqlFunctionCall(SqlFunction.PLUS, otherValues));\n            case SQLDataType.DATE:\n                return new QDateFunction(firstValue)\n                    .applySqlFunction(getSqlFunctionCall(SqlFunction.PLUS, otherValues));\n            case SQLDataType.NUMBER:\n                return new QNumberFunction(firstValue)\n                    .applySqlFunction(getSqlFunctionCall(SqlFunction.PLUS, otherValues));\n            case SQLDataType.STRING:\n                return new QStringFunction(firstValue)\n                    .applySqlFunction(getSqlFunctionCall(SqlFunction.PLUS, otherValues));\n            default:\n                throw new Error(`Unexpected SQLDataType: ` + dataType);\n        }\n    }\n}\nexport const ucase = function (stringValue) {\n    if (stringValue instanceof QStringField) {\n        return stringValue.applySqlFunction(getSqlFunctionCall(SqlFunction.UCASE));\n    }\n    else {\n        return new QStringFunction(stringValue)\n            .applySqlFunction(getSqlFunctionCall(SqlFunction.UCASE));\n    }\n};\nexport const lcase = function (stringValue) {\n    if (stringValue instanceof QStringField) {\n        return stringValue.applySqlFunction(getSqlFunctionCall(SqlFunction.LCASE));\n    }\n    else {\n        return new QStringFunction(stringValue)\n            .applySqlFunction(getSqlFunctionCall(SqlFunction.LCASE));\n    }\n};\nexport const mid = function (stringValue, start, length) {\n    if (stringValue instanceof QStringField) {\n        return stringValue.applySqlFunction(getSqlFunctionCall(SqlFunction.MID, [start, length]));\n    }\n    else {\n        return new QStringFunction(stringValue)\n            .applySqlFunction(getSqlFunctionCall(SqlFunction.MID, [start, length]));\n    }\n};\nexport const len = function (stringValue) {\n    if (stringValue instanceof QStringField) {\n        return stringValue.applySqlFunction(getSqlFunctionCall(SqlFunction.LEN));\n    }\n    else {\n        return new QStringFunction(stringValue)\n            .applySqlFunction(getSqlFunctionCall(SqlFunction.LEN));\n    }\n};\nexport const round = function (numeric, digits = 0) {\n    if (numeric instanceof QNumberField) {\n        return numeric.applySqlFunction(getSqlFunctionCall(SqlFunction.ROUND, [digits]));\n    }\n    else {\n        return new QNumberFunction(numeric)\n            .applySqlFunction(getSqlFunctionCall(SqlFunction.ROUND, [digits]));\n    }\n};\nexport const now = function () {\n    return new QDateFunction(null)\n        .applySqlFunction(getSqlFunctionCall(SqlFunction.NOW));\n};\nexport const format = function (format, ...formatParameters) {\n    if (format instanceof QStringField) {\n        return format.applySqlFunction(getSqlFunctionCall(SqlFunction.FORMAT, formatParameters));\n    }\n    else {\n        return new QStringFunction(format)\n            .applySqlFunction(getSqlFunctionCall(SqlFunction.FORMAT, formatParameters));\n    }\n};\nexport const replace = function (stringValue, toReplace, replaceWith) {\n    if (stringValue instanceof QStringField) {\n        return stringValue.applySqlFunction(getSqlFunctionCall(SqlFunction.REPLACE, [toReplace, replaceWith]));\n    }\n    else {\n        return new QStringFunction(stringValue)\n            .applySqlFunction(getSqlFunctionCall(SqlFunction.REPLACE, [toReplace, replaceWith]));\n    }\n};\nexport const trim = function (stringField) {\n    if (stringField instanceof QStringField) {\n        return stringField.applySqlFunction(getSqlFunctionCall(SqlFunction.TRIM));\n    }\n    else {\n        return new QStringFunction(stringField)\n            .applySqlFunction(getSqlFunctionCall(SqlFunction.TRIM));\n    }\n};\nexport class StandAloneFunction {\n}\nexport const distinct = function (selectClause) {\n    let distinctFunction = new QDistinctFunction(selectClause);\n    distinctFunction.applySqlFunction(getSqlFunctionCall(SqlFunction.DISTINCT));\n    return distinctFunction;\n};\nexport class QDistinctFunction extends StandAloneFunction {\n    constructor(selectClause) {\n        super();\n        this.selectClause = selectClause;\n        this.__appliedFunctions__ = [];\n    }\n    static getSelect(distinct) {\n        return distinct.__appliedFunctions__[0].p[0];\n    }\n    applySqlFunction(sqlFunctionCall) {\n        this.__appliedFunctions__.push(sqlFunctionCall);\n        return this;\n    }\n    getSelectClause() {\n        return this.selectClause;\n    }\n    toJSON(parsedSelectClause) {\n        if (this.__appliedFunctions__.length != 1) {\n            throw new Error(`Not expecting and parent or child functions on \"distinct\"`);\n        }\n        if (!this.selectClause) {\n            throw new Error(`SELECT clause is missing in \"distinct\" function.`);\n        }\n        let appliedFunctions = [\n            getSqlFunctionCall(SqlFunction.DISTINCT)\n        ];\n        return {\n            appliedFunctions: appliedFunctions,\n            dt: null,\n            fa: null,\n            ot: JSONClauseObjectType.DISTINCT_FUNCTION,\n            v: parsedSelectClause\n        };\n    }\n}\nexport const exists = function (rawQuery) {\n    let selectClause = rawQuery.select;\n    if (!selectClause) {\n        throw new Error(`Sub-Query must have SELECT clause defined to be used in EXITS function`);\n    }\n    let existsFunction = new QExistsFunction(rawQuery);\n    return existsFunction.applySqlFunction(getSqlFunctionCall(SqlFunction.EXISTS));\n};\nexport class QExistsFunction extends StandAloneFunction {\n    constructor(subQuery) {\n        super();\n        this.subQuery = subQuery;\n        this.__appliedFunctions__ = [];\n        this.operator = SqlOperator.EXISTS;\n        this.o = SqlOperator.EXISTS;\n        this.category = OperationCategory.FUNCTION;\n        this.c = OperationCategory.FUNCTION;\n    }\n    applySqlFunction(sqlFunctionCall) {\n        this.__appliedFunctions__.push(sqlFunctionCall);\n        return this;\n    }\n    getQuery() {\n        return this.subQuery;\n    }\n    toJSON(parsedQuery) {\n        if (this.__appliedFunctions__.length != 1) {\n            throw new Error(`Not expecting and parent or child functions on \"exists\"`);\n        }\n        if (!this.subQuery) {\n            throw new Error(`Subquery is not defined in \"exists\" function.`);\n        }\n        let appliedFunctions = [\n            getSqlFunctionCall(SqlFunction.EXISTS)\n        ];\n        return {\n            c: this.category,\n            ob: {\n                appliedFunctions: appliedFunctions,\n                dt: null,\n                ot: JSONClauseObjectType.EXISTS_FUNCTION,\n                v: parsedQuery\n            },\n            o: this.operator\n        };\n    }\n}\n// Algebra Operators\nexport const divide = function (numeric1, numeric2) {\n    if (numeric1 instanceof QNumberField) {\n        return numeric1.applySqlFunction(getSqlFunctionCall(SqlFunction.DIVIDE, [numeric2]));\n    }\n    else {\n        return new QNumberFunction(numeric1)\n            .applySqlFunction(getSqlFunctionCall(SqlFunction.DIVIDE, [numeric2]));\n    }\n};\nexport const subtract = function (numeric1, numeric2) {\n    if (numeric1 instanceof QNumberField) {\n        return numeric1.applySqlFunction(getSqlFunctionCall(SqlFunction.MINUS, [numeric2]));\n    }\n    else {\n        return new QNumberFunction(numeric1)\n            .applySqlFunction(getSqlFunctionCall(SqlFunction.MINUS, [numeric2]));\n    }\n};\nexport const modulus = function (numeric1, numeric2) {\n    if (numeric1 instanceof QNumberField) {\n        return numeric1.applySqlFunction(getSqlFunctionCall(SqlFunction.MODULUS, [numeric2]));\n    }\n    else {\n        return new QNumberFunction(numeric1)\n            .applySqlFunction(getSqlFunctionCall(SqlFunction.MODULUS, [numeric2]));\n    }\n};\nexport const multiply = function (numeric1, numeric2) {\n    if (numeric1 instanceof QNumberField) {\n        return numeric1.applySqlFunction(getSqlFunctionCall(SqlFunction.MULTIPLY, [numeric2]));\n    }\n    else {\n        return new QNumberFunction(numeric1)\n            .applySqlFunction(getSqlFunctionCall(SqlFunction.MULTIPLY, [numeric2]));\n    }\n};\nexport const add = function (numeric1, numeric2) {\n    if (numeric1 instanceof QNumberField) {\n        return numeric1.applySqlFunction(getSqlFunctionCall(SqlFunction.PLUS, [numeric2]));\n    }\n    else {\n        return new QNumberFunction(numeric1)\n            .applySqlFunction(getSqlFunctionCall(SqlFunction.PLUS, [numeric2]));\n    }\n};\nexport const concat = function (//\n...fragments) {\n    if (fragments.length > 2) {\n        throw new Error(`Less than two operands passed to 'concat' function.`);\n    }\n    let firstFragment = fragments[0];\n    let restOfFragments = fragments.slice(1);\n    if (firstFragment instanceof QStringField) {\n        return firstFragment.applySqlFunction(getSqlFunctionCall(SqlFunction.CONCATENATE, restOfFragments));\n    }\n    else {\n        return new QStringFunction(firstFragment)\n            .applySqlFunction(getSqlFunctionCall(SqlFunction.CONCATENATE, restOfFragments));\n    }\n};\n/**\n * A\n * UNION\n * B\n */\nexport const union = function (...rawQueries) {\n    throw new Error('not implemented');\n};\n/**\n * A\n * UNION ALL\n * B\n */\nexport const unionAll = function (...rawQueries) {\n    throw new Error('not implemented');\n};\n/**\n * A\n * INTERSECT\n * B\n */\nexport const intersect = function (...rawQueries) {\n    throw new Error('not implemented');\n};\n/**\n * A\n * MINUS\n * B\n */\nexport const except = function (...rawQueries) {\n    throw new Error('not implemented');\n};\n/**\n * A\n * MINUS\n * B\n */\nexport const minus = except;\n//# sourceMappingURL=Functions.js.map","import { EntityAliases, } from '../../core/entity/Aliases';\nimport { QEntity, QTree } from '../../core/entity/Entity';\n/**\n * Created by Papa on 10/27/2016.\n */\nexport class AbstractQuery {\n    constructor(entityAliases = new EntityAliases(), columnAliases = entityAliases.getNewFieldColumnAliases()) {\n        this.entityAliases = entityAliases;\n        this.columnAliases = columnAliases;\n        this.isEntityQuery = false;\n    }\n    getParameters( //\n    ) {\n        return this.entityAliases.getParams().getParameters();\n    }\n    getNonEntityQuery(rawQuery, jsonQuery, createSelectCallback, queryUtils, fieldUtils, relationManager) {\n        let from = this.fromClauseToJSON(rawQuery.from, queryUtils, fieldUtils, relationManager);\n        jsonQuery.F = from;\n        if (createSelectCallback) {\n            createSelectCallback(jsonQuery);\n        }\n        jsonQuery.W = queryUtils.whereClauseToJSON(rawQuery.where, this.columnAliases);\n        jsonQuery.GB = this.groupByClauseToJSON(rawQuery.groupBy);\n        jsonQuery.H = queryUtils.whereClauseToJSON(rawQuery.having, this.columnAliases);\n        jsonQuery.OB = this.orderByClauseToJSON(rawQuery.orderBy);\n        jsonQuery.L = rawQuery.limit;\n        jsonQuery.O = rawQuery.offset;\n        return jsonQuery;\n    }\n    fromClauseToJSON(fromClause, queryUtils, fieldUtils, relationManager) {\n        if (!fromClause) {\n            if (this.isEntityQuery) {\n                return [];\n            }\n            else {\n                throw new Error('From clause must be present in a non-Entity based query.');\n            }\n        }\n        return fromClause.map((fromEntity) => {\n            if (!(fromEntity instanceof QEntity)) {\n                throw new Error(`FROM clause can contain only Views or Entities.`);\n            }\n            if (this.isEntityQuery) {\n                if (fromEntity instanceof QTree) {\n                    throw new Error(`Entity FROM clauses can contain only Entities.`);\n                }\n            }\n            return fromEntity.__driver__\n                .getRelationJson(this.columnAliases, queryUtils, fieldUtils, relationManager);\n        });\n    }\n    groupByClauseToJSON(groupBy) {\n        if (!groupBy || !groupBy.length) {\n            return null;\n        }\n        return groupBy.map((field) => {\n            if (!this.columnAliases.hasAliasFor(field)) {\n                throw new Error(`Field used in group by clause is not present in select clause`);\n            }\n            return {\n                fa: this.columnAliases.getExistingAlias(field)\n            };\n        });\n    }\n    orderByClauseToJSON(orderBy) {\n        if (!orderBy || !orderBy.length) {\n            return null;\n        }\n        return orderBy.map((field) => {\n            return field.toJSON(this.columnAliases);\n        });\n    }\n}\n//# sourceMappingURL=AbstractQuery.js.map","import { QDistinctFunction } from '../../core/field/Functions';\nimport { AbstractQuery } from './AbstractQuery';\n/**\n * Created by Papa on 10/24/2016.\n */\nexport const NON_ENTITY_SELECT_ERROR_MESSAGE = `Unsupported entry in Non-Entity SELECT clause, must be a(n): Entity Field | ManyToOne Relation | primitive wrapped by \"bool\",\"date\",\"num\",\"str\" | query wrapped by \"field\"`;\nexport class DistinguishableQuery extends AbstractQuery {\n    constructor(entityAliases) {\n        super(entityAliases);\n        this.isHierarchicalEntityQuery = false;\n    }\n    selectClauseToJSON(rawSelect, queryUtils, fieldUtils, relationManager) {\n        if (rawSelect instanceof QDistinctFunction) {\n            if (this.isHierarchicalEntityQuery) {\n                throw new Error(`Distinct cannot be used in SELECT of Hierarchical/Bridged Entity queries.`);\n            }\n            let rawInnerSelect = rawSelect.getSelectClause();\n            let innerSelect = this.nonDistinctSelectClauseToJSON(rawInnerSelect, queryUtils, fieldUtils, relationManager);\n            return rawSelect.toJSON(innerSelect);\n        }\n        else {\n            return this.nonDistinctSelectClauseToJSON(rawSelect, queryUtils, fieldUtils, relationManager);\n        }\n    }\n}\n//# sourceMappingURL=NonEntityQuery.js.map","import { EntityAliases } from '../../core/entity/Aliases';\nimport { QOneToManyRelation, QRepositoryEntityOneToManyRelation } from '../../core/entity/OneToManyRelation';\nimport { QField } from '../../core/field/Field';\nimport { DistinguishableQuery, NON_ENTITY_SELECT_ERROR_MESSAGE } from './NonEntityQuery';\n/**\n * Created by Papa on 10/24/2016.\n */\nexport const FIELD_IN_SELECT_CLAUSE_ERROR_MESSAGE = `Entity SELECT clauses can only contain fields assigned: null | undefined | boolean | Date | number | string | Relation SELECT`;\n/**\n * A query whose select facade is a collection of properties.\n */\nexport class MappableQuery extends DistinguishableQuery {\n    nonDistinctSelectClauseToJSON(rawSelect, queryUtils, fieldUtils, relationManager) {\n        let select = {};\n        for (let property in rawSelect) {\n            let value = rawSelect[property];\n            if (value instanceof QField) {\n                if (this.isEntityQuery) {\n                    throw new Error(FIELD_IN_SELECT_CLAUSE_ERROR_MESSAGE);\n                }\n                // The same value may appear in the select clause more than once.\n                // In that case the last one will set the alias for all of them.\n                // Because the alias only matters for GROUP BY and ORDER BY\n                // that is OK.\n                select[property] = value.toJSON(this.columnAliases, true, queryUtils, fieldUtils, relationManager);\n            }\n            else if (value instanceof QOneToManyRelation\n                || value instanceof QRepositoryEntityOneToManyRelation) {\n                throw new Error(`@OneToMany relation objects can cannot be used in SELECT clauses`);\n            } // Must be a primitive\n            else {\n                let isChildObject = false;\n                try {\n                    // Must be an entity query here\n                    switch (typeof value) {\n                        case 'boolean':\n                        case 'number':\n                        case 'string':\n                        case 'undefined':\n                            continue;\n                        case 'object':\n                            if (value instanceof Date) {\n                            }\n                            else if (value === null) {\n                            }\n                            else {\n                                isChildObject = true;\n                                select[property] = this.nonDistinctSelectClauseToJSON(value, queryUtils, fieldUtils, relationManager);\n                            }\n                    }\n                }\n                finally {\n                    if (!isChildObject && !this.isEntityQuery) {\n                        throw new Error(NON_ENTITY_SELECT_ERROR_MESSAGE);\n                    }\n                }\n            }\n        }\n        return select;\n    }\n}\nexport class TreeQuery extends MappableQuery {\n    constructor(rawQuery, entityAliases = new EntityAliases()) {\n        super(entityAliases);\n        this.rawQuery = rawQuery;\n    }\n    toJSON(queryUtils, fieldUtils, relationManager) {\n        let jsonMappedQuery = this.getNonEntityQuery(this.rawQuery, {}, (jsonQuery) => {\n            jsonQuery.S = this.selectClauseToJSON(this.rawQuery.select, queryUtils, fieldUtils, relationManager);\n        }, queryUtils, fieldUtils, relationManager);\n        return jsonMappedQuery;\n    }\n}\n//# sourceMappingURL=TreeQuery.js.map","import { QEntity, QTree } from \"./entity/Entity\";\nimport { QField } from \"./field/Field\";\n/**\n * Created by Papa on 10/25/2016.\n */\nexport function tree(query) {\n    let queryDefinition;\n    if (query instanceof Function) {\n        queryDefinition = query();\n    }\n    else {\n        queryDefinition = query;\n    }\n    let view = new QTree([], queryDefinition);\n    let customEntity = queryDefinition.select;\n    view = convertMappedEntitySelect(customEntity, queryDefinition, view, view, 'f');\n    return view;\n}\nfunction convertMappedEntitySelect(customEntity, queryDefinition, view, selectProxy, fieldPrefix) {\n    let fieldIndex = 0;\n    for (let property in customEntity) {\n        let alias = `${fieldPrefix}${++fieldIndex}`;\n        let value = customEntity[property];\n        if (value instanceof QField) {\n            let field = value.getInstance(view);\n            field.alias = alias;\n            field.q = view;\n            selectProxy[property] = field;\n        }\n        else {\n            if (value instanceof Object && !(value instanceof Date)) {\n                selectProxy[value] = convertMappedEntitySelect(value, queryDefinition, view, {}, `${alias}_`);\n            }\n            else {\n                throw new Error(`All SELECT clause entries of a Mapped query must be Fields or Functions`);\n            }\n        }\n    }\n    return view;\n}\n/**\n * Sub-queries in select clause\n * @param query\n * @returns {IQF}\n */\nexport function field(query) {\n    let queryDefinition;\n    if (query instanceof Function) {\n        queryDefinition = query();\n    }\n    else {\n        queryDefinition = query;\n    }\n    let customField = queryDefinition.select;\n    customField = customField.addSubQuery(queryDefinition);\n    // Field query cannot be joined to any other query so don't have set the positional fields\n    return customField;\n}\nexport class JoinFields {\n    constructor(joinTo) {\n        this.joinTo = joinTo;\n        if (!(this.joinTo instanceof QEntity)) {\n            throw new Error(`Right value in join must be a View or an Entity`);\n        }\n    }\n    on(joinOperation) {\n        let joinChild = this.joinTo;\n        joinChild.__driver__.joinWhereClause = joinOperation(this.joinTo);\n        return this.joinTo;\n    }\n}\n//# sourceMappingURL=Joins.js.map","import { JoinType, JSONRelationType } from '@airport/ground-control';\nimport { TreeQuery } from '../../query/facade/TreeQuery';\nimport { extend } from '../../utils/qApplicationBuilderUtils';\nimport { JoinFields } from '../Joins';\nexport function QEntity(dbEntity, applicationUtils, relationManager, fromClausePosition = [], dbRelation = null, joinType = null, QDriver = QEntityDriver) {\n    this.__driver__ = new QDriver(dbEntity, fromClausePosition, dbRelation, joinType, this, applicationUtils, relationManager);\n}\nQEntity.prototype.fullJoin = function (right) {\n    return this.__driver__.join(right, JoinType.FULL_JOIN);\n};\nQEntity.prototype.innerJoin = function (right) {\n    return this.__driver__.join(right, JoinType.INNER_JOIN);\n};\nQEntity.prototype.leftJoin = function (right) {\n    return this.__driver__.join(right, JoinType.LEFT_JOIN);\n};\nQEntity.prototype.rightJoin = function (right) {\n    return this.__driver__.join(right, JoinType.RIGHT_JOIN);\n};\nexport class QEntityDriver {\n    constructor(dbEntity, applicationUtils, relationManager, fromClausePosition = [], dbRelation = null, joinType = null, qEntity) {\n        this.dbEntity = dbEntity;\n        this.applicationUtils = applicationUtils;\n        this.relationManager = relationManager;\n        this.fromClausePosition = fromClausePosition;\n        this.dbRelation = dbRelation;\n        this.joinType = joinType;\n        this.qEntity = qEntity;\n        this.entityFieldMap = {};\n        this.entityRelations = [];\n        this.idColumns = [];\n        this.allColumns = [];\n        this.relations = [];\n        this.currentChildIndex = -1;\n    }\n    getInstance() {\n        const qEntityConstructor = this.applicationUtils\n            .getQEntityConstructor(this.dbEntity);\n        let instance = new qEntityConstructor(this.dbEntity, this.applicationUtils, this.relationManager, this.fromClausePosition, this.dbRelation, this.joinType);\n        instance.__driver__.currentChildIndex = this.currentChildIndex;\n        instance.__driver__.joinWhereClause = this.joinWhereClause;\n        instance.__driver__.entityFieldMap = this.entityFieldMap;\n        instance.__driver__.entityRelations = this.entityRelations;\n        return instance;\n    }\n    /*\n    addEntityRelation<R extends IQEntityInternal>(\n        relation: IQInternalRelation<R>\n    ): void {\n        this.entityRelations[relation.parentRelationIndex] = relation;\n    }\n\n    addEntityField<T, IQF extends IQOperableFieldInternal<T, JSONBaseOperation, any, any>>(\n        field: IQF\n    ): void {\n        this.entityFieldMap[field.fieldName] = field;\n    }\n    */\n    /*\n    getRelationPropertyName(): string {\n        return QMetadataUtils.getRelationPropertyName(QMetadataUtils.getRelationByIndex(this.qEntity, this.relationIndex));\n    }\n*/\n    getRelationJson(columnAliases, queryUtils, fieldUtils, relationManager) {\n        // FIXME: this does not work for non-entity tree queries, as there is not dbEntity\n        // see ApplicationDao.findMaxVersionedMapByApplicationAndDomainNames for an example\n        let jsonRelation = {\n            currentChildIndex: this.currentChildIndex,\n            ti: this.dbEntity.index,\n            fromClausePosition: this.fromClausePosition,\n            jt: this.joinType,\n            rt: null,\n            rep: columnAliases.entityAliases.getNextAlias(this.getRootJoinEntity()),\n            si: this.dbEntity.applicationVersion.application.index\n        };\n        if (this.joinWhereClause) {\n            this.getJoinRelationJson(jsonRelation, columnAliases, queryUtils, fieldUtils, relationManager);\n        }\n        else if (this.dbRelation) {\n            this.getEntityRelationJson(jsonRelation);\n        }\n        else {\n            this.getRootRelationJson(jsonRelation, columnAliases, queryUtils, fieldUtils, relationManager);\n        }\n        return jsonRelation;\n    }\n    getJoinRelationJson(jsonRelation, columnAliases, queryUtils, fieldUtils, relationManager) {\n        jsonRelation.rt = JSONRelationType.ENTITY_JOIN_ON;\n        jsonRelation.joinWhereClause = queryUtils.whereClauseToJSON(this.joinWhereClause, columnAliases);\n        return jsonRelation;\n    }\n    getEntityRelationJson(jsonRelation) {\n        jsonRelation.rt = JSONRelationType.ENTITY_APPLICATION_RELATION;\n        jsonRelation.ri = this.dbRelation.index;\n        // if (!this.dbRelation.whereJoinTable) {\n        return jsonRelation;\n        // }\n        // let otmQEntity;\n        // let mtoQEntity;\n        // switch (this.dbRelation.relationType) {\n        // \tcase EntityRelationType.ONE_TO_MANY:\n        // \t\tmtoQEntity = this.qEntity;\n        // \t\totmQEntity = this.parentJoinEntity;\n        // \t\tbreak;\n        // \tcase EntityRelationType.MANY_TO_ONE:\n        // \t\totmQEntity = this.qEntity;\n        // \t\tmtoQEntity = this.parentJoinEntity;\n        // \t\tbreak;\n        // \tdefault:\n        // \t\tthrow new Error(`Unknown EntityRelationType: ${this.dbRelation.relationType}`);\n        // }\n        //\n        // let joinWhereClause = this.dbRelation.whereJoinTable.addToJoinFunction(otmQEntity,\n        // mtoQEntity, this.airportDb, this.airportDb.F); jsonRelation.joinWhereClause    =\n        // this.utils.Query.whereClauseToJSON(joinWhereClause, columnAliases);\n        // jsonRelation.joinWhereClauseOperator   = this.dbRelation.joinFunctionWithOperator;  return\n        // jsonRelation;\n    }\n    getRootRelationJson(jsonRelation, columnAliases, queryUtils, fieldUtils, relationManager) {\n        jsonRelation.rt = (this instanceof QTreeDriver) ? JSONRelationType.SUB_QUERY_ROOT : JSONRelationType.ENTITY_ROOT;\n        return jsonRelation;\n    }\n    getQ() {\n        return this.qEntity;\n    }\n    join(right, joinType) {\n        let joinChild = right\n            .__driver__.getInstance();\n        joinChild.__driver__.currentChildIndex = 0;\n        let nextChildPosition = this.relationManager.getNextChildJoinPosition(this);\n        joinChild.__driver__.fromClausePosition = nextChildPosition;\n        joinChild.__driver__.joinType = joinType;\n        joinChild.__driver__.parentJoinEntity = this.qEntity;\n        return new JoinFields(joinChild);\n    }\n    isRootEntity() {\n        return !this.parentJoinEntity;\n    }\n    getRootJoinEntity() {\n        let rootEntity = this.qEntity;\n        while (rootEntity.__driver__.parentJoinEntity) {\n            rootEntity = rootEntity.__driver__.parentJoinEntity;\n        }\n        return rootEntity;\n    }\n}\nexport function QTree(fromClausePosition = [], subQuery) {\n    QTree.base.constructor.call(this, null, fromClausePosition, null, null, QTreeDriver);\n    this.__driver__.subQuery = subQuery;\n}\nextend(QEntity, QTree, {});\nexport class QTreeDriver extends QEntityDriver {\n    getInstance() {\n        let instance = super.getInstance();\n        instance.__driver__\n            .subQuery = this.subQuery;\n        return instance;\n    }\n    // getRelationPropertyName(): string {\n    // \tthrow new Error(`not implemented`);\n    // }\n    getJoinRelationJson(jsonRelation, columnAliases, queryUtils, fieldUtils, relationManager) {\n        jsonRelation = super.getJoinRelationJson(jsonRelation, columnAliases, queryUtils, fieldUtils, relationManager);\n        jsonRelation.rt = JSONRelationType.SUB_QUERY_JOIN_ON;\n        jsonRelation.subQuery = new TreeQuery(this.subQuery, columnAliases.entityAliases)\n            .toJSON(queryUtils, fieldUtils, relationManager);\n        return jsonRelation;\n    }\n    getRootRelationJson(jsonRelation, columnAliases, queryUtils, fieldUtils, relationManager) {\n        jsonRelation = super.getJoinRelationJson(jsonRelation, columnAliases, queryUtils, fieldUtils, relationManager);\n        jsonRelation.rt = JSONRelationType.SUB_QUERY_ROOT;\n        jsonRelation.subQuery = new TreeQuery(this.subQuery, columnAliases.entityAliases)\n            .toJSON(queryUtils, fieldUtils, relationManager);\n        return jsonRelation;\n    }\n}\n//# sourceMappingURL=Entity.js.map","import { JoinType, JSONRelationType } from \"@airport/ground-control\";\n/**\n * Created by Papa on 10/18/2016.\n */\nexport class JoinTreeNode {\n    constructor(jsonRelation, childNodes, parentNode) {\n        this.jsonRelation = jsonRelation;\n        this.childNodes = childNodes;\n        this.parentNode = parentNode;\n    }\n    addChildNode(joinTreeNode) {\n        let childFromClausePositionArray = joinTreeNode.jsonRelation.fromClausePosition;\n        let childPosition = childFromClausePositionArray[childFromClausePositionArray.length - 1];\n        this.childNodes[childPosition] = joinTreeNode;\n    }\n    getEntityRelationChildNode(dbRelation) {\n        return this.getEntityRelationChildNodeByIndexes(dbRelation.property.entity.applicationVersion.id, dbRelation.property.entity.index, dbRelation.index);\n    }\n    getEntityRelationChildNodeByIndexes(applicationIndex, tableIndex, relationIndex) {\n        let matchingNodes = this.childNodes.filter((childNode) => {\n            return childNode.jsonRelation.ri === relationIndex;\n        });\n        switch (matchingNodes.length) {\n            case 0:\n                break;\n            case 1:\n                return matchingNodes[0];\n            default:\n                throw new Error(`More than one child node matched relation property index '${relationIndex}'`);\n        }\n        // No node matched, this must be reference to a sub-entity in select clause (in a Entity\n        // query)\n        let childPosition = this.jsonRelation.fromClausePosition.slice();\n        childPosition.push(this.childNodes.length);\n        let rootEntityPrefix;\n        if (this.parentNode) {\n            rootEntityPrefix = this.parentNode.jsonRelation.rep;\n        }\n        else {\n            rootEntityPrefix = this.jsonRelation.rep;\n        }\n        let jsonEntityRelation = {\n            currentChildIndex: 0,\n            fromClausePosition: childPosition,\n            ti: tableIndex,\n            jt: JoinType.LEFT_JOIN,\n            rt: JSONRelationType.ENTITY_APPLICATION_RELATION,\n            rep: rootEntityPrefix,\n            ri: relationIndex,\n            si: applicationIndex\n        };\n        let childTreeNode = new JoinTreeNode(jsonEntityRelation, [], this);\n        this.addChildNode(childTreeNode);\n        return childTreeNode;\n    }\n}\n//# sourceMappingURL=JoinTreeNode.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet RelationManager = class RelationManager {\n    getPositionAlias(rootEntityPrefix, fromClausePosition) {\n        return `${rootEntityPrefix}_${fromClausePosition.join('_')}`;\n    }\n    getAlias(jsonRelation) {\n        return this.getPositionAlias(jsonRelation.rep, jsonRelation.fromClausePosition);\n    }\n    getParentAlias(jsonRelation) {\n        let fromClausePosition = jsonRelation.fromClausePosition;\n        if (fromClausePosition.length === 0) {\n            throw new Error(`Cannot find alias of a parent entity for the root entity`);\n        }\n        return this.getPositionAlias(jsonRelation.rep, fromClausePosition.slice(0, fromClausePosition.length - 1));\n    }\n    createRelatedQEntity(joinRelation, context) {\n        const dbEntity = this.applicationUtils.getDbEntity(joinRelation.si, joinRelation.ti);\n        let QEntityConstructor = this.applicationUtils.getQEntityConstructor(dbEntity);\n        return new QEntityConstructor(dbEntity, this.applicationUtils, this, joinRelation.fromClausePosition, dbEntity.relations[joinRelation.ri], joinRelation.jt);\n    }\n    getNextChildJoinPosition(joinParentDriver) {\n        let nextChildJoinPosition = joinParentDriver.fromClausePosition.slice();\n        nextChildJoinPosition.push(++joinParentDriver.currentChildIndex);\n        return nextChildJoinPosition;\n    }\n};\n__decorate([\n    Inject()\n], RelationManager.prototype, \"applicationUtils\", void 0);\nRelationManager = __decorate([\n    Injected()\n], RelationManager);\nexport { RelationManager };\n//# sourceMappingURL=RelationManager.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { QueryResultType } from '@airport/ground-control';\nimport { Inject, Injected } from '@airport/direction-indicator';\nexport class LookupProxy {\n    constructor(dao) {\n        this.dao = dao;\n    }\n    ensureContext(context) {\n        return doEnsureContext(context);\n    }\n    async lookup(rawQuery, queryResultType, search, one, QueryClass, context, mapResults) {\n        return await this.dao.lookup.lookup(rawQuery, queryResultType, search, one, QueryClass, context, mapResults);\n    }\n}\nlet Lookup = class Lookup {\n    ensureContext(context) {\n        return doEnsureContext(context);\n    }\n    async lookup(rawQuery, queryResultType, search, one, QueryClass, context, mapResults) {\n        let query;\n        if (QueryClass) {\n            const rawNonEntityQuery = this.entityUtils.getQuery(rawQuery);\n            query = new QueryClass(rawNonEntityQuery);\n        }\n        else {\n            query = this.entityUtils.getEntityQuery(rawQuery);\n            queryResultType = this.getQueryResultType(queryResultType, mapResults);\n        }\n        let queryMethod;\n        if (search) {\n            if (one) {\n                queryMethod = this.queryFacade.searchOne;\n            }\n            else {\n                queryMethod = this.queryFacade.search;\n            }\n        }\n        else {\n            if (one) {\n                queryMethod = this.queryFacade.findOne;\n            }\n            else {\n                queryMethod = this.queryFacade.find;\n            }\n        }\n        let result = await queryMethod.call(this.queryFacade, query, this.getQueryResultType(queryResultType, mapResults), context);\n        if (!one && !result) {\n            result = [];\n        }\n        return result;\n    }\n    getQueryResultType(baseQueryResultType, mapResults) {\n        switch (baseQueryResultType) {\n            case QueryResultType.ENTITY_GRAPH:\n                if (mapResults) {\n                    return QueryResultType.MAPPED_ENTITY_GRAPH;\n                }\n                return QueryResultType.ENTITY_GRAPH;\n            case QueryResultType.ENTITY_TREE:\n                if (mapResults) {\n                    return QueryResultType.MAPPED_ENTITY_TREE;\n                }\n                return QueryResultType.ENTITY_TREE;\n            case QueryResultType.FIELD:\n            case QueryResultType.RAW:\n            case QueryResultType.TREE:\n            case QueryResultType.SHEET:\n                return baseQueryResultType;\n            default:\n                throw new Error(`Unexpected Base Query ResultType: '${baseQueryResultType}'.`);\n        }\n    }\n};\n__decorate([\n    Inject()\n], Lookup.prototype, \"entityUtils\", void 0);\n__decorate([\n    Inject()\n], Lookup.prototype, \"queryFacade\", void 0);\nLookup = __decorate([\n    Injected()\n], Lookup);\nexport { Lookup };\nexport function doEnsureContext(context) {\n    if (!context) {\n        context = {};\n    }\n    if (!context.startedAt) {\n        context.startedAt = new Date();\n    }\n    return context;\n}\n//# sourceMappingURL=Lookup.js.map","import { LookupProxy } from './Lookup';\nexport class EntityLookup extends LookupProxy {\n    constructor(dbEntity, dao, mapResults = EntityLookup.mapResults) {\n        super(dao);\n        this.dbEntity = dbEntity;\n        this.mapResults = mapResults;\n    }\n    setMap(MappedChildClass, isMapped = true) {\n        return new MappedChildClass(this.dbEntity, this.dao, isMapped);\n    }\n    setNoCache(ChildClass) {\n        return new ChildClass(this.dbEntity, this.dao, this.mapResults);\n    }\n    async entityLookup(rawEntityQuery, queryResultType, search, one, context) {\n        context.dbEntity = this.dbEntity;\n        const result = await this.lookup(rawEntityQuery, queryResultType, search, one, null, context, this.mapResults);\n        if (search) {\n            throw new Error(`Search operations are not yet supported`);\n        }\n        else {\n            this.dao.updateCacheManager.saveOriginalValues(result, context.dbEntity);\n        }\n        return result;\n    }\n}\nEntityLookup.mapResults = false;\n//# sourceMappingURL=EntityLookup.js.map","import { QueryResultType } from '@airport/ground-control';\nimport { EntityLookup } from './EntityLookup';\n/**\n * Created by Papa on 11/12/2016.\n */\nexport class EntityFind extends EntityLookup {\n    async graph(rawGraphQuery, context) {\n        return await this.find(rawGraphQuery, QueryResultType.ENTITY_GRAPH, context);\n    }\n    async tree(rawTreeQuery, context) {\n        return await this.find(rawTreeQuery, QueryResultType.ENTITY_TREE, context);\n    }\n    async find(rawEntityQuery, queryResultType, context) {\n        return await this.entityLookup(rawEntityQuery, queryResultType, false, false, this.ensureContext(context));\n    }\n    map(isMapped) {\n        return this.setMap(EntityFind, isMapped);\n    }\n    noCache() {\n        return this.setNoCache(EntityFind);\n    }\n}\n//# sourceMappingURL=EntityFind.js.map","import { QueryResultType } from '@airport/ground-control';\nimport { EntityLookup } from './EntityLookup';\n/**\n * Created by Papa on 11/12/2016.\n */\nexport class EntityFindOne extends EntityLookup {\n    async graph(rawGraphQuery, context) {\n        return await this.findOne(rawGraphQuery, QueryResultType.ENTITY_GRAPH, context);\n    }\n    async tree(rawTreeQuery, context) {\n        return await this.findOne(rawTreeQuery, QueryResultType.ENTITY_TREE, context);\n    }\n    // TODO: return Observable from deep within the framework\n    // and detect changes to the underlying data\n    async findOne(rawEntityQuery, queryResultType, context) {\n        return await this.entityLookup(rawEntityQuery, queryResultType, false, true, this.ensureContext(context));\n    }\n    map(isMapped) {\n        return this.setMap(EntityFindOne, isMapped);\n    }\n    noCache() {\n        return this.setNoCache(EntityFindOne);\n    }\n}\n//# sourceMappingURL=EntityFindOne.js.map","import { JSONClauseObjectType, SQLDataType } from '@airport/ground-control';\nimport { EntityAliases } from '../../core/entity/Aliases';\nimport { QBooleanField } from '../../core/field/BooleanField';\nimport { QDateField } from '../../core/field/DateField';\nimport { QField } from '../../core/field/Field';\nimport { QDistinctFunction } from '../../core/field/Functions';\nimport { QNumberField } from '../../core/field/NumberField';\nimport { QStringField } from '../../core/field/StringField';\nimport { QUntypedField } from '../../core/field/UntypedField';\nimport { DistinguishableQuery, NON_ENTITY_SELECT_ERROR_MESSAGE, } from './NonEntityQuery';\n/**\n * Created by Papa on 10/24/2016.\n */\nexport class FieldQuery extends DistinguishableQuery {\n    // private qEntityMap: {[entityName: string]: QEntity<any>},\n    //\tprivate entitiesRelationPropertyMap: {[entityName: string]: {[propertyName: string]:\n    // EntityRelationRecord}},\n    //\t\tprivate entitiesPropertyTypeMap: {[entityName: string]: {[propertyName: string]:\n    // boolean}}\n    constructor(rawQuery, entityAliases = new EntityAliases()) {\n        super(entityAliases);\n        this.rawQuery = rawQuery;\n    }\n    nonDistinctSelectClauseToJSON(rawSelect, queryUtils, fieldUtils, relationManager) {\n        if (!(this.rawQuery.select instanceof QField)) {\n            throw new Error(NON_ENTITY_SELECT_ERROR_MESSAGE);\n        }\n        this.columnAliases.entityAliases.getNextAlias(this.rawQuery.select.q.__driver__.getRootJoinEntity());\n        return this.rawQuery.select.toJSON(this.columnAliases, true, queryUtils, fieldUtils, relationManager);\n    }\n    toJSON(queryUtils, fieldUtils, relationManager) {\n        let select = this.selectClauseToJSON(this.rawQuery.select, queryUtils, fieldUtils, relationManager);\n        let jsonFieldQuery = {\n            S: select,\n            ot: JSONClauseObjectType.FIELD_QUERY,\n            dt: this.getClauseDataType()\n        };\n        return this.getNonEntityQuery(this.rawQuery, jsonFieldQuery, null, queryUtils, fieldUtils, relationManager);\n    }\n    getClauseDataType() {\n        let selectField = this.rawQuery.select;\n        if (selectField instanceof QDistinctFunction) {\n            selectField = selectField.getSelectClause();\n        }\n        if (selectField instanceof QBooleanField) {\n            return SQLDataType.BOOLEAN;\n        }\n        else if (selectField instanceof QDateField) {\n            return SQLDataType.DATE;\n        }\n        else if (selectField instanceof QNumberField) {\n            return SQLDataType.NUMBER;\n        }\n        else if (selectField instanceof QStringField) {\n            return SQLDataType.STRING;\n        }\n        else if (selectField instanceof QUntypedField) {\n            return SQLDataType.ANY;\n        }\n        else {\n            throw new Error(`Unsupported type of select field in Field Query`);\n        }\n    }\n}\n//# sourceMappingURL=FieldQuery.js.map","import { QField } from '../../core/field/Field';\nimport { DistinguishableQuery, NON_ENTITY_SELECT_ERROR_MESSAGE, } from './NonEntityQuery';\n/**\n * Created by Papa on 10/23/2016.\n */\nexport class SheetQuery extends DistinguishableQuery {\n    constructor(rawQuery) {\n        super();\n        this.rawQuery = rawQuery;\n    }\n    nonDistinctSelectClauseToJSON(rawSelect, queryUtils, fieldUtils, relationManager) {\n        if (!(rawSelect instanceof Array)) {\n            throw new Error(`Flat Queries an array of fields in SELECT clause.`);\n        }\n        return rawSelect.map((selectField) => {\n            if (!(selectField instanceof QField)) {\n                throw new Error(NON_ENTITY_SELECT_ERROR_MESSAGE);\n            }\n            this.columnAliases.entityAliases.getNextAlias(selectField.q.__driver__.getRootJoinEntity());\n            return selectField.toJSON(this.columnAliases, true, queryUtils, fieldUtils, relationManager);\n        });\n    }\n    toJSON(queryUtils, fieldUtils, relationManager) {\n        let select = this.selectClauseToJSON(this.rawQuery.select, queryUtils, fieldUtils, relationManager);\n        let jsonFieldQuery = {\n            S: select\n        };\n        return this.getNonEntityQuery(this.rawQuery, jsonFieldQuery, null, queryUtils, fieldUtils, relationManager);\n    }\n}\n//# sourceMappingURL=SheetQuery.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { QueryResultType } from '@airport/ground-control';\nimport { FieldQuery } from '../facade/FieldQuery';\nimport { SheetQuery } from '../facade/SheetQuery';\nimport { TreeQuery } from '../facade/TreeQuery';\nimport { Lookup } from './Lookup';\n/**\n * Created by Papa on 11/12/2016.\n */\nlet NonEntityFind = class NonEntityFind extends Lookup {\n    field(rawFieldQuery, context) {\n        return this.find(rawFieldQuery, QueryResultType.FIELD, FieldQuery, context);\n    }\n    sheet(rawSheetQuery, cursorSize, callback, context) {\n        if (cursorSize || callback) {\n            throw new Error(`Implement!`);\n        }\n        return this.find(rawSheetQuery, QueryResultType.SHEET, SheetQuery, context);\n    }\n    tree(rawTreeQuery, context) {\n        return this.find(rawTreeQuery, QueryResultType.TREE, TreeQuery, context);\n    }\n    find(rawNonEntityQuery, queryResultType, QueryClass, context) {\n        return this.lookup(rawNonEntityQuery, queryResultType, false, false, QueryClass, this.ensureContext(context));\n    }\n};\nNonEntityFind = __decorate([\n    Injected()\n], NonEntityFind);\nexport { NonEntityFind };\n//# sourceMappingURL=NonEntityFind.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { QueryResultType } from '@airport/ground-control';\nimport { FieldQuery } from '../facade/FieldQuery';\nimport { SheetQuery } from '../facade/SheetQuery';\nimport { TreeQuery } from '../facade/TreeQuery';\nimport { Lookup } from './Lookup';\n/**\n * Created by Papa on 11/12/2016.\n */\nlet NonEntityFindOne = class NonEntityFindOne extends Lookup {\n    field(rawFieldQuery, context) {\n        return this.findOne(rawFieldQuery, QueryResultType.FIELD, FieldQuery, context);\n    }\n    sheet(rawSheetQuery, context) {\n        return this.findOne(rawSheetQuery, QueryResultType.SHEET, SheetQuery, context);\n    }\n    tree(rawTreeQuery, context) {\n        return this.findOne(rawTreeQuery, QueryResultType.TREE, TreeQuery, context);\n    }\n    findOne(rawNonEntityQuery, queryResultType, QueryClass, context) {\n        return this.lookup(rawNonEntityQuery, queryResultType, false, true, QueryClass, this.ensureContext(context));\n    }\n};\nNonEntityFindOne = __decorate([\n    Injected()\n], NonEntityFindOne);\nexport { NonEntityFindOne };\n//# sourceMappingURL=NonEntityFindOne.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { QueryResultType } from '@airport/ground-control';\nimport { from } from 'rxjs';\nimport { FieldQuery } from '../facade/FieldQuery';\nimport { SheetQuery } from '../facade/SheetQuery';\nimport { TreeQuery } from '../facade/TreeQuery';\nimport { Lookup } from './Lookup';\n/**\n * Created by Papa on 11/12/2016.\n */\nlet NonEntitySearch = class NonEntitySearch extends Lookup {\n    field(rawFieldQuery, context) {\n        return from(this.search(rawFieldQuery, QueryResultType.FIELD, FieldQuery, context));\n    }\n    sheet(rawSheetQuery, context) {\n        return from(this.search(rawSheetQuery, QueryResultType.SHEET, SheetQuery, context));\n    }\n    tree(rawTreeQuery, context) {\n        return from(this.search(rawTreeQuery, QueryResultType.TREE, TreeQuery, context));\n    }\n    search(rawNonEntityQuery, queryResultType, QueryClass, context) {\n        return this.lookup(rawNonEntityQuery, queryResultType, true, false, QueryClass, this.ensureContext(context));\n    }\n};\nNonEntitySearch = __decorate([\n    Injected()\n], NonEntitySearch);\nexport { NonEntitySearch };\n//# sourceMappingURL=NonEntitySearch.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { QueryResultType } from '@airport/ground-control';\nimport { from } from 'rxjs';\nimport { FieldQuery } from '../facade/FieldQuery';\nimport { SheetQuery } from '../facade/SheetQuery';\nimport { TreeQuery } from '../facade/TreeQuery';\nimport { Lookup } from './Lookup';\n/**\n * Created by Papa on 11/12/2016.\n */\nlet NonEntitySearchOne = class NonEntitySearchOne extends Lookup {\n    field(rawFieldQuery, context) {\n        return from(this.searchOne(rawFieldQuery, QueryResultType.FIELD, FieldQuery, context));\n    }\n    sheet(rawSheetQuery, context) {\n        return from(this.searchOne(rawSheetQuery, QueryResultType.SHEET, SheetQuery, context));\n    }\n    tree(rawTreeQuery, context) {\n        return from(this.searchOne(rawTreeQuery, QueryResultType.TREE, TreeQuery, context));\n    }\n    searchOne(rawNonEntityQuery, queryResultType, QueryClass, context) {\n        return this.lookup(rawNonEntityQuery, queryResultType, true, true, QueryClass, this.ensureContext(context));\n    }\n};\nNonEntitySearchOne = __decorate([\n    Injected()\n], NonEntitySearchOne);\nexport { NonEntitySearchOne };\n//# sourceMappingURL=NonEntitySearchOne.js.map","import { QField } from '../../core/field/Field';\nimport { getPrimitiveValue } from '../../core/field/WrapperFunctions';\nimport { AbstractQuery } from './AbstractQuery';\n/**\n * Created by Papa on 11/17/2016.\n */\n// FIXME: add support for a full blown INSERT VALUES, with expression support for VALUES\nexport class AbstractInsertValues extends AbstractQuery {\n    constructor(rawInsertValues, columnIndexes) {\n        super();\n        this.rawInsertValues = rawInsertValues;\n        this.columnIndexes = columnIndexes;\n    }\n    validateColumn(dbColumn, dbEntity, columnName) {\n        if (!dbColumn) {\n            throw new Error(`\r\n\t\tCould not find column ${columnName} in entity: ${dbEntity.name}\r\n\t\t\t\t(table: ${dbEntity.tableConfig.name})\r\n\t\t\t\t\t\t`);\n        }\n        if (dbColumn.entity.applicationVersion.application.index !==\n            dbEntity.applicationVersion.application.index\n            || dbColumn.entity.index !== dbEntity.index) {\n            const columnApplication = dbColumn.entity.applicationVersion.application;\n            const entityApplication = dbEntity.applicationVersion.application;\n            throw new Error(`Unexpected entity for column ${dbColumn.name}.\r\n\t\t\tExpecting:\r\n\t\t\t\tDomain: ${entityApplication.domain.name}\r\n\t\t\t\tApplication: ${entityApplication.name}\r\n\t\t\t\tEntity: ${dbEntity.name}\r\n\t\t\tFound:\r\n\t\t\t\tDomain: ${columnApplication.domain.name}\r\n\t\t\t\tApplication: ${columnApplication.name}\r\n\t\t\t\tEntity: ${dbColumn.entity.name}`);\n        }\n    }\n    valuesToJSON(valueSets, dbColumns, queryUtils, fieldUtils, relationManager) {\n        // let currentValueIndex = -1;\n        // this.values           = [];\n        return valueSets.map((valueSet, rowIndex) => {\n            return valueSet.map((value, columnIndex) => {\n                if (value === undefined) {\n                    throw new Error(`Cannot use 'undefined' in VALUES clause.`);\n                }\n                if (!(value instanceof QField)) {\n                    return getPrimitiveValue(value, dbColumns[columnIndex], rowIndex);\n                    // this.values.push(getPrimitiveValue(value));\n                    // return ++currentValueIndex;\n                }\n                else {\n                    return value.toJSON(this.columnAliases, false, queryUtils, fieldUtils, relationManager);\n                }\n            });\n        });\n    }\n}\n//# sourceMappingURL=AbstractInsertValues.js.map","import { AbstractQuery } from './AbstractQuery';\nexport class AbstractUpdate extends AbstractQuery {\n    constructor(rawUpdate) {\n        super();\n        this.rawUpdate = rawUpdate;\n    }\n    toJSON(queryUtils, fieldUtils, relationManager) {\n        return {\n            U: this.rawUpdate.update\n                .__driver__.getRelationJson(this.columnAliases, queryUtils, fieldUtils, relationManager),\n            S: this.setToJSON(this.rawUpdate.set, queryUtils, fieldUtils, relationManager),\n            W: queryUtils.whereClauseToJSON(this.rawUpdate.where, this.columnAliases)\n        };\n    }\n}\n//# sourceMappingURL=AbstractUpdate.js.map","import { AbstractQuery } from './AbstractQuery';\n/**\n * Created by Papa on 10/2/2016.\n */\nexport class Delete extends AbstractQuery {\n    constructor(rawDelete) {\n        super();\n        this.rawDelete = rawDelete;\n    }\n    toJSON(queryUtils, fieldUtils, relationManager) {\n        return {\n            DF: this.rawDelete.deleteFrom\n                .__driver__.getRelationJson(this.columnAliases, queryUtils, fieldUtils, relationManager),\n            W: queryUtils.whereClauseToJSON(this.rawDelete.where, this.columnAliases)\n        };\n    }\n}\n//# sourceMappingURL=Delete.js.map","import { QField } from '../../core/field/Field';\nimport { MappableQuery } from './TreeQuery';\n/**\n * Created by Papa on 10/24/2016.\n */\nexport class EntityQuery extends MappableQuery {\n    constructor(rawQuery) {\n        super();\n        this.rawQuery = rawQuery;\n        this.isEntityQuery = true;\n        this.isHierarchicalEntityQuery = true;\n    }\n    toJSON(queryUtils, fieldUtils, relationManager) {\n        return {\n            S: this.selectClauseToJSON(this.rawQuery.select, queryUtils, fieldUtils, relationManager),\n            F: this.fromClauseToJSON(this.rawQuery.from, queryUtils, fieldUtils, relationManager),\n            W: queryUtils.whereClauseToJSON(this.rawQuery.where, this.columnAliases),\n            OB: this.orderByClauseToJSON(this.rawQuery.orderBy)\n        };\n    }\n    nonDistinctSelectClauseToJSON(rawSelect) {\n        for (let field in rawSelect) {\n            let value = rawSelect[field];\n            if (value instanceof QField) {\n                throw new Error(`Field References cannot be used in Entity Queries`);\n            }\n            else if (value instanceof Object && !(value instanceof Date)) {\n                this.nonDistinctSelectClauseToJSON(value);\n            }\n        }\n        return rawSelect;\n    }\n    orderByClauseToJSON(orderBy) {\n        if (!orderBy || !orderBy.length) {\n            return null;\n        }\n        return orderBy.map((field) => {\n            return field.toEntityJSON();\n        });\n    }\n}\nexport class LimitedEntityQuery extends EntityQuery {\n    constructor(rawQuery) {\n        super(rawQuery);\n        this.rawQuery = rawQuery;\n        this.isHierarchicalEntityQuery = false;\n    }\n    toJSON(queryUtils, fieldUtils, relationManager) {\n        let limitedJsonEntity = super.toJSON(queryUtils, fieldUtils, relationManager);\n        limitedJsonEntity.L = this.rawQuery.limit;\n        limitedJsonEntity.O = this.rawQuery.offset;\n        return limitedJsonEntity;\n    }\n}\n//# sourceMappingURL=EntityQuery.js.map","import { AbstractInsertValues } from './AbstractInsertValues';\n// FIXME: add support for a full blown INSERT VALUES, with expression support for VALUES\nexport class InsertColumnValues extends AbstractInsertValues {\n    toJSON(queryUtils, fieldUtils, relationManager) {\n        const entityDriver = this.rawInsertValues.insertInto.__driver__;\n        const insertInto = entityDriver.getRelationJson(this.columnAliases, queryUtils, fieldUtils, relationManager);\n        const columnMap = entityDriver.dbEntity.columnMap;\n        const dbColumns = [];\n        const columnIndexes = this.columnIndexes ? this.columnIndexes : this.rawInsertValues.columns.map((columnName) => {\n            const dbColumn = columnMap[columnName];\n            this.validateColumn(dbColumn, entityDriver.dbEntity, columnName);\n            dbColumns.push(dbColumn);\n            return dbColumn.index;\n        });\n        return {\n            II: insertInto,\n            C: columnIndexes,\n            V: this.valuesToJSON(this.rawInsertValues.values, dbColumns, queryUtils, fieldUtils, relationManager)\n        };\n    }\n}\n//# sourceMappingURL=InsertColumnValues.js.map","import { AbstractInsertValues } from './AbstractInsertValues';\n/**\n * Created by Papa on 11/17/2016.\n */\n// FIXME: add support for a full blown INSERT VALUES, with expression support for VALUES\nexport class InsertValues extends AbstractInsertValues {\n    toJSON(queryUtils, fieldUtils, relationManager) {\n        const driver = this.rawInsertValues.insertInto\n            .__driver__;\n        const insertInto = driver.getRelationJson(this.columnAliases, queryUtils, fieldUtils, relationManager);\n        const dbColumns = [];\n        let columnIndexes;\n        if (this.columnIndexes) {\n            columnIndexes = this.columnIndexes;\n            for (let i = 0; i < columnIndexes.length; i++) {\n                const dbColumn = driver.dbEntity.columns[columnIndexes[i]];\n                this.validateColumn(dbColumn, driver.dbEntity);\n                dbColumns.push(dbColumn);\n            }\n        }\n        else {\n            columnIndexes = this.rawInsertValues.columns.map(column => {\n                const dbColumn = column.dbColumn;\n                this.validateColumn(dbColumn, driver.dbEntity);\n                dbColumns.push(dbColumn);\n                return dbColumn.index;\n            });\n        }\n        return {\n            II: insertInto,\n            C: columnIndexes,\n            V: this.valuesToJSON(this.rawInsertValues.values, dbColumns, queryUtils, fieldUtils, relationManager)\n        };\n    }\n}\n//# sourceMappingURL=InsertValues.js.map","import { wrapPrimitive } from '../../core/field/WrapperFunctions';\nimport { AbstractUpdate } from './AbstractUpdate';\nexport class UpdateColumns extends AbstractUpdate {\n    constructor(rawUpdate) {\n        super(rawUpdate);\n    }\n    setToJSON(set, queryUtils, fieldUtils, relationManager) {\n        const setClause = {};\n        const dbEntity = this.rawUpdate.update\n            .__driver__.dbEntity;\n        const dbColumnMap = dbEntity.columnMap;\n        const idDbColumnMap = dbEntity.idColumnMap;\n        for (const columnName in set) {\n            let value = set[columnName];\n            if (value === undefined) {\n                delete set[columnName];\n                continue;\n            }\n            if (!dbColumnMap[columnName]) {\n                throw new Error(`\r\n\tUnknown column: '${columnName}' for entity: '${dbEntity.name}'\r\n\t\t\t(table: '${dbEntity.tableConfig.name}').\r\n\t\t\t\t`);\n            }\n            if (idDbColumnMap[columnName]) {\n                throw new Error(`\r\n\tCannot update @Id columns:\r\n\tColumn: '${columnName}' for entity: '${dbEntity.name}'\r\n\t\t\t(table: '${dbEntity.tableConfig.name}').\r\n\t\t\t\t`);\n            }\n            value = wrapPrimitive(value);\n            if (!value.toJSON) {\n                throw `Unexpected value ${JSON.stringify(value)} for property ${columnName} of entity ${this.rawUpdate.update.__driver__.dbEntity.name}`;\n            }\n            setClause[columnName] = value.toJSON(this.columnAliases, false, queryUtils, fieldUtils, relationManager);\n        }\n        return setClause;\n    }\n}\n//# sourceMappingURL=UpdateColumns.js.map","import { EntityRelationType } from '@airport/ground-control';\nimport { wrapPrimitive } from '../../core/field/WrapperFunctions';\nimport { AbstractUpdate } from './AbstractUpdate';\n/**\n * Created by Papa on 10/2/2016.\n */\n// FIXME: add support for a full blown UPDATE, with expression support for SET\nexport class UpdateProperties extends AbstractUpdate {\n    constructor(rawUpdate) {\n        super(rawUpdate);\n    }\n    toJSON(queryUtils, fieldUtils, relationManager) {\n        return {\n            U: this.rawUpdate.update\n                .__driver__.getRelationJson(this.columnAliases, queryUtils, fieldUtils, relationManager),\n            S: this.setToJSON(this.rawUpdate.set, queryUtils, fieldUtils),\n            W: queryUtils.whereClauseToJSON(this.rawUpdate.where, this.columnAliases)\n        };\n    }\n    setToJSON(rawSet, queryUtils, fieldUtils) {\n        const jsonSetClause = {};\n        const dbEntity = this.rawUpdate.update.__driver__.dbEntity;\n        const dbPropertyMap = dbEntity.propertyMap;\n        this.setEntityFragmentsToJSON(rawSet, jsonSetClause, [], dbPropertyMap, [], queryUtils, fieldUtils);\n        return jsonSetClause;\n    }\n    setEntityFragmentsToJSON(rawSetFragment, jsonSetClause, dbPropertyChain, dbPropertyMap, childDbRelationChain, queryUtils, fieldUtils) {\n        const isTopLevelFragment = !dbPropertyMap.length;\n        for (const propertyName in rawSetFragment) {\n            const dbProperty = dbPropertyMap[propertyName];\n            const dbEntity = dbProperty.entity;\n            if (!dbProperty) {\n                throw new Error(`\r\n${this.getPropertyChainDesription(dbPropertyChain)}\r\n\r\n\tUnknown property: '${propertyName}' for entity: '${dbEntity.name}'\r\n\t\t\t(table: '${dbEntity.tableConfig.name}').\r\n\t\t\t\t`);\n            }\n            if (isTopLevelFragment && dbProperty.isId) {\n                throw new Error(`\r\n${this.getPropertyChainDesription(dbPropertyChain)}\r\n\r\n\tCannot update @Id properties:\r\n\tProperty: '${propertyName}' for entity: '${dbEntity.name}'\r\n\t\t\t(table: '${dbEntity.tableConfig.name}').\r\n\t\t\t\t`);\n            }\n            else if (!isTopLevelFragment && !dbProperty.isId) {\n                throw new Error(`\r\n${this.getPropertyChainDesription(dbPropertyChain)}\r\n\r\n\tUpdated properties of nested entities must be @Id properties:\r\n\tProperty: '${propertyName}' for entity: '${dbEntity.name}'\r\n\t\t\t(table: '${dbEntity.tableConfig.name}').\r\n\t\t\t\t`);\n            }\n            const childDbPropertyChain = [...dbPropertyChain];\n            childDbPropertyChain.push(dbProperty);\n            this.setFragmentToJSON(rawSetFragment, jsonSetClause, childDbPropertyChain, propertyName, childDbRelationChain, queryUtils, fieldUtils);\n        }\n    }\n    setFragmentToJSON(rawSetFragment, jsonSetClause, dbPropertyChain, propertyName, dbRelationChain, queryUtils, fieldUtils) {\n        const dbProperty = dbPropertyChain[dbPropertyChain.length - 1];\n        const dbEntity = dbProperty.entity;\n        let value = rawSetFragment[propertyName];\n        if (value === undefined) {\n            delete rawSetFragment[propertyName];\n            return;\n        }\n        value = wrapPrimitive(value);\n        // If this is not a nested object definition\n        if (value.toJSON) {\n            if (dbProperty.propertyColumns.length !== 1) {\n                throw new Error(`\r\n${this.getPropertyChainDesription(dbPropertyChain)}\r\n\r\n\tCannot update multi-column property to a single value:\r\n\tProperty: '${propertyName}' for entity: '${dbEntity.name}'\r\n\t\t\t(table: '${dbEntity.tableConfig.name}')\r\n\t\t\thas ${dbProperty.propertyColumns.length + 1} columns \r\n\t\t\tbut is being updates to a single value.\r\n\t\t\t\t`);\n            }\n            else {\n                let dbColumn = dbProperty.propertyColumns[0].column;\n                if (dbRelationChain.length) {\n                    for (let i = dbRelationChain.length - 1; i >= 0; i--) {\n                        const currentDbRelation = dbRelationChain[i];\n                        const matchingManyRelationColumn = currentDbRelation.manyRelationColumns.filter((manyRelationColumn) => {\n                            return manyRelationColumn.manyColumn.index ===\n                                dbColumn.index;\n                        })[0];\n                        dbColumn = matchingManyRelationColumn.oneColumn;\n                    }\n                }\n                if (jsonSetClause[dbColumn.name]) {\n                    const firstProperty = dbPropertyChain[0];\n                    throw new Error(`\r\n${this.getPropertyChainDesription(dbPropertyChain)}\r\n\r\n\tCannot update the same column multiple times in the same statement:\r\n\tProperty: '${propertyName}' for entity: '${dbEntity.name}'\r\n\t\t\t(table: '${dbEntity.tableConfig.name}')\r\n\tmaps to table: ${firstProperty.entity.tableConfig.name}, column: ${dbColumn.name}\r\n\t\twhich has already been set in this update statement (above).\r\n\t\t\t\t`);\n                }\n                jsonSetClause[dbColumn.name] = value.toJSON(this.columnAliases, false, queryUtils, fieldUtils);\n                return;\n            }\n        }\n        // This should be a nested property definition\n        else {\n            if (typeof value === 'object') {\n                const dbRelation = dbProperty.relation[0];\n                const childDbRelationChain = [...dbRelationChain];\n                childDbRelationChain.push(dbRelation);\n                switch (dbRelation.relationType) {\n                    case EntityRelationType.MANY_TO_ONE: {\n                        this.setEntityFragmentsToJSON(value, jsonSetClause, dbPropertyChain, dbRelation.relationEntity.propertyMap, childDbRelationChain, queryUtils, fieldUtils);\n                        break;\n                    }\n                    case EntityRelationType.ONE_TO_MANY:\n                        // Not  nested property definition\n                        throw new Error(`\r\n${this.getPropertyChainDesription(dbPropertyChain)}\r\n\r\n\t\t\t\tCannot update @OneToMany properties:\r\n\t\t\t\t\tProperty: '${propertyName}' of entity: '${this.rawUpdate.update.__driver__.dbEntity.name}\r\n\t\t\t\t\tis a @OneToMany relation and cannot be updated since it is\r\n\t\t\t\t\tassumed to be based on @Id columns (which cannot be updated).'\r\n\t\t\t\t`);\n                    default:\n                        // Not  nested property definition\n                        throw new Error(`\r\n${this.getPropertyChainDesription(dbPropertyChain)}\r\n\r\n\t\t\t\tUndefined relation type: \r\n\t\t\t\t\tProperty: '${propertyName}' of entity: '${this.rawUpdate.update.__driver__.dbEntity.name}'\r\n\t\t\t\t\tis defined with an unknown type of a relation.  Expecting either\r\n\t\t\t\t\t@ManyToOne(...)\r\n\t\t\t\t\tor\r\n\t\t\t\t\t@OneToMany(...)\r\n\t\t\t\t`);\n                }\n                return;\n            }\n            else {\n                // Not  nested property definition\n                throw new Error(`\r\n${this.getPropertyChainDesription(dbPropertyChain)}\r\n\r\n\t\t\t\tUnexpected value ${JSON.stringify(value)} \r\n\t\t\t\t\tfor property: '${propertyName}' of entity: '${this.rawUpdate.update.__driver__.dbEntity.name}'\r\n\t\t\t\tExpecting a nested property definition.\r\n\t\t\t\t`);\n            }\n        }\n    }\n    getPropertyChainDesription(dbPropertyChain) {\n        const rootDbEntity = dbPropertyChain[0].entity;\n        let prefix = '    ';\n        let lastPrefix = '';\n        let ending = `...\r\n}`;\n        let message = `\r\nUpdated Entity: ${rootDbEntity.name}, property chain:\r\n{`;\n        const maxChainDepth = dbPropertyChain.length;\n        for (let i = 0; i < maxChainDepth; i++) {\n            let dbProperty = dbPropertyChain[i];\n            message += `${prefix}${dbProperty.name}: `;\n            if (i + 1 < maxChainDepth) {\n                message += `: {\\n`;\n            }\n            else {\n                message += 'VALUE';\n            }\n            ending = prefix + `...\r\n${lastPrefix}}`;\n            lastPrefix = prefix;\n            prefix += '    ';\n        }\n        return `${message}\r\n${ending}`;\n    }\n}\n//# sourceMappingURL=UpdateProperties.js.map","export function strsToNums(strings) {\n    return strings.map(str => parseInt(str));\n}\nexport function objectExists(object) {\n    return object !== null && object !== undefined;\n}\nexport function valuesEqual(value1, value2, checkChildObjects = false) {\n    if (typeof value1 === 'object') {\n        if (value1 instanceof Date) {\n            if (value2 instanceof Date) {\n                return value1.getTime() === value2.getTime();\n            }\n            else {\n                return false;\n            }\n        }\n        else {\n            if (typeof value2 !== 'object') {\n                return false;\n            }\n            if (!checkChildObjects) {\n                // Skip child objects\n                return true;\n            }\n            let checkedKeys = {};\n            for (let key in value1) {\n                checkedKeys[key] = true;\n                if (!valuesEqual(value1[key], value2[key], checkChildObjects)) {\n                    return false;\n                }\n            }\n            for (let key in value2) {\n                if (!checkedKeys[key]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n    if (!value1) {\n        if (value1 === '') {\n            return value2 === '';\n        }\n        else if (value1 === false) {\n            return value2 === false;\n        }\n        else if (value1 === 0) {\n            return value2 === 0;\n        }\n        if (value2 === '' || value2 === false || value2 === 0) {\n            return false;\n        }\n        // treat undefined and null as same value\n        return (!value2);\n    }\n    if (!value2) {\n        return false;\n    }\n    return value1 === value2;\n}\nexport function compareNumbers(number1, number2) {\n    if (number1 < number2) {\n        return -1;\n    }\n    if (number1 > number2) {\n        return 1;\n    }\n    return 0;\n}\n//# sourceMappingURL=Utils.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { QOperableField } from '../core/field/OperableField';\nimport { Injected } from '@airport/direction-indicator';\nimport { EntityQuery } from '../query/facade/EntityQuery';\nimport { objectExists } from '../Utils';\n/**\n * Created by Papa on 6/14/2016.\n */\nlet EntityUtils = class EntityUtils {\n    getObjectClassName(object) {\n        if (typeof object != 'object' || object === null) {\n            throw new Error(`Not an object instance`);\n        }\n        return this.getClassName(object.constructor);\n    }\n    getClassName(clazz) {\n        if (typeof clazz != 'function') {\n            throw new Error(`Not a constructor function`);\n        }\n        let className = clazz['name'];\n        // let className = /(\\w+)\\(/.exec(clazz.toString())[1];\n        return className;\n    }\n    exists(object) {\n        return objectExists(object);\n    }\n    /*\n     static isBlank(\n     object: any\n     ) {\n     for (let propertyName in object) {\n     let property = object[propertyName];\n     if (this.exists(property)) {\n     if (property instanceof Array) {\n     if (property.length > 0) {\n     return false;\n     }\n     } else {\n     return false;\n     }\n     }\n     }\n     return true;\n     }\n     */\n    isAppliable(object) {\n        return object instanceof QOperableField;\n    }\n    getQuery(query) {\n        return this.getRawQuery(query);\n    }\n    getRawQuery(rawQuery) {\n        if (rawQuery instanceof Function) {\n            return rawQuery();\n        }\n        else {\n            return rawQuery;\n        }\n    }\n    getEntityQuery(rawGraphQuery) {\n        return new EntityQuery(this.getRawQuery(rawGraphQuery));\n    }\n};\nEntityUtils = __decorate([\n    Injected()\n], EntityUtils);\nexport { EntityUtils };\n//# sourceMappingURL=EntityUtils.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { FieldQuery } from '../query/facade/FieldQuery';\nlet FieldUtils = class FieldUtils {\n    getFieldQueryJson(fieldSubQuery, entityAliases, queryUtils) {\n        let subSelectQuery = new FieldQuery(fieldSubQuery, entityAliases);\n        return subSelectQuery.toJSON(queryUtils, this, this.relationManager);\n    }\n};\n__decorate([\n    Inject()\n], FieldUtils.prototype, \"relationManager\", void 0);\nFieldUtils = __decorate([\n    Injected()\n], FieldUtils);\nexport { FieldUtils };\n//# sourceMappingURL=FieldUtils.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { repositoryEntity } from '@airport/ground-control';\nimport { Injected } from '@airport/direction-indicator';\nlet QMetadataUtils = class QMetadataUtils {\n    getAllColumns(qEntity) {\n        return qEntity.__driver__.allColumns;\n    }\n    getAllNonGeneratedColumns(qEntity) {\n        return this.getAllColumns(qEntity).filter(qField => !qField.dbColumn.isGenerated);\n    }\n    getAllInsertableColumns(qEntity) {\n        return this.getAllColumns(qEntity).filter(qField => {\n            if (qField.dbColumn.isGenerated) {\n                return false;\n            }\n            if (qEntity.__driver__.dbEntity.isRepositoryEntity) {\n                switch (qField.dbColumn.name) {\n                    case repositoryEntity.SYSTEM_WIDE_OPERATION_ID:\n                        return false;\n                }\n            }\n            return true;\n        });\n    }\n    getDbEntity(qEntity) {\n        return qEntity.__driver__.dbEntity;\n    }\n    getNewEntity(qEntity, airDb) {\n        const dbEntity = qEntity.__driver__.dbEntity;\n        const entityConstructor = airDb.qApplications[dbEntity.applicationVersion.application.index].__constructors__[dbEntity.name];\n        if (!entityConstructor) {\n            return {};\n        }\n        return new entityConstructor();\n    }\n};\nQMetadataUtils = __decorate([\n    Injected()\n], QMetadataUtils);\nexport { QMetadataUtils };\n//# sourceMappingURL=QMetadataUtils.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { OperationCategory, SqlOperator } from '@airport/ground-control';\nimport { QOperableField } from '../core/field/OperableField';\nimport { wrapPrimitive } from '../core/field/WrapperFunctions';\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { TreeQuery } from '../query/facade/TreeQuery';\nlet QueryUtils = class QueryUtils {\n    whereClauseToJSON(whereClause, columnAliases) {\n        if (!whereClause) {\n            return null;\n        }\n        let operation = whereClause;\n        let jsonOperation = {\n            c: operation.c,\n            o: operation.o\n        };\n        switch (operation.c) {\n            case OperationCategory.LOGICAL:\n                let logicalOperation = operation;\n                let jsonLogicalOperation = jsonOperation;\n                switch (operation.o) {\n                    case SqlOperator.NOT:\n                        jsonLogicalOperation.v = this.whereClauseToJSON(logicalOperation.v, columnAliases);\n                        break;\n                    case SqlOperator.AND:\n                    case SqlOperator.OR:\n                        jsonLogicalOperation.v = logicalOperation.v.map((value) => this.whereClauseToJSON(value, columnAliases));\n                        break;\n                    default:\n                        throw new Error(`Unsupported logical operation '${operation.o}'`);\n                }\n                break;\n            case OperationCategory.FUNCTION:\n                // TODO: verify that cast of Q object is valid\n                let functionOperation = operation;\n                let query = functionOperation.getQuery();\n                let jsonQuery = new TreeQuery(query, columnAliases.entityAliases).toJSON(this, this.fieldUtils, this.relationManager);\n                jsonOperation = functionOperation.toJSON(jsonQuery);\n                break;\n            case OperationCategory.BOOLEAN:\n            case OperationCategory.DATE:\n            case OperationCategory.NUMBER:\n            case OperationCategory.STRING:\n            case OperationCategory.UNTYPED:\n                let valueOperation = operation;\n                // All Non logical or exists operations are value operations (eq, isNull, like,\n                // etc.)\n                let jsonValueOperation = jsonOperation;\n                jsonValueOperation.l = this.convertLRValue(valueOperation.l, columnAliases);\n                let rValue = valueOperation.r;\n                if (rValue instanceof Array) {\n                    jsonValueOperation.r = rValue.map((anRValue) => {\n                        return this.convertLRValue(anRValue, columnAliases);\n                    });\n                }\n                else {\n                    jsonValueOperation.r = this.convertLRValue(rValue, columnAliases);\n                }\n                break;\n        }\n        return jsonOperation;\n    }\n    convertLRValue(value, columnAliases) {\n        value = wrapPrimitive(value);\n        switch (typeof value) {\n            case 'undefined':\n                throw new Error(`'undefined' is not a valid L or R value`);\n            default:\n                if (value instanceof QOperableField) {\n                    return value.toJSON(columnAliases, false, this, this.fieldUtils, this.relationManager);\n                } // Must be a Field Query\n                else {\n                    let rawFieldQuery = value;\n                    return this.fieldUtils.getFieldQueryJson(rawFieldQuery, columnAliases.entityAliases, this);\n                }\n        }\n    }\n};\n__decorate([\n    Inject()\n], QueryUtils.prototype, \"fieldUtils\", void 0);\n__decorate([\n    Inject()\n], QueryUtils.prototype, \"relationManager\", void 0);\nQueryUtils = __decorate([\n    Injected()\n], QueryUtils);\nexport { QueryUtils };\n//# sourceMappingURL=QueryUtils.js.map","export function ANOTHER(a, b) {\n}\n;\nexport const Y = {\n    airportSelectField: true,\n    insert: true,\n    update: false\n};\nexport const ALL_FIELDS = {\n    __allFields__: true\n};\nexport const YES = Y;\nexport function convertToY(object) {\n    object.airportSelectField = true;\n}\nexport function isY(object) {\n    return object && object.airportSelectField === true;\n}\nexport const N = {\n    airportSelectField: false,\n};\nexport const NO = N;\nexport function isN(object) {\n    return object && object.airportSelectField === false;\n}\nexport const I = {\n    insert: true\n};\nexport const INSERT = I;\nexport function isInsert(object) {\n    return object && object.insert === true;\n}\nexport const IN = {\n    insert: true,\n    null: true\n};\nexport const INSERT_OR_NULL = IN;\nexport function isInsertOrNull(object) {\n    return object && object.insert === true && object.null === true;\n}\nexport const U = {\n    update: true\n};\nexport const UPDATE = U;\nexport function isUpdate(object) {\n    return object && object.update === true;\n}\nexport const IU = {\n    insert: true,\n    update: true,\n};\nexport const INSERT_OR_UPDATE = IU;\nexport function isInsertOrUpdate(object) {\n    return object && object.insert === true && object.update === true;\n}\nexport const UN = {\n    update: true,\n    null: true\n};\nexport const UPDATE_OR_NULL = UN;\nexport function isUpdateOrNull(object) {\n    return object && object.update === true && object.null === true;\n}\nexport const IUN = {\n    insertOrOther: true,\n};\nexport const INSERT_OR_UPDATE_OR_NULL = UN;\nexport function isInsertOrUpdateOrNull(object) {\n    return object && object.insertOrOther === true;\n}\nexport const A = IUN;\nexport const ALL = IUN;\nexport const UPSERT = IUN;\nexport const isUpsert = isInsertOrUpdateOrNull;\nexport const ID = {\n    airportSelectField: 'ID'\n};\nexport function convertToID(object) {\n    object.airportSelectField = 'ID';\n}\nexport function isID(object) {\n    return object && object.airportSelectField === 'ID';\n}\n//# sourceMappingURL=Query.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar ApplicationUtils_1;\nimport { CRUDOperation, EntityRelationType, repositoryEntity } from '@airport/ground-control';\nimport { convertToY, isY } from '../../lingo/query/facade/Query';\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { valuesEqual } from '../Utils';\nlet ApplicationUtils = ApplicationUtils_1 = class ApplicationUtils {\n    getDbEntity(applicationIndex, tableIndex) {\n        return this.airportDatabase.applications[applicationIndex].currentVersion[0]\n            .applicationVersion.entities[tableIndex];\n    }\n    isActorId(columnName) {\n        return columnName === repositoryEntity.ACTOR_ID;\n    }\n    isActorRecordId(columnName) {\n        return columnName === repositoryEntity.ACTOR_RECORD_ID;\n    }\n    isRepositoryId(columnName) {\n        return columnName === repositoryEntity.REPOSITORY_ID;\n    }\n    doCascade(dbRelation, crudOperation) {\n        if (dbRelation.relationType !== EntityRelationType.ONE_TO_MANY) {\n            return false;\n        }\n        if (!dbRelation.oneToManyElems) {\n            return false;\n        }\n        switch (crudOperation) {\n            case CRUDOperation.CREATE:\n            case CRUDOperation.UPDATE:\n            case CRUDOperation.DELETE:\n                return true;\n            default:\n                throw new Error(`Unsupported CRUDOperation '${crudOperation}' for cascade check.`);\n        }\n    }\n    getQEntityConstructor(dbEntity) {\n        return this.airportDatabase.qApplications[dbEntity.applicationVersion.application.index]\n            .__qConstructors__[dbEntity.index];\n    }\n    getEntityConstructor(dbEntity) {\n        const entityConstructor = this.airportDatabase.qApplications[dbEntity.applicationVersion.application.index]\n            .__constructors__[dbEntity.name];\n        return entityConstructor;\n    }\n    getNewEntity(dbEntity) {\n        const entityConstructor = this.getEntityConstructor(dbEntity);\n        if (!entityConstructor) {\n            return {};\n        }\n        return new entityConstructor();\n    }\n    isIdEmpty(idValue) {\n        return !idValue && idValue !== 0;\n    }\n    isEmpty(value) {\n        return this.isIdEmpty(value) && value !== false && value !== '';\n    }\n    isRelationColumn(dbColumn) {\n        return this.isManyRelationColumn(dbColumn)\n            || this.isOneRelationColumn(dbColumn);\n    }\n    isManyRelationColumn(dbColumn) {\n        return !!(dbColumn.manyRelationColumns && dbColumn.manyRelationColumns.length);\n    }\n    isOneRelationColumn(dbColumn) {\n        return !!(dbColumn.oneRelationColumns && dbColumn.oneRelationColumns.length);\n    }\n    getIdKey(entityObject, dbEntity, failOnNoId = true, \n    // noIdValueCallback: {\n    // \t(\n    // \t\trelationColumn: DbColumn,\n    // \t\tvalue: any,\n    // \t\tpropertyNameChains: string[][],\n    // \t): boolean;\n    // } = null,\n    idValueCallback) {\n        const keys = this.getIdKeyInfo(entityObject, dbEntity, failOnNoId, idValueCallback);\n        return keys.arrayByIdColumnIndex.join('|');\n    }\n    getIdKeyInfo(entityObject, dbEntity, failOnNoId = true, idValueCallback) {\n        if (!dbEntity.idColumns.length) {\n            if (failOnNoId) {\n                throw new Error(`@Id is not defined on entity '${dbEntity.name}'.`);\n            }\n            return null;\n        }\n        const idKeys = {\n            arrayByIdColumnIndex: [],\n            mapByIdColumnName: {}\n        };\n        for (const dbColumn of dbEntity.idColumns) {\n            const [propertyNameChains, idValue] = this.getColumnPropertyNameChainsAndValue(dbEntity, dbColumn, entityObject, true, failOnNoId);\n            idValueCallback && idValueCallback(dbColumn, idValue, propertyNameChains);\n            idKeys.arrayByIdColumnIndex.push(idValue);\n            idKeys.mapByIdColumnName[dbColumn.name] = idValue;\n        }\n        return idKeys;\n    }\n    getColumnPropertyNameChainsAndValue(dbEntity, dbColumn, entityObject, forIdKey = false, generateNegativeIdsForMissing = true) {\n        const columnValuesAndPaths = this.getColumnValuesAndPaths(dbColumn, entityObject, [], forIdKey, generateNegativeIdsForMissing);\n        const firstColumnValueAndPath = columnValuesAndPaths[0];\n        const propertyNameChains = [firstColumnValueAndPath.path];\n        const value = firstColumnValueAndPath.value;\n        columnValuesAndPaths.reduce((last, current) => {\n            if (!valuesEqual(last.value, current.value, true)) {\n                throw new Error(`Values differ for ${dbEntity.name}.${dbColumn.name}:\r\n\t\t\t\t\t\t'${last.path.join('.')}' = ${last.value}\r\n\t\t\t\t\t\t'${current.path.join('.')}' = ${current.value}`);\n            }\n            propertyNameChains.push(current.path);\n            return current;\n        });\n        return [propertyNameChains, value];\n    }\n    addRelationToEntitySelectClause(dbRelation, selectClause, allowDefaults = false) {\n        this.forEachColumnTypeOfRelation(dbRelation, (dbColumn, propertyNameChains) => {\n            let convertTo = true;\n            let propertySelectClause = selectClause;\n            const firstPropertyNameChain = propertyNameChains[0];\n            firstPropertyNameChain.forEach((propertyNameLink, index) => {\n                let propertyObject = propertySelectClause[propertyNameLink];\n                if (!propertyObject) {\n                    propertyObject = {};\n                    this.entityStateManager.markAsStub(propertyObject);\n                    propertySelectClause[propertyNameLink] = propertyObject;\n                }\n                else {\n                    if (index < firstPropertyNameChain.length - 1) {\n                        if (!(propertyObject instanceof Object) || propertyObject instanceof Date) {\n                            throw new Error(`Invalid entry:\r\n\t\t\t\t\t\t\t\t...\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t...\r\n\t\t\t\t\t\t\t\t\t${propertyNameLink}: ${propertyObject}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tin '${dbRelation.property.entity.name}.${dbRelation.property.name}',\r\n\t\t\t\t\t\t\t\tProperty must be an Object.`);\n                        }\n                    }\n                    else {\n                        if (!allowDefaults && !isY(propertyObject)) {\n                            const reason = dbRelation.property.isId\n                                ? `'${dbRelation.property.entity.name}.${dbRelation.property.name}' is an @Id property`\n                                : `'${dbRelation.property.entity.name}' has no @Id - all properties are treated as @Ids`;\n                            throw new Error(`Defaults are not allowed in:\r\n\t\t\t\t\t\t\t\t...\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t...\r\n\t\t\t\t\t\t\t\t\t${propertyNameLink}: ${propertyObject}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t${reason}.`);\n                        }\n                        convertTo = false;\n                    }\n                }\n                propertySelectClause = propertyObject;\n            });\n            if (convertTo) {\n                convertToY(propertySelectClause);\n            }\n        });\n    }\n    forEachColumnOfRelation(dbRelation, entity, callback, failOnNoValue = true) {\n        const dbEntity = dbRelation.property.entity;\n        for (const dbRelationColumn of dbRelation.manyRelationColumns) {\n            const dbColumn = dbRelationColumn.manyColumn;\n            const [propertyNameChains, value] = this.getColumnPropertyNameChainsAndValue(dbEntity, dbColumn, entity);\n            if (callback(dbColumn, value, propertyNameChains)) {\n                return;\n            }\n        }\n    }\n    forEachColumnTypeOfRelation(dbRelation, callback) {\n        for (const dbRelationColumn of dbRelation.manyRelationColumns) {\n            const dbColumn = dbRelationColumn.manyColumn;\n            const propertyNameChains = this.getColumnPaths(dbColumn, []);\n            if (callback(dbColumn, propertyNameChains)) {\n                return;\n            }\n        }\n    }\n    getSheetSelectFromSetClause(dbEntity, qEntity, setClause, errorPrefix) {\n        const selectClause = [];\n        let actorIdColumnIndex;\n        let actorRecordIdColumnIndex;\n        let repositoryIdColumnIndex;\n        let systemWideOperationIdColumn;\n        for (const columnIndex in dbEntity.columns) {\n            const dbColumn = dbEntity.columns[columnIndex];\n            let dbProperty;\n            const isIdColumn = dbColumn.propertyColumns.some(propertyColumn => {\n                dbProperty = propertyColumn.property;\n                return dbProperty.isId;\n            });\n            let nonIdColumnSet = false;\n            if (isIdColumn) {\n                if (setClause[dbColumn.name]) {\n                    throw new Error(errorPrefix + `Cannot update @Id column '${dbColumn.name}' \r\nof property '${dbEntity.name}.${dbProperty.name}'.`);\n                }\n                this.addColumnToSheetSelect(dbColumn, qEntity, selectClause);\n            }\n            else if (setClause[dbColumn.name]) {\n                nonIdColumnSet = true;\n                this.addColumnToSheetSelect(dbColumn, qEntity, selectClause);\n                // } else {\n                // entitySelectClause[dbColumn.index] = null;\n            }\n            const inQueryColumnIndex = selectClause.length - 1;\n            switch (dbColumn.name) {\n                case repositoryEntity.ACTOR_ID:\n                    actorIdColumnIndex = inQueryColumnIndex;\n                    break;\n                case repositoryEntity.ACTOR_RECORD_ID:\n                    actorRecordIdColumnIndex = inQueryColumnIndex;\n                    break;\n                case repositoryEntity.REPOSITORY_ID:\n                    repositoryIdColumnIndex = inQueryColumnIndex;\n                    break;\n                case repositoryEntity.SYSTEM_WIDE_OPERATION_ID:\n                    if (nonIdColumnSet) {\n                        throw new Error(errorPrefix +\n                            `Cannot update 'systemWideOperationId' of Repository Entities.`);\n                    }\n                    systemWideOperationIdColumn = dbColumn;\n                    break;\n            }\n        }\n        return {\n            actorIdColumnIndex,\n            actorRecordIdColumnIndex,\n            repositoryIdColumnIndex,\n            selectClause,\n            systemWideOperationIdColumn\n        };\n    }\n    getColumnValuesAndPaths(dbColumn, relationObject, breadCrumb, forIdKey = false, generateNegativeIdsForMissing = true\n    // noIdValueCallback: {\n    // \t(\n    // \t\trelationColumn: DbColumn,\n    // \t\tvalue: any,\n    // \t\tpropertyNameChains: string[][],\n    // \t): void;\n    // }\n    ) {\n        if (this.isManyRelationColumn(dbColumn)) {\n            let columnValuesAndPaths = [];\n            // If a column is part of a relation, it would be on the Many Side\n            for (const dbRelationColumn of dbColumn.manyRelationColumns) {\n                const dbProperty = dbRelationColumn.manyRelation.property;\n                const relationBreadCrumb = [...breadCrumb];\n                const propertyName = dbProperty.name;\n                relationBreadCrumb.push(propertyName);\n                const value = relationObject[propertyName];\n                if (!value) {\n                    if (forIdKey\n                    // && this.handleNoId(dbColumn, dbProperty, relationBreadCrumb, value,\n                    // noIdValueCallback)\n                    ) {\n                        throw new Error(`Cannot retrieve composite Id value, value chain '${relationBreadCrumb.join('.')}' is : ${value}.`);\n                        // return null;\n                    }\n                    columnValuesAndPaths.push({\n                        path: relationBreadCrumb,\n                        value\n                    });\n                }\n                else {\n                    const otherEntityColumn = dbRelationColumn.oneColumn;\n                    const relationValuesAndPaths = this.getColumnValuesAndPaths(otherEntityColumn, value, relationBreadCrumb, forIdKey);\n                    columnValuesAndPaths = columnValuesAndPaths.concat(relationValuesAndPaths);\n                }\n            }\n            return columnValuesAndPaths;\n        }\n        else {\n            // If a column is not a part of (a) relation(s) then it is associated\n            // to only one property\n            const dbProperty = dbColumn.propertyColumns[0].property;\n            const propertyBreadCrumb = [...breadCrumb];\n            const propertyName = dbProperty.name;\n            propertyBreadCrumb.push(propertyName);\n            let value = relationObject[propertyName];\n            if (forIdKey && this.isIdEmpty(value)) {\n                if (dbColumn.isGenerated) {\n                    if (generateNegativeIdsForMissing) {\n                        value = --ApplicationUtils_1.TEMP_ID;\n                    }\n                    else {\n                        value = null;\n                    }\n                    relationObject[propertyName] = value;\n                }\n                else {\n                    // if (this.handleNoId(dbColumn, dbProperty, propertyBreadCrumb, value,\n                    // noValueCallback)) { return null; }\n                    throw new Error(`Cannot retrieve composite Id value, value chain '${propertyBreadCrumb.join('.')}' is : ${value}.`);\n                }\n            }\n            return [{\n                    path: propertyBreadCrumb,\n                    value\n                }];\n        }\n    }\n    getColumnPaths(dbColumn, breadCrumb) {\n        let columnValuesAndPaths = [];\n        if (this.isManyRelationColumn(dbColumn)) {\n            // If a column is part of a relation, it would be on the Many Side\n            for (const dbRelationColumn of dbColumn.manyRelationColumns) {\n                const dbProperty = dbRelationColumn.manyRelation.property;\n                const relationBreadCrumb = [...breadCrumb];\n                relationBreadCrumb.push(dbProperty.name);\n                const otherEntityColumn = dbRelationColumn.oneColumn;\n                const relationValuesAndPaths = this.getColumnPaths(otherEntityColumn, relationBreadCrumb);\n                columnValuesAndPaths = columnValuesAndPaths.concat(relationValuesAndPaths);\n            }\n        }\n        else {\n            // If a column is not a part of (a) relation(s) then it is associated\n            // to only one property\n            const dbProperty = dbColumn.propertyColumns[0].property;\n            const propertyBreadCrumb = [...breadCrumb];\n            propertyBreadCrumb.push(dbProperty.name);\n            columnValuesAndPaths.push(propertyBreadCrumb);\n        }\n        return columnValuesAndPaths;\n    }\n    addColumnToSheetSelect(dbColumn, qEntity, entitySelectClause) {\n        if (this.isManyRelationColumn(dbColumn)) {\n            const columnPaths = this.getColumnPaths(dbColumn, []);\n            const firstColumnPath = columnPaths[0];\n            let relationColumn = qEntity[firstColumnPath[0]];\n            firstColumnPath.reduce((last, current) => {\n                relationColumn = relationColumn[current];\n                return current;\n            });\n            entitySelectClause.push(relationColumn);\n        }\n        else {\n            entitySelectClause.push(qEntity[dbColumn.propertyColumns[0].property.name]);\n        }\n    }\n    /*\n        private addColumnToEntitySelect(\n            dbColumn: DbColumn,\n            entitySelectClause: any,\n        ) {\n            const dbRelation = dbColumn.relation;\n            if (dbRelation) {\n                let selectClauseFragment = entitySelectClause;\n                let lastSelectClauseFragment;\n                let sourceColumn = dbColumn;\n                let lastPropertyName;\n                do {\n                    lastPropertyName = sourceColumn.property.name;\n                    lastSelectClauseFragment = selectClauseFragment;\n                    if (!lastSelectClauseFragment[lastPropertyName]) {\n                        selectClauseFragment = {};\n                        lastSelectClauseFragment[lastPropertyName] = selectClauseFragment;\n                    } else {\n                        selectClauseFragment = lastSelectClauseFragment[lastPropertyName];\n                    }\n                    const relationColumn = sourceColumn.relation.relationColumns.filter(\n                        relationColumn => relationColumn.ownColumn.index === sourceColumn.index)[0];\n                    sourceColumn = relationColumn.relationColumn;\n                } while (sourceColumn.relation);\n                lastSelectClauseFragment[lastPropertyName] = null;\n            } else {\n                entitySelectClause[dbColumn.property.name] = null;\n            }\n        }\n    */\n    handleNoId(dbColumn, dbProperty, propertyNameChains, value, noIdValueCallback) {\n        if (noIdValueCallback) {\n            if (!noIdValueCallback(dbColumn, value, propertyNameChains)) {\n                return true;\n            }\n        }\n        else {\n            throw new Error(`Cannot retrieve composite Id value, value chain '${propertyNameChains.join('.')}' is : ${value}.`);\n        }\n        return false;\n    }\n};\nApplicationUtils.TEMP_ID = 0;\n__decorate([\n    Inject()\n], ApplicationUtils.prototype, \"airportDatabase\", void 0);\n__decorate([\n    Inject()\n], ApplicationUtils.prototype, \"entityStateManager\", void 0);\nApplicationUtils = ApplicationUtils_1 = __decorate([\n    Injected()\n], ApplicationUtils);\nexport { ApplicationUtils };\n//# sourceMappingURL=ApplicationUtils.js.map","export var deltaConst;\n(function (deltaConst) {\n    deltaConst.DB_ID_FIELD = 'createDbId';\n})(deltaConst || (deltaConst = {}));\nexport var dbConst;\n(function (dbConst) {\n    dbConst.CURRENT_DB = undefined;\n    dbConst.DEFAULT_DB = 'air-default_db';\n    dbConst.ALL_DBS = 'air-all_dbs';\n    dbConst.OWN_DB_FACADE = 'air-own_db_facade';\n})(dbConst || (dbConst = {}));\nexport function getDbIndex(dbName) {\n    if (dbName === dbConst.CURRENT_DB) {\n        return -1;\n    }\n    throw new Error(`Not implemented`);\n}\n//# sourceMappingURL=Constants.js.map","export var ConstraintMode;\n(function (ConstraintMode) {\n    ConstraintMode[\"CONSTRAINT\"] = \"CONSTRAINT\";\n    ConstraintMode[\"NO_CONSTRAINT\"] = \"NO_CONSTRAINT\";\n    ConstraintMode[\"PROVIDER_DEFAULT\"] = \"PROVIDER_DEFAULT\";\n})(ConstraintMode || (ConstraintMode = {}));\n//# sourceMappingURL=ColumnDecorators.js.map","import { abs, add, avg, concat, count, distinct, divide, exists, format, intersect, lcase, len, max, mid, min, minus, modulus, multiply, now, replace, round, subtract, sum, trim, ucase, union, unionAll } from \"./core/field/Functions\";\nimport { bool, date, num, str, wrapPrimitive } from \"./core/field/WrapperFunctions\";\nimport { and, not, or } from \"./core/operation/LogicalOperation\";\nexport const databaseState = {\n    applications: [],\n    entityMap: new Map(),\n    functions: {\n        abs,\n        avg,\n        count,\n        max,\n        min,\n        sum,\n        ucase,\n        lcase,\n        mid,\n        len,\n        round,\n        now,\n        format,\n        replace,\n        trim,\n        distinct,\n        exists,\n        divide,\n        subtract,\n        modulus,\n        multiply,\n        add,\n        concat,\n        union,\n        unionAll,\n        intersect,\n        minus,\n        // logical operators\n        and,\n        not,\n        or,\n        // primitive wrappers\n        bool,\n        date,\n        num,\n        str,\n        wrapPrimitive,\n    },\n    qApplications: [],\n    QM: {},\n};\n//# sourceMappingURL=databaseState.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from \"@airport/direction-indicator\";\nimport { databaseState } from \"../impl/databaseState\";\nlet DatabaseStore = class DatabaseStore {\n    get applications() {\n        return databaseState.applications;\n    }\n    get entityMap() {\n        return databaseState.entityMap;\n    }\n    get functions() {\n        return databaseState.functions;\n    }\n    get qApplications() {\n        return databaseState.qApplications;\n    }\n    get QM() {\n        return databaseState.QM;\n    }\n};\nDatabaseStore = __decorate([\n    Injected()\n], DatabaseStore);\nexport { DatabaseStore };\n//# sourceMappingURL=DatabaseStore.js.map","import { lib } from '@airport/direction-indicator';\nimport { RelationManager } from './impl/core/entity/RelationManager';\nimport { ENTITY_STATE_MANAGER, TRANSACTIONAL_CONNECTOR } from '@airport/ground-control';\nimport { Lookup } from './impl/query/api/Lookup';\nimport { EntityUtils } from './impl/utils/EntityUtils';\nimport { QMetadataUtils } from './impl/utils/QMetadataUtils';\nimport { QueryUtils } from './impl/utils/QueryUtils';\nimport { ApplicationUtils } from './impl/utils/ApplicationUtils';\nimport { FieldUtils } from './impl/utils/FieldUtils';\nimport { NonEntityFind } from './impl/query/api/NonEntityFind';\nimport { NonEntityFindOne } from './impl/query/api/NonEntityFindOne';\nimport { NonEntitySearch } from './impl/query/api/NonEntitySearch';\nimport { NonEntitySearchOne } from './impl/query/api/NonEntitySearchOne';\nimport { DatabaseStore } from './lingo/DatabaseStore';\nconst airTrafficControl = lib('air-traffic-control');\nexport const AIRPORT_DATABASE = airTrafficControl.token({\n    class: null,\n    interface: 'IAirportDatabase',\n    token: 'AIRPORT_DATABASE'\n});\nexport const APPLICATION_UTILS = airTrafficControl.token({\n    class: ApplicationUtils,\n    interface: 'IApplicationUtils',\n    token: 'APPLICATION_UTILS'\n});\nexport const DATABASE_FACADE = airTrafficControl.token({\n    class: null,\n    interface: 'IDatabaseFacade',\n    token: 'DATABASE_FACADE'\n});\nexport const DATABASE_STORE = airTrafficControl.token({\n    class: DatabaseStore,\n    interface: 'IDatabaseState',\n    token: 'DATABASE_STORE'\n});\nexport const ENTITY_UTILS = airTrafficControl.token({\n    class: EntityUtils,\n    interface: 'IEntityUtils',\n    token: 'ENTITY_UTILS'\n});\nexport const FIELD_UTILS = airTrafficControl.token({\n    class: FieldUtils,\n    interface: 'IFieldUtils',\n    token: 'FIELD_UTILS'\n});\nexport const LOOKUP = airTrafficControl.token({\n    class: Lookup,\n    interface: 'ILookup',\n    token: 'LOOKUP'\n});\nexport const NON_ENTITY_FIND = airTrafficControl.token({\n    class: NonEntityFind,\n    interface: 'INonEntityFind',\n    token: 'NON_ENTITY_FIND'\n});\nexport const NON_ENTITY_FIND_ONE = airTrafficControl.token({\n    class: NonEntityFindOne,\n    interface: 'INonEntityFindOne',\n    token: 'NON_ENTITY_FIND_ONE'\n});\nexport const NON_ENTITY_SEARCH = airTrafficControl.token({\n    class: NonEntitySearch,\n    interface: 'INonEntitySearch',\n    token: 'NON_ENTITY_SEARCH'\n});\nexport const NON_ENTITY_SEARCH_ONE = airTrafficControl.token({\n    class: NonEntitySearchOne,\n    interface: 'INonEntitySearchOne',\n    token: 'NON_ENTITY_SEARCH_ONE'\n});\nexport const Q_METADATA_UTILS = airTrafficControl.token({\n    class: QMetadataUtils,\n    interface: 'IQMetadataUtils',\n    token: 'Q_METADATA_UTILS'\n});\nexport const QUERY_FACADE = airTrafficControl.token({\n    class: null,\n    interface: 'IQueryFacade',\n    token: 'QUERY_FACADE'\n});\nexport const QUERY_UTILS = airTrafficControl.token({\n    class: QueryUtils,\n    interface: 'IQueryUtils',\n    token: 'QUERY_UTILS'\n});\nexport const RELATION_MANAGER = airTrafficControl.token({\n    class: RelationManager,\n    interface: 'IRelationManager',\n    token: 'RELATION_MANAGER'\n});\nexport const REPOSITORY_LOADER = airTrafficControl.token({\n    class: null,\n    interface: 'IRepositoryLoader',\n    token: 'REPOSITORY_LOADER'\n});\nexport const UPDATE_CACHE_MANAGER = airTrafficControl.token({\n    class: null,\n    interface: 'IUpdateCacheManager',\n    token: 'UPDATE_CACHE_MANAGER'\n});\nAIRPORT_DATABASE.setDependencies({\n    databaseFacade: DATABASE_FACADE,\n    databaseStore: DATABASE_STORE,\n    find: NON_ENTITY_FIND,\n    findOne: NON_ENTITY_FIND_ONE,\n    search: NON_ENTITY_SEARCH,\n    searchOne: NON_ENTITY_SEARCH_ONE\n});\nAPPLICATION_UTILS.setDependencies({\n    airportDatabase: AIRPORT_DATABASE,\n    entityStateManager: ENTITY_STATE_MANAGER\n});\nDATABASE_FACADE.setDependencies({\n    applicationUtils: APPLICATION_UTILS,\n    entityStateManager: ENTITY_STATE_MANAGER,\n    updateCacheManager: UPDATE_CACHE_MANAGER\n});\nFIELD_UTILS.setDependencies({\n    relationManager: RELATION_MANAGER\n});\nLOOKUP.setDependencies({\n    entityUtils: ENTITY_UTILS,\n    queryFacade: QUERY_FACADE\n});\nQUERY_FACADE.setDependencies({\n    fieldUtils: FIELD_UTILS,\n    queryUtils: QUERY_UTILS,\n    relationManager: RELATION_MANAGER,\n    transactionalConnector: TRANSACTIONAL_CONNECTOR\n});\nQUERY_UTILS.setDependencies({\n    fieldUtils: FIELD_UTILS,\n    relationManager: RELATION_MANAGER\n});\nRELATION_MANAGER.setDependencies({\n    applicationUtils: APPLICATION_UTILS\n});\nUPDATE_CACHE_MANAGER.setDependencies({\n    applicationUtils: APPLICATION_UTILS,\n    entityStateManager: ENTITY_STATE_MANAGER,\n});\n//# sourceMappingURL=tokens.js.map","import { EntityFind, EntityFindOne, } from '@airport/air-traffic-control';\n/**\n * Created by Papa on 12/11/2016.\n */\nexport class EntityDatabaseFacade {\n    // search: IEntitySearch<Entity, Array<Entity> | MappedEntityArray<Entity>, EntitySelect>;\n    // searchOne: IEntitySearchOne<Entity, EntitySelect>;\n    constructor(dbEntity, Q, dao) {\n        this.dbEntity = dbEntity;\n        this.Q = Q;\n        this.dao = dao;\n        this.find = new EntityFind(this.dbEntity, dao);\n        this.findOne = new EntityFindOne(this.dbEntity, dao);\n        // this.search = new EntitySearch<Entity, Array<Entity>, EntitySelect>(\n        //   this.dbEntity, updateCacheManager);\n        // this.searchOne = new EntitySearchOne(this.dbEntity, updateCacheManager);\n    }\n    get from() {\n        return this.Q[this.dbEntity.name];\n    }\n    async insertColumnValues(rawInsertColumnValues, ctx) {\n        return await this.withDbEntity(ctx, async (databaseFacade, ctx) => {\n            return await databaseFacade.insertColumnValues(rawInsertColumnValues, ctx);\n        });\n    }\n    async insertValues(rawInsertValues, ctx) {\n        return await this.withDbEntity(ctx, async (databaseFacade, ctx) => {\n            return await databaseFacade.insertValues(rawInsertValues, ctx);\n        });\n    }\n    async insertColumnValuesGenerateIds(rawInsertColumnValues, ctx) {\n        return await this.withDbEntity(ctx, async (databaseFacade, ctx) => {\n            return await databaseFacade.insertColumnValuesGenerateIds(rawInsertColumnValues, ctx);\n        });\n    }\n    async insertValuesGenerateIds(rawInsertValues, ctx) {\n        return await this.withDbEntity(ctx, async (databaseFacade, ctx) => {\n            return await databaseFacade.insertValuesGenerateIds(rawInsertValues, ctx);\n        });\n    }\n    async updateColumnsWhere(rawUpdateColumns, ctx) {\n        return await this.withDbEntity(ctx, async (databaseFacade, ctx) => {\n            return await databaseFacade.updateColumnsWhere(rawUpdateColumns, ctx);\n        });\n    }\n    async updateWhere(rawUpdate, ctx) {\n        return await this.withDbEntity(ctx, async (databaseFacade, ctx) => {\n            return await databaseFacade.updateWhere(rawUpdate, ctx);\n        });\n    }\n    async deleteWhere(rawDelete, ctx) {\n        return await this.withDbEntity(ctx, async (databaseFacade, ctx) => {\n            return await databaseFacade.deleteWhere(rawDelete, ctx);\n        });\n    }\n    async save(entity, ctx) {\n        return await this.withDbEntity(ctx, async (databaseFacade, ctx) => {\n            return await databaseFacade.save(entity, ctx);\n        });\n    }\n    /**\n     * @return ISaveResult object with metadata on saved objects\n     */\n    async saveToDestination(repositoryDestination, entity, ctx) {\n        return await this.withDbEntity(ctx, async (databaseFacade, ctx) => {\n            return await databaseFacade.saveToDestination(repositoryDestination, entity, ctx);\n        });\n    }\n    async withDbEntity(ctx, callback) {\n        if (!ctx) {\n            ctx = {};\n        }\n        if (!ctx.startedAt) {\n            ctx.startedAt = new Date();\n        }\n        const previousEntity = ctx.dbEntity;\n        ctx.dbEntity = this.dbEntity;\n        try {\n            return await callback(this.dao.databaseFacade, ctx);\n        }\n        finally {\n            ctx.dbEntity = previousEntity;\n        }\n    }\n}\n//# sourceMappingURL=EntityDatabaseFacade.js.map","export class DaoFindOneStub {\n    Graph(...args) {\n        throw new Error(`Cannot use this.stub.Find.Graph for manual queries (it\r\n\t\tis meant for prepared queries (with @\\${EntityName}Dao.Find).  Instead\r\n\t\tplease use this.db.find.graph`);\n    }\n    Tree(...args) {\n        throw new Error(`Cannot use this.stub.Find.Tree for manual queries (it\r\n\t\tis meant for prepared queries (with @\\${EntityName}Dao.Find).  Instead\r\n\t\tplease use this.db.find.tree`);\n    }\n}\n//# sourceMappingURL=DaoFindOneStub.js.map","export class DaoFindStub {\n    Graph(...args) {\n        throw new Error(`Cannot use this.stub.Find.Graph for manual queries (it\r\n\t\tis meant for prepared queries (with @\\${EntityName}Dao.Find).  Instead\r\n\t\tplease use this.db.find.graph`);\n    }\n    Tree(...args) {\n        throw new Error(`Cannot use this.stub.Find.Tree for manual queries (it\r\n\t\tis meant for prepared queries (with @\\${EntityName}Dao.Find).  Instead\r\n\t\tplease use this.db.find.tree`);\n    }\n}\n//# sourceMappingURL=DaoFindStub.js.map","export class DaoSearchOneStub {\n    Graph(...args) {\n        throw new Error(`Cannot use this.stub.SearchOne.Graph for manual queries (it\r\n\t\tis meant for prepared queries (with @\\${EntityName}Dao.SearchOne).  Instead\r\n\t\tplease use this.db.searchOne.graph`);\n    }\n    Tree(...args) {\n        throw new Error(`Cannot use this.stub.SearchOne.Tree for manual queries (it\r\n\t\tis meant for prepared queries (with @\\${EntityName}Dao.SearchOne).  Instead\r\n\t\tplease use this.db.searchOne.tree`);\n    }\n}\n//# sourceMappingURL=DaoSearchOneStub.js.map","export class DaoSearchStub {\n    Graph(...args) {\n        throw new Error(`Cannot use this.stub.Search.Graph for manual queries (it\r\n\t\tis meant for prepared queries (with @\\${EntityName}Dao.Search).  Instead\r\n\t\tplease use this.db.search.graph`);\n    }\n    Tree(...args) {\n        throw new Error(`Cannot use this.stub.Search.Tree for manual queries (it\r\n\t\tis meant for prepared queries (with @\\${EntityName}Dao.Search).  Instead\r\n\t\tplease use this.db.search.tree`);\n    }\n}\n//# sourceMappingURL=DaoSearchStub.js.map","import { DaoFindOneStub } from './DaoFindOneStub';\nimport { DaoFindStub } from './DaoFindStub';\nimport { DaoSearchOneStub } from './DaoSearchOneStub';\nimport { DaoSearchStub } from './DaoSearchStub';\nexport class DaoStub {\n    constructor() {\n        this.Find = new DaoFindStub();\n        this.FindOne = new DaoFindOneStub();\n        this.Search = new DaoSearchStub();\n        this.SearchOne = new DaoSearchOneStub();\n    }\n    save(entity) {\n        throw new Error(`Cannot use this.stub.save for manual queries (it\r\n\t\tis meant for prepared queries (with @\\${EntityName}Dao.Save).  Instead\r\n\t\tplease use this.db.save`);\n    }\n}\n//# sourceMappingURL=DaoStub.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { doEnsureContext, Y } from '@airport/air-traffic-control';\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { EntityDatabaseFacade } from '../EntityDatabaseFacade';\nimport { DaoStub } from './DaoStub';\n/**\n * Created by Papa on 8/26/2017.\n */\nlet Dao = class Dao {\n    constructor(dbEntityId, Q, internal = false) {\n        this.internal = internal;\n        this.stub = new DaoStub();\n        const dbEntity = Q.__dbApplication__.currentVersion[0]\n            .applicationVersion.entities[dbEntityId];\n        // TODO: figure out how to inject EntityDatabaseFacade and dependencies\n        this.db = new EntityDatabaseFacade(dbEntity, Q, this);\n    }\n    static BaseSave(config) {\n        return function (target, propertyKey) {\n            // No runtime logic required.\n        };\n    }\n    async count(context) {\n        throw new Error(`Not Implemented`);\n    }\n    exists(entityId, context) {\n        throw new Error(`Not Implemented`);\n    }\n    repositoryId() {\n        return {\n            actor: {\n                id: Y,\n                uuId: Y\n            },\n            actorRecordId: Y,\n            ageSuitability: Y,\n            repository: {\n                id: Y,\n                uuId: Y\n            }\n        };\n    }\n    async findAll(entityIds, context, cacheForUpdate = false) {\n        if (entityIds) {\n            throw new Error(`Not implemented`);\n        }\n        return await this.db.find.graph({\n            select: {},\n            from: [this.db.from],\n        }, context);\n    }\n    async findAllAsTrees(entityIds, context, cacheForUpdate = false) {\n        if (entityIds) {\n            throw new Error(`Not implemented`);\n        }\n        return await this.db.find.tree({\n            select: {},\n            from: [this.db.from],\n        }, context);\n    }\n    findById(entityId, context, cacheForUpdate = false) {\n        throw new Error(`Not implemented`);\n    }\n    async save(entity, context) {\n        return await this.db.save(entity, this.ensureContext(context));\n    }\n    markForDeletion(entityIdInfo, context) {\n        if (entityIdInfo instanceof Array) {\n            for (const anEntity of entityIdInfo) {\n                this.entityStateManager.markForDeletion(anEntity);\n            }\n        }\n        else {\n            this.entityStateManager.markForDeletion(entityIdInfo);\n        }\n    }\n    ensureContext(context) {\n        return doEnsureContext(context);\n    }\n};\n__decorate([\n    Inject()\n], Dao.prototype, \"airportDatabase\", void 0);\n__decorate([\n    Inject()\n], Dao.prototype, \"databaseFacade\", void 0);\n__decorate([\n    Inject()\n], Dao.prototype, \"entityStateManager\", void 0);\n__decorate([\n    Inject()\n], Dao.prototype, \"lookup\", void 0);\n__decorate([\n    Inject()\n], Dao.prototype, \"updateCacheManager\", void 0);\nDao = __decorate([\n    Injected()\n], Dao);\nexport { Dao };\n//# sourceMappingURL=Dao.js.map","export class DaoQueryDecorators {\n    Graph(callback) {\n        return function (target, propertyKey) {\n            // No runtime logic required.\n        };\n    }\n    Tree(callback) {\n        return function (target, propertyKey) {\n            // No runtime logic required.\n        };\n    }\n}\n//# sourceMappingURL=DaoQueryDecorators.js.map","export var ApiObjectKind;\n(function (ApiObjectKind) {\n    ApiObjectKind[\"ARRAY\"] = \"ARRAY\";\n    ApiObjectKind[\"BOOLEAN\"] = \"BOOLEAN\";\n    ApiObjectKind[\"BOOLEAN_VALUE\"] = \"BOOLEAN_VALUE\";\n    ApiObjectKind[\"DATE\"] = \"DATE\";\n    ApiObjectKind[\"DB_ENTITY\"] = \"DB_ENTITY\";\n    ApiObjectKind[\"NUMBER\"] = \"NUMBER\";\n    ApiObjectKind[\"NUMBER_VALUE\"] = \"NUMBER_VALUE\";\n    ApiObjectKind[\"OBJECT\"] = \"OBJECT\";\n    ApiObjectKind[\"STRING\"] = \"STRING\";\n    ApiObjectKind[\"STRING_VALUE\"] = \"STRING_VALUE\";\n    ApiObjectKind[\"TYPE_UNION\"] = \"TYPE_UNION\";\n})(ApiObjectKind || (ApiObjectKind = {}));\n//# sourceMappingURL=ApiOperation.js.map","import { Y, } from '@airport/air-traffic-control';\nimport { EntityRelationType } from '@airport/ground-control';\n/**\n * Created by Papa on 8/26/2017.\n */\nclass FieldsSelect {\n    constructor(dbEntity) {\n        this.dbEntity = dbEntity;\n    }\n    get ids() {\n        const propertyNames = this.dbEntity.properties\n            .filter(property => property.isId)\n            .map(property => property.name);\n        return this.getSelect(propertyNames, false);\n    }\n    get fields() {\n        const propertyNames = this.dbEntity.properties\n            .filter(property => !property.relation || !property.relation.length)\n            .map(property => property.name);\n        return this.getSelect(propertyNames, false);\n    }\n    get manyToOnes() {\n        return this.getRelationSelect(EntityRelationType.MANY_TO_ONE);\n    }\n    get oneToManys() {\n        return this.getRelationSelect(EntityRelationType.ONE_TO_MANY);\n    }\n    getRelationSelect(relationType) {\n        const propertyNames = this.dbEntity.properties\n            .filter(property => property.relation\n            && property.relation.length\n            && property.relation[0].relationType === relationType)\n            .map(property => property.name);\n        return this.getSelect(propertyNames, true);\n    }\n    getSelect(propertyNames, forRelations) {\n        const selectFragment = {};\n        for (const propertyName of propertyNames) {\n            selectFragment[propertyName] = forRelations ? {} : Y;\n        }\n        return selectFragment;\n    }\n}\n/**\n * Data Manipulation object.\n */\nexport class Duo {\n    constructor(dbEntityId, qApplication) {\n        if (typeof dbEntityId === 'number') {\n            this.dbEntity = qApplication.__dbApplication__.currentVersion[0]\n                .applicationVersion.entities[dbEntityId];\n        }\n        else {\n            this.dbEntity = dbEntityId;\n        }\n        this.select = new FieldsSelect(this.dbEntity);\n    }\n    getIdStub(ids) {\n        throw new Error(`Not Implemented.`);\n    }\n    getIdStubs(ids) {\n        throw new Error(`Not Implemented.`);\n    }\n}\nexport function getAllFieldsSelect(dbEntity) {\n    throw new Error(`Not implemented`);\n}\nexport const DUO = {\n    getAllFieldsSelect: getAllFieldsSelect,\n};\n//# sourceMappingURL=Duo.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { from } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nlet SelectorManager = class SelectorManager {\n    createSelector(...args) {\n        if (args.length < 2 || args.length > 6) {\n            throw new Error(`Invalid createSelector call, Expecting 1 to 5 selectors and a callback.`);\n        }\n        const inputSelectors = args.slice(0, args.length - 1);\n        const callback = args[args.length - 1];\n        let sourceObservable;\n        if (inputSelectors.length > 1) {\n            // TODO: check if this will work\n            sourceObservable = from(inputSelectors.map(selector => selector.observable));\n        }\n        else {\n            sourceObservable = inputSelectors[0].observable;\n        }\n        let observable = sourceObservable.pipe(\n        // share() TODO: implement once RxJs support is added\n        distinctUntilChanged(), map(value => callback(value)));\n        return this.getSelector(observable);\n    }\n    createRootSelector(stateObservable) {\n        return this.getSelector(stateObservable);\n    }\n    getSelector(observable) {\n        let selector = (function (\n        // otherStateObservable?: Observable<SV>\n        ) {\n            let currentValue;\n            observable.subscribe(value => currentValue = value).unsubscribe();\n            return currentValue;\n        });\n        selector.observable = observable;\n        return selector;\n    }\n};\nSelectorManager = __decorate([\n    Injected()\n], SelectorManager);\nexport { SelectorManager };\n//# sourceMappingURL=Selector.js.map","import { repositoryEntity } from '@airport/ground-control';\nexport function setSeqGen(sequenceGenerator) {\n    SEQ_GEN = sequenceGenerator;\n}\nvar SEQ_GEN;\nexport function diSet(dbApplication, dbEntityId // EntityId\n) {\n    if (!SEQ_GEN\n        || !dbApplication) {\n        return false;\n    }\n    const dbEntity = dbApplication.currentVersion[0]\n        .applicationVersion.entities[dbEntityId];\n    return SEQ_GEN.exists(dbEntity);\n}\nexport function duoDiSet(dbApplication, dbEntityId) {\n    return dbApplication && dbApplication.currentVersion[0]\n        .applicationVersion.entities[dbEntityId];\n}\nexport async function getSysWideOpId(airDb, sequenceGenerator) {\n    const sequences = await getSysWideOpIds(1, airDb, sequenceGenerator);\n    return sequences[0];\n}\nexport async function getSysWideOpIds(numSequencesNeeded, airportDatabase, sequenceGenerator) {\n    if (!numSequencesNeeded) {\n        return [];\n    }\n    const sysWideOpIdGeneratedColumn = airportDatabase.QM[repositoryEntity.SYS_WIDE_OP_ID_APPLICATION]\n        .__dbApplication__.currentVersion[0].applicationVersion\n        .entityMapByName[repositoryEntity.SYS_WIDE_OP_ID_ENTITY].columnMap['ID'];\n    const generatedNumWrapper = await sequenceGenerator\n        .generateSequenceNumbers([sysWideOpIdGeneratedColumn], [numSequencesNeeded]);\n    return generatedNumWrapper[0];\n}\n//# sourceMappingURL=SequenceGenerator.js.map","import { AIRPORT_DATABASE, DATABASE_FACADE, LOOKUP, UPDATE_CACHE_MANAGER } from '@airport/air-traffic-control';\nimport { lib } from '@airport/direction-indicator';\nimport { ENTITY_STATE_MANAGER } from '@airport/ground-control';\nimport { Dao } from './dao/Dao';\nimport { SelectorManager } from './Selector';\nconst checkIn = lib('check-in');\nexport const API_REGISTRY = checkIn.token({\n    class: null,\n    interface: 'IApiRegistry',\n    token: 'API_REGISTRY'\n});\nexport const API_VALIDATOR = checkIn.token({\n    class: null,\n    interface: 'IApiValidator',\n    token: 'API_VALIDATOR'\n});\nexport const CLIENT_QUERY_MANAGER = checkIn.token({\n    class: null,\n    interface: 'IClientQueryManager',\n    token: 'CLIENT_QUERY_MANAGER'\n});\nexport const DAO = checkIn.token({\n    class: Dao,\n    interface: 'class Dao',\n    token: 'DAO'\n});\nexport const OPERATION_DESERIALIZER = checkIn.token({\n    class: null,\n    interface: 'IOperationDeserializer',\n    token: 'OPERATION_DESERIALIZER'\n});\nexport const QUERY_PARAMETER_DESERIALIZER = checkIn.token({\n    class: null,\n    interface: 'IQueryParameterDeserializer',\n    token: 'QUERY_PARAMETER_DESERIALIZER'\n});\nexport const QUERY_RESULTS_SERIALIZER = checkIn.token({\n    class: null,\n    interface: 'IQueryParameterDeserializer',\n    token: 'QUERY_RESULTS_SERIALIZER'\n});\nexport const SELECTOR_MANAGER = checkIn.token({\n    class: SelectorManager,\n    interface: 'ISelectorManager',\n    token: 'SELECTOR_MANAGER'\n});\nexport const SEQUENCE_GENERATOR = checkIn.token({\n    class: null,\n    interface: 'ISequenceGenerator',\n    token: 'SEQUENCE_GENERATOR'\n});\nDAO.setDependencies({\n    airportDatabase: AIRPORT_DATABASE,\n    databaseFacade: DATABASE_FACADE,\n    entityStateManager: ENTITY_STATE_MANAGER,\n    lookup: LOOKUP,\n    updateCacheManager: UPDATE_CACHE_MANAGER\n});\n//# sourceMappingURL=tokens.js.map","import { lib } from '@airport/direction-indicator';\nimport { TerminalStore } from './store/TerminalStore';\nimport { OPERATION_CONTEXT_LOADER, TRANSACTIONAL_CONNECTOR } from '@airport/ground-control';\nimport { SELECTOR_MANAGER, SEQUENCE_GENERATOR } from '@airport/check-in';\nimport { AIRPORT_DATABASE } from '@airport/air-traffic-control';\nconst terminalMap = lib('terminal-map');\nexport const APPLICATION_INITIALIZER = terminalMap.token({\n    class: null,\n    interface: 'IApplicationInitializer',\n    token: 'APPLICATION_INITIALIZER'\n});\nexport const DOMAIN_RETRIEVER = terminalMap.token({\n    class: null,\n    interface: 'IDomainRetriever',\n    token: 'DOMAIN_RETRIEVER'\n});\nexport const STORE_DRIVER = terminalMap.token({\n    class: null,\n    interface: 'IStoreDriver',\n    token: 'STORE_DRIVER'\n});\nexport const TERMINAL_STORE = terminalMap.token({\n    class: TerminalStore,\n    interface: 'ITerminalStore',\n    token: 'TERMINAL_STORE'\n});\nexport const TRANSACTION_MANAGER = terminalMap.token({\n    class: null,\n    interface: 'ITransactionManager',\n    token: 'TRANSACTION_MANAGER'\n});\nexport const TRANSACTIONAL_RECEIVER = terminalMap.token({\n    class: null,\n    interface: 'ITransactionalReceiver',\n    token: 'TRANSACTIONAL_RECEIVER'\n});\nexport const TRANSACTIONAL_SERVER = terminalMap.token({\n    class: null,\n    interface: 'ITransactionalServer',\n    token: 'TRANSACTIONAL_SERVER'\n});\nAPPLICATION_INITIALIZER.setDependencies({\n    airportDatabase: AIRPORT_DATABASE,\n    sequenceGenerator: SEQUENCE_GENERATOR,\n    terminalStore: TERMINAL_STORE\n});\nDOMAIN_RETRIEVER.setDependencies({\n    transactionalConnector: TRANSACTIONAL_CONNECTOR\n});\nTERMINAL_STORE.setDependencies({\n    selectorManager: SELECTOR_MANAGER\n});\nTRANSACTION_MANAGER.setDependencies({\n    storeDriver: STORE_DRIVER,\n    terminalStore: TERMINAL_STORE\n});\nTRANSACTIONAL_RECEIVER.setDependencies({\n    applicationInitializer: APPLICATION_INITIALIZER\n});\nTRANSACTIONAL_SERVER.setDependencies({\n    operationContextLoader: OPERATION_CONTEXT_LOADER,\n    terminalStore: TERMINAL_STORE,\n    transactionManager: TRANSACTION_MANAGER\n});\n//# sourceMappingURL=tokens.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet RepositoryLoader = class RepositoryLoader {\n    /*\n    Repository can be loaded because:\n    - Repository is not present at all\n    - Central: Last non-local Transaction Log timestamp is too old\n    - Distributed:  Also stale timestamp but not as frequently (maybe once an hour)\n    Immutable repositories are only loaded once\n    */\n    async loadRepository(repositorySource, repositoryUuId, context) {\n        if (context.repositoryExistenceChecked) {\n            return;\n        }\n        context.repositoryExistenceChecked = true;\n        const repositoryLoadInfo = await this.repositoryDao.getRepositoryLoadInfo(repositorySource, repositoryUuId, context);\n        let loadRepository = false;\n        let lastSyncTimestamp = 0;\n        if (!repositoryLoadInfo) {\n            loadRepository = true;\n        }\n        else if (!repositoryLoadInfo.immutable) {\n            loadRepository = true;\n            for (const remoteRepositoryTransactionHistory of repositoryLoadInfo.repositoryTransactionHistory) {\n                if (lastSyncTimestamp < remoteRepositoryTransactionHistory.saveTimestamp) {\n                    lastSyncTimestamp = remoteRepositoryTransactionHistory.saveTimestamp;\n                }\n            }\n        }\n        if (!loadRepository) {\n            return;\n        }\n        const now = new Date().getTime();\n        const synchronizationAdapter = await this.synchronizationAdapterLoader\n            .load(repositorySource);\n        let messages;\n        try {\n            if (lastSyncTimestamp) {\n                // If it's been less than 10 seconds, don't retrieve the repository\n                if (lastSyncTimestamp >= now - 10000) {\n                    return;\n                }\n                // Check 100 seconds back, in case there were update issues\n                lastSyncTimestamp -= 100000;\n                messages = await synchronizationAdapter.getTransactionsForRepository(repositorySource, repositoryUuId, lastSyncTimestamp);\n            }\n            else {\n                messages = await synchronizationAdapter.getTransactionsForRepository(repositorySource, repositoryUuId);\n            }\n            // TODO: Add a special message for repository for adding users\n            // into the repository \n            // each user will have a public key that they will distribute\n            // each message is signed with the private key and the initial\n            // message for repository is CREATE_REPOSITORY with the public \n            // key of the owner user\n            const messageMapByUuId = new Map();\n            for (const message of messages) {\n                messageMapByUuId.set(message.history.uuId, message);\n            }\n            await this.synchronizationInManager.receiveMessages(messageMapByUuId, context);\n        }\n        catch (e) {\n            console.error(e);\n            return;\n        }\n    }\n};\n__decorate([\n    Inject()\n], RepositoryLoader.prototype, \"repositoryDao\", void 0);\n__decorate([\n    Inject()\n], RepositoryLoader.prototype, \"synchronizationAdapterLoader\", void 0);\n__decorate([\n    Inject()\n], RepositoryLoader.prototype, \"synchronizationInManager\", void 0);\nRepositoryLoader = __decorate([\n    Injected()\n], RepositoryLoader);\nexport { RepositoryLoader };\n//# sourceMappingURL=RepositoryLoader.js.map","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { and, } from '@airport/air-traffic-control';\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { REPOSITORY_FIELD, } from '@airport/terminal-map';\nimport { v4 as uuidv4 } from \"uuid\";\nlet RepositoryManager = class RepositoryManager {\n    async initialize() {\n    }\n    async createRepository(actor, context) {\n        if (context.newRepository) {\n            throw new Error(`Cannot create more than one repository per transaction:\r\nAttempting to create a new repository and Operation Context\r\nalready contains a new repository.`);\n        }\n        let repository = await this.createRepositoryRecord(actor, context);\n        context.newRepository = repository;\n        return repository;\n    }\n    goOffline() {\n        throw new Error(`not implemented`);\n    }\n    getUpdateState(repository) {\n        throw new Error(`not implemented`);\n    }\n    setUpdateStateForAll(updateState) {\n        throw new Error(`not implemented`);\n    }\n    setUpdateState(repository, updateState) {\n        throw new Error(`not implemented`);\n    }\n    getRepositoryRecord(actor) {\n        const repository = {\n            ageSuitability: 0,\n            createdAt: new Date(),\n            id: null,\n            immutable: false,\n            owner: actor.user,\n            // platformConfig: platformConfig ? JSON.stringify(platformConfig) : null,\n            // platformConfig: null,\n            repositoryTransactionHistory: [],\n            source: 'localhost:9000',\n            uuId: uuidv4(),\n        };\n        return repository;\n    }\n    async createRepositoryRecord(actor, context) {\n        const repository = this.getRepositoryRecord(actor);\n        await this.repositoryDao.save(repository, context);\n        return repository;\n    }\n    ensureRepositoryScopeOnInsertValues(repository, rawInsertValues) {\n        let qEntity = rawInsertValues.insertInto;\n        if (!qEntity.__driver__.dbEntity.isRepositoryEntity) {\n            return rawInsertValues;\n        }\n        let columns = rawInsertValues.columns.slice();\n        if (columns.some((column, index) => {\n            // return column.fieldName === REPOSITORY_FIELD\n            return column.dbProperty.name === REPOSITORY_FIELD;\n        })) {\n            return rawInsertValues;\n        }\n        columns.push(qEntity[REPOSITORY_FIELD]);\n        let values = rawInsertValues.values.slice();\n        for (let i = 0; i < values.length; i++) {\n            let row = values[i].slice();\n            values[i] = row;\n            row.push(repository.id);\n        }\n        return {\n            insertInto: qEntity, columns: columns, values: values\n        };\n    }\n    ensureRepositoryLinkOnUpdateWhere(qEntity, repository, rawUpdate) {\n        if (!qEntity.__driver__.dbEntity.isRepositoryEntity) {\n            return;\n        }\n        return {\n            update: rawUpdate.update,\n            set: rawUpdate.set,\n            where: and(rawUpdate.where, qEntity.repository.id.equals(repository.id))\n        };\n    }\n    ensureRepositoryScopeOnDeleteWhere(qEntity, repository, rawDelete) {\n        if (!qEntity.__driver__.dbEntity.isRepositoryEntity) {\n            return;\n        }\n        return {\n            deleteFrom: rawDelete.deleteFrom,\n            where: and(rawDelete.where, qEntity.repository.id.equals(repository.id))\n        };\n    }\n};\n__decorate([\n    Inject()\n], RepositoryManager.prototype, \"repositoryDao\", void 0);\nRepositoryManager = __decorate([\n    Injected()\n], RepositoryManager);\nexport { RepositoryManager };\n//# sourceMappingURL=RepositoryManager.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbNumber, DbString, Entity, GeneratedValue, Id, JoinColumn, ManyToOne, OneToMany, SequenceGenerator, Table } from '@airport/air-traffic-control';\n/**\n * Marks a group of mutation history changes.\n */\nlet OperationHistory = class OperationHistory {\n    constructor() {\n        this.recordHistory = [];\n    }\n};\n__decorate([\n    GeneratedValue(),\n    SequenceGenerator({ allocationSize: 600 }),\n    Id()\n], OperationHistory.prototype, \"id\", void 0);\n__decorate([\n    Column({ name: 'ORDER_NUMBER', nullable: false }),\n    DbNumber()\n], OperationHistory.prototype, \"orderNumber\", void 0);\n__decorate([\n    Column({ name: 'CHANGE_TYPE', nullable: false }),\n    DbString()\n], OperationHistory.prototype, \"changeType\", void 0);\n__decorate([\n    Column({ name: 'SYSTEM_WIDE_OPERATION_ID', nullable: false }),\n    DbNumber()\n], OperationHistory.prototype, \"systemWideOperationId\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({ name: 'ENTITY_ID', referencedColumnName: 'ID', nullable: false })\n], OperationHistory.prototype, \"entity\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'ACTOR_ID', referencedColumnName: 'ID',\n        nullable: false\n    })\n], OperationHistory.prototype, \"actor\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'REPOSITORY_TRANSACTION_HISTORY_ID', referencedColumnName: 'ID',\n        nullable: false\n    })\n], OperationHistory.prototype, \"repositoryTransactionHistory\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'operationHistory' })\n], OperationHistory.prototype, \"recordHistory\", void 0);\nOperationHistory = __decorate([\n    Entity(),\n    Table({ name: 'REPOSITORY_OPERATION_HISTORY' })\n], OperationHistory);\nexport { OperationHistory };\n//# sourceMappingURL=OperationHistory.js.map","/**\n * Created by Papa on 8/20/2016.\n */\nexport const Entity = function () {\n    return function (constructor) {\n        // No runtime logic required.\n    };\n};\nexport const Table = function (tableConfiguration) {\n    return function (constructor) {\n        // No runtime logic required.\n    };\n};\nexport const MappedSuperclass = function () {\n    return function (constructor) {\n    };\n};\n//# sourceMappingURL=EntityDecorators.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbNumber, Entity, GeneratedValue, Id, JoinColumn, ManyToOne, OneToMany, SequenceGenerator, Table, Transient } from '@airport/air-traffic-control';\nlet RecordHistory = class RecordHistory {\n    constructor() {\n        this.newValues = [];\n        this.oldValues = [];\n    }\n};\n__decorate([\n    Id(),\n    GeneratedValue(),\n    SequenceGenerator({ allocationSize: 2000 })\n], RecordHistory.prototype, \"id\", void 0);\n__decorate([\n    Column({ name: 'ACTOR_RECORD_ID', nullable: false }),\n    DbNumber()\n], RecordHistory.prototype, \"actorRecordId\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'ACTOR_ID', referencedColumnName: 'ID', nullable: false\n    })\n], RecordHistory.prototype, \"actor\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'REPOSITORY_OPERATION_HISTORY_ID', referencedColumnName: 'ID',\n        nullable: false\n    })\n], RecordHistory.prototype, \"operationHistory\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'recordHistory' })\n], RecordHistory.prototype, \"newValues\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'recordHistory' })\n], RecordHistory.prototype, \"oldValues\", void 0);\n__decorate([\n    Transient()\n], RecordHistory.prototype, \"tableColumnMap\", void 0);\nRecordHistory = __decorate([\n    Entity(),\n    Table({\n        name: 'REPOSITORY_RECORD_HISTORY',\n        indexes: [{\n                name: 'RCRD_HSTR_TO_OPRTN_HSTR_FX',\n                columnList: [\n                    'REPOSITORY_OPERATION_HISTORY_ID'\n                ],\n                unique: false\n            }]\n    })\n], RecordHistory);\nexport { RecordHistory };\n//# sourceMappingURL=RecordHistory.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbAny, DbNumber, Entity, Id, JoinColumn, ManyToOne, Table } from \"@airport/air-traffic-control\";\n/**\n * Currently, syncing databases are always SqLite dbs.  This means\n * we don't need to store types for values.  If a need arises type\n * specific FieldChange classes can always be added.  Having\n * VARCHAR and NUMBER should suffice for other db implementations.\n * NUMBER covers (dates, booleans and numbers).  Maybe REALs will\n * also be required.\n */\nlet RecordHistoryNewValue = class RecordHistoryNewValue {\n};\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({ name: \"REPOSITORY_RECORD_HISTORY_ID\",\n        referencedColumnName: \"ID\", nullable: false })\n], RecordHistoryNewValue.prototype, \"recordHistory\", void 0);\n__decorate([\n    Id(),\n    Column({ name: \"COLUMN_INDEX\", nullable: false }),\n    DbNumber()\n], RecordHistoryNewValue.prototype, \"columnIndex\", void 0);\n__decorate([\n    Column({ name: \"NEW_VALUE\" }),\n    DbAny()\n], RecordHistoryNewValue.prototype, \"newValue\", void 0);\nRecordHistoryNewValue = __decorate([\n    Entity(),\n    Table({\n        name: \"REPOSITORY_RECORD_HISTORY_NEW_VALUES\",\n        // primaryKey: [\n        // \t\"REPOSITORY_RECORD_HISTORY_ID\",\n        // \t\"COLUMN_INDEX\"\n        // ]\n    })\n], RecordHistoryNewValue);\nexport { RecordHistoryNewValue };\n//# sourceMappingURL=RecordHistoryNewValue.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbAny, DbNumber, Entity, Id, JoinColumn, ManyToOne, Table } from \"@airport/air-traffic-control\";\n/**\n * Currently, syncing databases are always SqLite dbs.  This means\n * we don't need to store types for values.  If a need arises type\n * specific FieldChange classes can always be added.  Having\n * VARCHAR and NUMBER should suffice for other db implementations.\n * NUMBER covers (dates, booleans and numbers).  Maybe REALs will\n * also be required.\n */\nlet RecordHistoryOldValue = class RecordHistoryOldValue {\n};\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({ name: \"REPOSITORY_RECORD_HISTORY_ID\",\n        referencedColumnName: \"ID\", nullable: false })\n], RecordHistoryOldValue.prototype, \"recordHistory\", void 0);\n__decorate([\n    Id(),\n    Column({ name: \"COLUMN_INDEX\", nullable: false }),\n    DbNumber()\n], RecordHistoryOldValue.prototype, \"columnIndex\", void 0);\n__decorate([\n    Column({ name: \"OLD_VALUE\" }),\n    DbAny()\n], RecordHistoryOldValue.prototype, \"oldValue\", void 0);\nRecordHistoryOldValue = __decorate([\n    Entity(),\n    Table({\n        name: \"REPOSITORY_RECORD_HISTORY_OLD_VALUES\",\n        // primaryKey: [\n        // \t\"REPOSITORY_RECORD_HISTORY_ID\",\n        // \t\"COLUMN_INDEX\"\n        // ]\n    })\n], RecordHistoryOldValue);\nexport { RecordHistoryOldValue };\n//# sourceMappingURL=RecordHistoryOldValue.js.map","export var RepositoryTransactionType;\n(function (RepositoryTransactionType) {\n    RepositoryTransactionType[\"LOCAL\"] = \"LOCAL\";\n    RepositoryTransactionType[\"REMOTE\"] = \"REMOTE\";\n    RepositoryTransactionType[\"REMOTE_REFERENCE\"] = \"REMOTE_REFERENCE\";\n})(RepositoryTransactionType || (RepositoryTransactionType = {}));\n//# sourceMappingURL=RepositoryTransactionType.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbBoolean, DbNumber, DbString, Entity, GeneratedValue, Id, JoinColumn, ManyToOne, OneToMany, SequenceGenerator, Table, } from '@airport/air-traffic-control';\nimport { RepositoryTransactionType } from './RepositoryTransactionType';\nlet RepositoryTransactionHistory = class RepositoryTransactionHistory {\n    constructor(data) {\n        this.repositoryTransactionType = RepositoryTransactionType.LOCAL;\n        this.operationHistory = [];\n        if (!data) {\n            return;\n        }\n        this.id = data.id;\n        this.transactionHistory = data.transactionHistory;\n        this.repository = data.repository;\n        this.saveTimestamp = data.saveTimestamp;\n        this.operationHistory = data.operationHistory;\n    }\n};\n__decorate([\n    GeneratedValue(),\n    Id(),\n    SequenceGenerator({ allocationSize: 200 })\n], RepositoryTransactionHistory.prototype, \"id\", void 0);\n__decorate([\n    Column({ name: 'REPOSITORY_TRANSACTION_TYPE', nullable: false }),\n    DbString()\n], RepositoryTransactionHistory.prototype, \"repositoryTransactionType\", void 0);\n__decorate([\n    Column({ name: 'SAVE_TIMESTAMP', nullable: false }),\n    DbNumber()\n], RepositoryTransactionHistory.prototype, \"saveTimestamp\", void 0);\n__decorate([\n    Column({ name: 'SYNC_TIMESTAMP' }),\n    DbNumber()\n], RepositoryTransactionHistory.prototype, \"syncTimestamp\", void 0);\n__decorate([\n    Column({ name: \"UUID\", nullable: false }),\n    DbString()\n], RepositoryTransactionHistory.prototype, \"uuId\", void 0);\n__decorate([\n    Column({ name: \"IS_REPOSITORY_CREATION\", nullable: false }),\n    DbBoolean()\n], RepositoryTransactionHistory.prototype, \"isRepositoryCreation\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'REPOSITORY_ID',\n        referencedColumnName: 'ID', nullable: false\n    })\n], RepositoryTransactionHistory.prototype, \"repository\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'TRANSACTION_HISTORY_ID',\n        referencedColumnName: 'ID', nullable: false\n    })\n], RepositoryTransactionHistory.prototype, \"transactionHistory\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'repositoryTransactionHistory' })\n], RepositoryTransactionHistory.prototype, \"operationHistory\", void 0);\nRepositoryTransactionHistory = __decorate([\n    Entity(),\n    Table({ name: 'REPOSITORY_TRANSACTION_HISTORY' })\n], RepositoryTransactionHistory);\nexport { RepositoryTransactionHistory };\n//# sourceMappingURL=RepositoryTransactionHistory.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbString, Entity, GeneratedValue, Id, OneToMany, SequenceGenerator, Table, Transient } from '@airport/air-traffic-control';\nimport { SyncApplicationMap } from '@airport/ground-control';\nlet TransactionHistory = class TransactionHistory {\n    constructor() {\n        this.repositoryTransactionHistories = [];\n        this.repositoryTransactionHistoryMap = {};\n        this.applicationMap = new SyncApplicationMap();\n        this.allOperationHistory = [];\n        this.allRecordHistory = [];\n        this.allRecordHistoryNewValues = [];\n        this.allRecordHistoryOldValues = [];\n    }\n};\n__decorate([\n    GeneratedValue(),\n    Id(),\n    SequenceGenerator({ allocationSize: 100 })\n], TransactionHistory.prototype, \"id\", void 0);\n__decorate([\n    Column({ name: 'TRANSACTION_TYPE', nullable: false }),\n    DbString()\n], TransactionHistory.prototype, \"transactionType\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'transactionHistory' })\n], TransactionHistory.prototype, \"repositoryTransactionHistories\", void 0);\n__decorate([\n    Transient()\n], TransactionHistory.prototype, \"repositoryTransactionHistoryMap\", void 0);\n__decorate([\n    Transient()\n], TransactionHistory.prototype, \"applicationMap\", void 0);\n__decorate([\n    Transient()\n], TransactionHistory.prototype, \"allOperationHistory\", void 0);\n__decorate([\n    Transient()\n], TransactionHistory.prototype, \"allRecordHistory\", void 0);\n__decorate([\n    Transient()\n], TransactionHistory.prototype, \"allRecordHistoryNewValues\", void 0);\n__decorate([\n    Transient()\n], TransactionHistory.prototype, \"allRecordHistoryOldValues\", void 0);\nTransactionHistory = __decorate([\n    Entity(),\n    Table({ name: 'TRANSACTION_HISTORY' })\n], TransactionHistory);\nexport { TransactionHistory };\n//# sourceMappingURL=TransactionHistory.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbNumber, DbString, Entity, GeneratedValue, Id, JoinColumn, ManyToOne, } from '@airport/air-traffic-control';\nlet Actor = class Actor {\n};\n__decorate([\n    Id(),\n    GeneratedValue(),\n    DbNumber(),\n    Column({ name: 'ID' })\n], Actor.prototype, \"id\", void 0);\n__decorate([\n    Column({ name: 'UU_ID', nullable: false }),\n    DbString()\n], Actor.prototype, \"uuId\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'USER_ID', referencedColumnName: 'ID',\n        nullable: false\n    })\n], Actor.prototype, \"user\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'TERMINAL_ID', referencedColumnName: 'ID',\n        nullable: false\n    })\n], Actor.prototype, \"terminal\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({ name: \"APPLICATION_INDEX\", referencedColumnName: \"APPLICATION_INDEX\" })\n], Actor.prototype, \"application\", void 0);\nActor = __decorate([\n    Entity()\n], Actor);\nexport { Actor };\n//# sourceMappingURL=Actor.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbDate, DbNumber, DbString, Entity, GeneratedValue, Id, JoinColumn, ManyToOne, OneToMany, Table } from \"@airport/air-traffic-control\";\nlet Repository = class Repository {\n    constructor() {\n        this.repositoryTransactionHistory = [];\n    }\n};\n__decorate([\n    Column({ name: \"ID\" }),\n    GeneratedValue(),\n    Id(),\n    DbNumber()\n], Repository.prototype, \"id\", void 0);\n__decorate([\n    Column({ name: 'AGE_SUITABILITY', nullable: false }),\n    DbNumber()\n], Repository.prototype, \"ageSuitability\", void 0);\n__decorate([\n    Column({ name: \"CREATED_AT\", nullable: false }),\n    DbDate()\n], Repository.prototype, \"createdAt\", void 0);\n__decorate([\n    Column({ name: \"IMMUTABLE\", nullable: false })\n], Repository.prototype, \"immutable\", void 0);\n__decorate([\n    Column({ name: \"SOURCE\", nullable: false }),\n    DbString()\n], Repository.prototype, \"source\", void 0);\n__decorate([\n    Column({ name: \"UU_ID\", nullable: false }),\n    DbString()\n], Repository.prototype, \"uuId\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: \"OWNER_USER_ID\", referencedColumnName: \"ID\",\n        nullable: false\n    })\n], Repository.prototype, \"owner\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'repository' })\n], Repository.prototype, \"repositoryTransactionHistory\", void 0);\nRepository = __decorate([\n    Entity(),\n    Table({\n        name: \"REPOSITORY\"\n    })\n], Repository);\nexport { Repository };\n//# sourceMappingURL=Repository.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbNumber, GeneratedValue, Id, JoinColumn, ManyToOne, MappedSuperclass } from '@airport/air-traffic-control';\nlet RepositoryEntity = class RepositoryEntity {\n};\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({\n        name: 'REPOSITORY_ID', referencedColumnName: 'ID',\n        nullable: false\n    })\n], RepositoryEntity.prototype, \"repository\", void 0);\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({\n        name: 'ACTOR_ID', referencedColumnName: 'ID',\n        nullable: false\n    })\n], RepositoryEntity.prototype, \"actor\", void 0);\n__decorate([\n    Id(),\n    Column({ name: 'ACTOR_RECORD_ID', nullable: false }),\n    GeneratedValue()\n], RepositoryEntity.prototype, \"actorRecordId\", void 0);\n__decorate([\n    Column({ name: 'AGE_SUITABILITY', nullable: false }),\n    DbNumber()\n], RepositoryEntity.prototype, \"ageSuitability\", void 0);\n__decorate([\n    Column({ name: 'SYSTEM_WIDE_OPERATION_ID', nullable: false })\n], RepositoryEntity.prototype, \"systemWideOperationId\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'ORIGINAL_REPOSITORY_ID', referencedColumnName: 'ID'\n    })\n], RepositoryEntity.prototype, \"originalRepository\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'ORIGINAL_ACTOR_ID', referencedColumnName: 'ID'\n    })\n], RepositoryEntity.prototype, \"originalActor\", void 0);\n__decorate([\n    Column({ name: 'ORIGINAL_ACTOR_RECORD_ID' })\n], RepositoryEntity.prototype, \"originalActorRecordId\", void 0);\nRepositoryEntity = __decorate([\n    MappedSuperclass()\n], RepositoryEntity);\nexport { RepositoryEntity };\n//# sourceMappingURL=RepositoryEntity.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbNumber, Entity, GeneratedValue, Id, JoinColumn, ManyToOne, Table } from \"@airport/air-traffic-control\";\nlet RepositoryApplication = class RepositoryApplication {\n};\n__decorate([\n    Id(),\n    Column({ name: \"REPOSITORY_APPLICATION_ID\" }),\n    GeneratedValue(),\n    DbNumber()\n], RepositoryApplication.prototype, \"id\", void 0);\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({ name: \"REPOSITORY_ID\", referencedColumnName: \"ID\" })\n], RepositoryApplication.prototype, \"repository\", void 0);\n__decorate([\n    Column({ name: \"APPLICATION_INDEX\", nullable: false }),\n    DbNumber()\n], RepositoryApplication.prototype, \"applicationIndex\", void 0);\nRepositoryApplication = __decorate([\n    Entity(),\n    Table({\n        name: \"REPOSITORY_APPLICATIONS\"\n    })\n], RepositoryApplication);\nexport { RepositoryApplication };\n//# sourceMappingURL=RepositoryApplication.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { MappedSuperclass } from '@airport/air-traffic-control';\nimport { RepositoryEntity } from '../repository/RepositoryEntity';\nlet ChildRepoRow = class ChildRepoRow extends RepositoryEntity {\n};\nChildRepoRow = __decorate([\n    MappedSuperclass()\n], ChildRepoRow);\nexport { ChildRepoRow };\n//# sourceMappingURL=ChildRepoRow.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { MappedSuperclass } from '@airport/air-traffic-control';\nlet ChildRow = class ChildRow {\n};\nChildRow = __decorate([\n    MappedSuperclass()\n], ChildRow);\nexport { ChildRow };\n//# sourceMappingURL=ChildRow.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, MappedSuperclass } from '@airport/air-traffic-control';\nimport { RepositoryEntity } from '../repository/RepositoryEntity';\nlet ImmutableRepoRow = class ImmutableRepoRow extends RepositoryEntity {\n};\n__decorate([\n    Column({ name: 'CREATED_AT' })\n], ImmutableRepoRow.prototype, \"createdAt\", void 0);\nImmutableRepoRow = __decorate([\n    MappedSuperclass()\n], ImmutableRepoRow);\nexport { ImmutableRepoRow };\n//# sourceMappingURL=ImmutableRepoRow.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, JoinColumn, ManyToOne, MappedSuperclass } from '@airport/air-traffic-control';\nlet ImmutableRow = class ImmutableRow {\n};\n__decorate([\n    ManyToOne(),\n    JoinColumn({ name: 'USER_ACCOUNT_ID' })\n], ImmutableRow.prototype, \"user\", void 0);\n__decorate([\n    Column({ name: 'CREATED_AT' })\n], ImmutableRow.prototype, \"createdAt\", void 0);\nImmutableRow = __decorate([\n    MappedSuperclass()\n], ImmutableRow);\nexport { ImmutableRow };\n//# sourceMappingURL=ImmutableRow.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, MappedSuperclass } from '@airport/air-traffic-control';\nimport { ImmutableRepoRow } from './ImmutableRepoRow';\nlet MutableRepoRow = class MutableRepoRow extends ImmutableRepoRow {\n};\n__decorate([\n    Column({ name: 'UPDATED_AT' })\n], MutableRepoRow.prototype, \"updatedAt\", void 0);\nMutableRepoRow = __decorate([\n    MappedSuperclass()\n], MutableRepoRow);\nexport { MutableRepoRow };\n//# sourceMappingURL=MutableRepoRow.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, MappedSuperclass } from '@airport/air-traffic-control';\nimport { ImmutableRow } from './ImmutableRow';\nlet MutableRow = class MutableRow extends ImmutableRow {\n};\n__decorate([\n    Column({ name: 'UPDATED_AT' })\n], MutableRow.prototype, \"updatedAt\", void 0);\nMutableRow = __decorate([\n    MappedSuperclass()\n], MutableRow);\nexport { MutableRow };\n//# sourceMappingURL=MutableRow.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { MappedSuperclass } from '@airport/air-traffic-control';\nlet ReferenceRow = class ReferenceRow {\n};\nReferenceRow = __decorate([\n    MappedSuperclass()\n], ReferenceRow);\nexport { ReferenceRow };\n//# sourceMappingURL=ReferenceRow.js.map","import { AIRPORT_DATABASE } from '@airport/air-traffic-control';\nimport { diSet as dS, duoDiSet as ddS } from '@airport/check-in';\nimport { DEPENDENCY_INJECTION } from '@airport/direction-indicator';\nimport { getFullApplicationName } from '@airport/ground-control';\nimport { Actor, ChildRepoRow, ChildRow, ImmutableRepoRow, ImmutableRow, MutableRepoRow, MutableRow, OperationHistory, RecordHistory, RecordHistoryNewValue, RecordHistoryOldValue, ReferenceRow, Repository, RepositoryApplication, RepositoryEntity, RepositoryTransactionHistory, TransactionHistory } from '../ddl/ddl';\nconst __constructors__ = {\n    Actor: Actor,\n    ChildRepoRow: ChildRepoRow,\n    ChildRow: ChildRow,\n    ImmutableRepoRow: ImmutableRepoRow,\n    ImmutableRow: ImmutableRow,\n    MutableRepoRow: MutableRepoRow,\n    MutableRow: MutableRow,\n    OperationHistory: OperationHistory,\n    RecordHistory: RecordHistory,\n    RecordHistoryNewValue: RecordHistoryNewValue,\n    RecordHistoryOldValue: RecordHistoryOldValue,\n    ReferenceRow: ReferenceRow,\n    Repository: Repository,\n    RepositoryApplication: RepositoryApplication,\n    RepositoryEntity: RepositoryEntity,\n    RepositoryTransactionHistory: RepositoryTransactionHistory,\n    TransactionHistory: TransactionHistory\n};\nexport const Q_APPLICATION = {\n    __constructors__,\n    domain: 'air',\n    name: '@airport/holding-pattern'\n};\nexport const Q = Q_APPLICATION;\nexport function diSet(dbEntityId) {\n    return dS(Q.__dbApplication__, dbEntityId);\n}\nexport function duoDiSet(dbEntityId) {\n    return ddS(Q.__dbApplication__, dbEntityId);\n}\nDEPENDENCY_INJECTION.db().eventuallyGet(AIRPORT_DATABASE).then((airDb) => {\n    airDb.QM[getFullApplicationName(Q_APPLICATION)] = Q;\n});\n//# sourceMappingURL=qApplication.js.map","import { Dao, DaoQueryDecorators, } from '@airport/check-in';\nimport { Q, duoDiSet, } from './qApplication';\n// Application Q object Dependency Injection readiness detection Dao\nexport class SQDIDao extends Dao {\n    constructor(dbEntityId) {\n        super(dbEntityId, Q);\n    }\n}\nexport class BaseActorDao extends SQDIDao {\n    constructor() {\n        super(1);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(1);\n    }\n}\nBaseActorDao.Find = new DaoQueryDecorators();\nBaseActorDao.FindOne = new DaoQueryDecorators();\nBaseActorDao.Search = new DaoQueryDecorators();\nBaseActorDao.SearchOne = new DaoQueryDecorators();\nexport class BaseOperationHistoryDao extends SQDIDao {\n    constructor() {\n        super(5);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(5);\n    }\n}\nBaseOperationHistoryDao.Find = new DaoQueryDecorators();\nBaseOperationHistoryDao.FindOne = new DaoQueryDecorators();\nBaseOperationHistoryDao.Search = new DaoQueryDecorators();\nBaseOperationHistoryDao.SearchOne = new DaoQueryDecorators();\nexport class BaseRecordHistoryDao extends SQDIDao {\n    constructor() {\n        super(0);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(0);\n    }\n}\nBaseRecordHistoryDao.Find = new DaoQueryDecorators();\nBaseRecordHistoryDao.FindOne = new DaoQueryDecorators();\nBaseRecordHistoryDao.Search = new DaoQueryDecorators();\nBaseRecordHistoryDao.SearchOne = new DaoQueryDecorators();\nexport class BaseRecordHistoryNewValueDao extends SQDIDao {\n    constructor() {\n        super(6);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(6);\n    }\n}\nBaseRecordHistoryNewValueDao.Find = new DaoQueryDecorators();\nBaseRecordHistoryNewValueDao.FindOne = new DaoQueryDecorators();\nBaseRecordHistoryNewValueDao.Search = new DaoQueryDecorators();\nBaseRecordHistoryNewValueDao.SearchOne = new DaoQueryDecorators();\nexport class BaseRecordHistoryOldValueDao extends SQDIDao {\n    constructor() {\n        super(7);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(7);\n    }\n}\nBaseRecordHistoryOldValueDao.Find = new DaoQueryDecorators();\nBaseRecordHistoryOldValueDao.FindOne = new DaoQueryDecorators();\nBaseRecordHistoryOldValueDao.Search = new DaoQueryDecorators();\nBaseRecordHistoryOldValueDao.SearchOne = new DaoQueryDecorators();\nexport class BaseRepositoryDao extends SQDIDao {\n    constructor() {\n        super(2);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(2);\n    }\n}\nBaseRepositoryDao.Find = new DaoQueryDecorators();\nBaseRepositoryDao.FindOne = new DaoQueryDecorators();\nBaseRepositoryDao.Search = new DaoQueryDecorators();\nBaseRepositoryDao.SearchOne = new DaoQueryDecorators();\nexport class BaseRepositoryApplicationDao extends SQDIDao {\n    constructor() {\n        super(8);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(8);\n    }\n}\nBaseRepositoryApplicationDao.Find = new DaoQueryDecorators();\nBaseRepositoryApplicationDao.FindOne = new DaoQueryDecorators();\nBaseRepositoryApplicationDao.Search = new DaoQueryDecorators();\nBaseRepositoryApplicationDao.SearchOne = new DaoQueryDecorators();\nexport class BaseRepositoryTransactionHistoryDao extends SQDIDao {\n    constructor() {\n        super(4);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(4);\n    }\n}\nBaseRepositoryTransactionHistoryDao.Find = new DaoQueryDecorators();\nBaseRepositoryTransactionHistoryDao.FindOne = new DaoQueryDecorators();\nBaseRepositoryTransactionHistoryDao.Search = new DaoQueryDecorators();\nBaseRepositoryTransactionHistoryDao.SearchOne = new DaoQueryDecorators();\nexport class BaseTransactionHistoryDao extends SQDIDao {\n    constructor() {\n        super(3);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(3);\n    }\n}\nBaseTransactionHistoryDao.Find = new DaoQueryDecorators();\nBaseTransactionHistoryDao.FindOne = new DaoQueryDecorators();\nBaseTransactionHistoryDao.Search = new DaoQueryDecorators();\nBaseTransactionHistoryDao.SearchOne = new DaoQueryDecorators();\n//# sourceMappingURL=baseDaos.js.map","import { Duo, } from '@airport/check-in';\nimport { Q, duoDiSet, } from './qApplication';\n// Application Q object Dependency Injection readiness detection Duo\nexport class SQDIDuo extends Duo {\n    constructor(dbEntityId) {\n        super(dbEntityId, Q);\n    }\n}\nexport class BaseActorDuo extends SQDIDuo {\n    static diSet() {\n        return duoDiSet(1);\n    }\n    constructor() {\n        super(1);\n    }\n}\nexport class BaseOperationHistoryDuo extends SQDIDuo {\n    static diSet() {\n        return duoDiSet(5);\n    }\n    constructor() {\n        super(5);\n    }\n}\nexport class BaseRecordHistoryDuo extends SQDIDuo {\n    static diSet() {\n        return duoDiSet(0);\n    }\n    constructor() {\n        super(0);\n    }\n}\nexport class BaseRecordHistoryNewValueDuo extends SQDIDuo {\n    static diSet() {\n        return duoDiSet(6);\n    }\n    constructor() {\n        super(6);\n    }\n}\nexport class BaseRecordHistoryOldValueDuo extends SQDIDuo {\n    static diSet() {\n        return duoDiSet(7);\n    }\n    constructor() {\n        super(7);\n    }\n}\nexport class BaseRepositoryDuo extends SQDIDuo {\n    static diSet() {\n        return duoDiSet(2);\n    }\n    constructor() {\n        super(2);\n    }\n}\nexport class BaseRepositoryApplicationDuo extends SQDIDuo {\n    static diSet() {\n        return duoDiSet(8);\n    }\n    constructor() {\n        super(8);\n    }\n}\nexport class BaseRepositoryTransactionHistoryDuo extends SQDIDuo {\n    static diSet() {\n        return duoDiSet(4);\n    }\n    constructor() {\n        super(4);\n    }\n}\nexport class BaseTransactionHistoryDuo extends SQDIDuo {\n    static diSet() {\n        return duoDiSet(3);\n    }\n    constructor() {\n        super(3);\n    }\n}\n//# sourceMappingURL=baseDuos.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { BaseRecordHistoryNewValueDao, Q } from '../../generated/generated';\nlet RecordHistoryNewValueDao = class RecordHistoryNewValueDao extends BaseRecordHistoryNewValueDao {\n    async findByRecordHistoryIdIn(recordHistoryIds) {\n        let rhnv;\n        return await this.db.find.tree({\n            select: {},\n            from: [\n                rhnv = Q.RecordHistoryNewValue\n            ],\n            where: rhnv.recordHistory.id.in(recordHistoryIds)\n        });\n    }\n};\nRecordHistoryNewValueDao = __decorate([\n    Injected()\n], RecordHistoryNewValueDao);\nexport { RecordHistoryNewValueDao };\n//# sourceMappingURL=RecordHistoryNewValueDao.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { BaseOperationHistoryDuo } from '../../generated/generated';\nlet OperationHistoryDuo = class OperationHistoryDuo extends BaseOperationHistoryDuo {\n    getNewRecord(entityChangeType, dbEntity, actor, repositoryTransactionHistory, systemWideOperationId, rootTransaction) {\n        let operationHistory = {\n            actor,\n            changeType: entityChangeType,\n            entity: dbEntity,\n            id: undefined,\n            orderNumber: ++rootTransaction.numberOfOperations,\n            recordHistory: [],\n            repositoryTransactionHistory: repositoryTransactionHistory,\n            systemWideOperationId\n        };\n        return operationHistory;\n    }\n    sort(ew1, ew2) {\n        let startId1 = ew1.orderNumber;\n        let startId2 = ew2.orderNumber;\n        if (startId1 > startId2) {\n            return 1;\n        }\n        if (startId2 > startId1) {\n            return -1;\n        }\n        return 0;\n    }\n    startRecordHistory(operationHistory, actorId, actorRecordId) {\n        const recordHistory = this.recordHistoryDuo.getNewRecord(actorId, actorRecordId);\n        recordHistory.operationHistory = operationHistory;\n        operationHistory.recordHistory.push(recordHistory);\n        operationHistory.repositoryTransactionHistory\n            .transactionHistory.allRecordHistory.push(recordHistory);\n        return recordHistory;\n    }\n};\n__decorate([\n    Inject()\n], OperationHistoryDuo.prototype, \"recordHistoryDuo\", void 0);\nOperationHistoryDuo = __decorate([\n    Injected()\n], OperationHistoryDuo);\nexport { OperationHistoryDuo };\n//# sourceMappingURL=OperationHistoryDuo.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { RecordHistory } from '../../ddl/ddl';\nimport { BaseRecordHistoryDuo, } from '../../generated/generated';\nlet RecordHistoryDuo = class RecordHistoryDuo extends BaseRecordHistoryDuo {\n    getNewRecord(actorId, actorRecordId) {\n        const recordHistory = new RecordHistory();\n        recordHistory.actorRecordId = actorRecordId;\n        recordHistory.actor = {\n            id: actorId\n        };\n        return recordHistory;\n    }\n    addNewValue(recordHistory, dbColumn, newValue) {\n        if (newValue === null) {\n            // No need to record a null value\n            return null;\n        }\n        const recordHistoryNewValue = this.recordHistoryNewValueDuo.getNewRecord(recordHistory, dbColumn, newValue);\n        recordHistory.newValues.push(recordHistoryNewValue);\n        recordHistory.operationHistory.repositoryTransactionHistory\n            .transactionHistory.allRecordHistoryNewValues.push(recordHistoryNewValue);\n        return recordHistoryNewValue;\n    }\n    addOldValue(recordHistory, dbColumn, oldValue) {\n        if (oldValue === null) {\n            // No need to record a null value\n            return null;\n        }\n        const recordHistoryOldValue = this.recordHistoryOldValueDuo.getNewRecord(recordHistory, dbColumn, oldValue);\n        recordHistory.oldValues.push(recordHistoryOldValue);\n        recordHistory.operationHistory.repositoryTransactionHistory\n            .transactionHistory.allRecordHistoryOldValues.push(recordHistoryOldValue);\n        return recordHistoryOldValue;\n    }\n};\n__decorate([\n    Inject()\n], RecordHistoryDuo.prototype, \"recordHistoryNewValueDuo\", void 0);\n__decorate([\n    Inject()\n], RecordHistoryDuo.prototype, \"recordHistoryOldValueDuo\", void 0);\nRecordHistoryDuo = __decorate([\n    Injected()\n], RecordHistoryDuo);\nexport { RecordHistoryDuo };\n//# sourceMappingURL=RecordHistoryDuo.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { RecordHistoryNewValue } from '../../ddl/ddl';\nimport { BaseRecordHistoryNewValueDuo } from '../../generated/generated';\nlet RecordHistoryNewValueDuo = class RecordHistoryNewValueDuo extends BaseRecordHistoryNewValueDuo {\n    constructor() {\n        super();\n    }\n    getNewRecord(recordHistory, dbColumn, newValue) {\n        const recordHistoryNewValue = new RecordHistoryNewValue();\n        recordHistoryNewValue.columnIndex = dbColumn.index;\n        recordHistoryNewValue.recordHistory = recordHistory;\n        recordHistoryNewValue.newValue = newValue;\n        return recordHistoryNewValue;\n    }\n};\nRecordHistoryNewValueDuo = __decorate([\n    Injected()\n], RecordHistoryNewValueDuo);\nexport { RecordHistoryNewValueDuo };\n//# sourceMappingURL=RecordHistoryNewValueDuo.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { RecordHistoryOldValue } from '../../ddl/ddl';\nimport { BaseRecordHistoryOldValueDuo } from '../../generated/generated';\nlet RecordHistoryOldValueDuo = class RecordHistoryOldValueDuo extends BaseRecordHistoryOldValueDuo {\n    constructor() {\n        super();\n    }\n    getNewRecord(recordHistory, dbColumn, oldValue) {\n        const recordHistoryOldValue = new RecordHistoryOldValue();\n        recordHistoryOldValue.columnIndex = dbColumn.index;\n        recordHistoryOldValue.recordHistory = recordHistory;\n        recordHistoryOldValue.oldValue = oldValue;\n        return recordHistoryOldValue;\n    }\n};\nRecordHistoryOldValueDuo = __decorate([\n    Injected()\n], RecordHistoryOldValueDuo);\nexport { RecordHistoryOldValueDuo };\n//# sourceMappingURL=RecordHistoryOldValueDuo.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Repository, RepositoryTransactionHistory } from '../../ddl/ddl';\nimport { BaseRepositoryTransactionHistoryDuo, } from '../../generated/generated';\nlet RepositoryTransactionHistoryDuo = class RepositoryTransactionHistoryDuo extends BaseRepositoryTransactionHistoryDuo {\n    getNewRecord(repositoryId, isRepositoryCreation) {\n        let repositoryTransactionHistory = new RepositoryTransactionHistory();\n        let saveTimestamp = new Date().getTime();\n        repositoryTransactionHistory.saveTimestamp = saveTimestamp;\n        repositoryTransactionHistory.uuId = uuidv4();\n        repositoryTransactionHistory.isRepositoryCreation = isRepositoryCreation;\n        repositoryTransactionHistory.repository = new Repository();\n        repositoryTransactionHistory.repository.id = repositoryId;\n        return repositoryTransactionHistory;\n    }\n    newRecord(data) {\n        if (!data) {\n            return null;\n        }\n        return { ...data };\n    }\n    sortRepoTransHistories(repoTransHistories, actorMapById) {\n        repoTransHistories.sort((repoTransHistory1, repoTransHistory2) => {\n            const syncTimeComparison = this.compareNumbers(repoTransHistory1.syncTimestamp, repoTransHistory2.syncTimestamp);\n            if (syncTimeComparison) {\n                return syncTimeComparison;\n            }\n            const saveTimeComparison = this.compareNumbers(repoTransHistory1.saveTimestamp, repoTransHistory2.saveTimestamp);\n            if (saveTimeComparison) {\n                return saveTimeComparison;\n            }\n            return 0;\n        });\n    }\n    startOperation(repositoryTransactionHistory, systemWideOperationId, entityChangeType, dbEntity, actor, rootTransaction) {\n        let operationHistory = this.operationHistoryDuo.getNewRecord(entityChangeType, dbEntity, actor, repositoryTransactionHistory, systemWideOperationId, rootTransaction);\n        repositoryTransactionHistory.operationHistory.push(operationHistory);\n        repositoryTransactionHistory\n            .transactionHistory.allOperationHistory.push(operationHistory);\n        return operationHistory;\n    }\n    compareDates(date1, date2) {\n        const time1 = date1 ? date1.getTime() : -1;\n        const time2 = date2 ? date2.getTime() : -1;\n        return this.compareNumbers(time1, time2);\n    }\n    compareNumbers(number1, number2) {\n        if (number1 < number2) {\n            return -1;\n        }\n        if (number2 > number1) {\n            return 1;\n        }\n        return 0;\n    }\n};\n__decorate([\n    Inject()\n], RepositoryTransactionHistoryDuo.prototype, \"operationHistoryDuo\", void 0);\nRepositoryTransactionHistoryDuo = __decorate([\n    Injected()\n], RepositoryTransactionHistoryDuo);\nexport { RepositoryTransactionHistoryDuo };\n//# sourceMappingURL=RepositoryTransactionHistoryDuo.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { TransactionType } from '@airport/ground-control';\nimport { TransactionHistory } from '../../ddl/ddl';\nimport { BaseTransactionHistoryDuo, } from '../../generated/generated';\nlet TransactionHistoryDuo = class TransactionHistoryDuo extends BaseTransactionHistoryDuo {\n    getNewRecord(transactionType = TransactionType.LOCAL) {\n        let transaction = new TransactionHistory();\n        transaction.transactionType = TransactionType.LOCAL;\n        return transaction;\n    }\n    getRepositoryTransaction(transactionHistory, repositoryId, isRepositoryCreation) {\n        let repositoryTransactionHistory = transactionHistory.repositoryTransactionHistoryMap[repositoryId];\n        if (!repositoryTransactionHistory) {\n            repositoryTransactionHistory = this.repositoryTransactionHistoryDuo.getNewRecord(repositoryId, isRepositoryCreation);\n            transactionHistory.repositoryTransactionHistories.push(repositoryTransactionHistory);\n            transactionHistory.repositoryTransactionHistoryMap[repositoryId] = repositoryTransactionHistory;\n            repositoryTransactionHistory.transactionHistory = transactionHistory;\n        }\n        return repositoryTransactionHistory;\n    }\n};\n__decorate([\n    Inject()\n], TransactionHistoryDuo.prototype, \"repositoryTransactionHistoryDuo\", void 0);\nTransactionHistoryDuo = __decorate([\n    Injected()\n], TransactionHistoryDuo);\nexport { TransactionHistoryDuo };\n//# sourceMappingURL=TransactionHistoryDuo.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ALL_FIELDS, and, or, Y } from '@airport/air-traffic-control';\nimport { ensureChildArray, TransactionType } from '@airport/ground-control';\nimport { BaseRepositoryTransactionHistoryDao, Q, } from '../../generated/generated';\nimport { Injected } from '@airport/direction-indicator';\nlet RepositoryTransactionHistoryDao = class RepositoryTransactionHistoryDao extends BaseRepositoryTransactionHistoryDao {\n    /*\n    async clearContentsWhereIdsIn(\n        repositoryTransactionBlockIds: TmRepositoryTransactionBlockId[]\n    ): Promise<void> {\n        const rtb: QRepositoryTransactionBlock = Q.QRepositoryTransactionBlock\n        await this.db.updateWhere({\n            update: rtb,\n            set: {\n                contents: null\n            },\n            where: rtb.id.in(repositoryTransactionBlockIds)\n        })\n    }\n    */\n    async findWhereUuIdsIn(uuIds) {\n        let rth;\n        return await this.db.find.tree({\n            select: {\n                uuId: Y\n            },\n            from: [\n                rth = Q.RepositoryTransactionHistory\n            ],\n            where: rth.uuId.in(uuIds)\n        });\n    }\n    async findAllLocalChangesForRecordIds(changedRecordIds) {\n        const repositoryTransactionHistoryMapByRepositoryId = new Map();\n        const rth = Q.RepositoryTransactionHistory;\n        const th = rth.transactionHistory.innerJoin();\n        const oh = rth.operationHistory.leftJoin();\n        const ae = oh.entity.leftJoin();\n        const av = ae.applicationVersion.leftJoin();\n        const rh = oh.recordHistory.leftJoin();\n        const nv = rh.newValues.leftJoin();\n        let id = Y;\n        const repositoryEquals = [];\n        for (const [repositoryId, idsForRepository] of changedRecordIds) {\n            const recordMapForRepository = idsForRepository.ids;\n            const entityEquals = [];\n            for (const [entityId, recordMapForEntity] of recordMapForRepository) {\n                const actorEquals = [];\n                for (const [actorId, recordsForActor] of recordMapForEntity) {\n                    actorEquals.push(and(oh.actor.id.equals(actorId), rh.actorRecordId.in(Array.from(recordsForActor))));\n                }\n                entityEquals.push(and(oh.entity.id.equals(entityId), or(...actorEquals)));\n            }\n            repositoryEquals.push(and(rth.repository.id.equals(repositoryId), rth.saveTimestamp.greaterThanOrEquals(idsForRepository.firstChangeTime), or(...entityEquals)));\n        }\n        const repoTransHistories = await this.db.find.tree({\n            select: {\n                ...ALL_FIELDS,\n                operationHistory: {\n                    orderNumber: Y,\n                    changeType: Y,\n                    entity: {\n                        id,\n                        // index: Y,\n                        applicationVersion: {\n                            id: Y,\n                            // integerVersion: Y,\n                            // application: {\n                            // \tindex: Y\n                            // }\n                        }\n                    },\n                    recordHistory: {\n                        id,\n                        newValues: {\n                            columnIndex: Y,\n                            newValue: Y\n                        }\n                    }\n                }\n            },\n            from: [\n                rth,\n                th,\n                oh,\n                ae,\n                av,\n                rh,\n                nv\n            ],\n            where: and(th.transactionType.equals(TransactionType.LOCAL), or(...repositoryEquals)),\n            // orderBy: [\n            // \trth.repository.id.asc()\n            // ]\n        });\n        for (const repoTransHistory of repoTransHistories) {\n            ensureChildArray(repositoryTransactionHistoryMapByRepositoryId, repoTransHistory.repository.id)\n                .push(repoTransHistory);\n            repoTransHistory.operationHistory.sort((rth1, rth2) => {\n                if (rth1.orderNumber < rth2.orderNumber) {\n                    return -1;\n                }\n                if (rth1.orderNumber > rth2.orderNumber) {\n                    return 1;\n                }\n                return 0;\n            });\n        }\n        return repositoryTransactionHistoryMapByRepositoryId;\n    }\n    async updateSyncTimestamp(repositoryTransactionHistory) {\n        let rth;\n        await this.db.updateWhere({\n            update: rth = Q.RepositoryTransactionHistory,\n            set: {\n                syncTimestamp: repositoryTransactionHistory.syncTimestamp\n            },\n            where: rth.id.equals(repositoryTransactionHistory.id)\n        });\n    }\n};\nRepositoryTransactionHistoryDao = __decorate([\n    Injected()\n], RepositoryTransactionHistoryDao);\nexport { RepositoryTransactionHistoryDao };\n//# sourceMappingURL=RepositoryTransactionHistoryDao.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ALL_FIELDS, and, Y } from '@airport/air-traffic-control';\nimport { ensureChildJsMap } from '@airport/ground-control';\nimport { BaseActorDao, Q } from '../../generated/generated';\nimport { Injected } from '@airport/direction-indicator';\nlet ActorDao = class ActorDao extends BaseActorDao {\n    async findWithDetailsAndGlobalIdsByIds(actorIds) {\n        return await this.findWithDetailsAndGlobalIdsByWhereClause((a) => a.id.in(actorIds));\n    }\n    async findMapsWithDetailsByGlobalIds(uuIds, userIds, terminalIds, actorMap, actorMapById) {\n        const actors = await this.findWithDetailsByGlobalIds(uuIds, userIds, terminalIds);\n        for (const actor of actors) {\n            ensureChildJsMap(actorMap, actor.user.id)\n                .set(actor.terminal.id, actor);\n            actorMapById.set(actor.id, actor);\n        }\n    }\n    async findWithDetailsByGlobalIds(uuIds, userIds, terminalIds) {\n        return await this.findWithDetailsAndGlobalIdsByWhereClause((a) => and(a.uuId.in(uuIds), a.terminal.id.in(terminalIds), a.user.id.in(userIds)));\n    }\n    async findByDomainAndApplicationNames(domainName, applicationName) {\n        let act;\n        let application;\n        let domain;\n        let terminal;\n        let user;\n        return await this.db.find.tree({\n            select: {\n                id: Y,\n                application: {\n                    ...ALL_FIELDS,\n                    domain: {}\n                },\n                terminal: {},\n                user: {},\n                uuId: Y\n            },\n            from: [\n                act = Q.Actor,\n                application = act.application.innerJoin(),\n                domain = application.domain.innerJoin(),\n                terminal = act.terminal.leftJoin(),\n                user = act.user.leftJoin()\n            ],\n            where: and(domain.name.equals(domainName), application.name.equals(applicationName))\n        });\n    }\n    async findByUuIds(uuIds) {\n        let a;\n        return await this.db.find.tree({\n            select: {},\n            from: [\n                a = Q.Actor\n            ],\n            where: a.uuId.in(uuIds)\n        });\n    }\n    async insert(actors) {\n        let t;\n        const values = [];\n        for (const actor of actors) {\n            values.push([\n                actor.uuId, actor.application.index, actor.user.id, actor.terminal.id,\n            ]);\n        }\n        const ids = await this.db.insertValuesGenerateIds({\n            insertInto: t = Q.Actor,\n            columns: [\n                t.uuId,\n                t.application.index,\n                t.user.id,\n                t.terminal.id\n            ],\n            values\n        });\n        for (let i = 0; i < actors.length; i++) {\n            let actor = actors[i];\n            actor.id = ids[i][0];\n        }\n    }\n    async findWithDetailsAndGlobalIdsByWhereClause(getWhereClause) {\n        let a;\n        let ap;\n        let t;\n        const id = Y;\n        const username = Y;\n        const uuId = Y;\n        return await this.db.find.tree({\n            select: {\n                ...ALL_FIELDS,\n                application: {\n                    index: Y,\n                    name: Y,\n                    domain: {\n                        name: Y\n                    }\n                },\n                terminal: {\n                    id,\n                    uuId,\n                    owner: {\n                        id,\n                        username,\n                        uuId,\n                    }\n                },\n                user: {\n                    id,\n                    username,\n                    uuId,\n                }\n            },\n            from: [\n                a = Q.Actor,\n                ap = a.application.leftJoin(),\n                ap.domain.leftJoin(),\n                t = a.terminal.leftJoin(),\n                t.owner.leftJoin(),\n                a.user.leftJoin()\n            ],\n            where: getWhereClause(a)\n        });\n    }\n};\nActorDao = __decorate([\n    Injected()\n], ActorDao);\nexport { ActorDao };\n//# sourceMappingURL=ActorDao.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ALL_FIELDS, and, Y } from '@airport/air-traffic-control';\nimport { Injected } from '@airport/direction-indicator';\nimport { TransactionType } from '@airport/ground-control';\nimport { BaseRepositoryDao, Q, } from '../../generated/generated';\nlet RepositoryDao = class RepositoryDao extends BaseRepositoryDao {\n    async getRepositoryLoadInfo(repositorySource, repositoryUuId, context) {\n        let r;\n        let rth;\n        let th;\n        return await this.db.findOne.tree({\n            select: {\n                immutable: Y,\n                repositoryTransactionHistory: {\n                    saveTimestamp: Y\n                }\n            },\n            from: [\n                r = Q.Repository,\n                rth = r.repositoryTransactionHistory.innerJoin(),\n                th = rth.transactionHistory.innerJoin()\n            ],\n            where: and(r.source.equals(repositorySource), r.uuId.equals(repositoryUuId), th.transactionType.equals(TransactionType.REMOTE_SYNC))\n        }, context);\n    }\n    async findReposWithDetailsAndSyncNodeIds(repositoryIds) {\n        let r;\n        const id = Y;\n        return await this.db.find.tree({\n            select: {\n                id,\n                owner: {\n                    id\n                },\n                createdAt: Y,\n                uuId: Y\n            },\n            from: [\n                r = Q.Repository\n            ],\n            where: r.id.in(repositoryIds)\n        });\n    }\n    async findByIds(repositoryIds) {\n        let r;\n        return await this.db.find.tree({\n            select: {\n                ...ALL_FIELDS,\n                owner: {}\n            },\n            from: [\n                r = Q.Repository,\n                r.owner.innerJoin()\n            ],\n            where: r.id.in(repositoryIds)\n        });\n    }\n    async findByUuIds(uuIds) {\n        let r;\n        return await this.db.find.tree({\n            select: {},\n            from: [\n                r = Q.Repository\n            ],\n            where: r.uuId.in(uuIds)\n        });\n    }\n    async insert(repositories) {\n        let r;\n        const values = [];\n        for (const repository of repositories) {\n            values.push([\n                repository.createdAt, repository.uuId, repository.ageSuitability,\n                repository.source, repository.immutable, repository.owner.id,\n            ]);\n        }\n        const ids = await this.db.insertValuesGenerateIds({\n            insertInto: r = Q.Repository,\n            columns: [\n                r.createdAt,\n                r.uuId,\n                r.ageSuitability,\n                r.source,\n                r.immutable,\n                r.owner.id\n            ],\n            values\n        });\n        for (let i = 0; i < repositories.length; i++) {\n            let repository = repositories[i];\n            repository.id = ids[i][0];\n        }\n    }\n};\nRepositoryDao = __decorate([\n    Injected()\n], RepositoryDao);\nexport { RepositoryDao };\n//# sourceMappingURL=RepositoryDao.js.map","import { lib } from '@airport/direction-indicator';\nimport { RecordHistoryNewValueDao } from './dao/history/RecordHistoryNewValueDao';\nimport { RecordHistoryOldValueDao } from './dao/history/RecordHistoryOldValueDao';\nimport { RepositoryTransactionHistoryDao } from './dao/history/RepositoryTransactionHistoryDao';\nimport { ActorDao } from './dao/infrastructure/ActorDao';\nimport { RepositoryDao } from './dao/repository/RepositoryDao';\nimport { OperationHistoryDuo } from './duo/history/OperationHistoryDuo';\nimport { RecordHistoryDuo } from './duo/history/RecordHistoryDuo';\nimport { RecordHistoryNewValueDuo } from './duo/history/RecordHistoryNewValueDuo';\nimport { RecordHistoryOldValueDuo } from './duo/history/RecordHistoryOldValueDuo';\nimport { RepositoryTransactionHistoryDuo } from './duo/history/RepositoryTransactionHistoryDuo';\nimport { TransactionHistoryDuo } from './duo/history/TransactionHistoryDuo';\nexport const holdingPattern = lib('holding-pattern');\nexport const ACTOR_DAO = holdingPattern.token({\n    class: ActorDao,\n    interface: 'IActorDao',\n    token: 'ACTOR_DAO'\n});\nexport const OPERATION_HISTORY_DUO = holdingPattern.token({\n    class: OperationHistoryDuo,\n    interface: 'IOperationHistoryDuo',\n    token: 'OPERATION_HISTORY_DUO'\n});\nexport const RECORD_HISTORY_DUO = holdingPattern.token({\n    class: RecordHistoryDuo,\n    interface: 'IRecordHistoryDuo',\n    token: 'RECORD_HISTORY_DUO'\n});\nexport const RECORD_HISTORY_NEW_VALUE_DAO = holdingPattern.token({\n    class: RecordHistoryNewValueDao,\n    interface: 'IRecordHistoryNewValueDao',\n    token: 'RECORD_HISTORY_NEW_VALUE_DAO'\n});\nexport const RECORD_HISTORY_NEW_VALUE_DUO = holdingPattern.token({\n    class: RecordHistoryNewValueDuo,\n    interface: 'IRecordHistoryNewValueDuo',\n    token: 'RECORD_HISTORY_NEW_VALUE_DUO'\n});\nexport const RECORD_HISTORY_OLD_VALUE_DAO = holdingPattern.token({\n    class: RecordHistoryOldValueDao,\n    interface: 'IRecordHistoryOldValueDao',\n    token: 'RECORD_HISTORY_OLD_VALUE_DAO'\n});\nexport const RECORD_HISTORY_OLD_VALUE_DUO = holdingPattern.token({\n    class: RecordHistoryOldValueDuo,\n    interface: 'IRecordHistoryOldValueDuo',\n    token: 'RECORD_HISTORY_OLD_VALUE_DUO'\n});\nexport const REPOSITORY_DAO = holdingPattern.token({\n    class: RepositoryDao,\n    interface: 'IRepositoryDao',\n    token: 'REPOSITORY_DAO'\n});\nexport const REPOSITORY_TRANSACTION_HISTORY_DAO = holdingPattern.token({\n    class: RepositoryTransactionHistoryDao,\n    interface: 'IRepositoryTransactionHistoryDao',\n    token: 'REPOSITORY_TRANSACTION_HISTORY_DAO'\n});\nexport const REPOSITORY_TRANSACTION_HISTORY_DUO = holdingPattern.token({\n    class: RepositoryTransactionHistoryDuo,\n    interface: 'IRepositoryTransactionHistoryDuo',\n    token: 'REPOSITORY_TRANSACTION_HISTORY_DUO'\n});\nexport const TRANSACTION_HISTORY_DUO = holdingPattern.token({\n    class: TransactionHistoryDuo,\n    interface: 'ITransactionHistoryDuo',\n    token: 'TRANSACTION_HISTORY_DUO'\n});\nOPERATION_HISTORY_DUO.setDependencies({\n    recordHistoryDuo: RECORD_HISTORY_DUO,\n});\nRECORD_HISTORY_DUO.setDependencies({\n    recordHistoryNewValueDuo: RECORD_HISTORY_NEW_VALUE_DUO,\n    recordHistoryOldValueDuo: RECORD_HISTORY_OLD_VALUE_DUO,\n});\nREPOSITORY_TRANSACTION_HISTORY_DUO.setDependencies({\n    operationHistoryDuo: OPERATION_HISTORY_DUO,\n});\nTRANSACTION_HISTORY_DUO.setDependencies({\n    repositoryTransactionHistoryDuo: REPOSITORY_TRANSACTION_HISTORY_DUO,\n});\n//# sourceMappingURL=tokens.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { BaseRecordHistoryOldValueDao } from '../../generated/generated';\nimport { Q } from '../../index';\nlet RecordHistoryOldValueDao = class RecordHistoryOldValueDao extends BaseRecordHistoryOldValueDao {\n    async findByRecordHistoryIdIn(recordHistoryIds) {\n        let rhov;\n        return await this.db.find.tree({\n            select: {},\n            from: [\n                rhov = Q.RecordHistoryOldValue\n            ],\n            where: rhov.recordHistory.id.in(recordHistoryIds)\n        });\n    }\n};\nRecordHistoryOldValueDao = __decorate([\n    Injected()\n], RecordHistoryOldValueDao);\nexport { RecordHistoryOldValueDao };\n//# sourceMappingURL=RecordHistoryOldValueDao.js.map","import { lib } from '@airport/direction-indicator';\nexport const holdingPattern = lib('holding-pattern');\n//# sourceMappingURL=common-tokens.js.map","import { RecordHistoryNewValueDao } from '../dao/history/RecordHistoryNewValueDao';\nimport { RecordHistoryOldValueDao } from '../dao/history/RecordHistoryOldValueDao';\nimport { RepositoryTransactionHistoryDao } from '../dao/history/RepositoryTransactionHistoryDao';\nimport { ActorDao } from '../dao/infrastructure/ActorDao';\nimport { RepositoryDao } from '../dao/repository/RepositoryDao';\nimport { OperationHistoryDuo } from '../duo/history/OperationHistoryDuo';\nimport { RecordHistoryDuo } from '../duo/history/RecordHistoryDuo';\nimport { RecordHistoryNewValueDuo } from '../duo/history/RecordHistoryNewValueDuo';\nimport { RecordHistoryOldValueDuo } from '../duo/history/RecordHistoryOldValueDuo';\nimport { RepositoryTransactionHistoryDuo } from '../duo/history/RepositoryTransactionHistoryDuo';\nimport { TransactionHistoryDuo } from '../duo/history/TransactionHistoryDuo';\nimport { holdingPattern } from './common-tokens';\nexport const ACTOR_DAO = holdingPattern.token({\n    class: ActorDao,\n    interface: 'IActorDao',\n    token: 'ACTOR_DAO'\n});\nexport const OPERATION_HISTORY_DUO = holdingPattern.token({\n    class: OperationHistoryDuo,\n    interface: 'IOperationHistoryDuo',\n    token: 'OPERATION_HISTORY_DUO'\n});\nexport const RECORD_HISTORY_DUO = holdingPattern.token({\n    class: RecordHistoryDuo,\n    interface: 'IRecordHistoryDuo',\n    token: 'RECORD_HISTORY_DUO'\n});\nexport const RECORD_HISTORY_NEW_VALUE_DAO = holdingPattern.token({\n    class: RecordHistoryNewValueDao,\n    interface: 'IRecordHistoryNewValueDao',\n    token: 'RECORD_HISTORY_NEW_VALUE_DAO'\n});\nexport const RECORD_HISTORY_NEW_VALUE_DUO = holdingPattern.token({\n    class: RecordHistoryNewValueDuo,\n    interface: 'IRecordHistoryNewValueDuo',\n    token: 'RECORD_HISTORY_NEW_VALUE_DUO'\n});\nexport const RECORD_HISTORY_OLD_VALUE_DAO = holdingPattern.token({\n    class: RecordHistoryOldValueDao,\n    interface: 'IRecordHistoryOldValueDao',\n    token: 'RECORD_HISTORY_OLD_VALUE_DAO'\n});\nexport const RECORD_HISTORY_OLD_VALUE_DUO = holdingPattern.token({\n    class: RecordHistoryOldValueDuo,\n    interface: 'IRecordHistoryOldValueDuo',\n    token: 'RECORD_HISTORY_OLD_VALUE_DUO'\n});\nexport const REPOSITORY_DAO = holdingPattern.token({\n    class: RepositoryDao,\n    interface: 'IRepositoryDao',\n    token: 'REPOSITORY_DAO'\n});\nexport const REPOSITORY_TRANSACTION_HISTORY_DAO = holdingPattern.token({\n    class: RepositoryTransactionHistoryDao,\n    interface: 'IRepositoryTransactionHistoryDao',\n    token: 'REPOSITORY_TRANSACTION_HISTORY_DAO'\n});\nexport const REPOSITORY_TRANSACTION_HISTORY_DUO = holdingPattern.token({\n    class: RepositoryTransactionHistoryDuo,\n    interface: 'IRepositoryTransactionHistoryDuo',\n    token: 'REPOSITORY_TRANSACTION_HISTORY_DUO'\n});\nexport const TRANSACTION_HISTORY_DUO = holdingPattern.token({\n    class: TransactionHistoryDuo,\n    interface: 'ITransactionHistoryDuo',\n    token: 'TRANSACTION_HISTORY_DUO'\n});\nOPERATION_HISTORY_DUO.setDependencies({\n    recordHistoryDuo: RECORD_HISTORY_DUO,\n});\nRECORD_HISTORY_DUO.setDependencies({\n    recordHistoryNewValueDuo: RECORD_HISTORY_NEW_VALUE_DUO,\n    recordHistoryOldValueDuo: RECORD_HISTORY_OLD_VALUE_DUO,\n});\nREPOSITORY_TRANSACTION_HISTORY_DUO.setDependencies({\n    operationHistoryDuo: OPERATION_HISTORY_DUO,\n});\nTRANSACTION_HISTORY_DUO.setDependencies({\n    repositoryTransactionHistoryDuo: REPOSITORY_TRANSACTION_HISTORY_DUO,\n});\n//# sourceMappingURL=runtime-tokens.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Entity, GeneratedValue, Id, OneToMany, Table } from '@airport/air-traffic-control';\nlet Agt = class Agt {\n};\n__decorate([\n    Id(),\n    GeneratedValue()\n], Agt.prototype, \"id\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'agt' })\n], Agt.prototype, \"terminalAgts\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'agt' })\n], Agt.prototype, \"userTerminalAgts\", void 0);\nAgt = __decorate([\n    Entity(),\n    Table()\n], Agt);\nexport { Agt };\n//# sourceMappingURL=Agt.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DbNumber, DbString, Entity, GeneratedValue, Id, OneToMany, Table } from \"@airport/air-traffic-control\";\nlet Continent = class Continent {\n};\n__decorate([\n    Id(),\n    GeneratedValue(),\n    DbNumber()\n], Continent.prototype, \"id\", void 0);\n__decorate([\n    DbString()\n], Continent.prototype, \"name\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'continent' })\n], Continent.prototype, \"countries\", void 0);\nContinent = __decorate([\n    Entity(),\n    Table({ name: \"CONTINENTS\" })\n], Continent);\nexport { Continent };\n//# sourceMappingURL=Continent.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DbNumber, DbString, Entity, GeneratedValue, Id, JoinColumn, ManyToOne, OneToMany, Table } from \"@airport/air-traffic-control\";\nlet Country = class Country {\n};\n__decorate([\n    Id(),\n    GeneratedValue(),\n    DbNumber()\n], Country.prototype, \"id\", void 0);\n__decorate([\n    DbString()\n], Country.prototype, \"name\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({ name: 'CONTINENT_ID', referencedColumnName: 'ID' })\n], Country.prototype, \"continent\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'country' })\n], Country.prototype, \"users\", void 0);\nCountry = __decorate([\n    Entity(),\n    Table({ name: \"COUNTRIES\" })\n], Country);\nexport { Country };\n//# sourceMappingURL=Country.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbBoolean, DbNumber, DbString, Entity, GeneratedValue, Id, JoinColumn, ManyToOne, Table } from '@airport/air-traffic-control';\n/**\n *\n * DEPRECATED - syncing will now be done via IPFS/Peergos\n *\n */\nlet Terminal = class Terminal {\n    constructor() {\n        this.isLocal = false;\n        // @OneToMany({ mappedBy: 'terminal' })\n        // terminalAgts: TerminalAgt[]\n        // @OneToMany({ mappedBy: 'terminal' })\n        // userTerminal: UserTerminal[]\n        // @OneToMany({ mappedBy: 'terminal' })\n        // userTerminalAgt: UserTerminalAgt[]\n    }\n};\n__decorate([\n    Id(),\n    GeneratedValue(),\n    DbNumber()\n], Terminal.prototype, \"id\", void 0);\n__decorate([\n    Column({ name: 'UUID', nullable: false }),\n    DbString()\n], Terminal.prototype, \"uuId\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({ name: 'OWNER_USER_ID', referencedColumnName: 'ID' })\n], Terminal.prototype, \"owner\", void 0);\n__decorate([\n    Column({ name: 'IS_LOCAL', nullable: false }),\n    DbBoolean()\n], Terminal.prototype, \"isLocal\", void 0);\nTerminal = __decorate([\n    Entity(),\n    Table({\n        name: 'TERMINAL',\n        indexes: (t) => [{\n                property: t.uuId,\n                unique: true\n            }]\n    })\n], Terminal);\nexport { Terminal };\n//# sourceMappingURL=Terminal.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Entity, Id, JoinColumn, ManyToOne, OneToMany, Table } from '@airport/air-traffic-control';\n/**\n *\n * DEPRECATED - syncing will now be done via IPFS/Peergos\n *\n */\nlet TerminalAgt = class TerminalAgt {\n};\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({ name: 'TERMINAL_ID', referencedColumnName: 'ID' })\n], TerminalAgt.prototype, \"terminal\", void 0);\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({ name: 'AGT_ID', referencedColumnName: 'ID' })\n], TerminalAgt.prototype, \"agt\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'terminalAgt' })\n], TerminalAgt.prototype, \"userTerminalAgts\", void 0);\nTerminalAgt = __decorate([\n    Entity(),\n    Table({ name: 'TERMINAL_AGTS' })\n], TerminalAgt);\nexport { TerminalAgt };\n//# sourceMappingURL=TerminalAgt.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbNumber, DbString, Entity, GeneratedValue, Id } from '@airport/air-traffic-control';\nlet User = class User {\n};\n__decorate([\n    Id(),\n    GeneratedValue(),\n    DbNumber()\n], User.prototype, \"id\", void 0);\n__decorate([\n    Column({ name: \"EMAIL\" }),\n    DbString()\n], User.prototype, \"email\", void 0);\n__decorate([\n    Column({ name: \"PASSWORD_HASH\" }),\n    DbString()\n], User.prototype, \"passwordHash\", void 0);\n__decorate([\n    Column({ name: \"USERNAME\" }),\n    DbString()\n], User.prototype, \"username\", void 0);\n__decorate([\n    Column({ name: \"UUID\", nullable: false }),\n    DbString()\n], User.prototype, \"uuId\", void 0);\nUser = __decorate([\n    Entity()\n], User);\nexport { User };\n//# sourceMappingURL=User.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Entity, Id, JoinColumn, ManyToOne, Table } from '@airport/air-traffic-control';\n/**\n *\n * DEPRECATED - syncing will now be done via IPFS/Peergos\n *\n */\nlet UserTerminal = class UserTerminal {\n};\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({ name: 'USER_ID', referencedColumnName: 'ID' })\n], UserTerminal.prototype, \"user\", void 0);\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({ name: 'TERMINAL_ID', referencedColumnName: 'ID' })\n], UserTerminal.prototype, \"terminal\", void 0);\nUserTerminal = __decorate([\n    Entity(),\n    Table({ name: 'USER_TERMINAL' })\n], UserTerminal);\nexport { UserTerminal };\n//# sourceMappingURL=UserTerminal.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbNumber, Entity, GeneratedValue, Id, JoinColumn, JoinColumns, ManyToOne, Table } from '@airport/air-traffic-control';\n/**\n * DEPRECATED - syncing will now be done via IPFS/Peergos\n *\n * User needs some sort of password that can be used to verify that\n * a given user is indeed making changes (instead of another one).\n *\n * The password should be AGT specific and Terminal specific\n * to reduce security risks.\n *\n * The password is generated as soon as a user is verified with\n * a terminal and then subsequently registered with an AGT (on\n * the next transaction)\n *\n * Registration is made using an already known to AGT Terminal\n * Id and password, to verify that is indeed coming from the\n * specified terminal.\n *\n * FIXME: additional credentials are needed for User-Agt registration\n * see of OpenConnect can provide something verifiable with the\n * provider\n */\nlet UserTerminalAgt = class UserTerminalAgt {\n};\n__decorate([\n    Id(),\n    DbNumber(),\n    GeneratedValue()\n], UserTerminalAgt.prototype, \"id\", void 0);\n__decorate([\n    Id(),\n    Column({ name: 'AGT_ID' }),\n    DbNumber(),\n    GeneratedValue()\n], UserTerminalAgt.prototype, \"agtId\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({ name: 'USER_ID', referencedColumnName: 'ID' })\n], UserTerminalAgt.prototype, \"user\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({ name: 'TERMINAL_ID', referencedColumnName: 'ID' })\n], UserTerminalAgt.prototype, \"terminal\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({ name: 'AGT_ID', referencedColumnName: 'ID' })\n], UserTerminalAgt.prototype, \"agt\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumns([\n        { name: 'AGT_ID' },\n        { name: 'TERMINAL_ID' }\n    ])\n], UserTerminalAgt.prototype, \"terminalAgt\", void 0);\nUserTerminalAgt = __decorate([\n    Entity(),\n    Table({ name: 'USER_TERMINAL_AGT' })\n], UserTerminalAgt);\nexport { UserTerminalAgt };\n//# sourceMappingURL=UserTerminalAgt.js.map","import { AIRPORT_DATABASE } from '@airport/air-traffic-control';\nimport { diSet as dS, duoDiSet as ddS } from '@airport/check-in';\nimport { DEPENDENCY_INJECTION } from '@airport/direction-indicator';\nimport { getFullApplicationName } from '@airport/ground-control';\nimport { Agt, Continent, Country, Terminal, TerminalAgt, User, UserTerminal, UserTerminalAgt } from '../ddl/ddl';\nconst __constructors__ = {\n    Agt: Agt,\n    Continent: Continent,\n    Country: Country,\n    Terminal: Terminal,\n    TerminalAgt: TerminalAgt,\n    User: User,\n    UserTerminal: UserTerminal,\n    UserTerminalAgt: UserTerminalAgt\n};\nexport const Q_APPLICATION = {\n    __constructors__,\n    domain: 'air',\n    name: '@airport/travel-document-checkpoint'\n};\nexport const Q = Q_APPLICATION;\nexport function diSet(dbEntityId) {\n    return dS(Q.__dbApplication__, dbEntityId);\n}\nexport function duoDiSet(dbEntityId) {\n    return ddS(Q.__dbApplication__, dbEntityId);\n}\nDEPENDENCY_INJECTION.db().eventuallyGet(AIRPORT_DATABASE).then((airDb) => {\n    airDb.QM[getFullApplicationName(Q_APPLICATION)] = Q;\n});\n//# sourceMappingURL=qApplication.js.map","import { Dao, DaoQueryDecorators, } from '@airport/check-in';\nimport { Q, duoDiSet, } from './qApplication';\n// Application Q object Dependency Injection readiness detection Dao\nexport class SQDIDao extends Dao {\n    constructor(dbEntityId) {\n        super(dbEntityId, Q);\n    }\n}\nexport class BaseAgtDao extends SQDIDao {\n    constructor() {\n        super(7);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(7);\n    }\n}\nBaseAgtDao.Find = new DaoQueryDecorators();\nBaseAgtDao.FindOne = new DaoQueryDecorators();\nBaseAgtDao.Search = new DaoQueryDecorators();\nBaseAgtDao.SearchOne = new DaoQueryDecorators();\nexport class BaseContinentDao extends SQDIDao {\n    constructor() {\n        super(0);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(0);\n    }\n}\nBaseContinentDao.Find = new DaoQueryDecorators();\nBaseContinentDao.FindOne = new DaoQueryDecorators();\nBaseContinentDao.Search = new DaoQueryDecorators();\nBaseContinentDao.SearchOne = new DaoQueryDecorators();\nexport class BaseCountryDao extends SQDIDao {\n    constructor() {\n        super(1);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(1);\n    }\n}\nBaseCountryDao.Find = new DaoQueryDecorators();\nBaseCountryDao.FindOne = new DaoQueryDecorators();\nBaseCountryDao.Search = new DaoQueryDecorators();\nBaseCountryDao.SearchOne = new DaoQueryDecorators();\nexport class BaseTerminalDao extends SQDIDao {\n    constructor() {\n        super(5);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(5);\n    }\n}\nBaseTerminalDao.Find = new DaoQueryDecorators();\nBaseTerminalDao.FindOne = new DaoQueryDecorators();\nBaseTerminalDao.Search = new DaoQueryDecorators();\nBaseTerminalDao.SearchOne = new DaoQueryDecorators();\nexport class BaseTerminalAgtDao extends SQDIDao {\n    constructor() {\n        super(6);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(6);\n    }\n}\nBaseTerminalAgtDao.Find = new DaoQueryDecorators();\nBaseTerminalAgtDao.FindOne = new DaoQueryDecorators();\nBaseTerminalAgtDao.Search = new DaoQueryDecorators();\nBaseTerminalAgtDao.SearchOne = new DaoQueryDecorators();\nexport class BaseUserDao extends SQDIDao {\n    constructor() {\n        super(4);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(4);\n    }\n}\nBaseUserDao.Find = new DaoQueryDecorators();\nBaseUserDao.FindOne = new DaoQueryDecorators();\nBaseUserDao.Search = new DaoQueryDecorators();\nBaseUserDao.SearchOne = new DaoQueryDecorators();\nexport class BaseUserTerminalDao extends SQDIDao {\n    constructor() {\n        super(2);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(2);\n    }\n}\nBaseUserTerminalDao.Find = new DaoQueryDecorators();\nBaseUserTerminalDao.FindOne = new DaoQueryDecorators();\nBaseUserTerminalDao.Search = new DaoQueryDecorators();\nBaseUserTerminalDao.SearchOne = new DaoQueryDecorators();\nexport class BaseUserTerminalAgtDao extends SQDIDao {\n    constructor() {\n        super(3);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(3);\n    }\n}\nBaseUserTerminalAgtDao.Find = new DaoQueryDecorators();\nBaseUserTerminalAgtDao.FindOne = new DaoQueryDecorators();\nBaseUserTerminalAgtDao.Search = new DaoQueryDecorators();\nBaseUserTerminalAgtDao.SearchOne = new DaoQueryDecorators();\n//# sourceMappingURL=baseDaos.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { and } from '@airport/air-traffic-control';\nimport { Injected } from '@airport/direction-indicator';\nimport { BaseTerminalDao, Q } from '../generated/generated';\nlet TerminalDao = class TerminalDao extends BaseTerminalDao {\n    async findByOwnerIdsAndUuIds(ownerIds, uuIds) {\n        let d;\n        return await this.db.find.tree({\n            select: {},\n            from: [\n                d = Q.Terminal\n            ],\n            where: and(d.owner.id.in(ownerIds), d.uuId.in(uuIds))\n        });\n    }\n    async findByUuIds(uuIds) {\n        let d;\n        return await this.db.find.tree({\n            select: {},\n            from: [\n                d = Q.Terminal\n            ],\n            where: d.uuId.in(uuIds)\n        });\n    }\n    async insert(terminals) {\n        let t;\n        const values = [];\n        for (const terminal of terminals) {\n            values.push([\n                terminal.uuId, terminal.owner.id, false,\n            ]);\n        }\n        const ids = await this.db.insertValuesGenerateIds({\n            insertInto: t = Q.Terminal,\n            columns: [\n                t.uuId,\n                t.owner.id,\n                t.isLocal\n            ],\n            values\n        });\n        for (let i = 0; i < terminals.length; i++) {\n            const terminal = terminals[i];\n            terminal.id = ids[i][0];\n        }\n    }\n};\nTerminalDao = __decorate([\n    Injected()\n], TerminalDao);\nexport { TerminalDao };\n//# sourceMappingURL=TerminalDao.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { BaseUserDao, Q, } from '../generated/generated';\nlet UserDao = class UserDao extends BaseUserDao {\n    async findByUserNames(usernames) {\n        let u;\n        return await this.db.find.tree({\n            select: {},\n            from: [\n                u = Q.User\n            ],\n            where: u.username.in(usernames)\n        });\n    }\n    async findByUuIds(uuIds) {\n        let u;\n        return await this.db.find.tree({\n            select: {},\n            from: [\n                u = Q.User\n            ],\n            where: u.uuId.in(uuIds)\n        });\n    }\n    async insert(users) {\n        let u;\n        const values = [];\n        for (const user of users) {\n            values.push([\n                user.uuId, user.username\n            ]);\n        }\n        const ids = await this.db.insertValuesGenerateIds({\n            insertInto: u = Q.User,\n            columns: [\n                u.uuId,\n                u.username\n            ],\n            values\n        });\n        for (let i = 0; i < users.length; i++) {\n            const user = users[i];\n            user.id = ids[i][0];\n        }\n    }\n};\nUserDao = __decorate([\n    Injected()\n], UserDao);\nexport { UserDao };\n//# sourceMappingURL=UserDao.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Api } from \"@airport/check-in\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Injected } from \"@airport/direction-indicator\";\nexport var AddUserErrorCodes;\n(function (AddUserErrorCodes) {\n    AddUserErrorCodes[\"EMAIL_TAKEN\"] = \"EMAIL_TAKEN\";\n    AddUserErrorCodes[\"INVALID_BIRTH_MONTH\"] = \"INVALID_BIRTH_MONTH\";\n    AddUserErrorCodes[\"INVALID_COUNTRY\"] = \"INVALID_COUNTRY\";\n    AddUserErrorCodes[\"INVALID_EMAIL\"] = \"INVALID_EMAIL\";\n    AddUserErrorCodes[\"INVALID_USERNAME\"] = \"INVALID_USERNAME\";\n    AddUserErrorCodes[\"USERNAME_TAKEN\"] = \"USERNAME_TAKEN\";\n})(AddUserErrorCodes || (AddUserErrorCodes = {}));\nlet UserApi = class UserApi {\n    async addUser(username, email) {\n        const existingUsers = await this.userDao.findByUserNames([username]);\n        for (const existingUser of existingUsers) {\n            if (existingUser.username === username) {\n                return {\n                    errorCode: AddUserErrorCodes.USERNAME_TAKEN\n                };\n            }\n        }\n        const user = {\n            id: null,\n            uuId: uuidv4(),\n            username\n        };\n        await this.userDao.save(user);\n        return {\n            user\n        };\n    }\n    async findUser(privateId) {\n        const users = await this.userDao.findByUuIds([privateId]);\n        if (users.length) {\n            return users[0];\n        }\n        return null;\n    }\n};\n__decorate([\n    Api()\n], UserApi.prototype, \"addUser\", null);\n__decorate([\n    Api()\n], UserApi.prototype, \"findUser\", null);\nUserApi = __decorate([\n    Injected()\n], UserApi);\nexport { UserApi };\n//# sourceMappingURL=UserApi.js.map","export const Api = function () {\n    return function (target, propertyKey, descriptor) {\n        // No runtime logic required.\n        return null;\n    };\n};\n//# sourceMappingURL=Api.js.map","import { lib } from '@airport/direction-indicator';\nexport const travelDocumentCheckpoint = lib('travel-document-checkpoint');\nexport const USER_API = travelDocumentCheckpoint.token({\n    class: null,\n    interface: 'IUserApi',\n    token: 'USER_API'\n});\n//# sourceMappingURL=common-tokens.js.map","import { UserApi } from '../api/UserApi';\nimport { TerminalDao } from '../dao/TerminalDao';\nimport { UserDao } from '../dao/UserDao';\nimport { travelDocumentCheckpoint, USER_API } from './common-tokens';\nexport const TERMINAL_DAO = travelDocumentCheckpoint.token({\n    class: TerminalDao,\n    interface: 'ITerminalDao',\n    token: 'TERMINAL_DAO'\n});\nexport const USER_DAO = travelDocumentCheckpoint.token({\n    class: UserDao,\n    interface: 'IUserDao',\n    token: 'USER_DAO'\n});\nUSER_API.setClass(UserApi);\nUSER_API.setDependencies({\n    userDao: USER_DAO\n});\n//# sourceMappingURL=runtime-tokens.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Actor, } from \"@airport/holding-pattern-runtime\";\nimport { Terminal, User } from \"@airport/travel-document-checkpoint-runtime\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet InternalRecordManager = class InternalRecordManager {\n    async ensureApplicationRecords(application, context) {\n        await this.transactionManager.transactInternal(async (_transaction) => {\n            await this.updateDomain(application);\n            let actorMapForDomain = this.terminalStore\n                .getApplicationActorMapByDomainAndApplicationNames().get(application.domain);\n            let actors;\n            if (actorMapForDomain) {\n                actors = actorMapForDomain.get(application.name);\n                if (actors && actors.length) {\n                    return;\n                }\n            }\n            actors = await this.actorDao.findByDomainAndApplicationNames(application.domain, application.name);\n            let anApplication = await this.applicationDao.findByIndex(application.lastIds.applications + 1);\n            if (!actors || !actors.length) {\n                const frameworkActor = this.terminalStore.getFrameworkActor();\n                const actor = {\n                    id: null,\n                    application: anApplication,\n                    terminal: frameworkActor.terminal,\n                    user: frameworkActor.user,\n                    uuId: uuidv4()\n                };\n                await this.actorDao.save(actor);\n                actors = [actor];\n            }\n            const lastTerminalState = this.terminalStore.getTerminalState();\n            const applications = lastTerminalState.applications.slice();\n            applications.push(anApplication);\n            let applicationActors = lastTerminalState.applicationActors.slice();\n            applicationActors = applicationActors.concat(actors);\n            this.terminalStore.state.next({\n                ...lastTerminalState,\n                applicationActors,\n                applications\n            });\n        }, context);\n    }\n    async initTerminal(domainName, context) {\n        await this.transactionManager.transactInternal(async (_transaction) => {\n            const user = new User();\n            user.uuId = 'AIRportA-demo-demo-demo-functionalty';\n            user.username = \"internalUser\";\n            const terminal = new Terminal();\n            terminal.owner = user;\n            terminal.isLocal = true;\n            terminal.uuId = uuidv4();\n            const actor = new Actor();\n            actor.user = user;\n            actor.terminal = terminal;\n            actor.uuId = uuidv4();\n            await this.actorDao.save(actor, context);\n            const lastTerminalState = this.terminalStore.getTerminalState();\n            this.terminalStore.state.next({\n                ...lastTerminalState,\n                frameworkActor: actor,\n                terminal\n            });\n        }, context);\n    }\n    async updateDomain(application) {\n        let domain = this.terminalStore.getDomainMapByName().get(application.domain);\n        if (domain && this.entityStateManager.getOriginalValues(domain)) {\n            return domain;\n        }\n        let dbDomain = await this.domainDao.findByName(application.domain);\n        let updatedDomain;\n        if (domain) {\n            if (dbDomain) {\n                this.entityStateManager.setOriginalValues(this.entityStateManager.getOriginalValues(dbDomain), domain);\n                updatedDomain = domain;\n            }\n        }\n        else {\n            if (dbDomain) {\n                updatedDomain = dbDomain;\n            }\n            else {\n                updatedDomain = {\n                    id: null,\n                    name: application.domain,\n                };\n                await this.domainDao.save(updatedDomain);\n            }\n        }\n        if (!updatedDomain) {\n            return domain;\n        }\n        const lastTerminalState = this.terminalStore.getTerminalState();\n        const domains = lastTerminalState.domains.slice();\n        let replaced = false;\n        for (let i = 0; i < domains.length; i++) {\n            let currentDomain = domains[i];\n            if (currentDomain.name === domain.name) {\n                domains.splice(i, 1, domain);\n                replaced = true;\n            }\n        }\n        if (!replaced) {\n            domains.push(domain);\n        }\n        this.terminalStore.state.next({\n            ...lastTerminalState,\n            domains\n        });\n        return updatedDomain;\n    }\n};\n__decorate([\n    Inject()\n], InternalRecordManager.prototype, \"actorDao\", void 0);\n__decorate([\n    Inject()\n], InternalRecordManager.prototype, \"applicationDao\", void 0);\n__decorate([\n    Inject()\n], InternalRecordManager.prototype, \"domainDao\", void 0);\n__decorate([\n    Inject()\n], InternalRecordManager.prototype, \"entityStateManager\", void 0);\n__decorate([\n    Inject()\n], InternalRecordManager.prototype, \"terminalStore\", void 0);\n__decorate([\n    Inject()\n], InternalRecordManager.prototype, \"transactionManager\", void 0);\nInternalRecordManager = __decorate([\n    Injected()\n], InternalRecordManager);\nexport { InternalRecordManager };\n//# sourceMappingURL=InternalRecordManager.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet InternalTransactionalConnector = class InternalTransactionalConnector {\n    callApi(_) {\n        throw new Error(`InternalTransactionalConnector.callApi should never be called.\r\nInteral Application API requests should be made directly (since\r\nthey are internal to the AIRport framework).`);\n    }\n    async addRepository(\n    // url: string,\n    // platform: PlatformType,\n    // platformConfig: string,\n    // distributionStrategy: DistributionStrategy,\n    context) {\n        return await this.transactionalServer.addRepository(\n        // url,\n        // platform,\n        // platformConfig,\n        // distributionStrategy,\n        this.terminalStore.getInternalConnector().internalCredentials, {\n            internal: true,\n            ...context\n        });\n    }\n    async find(portableQuery, context, cachedSqlQueryId) {\n        return await this.transactionalServer.find(portableQuery, this.terminalStore.getInternalConnector().internalCredentials, {\n            internal: true,\n            ...context\n        }, cachedSqlQueryId);\n    }\n    async findOne(portableQuery, context, cachedSqlQueryId) {\n        return await this.transactionalServer.findOne(portableQuery, this.terminalStore.getInternalConnector().internalCredentials, {\n            internal: true,\n            ...context\n        }, cachedSqlQueryId);\n    }\n    search(portableQuery, context, cachedSqlQueryId) {\n        return this.transactionalServer.search(portableQuery, this.terminalStore.getInternalConnector().internalCredentials, {\n            internal: true,\n            ...context\n        }, cachedSqlQueryId);\n    }\n    searchOne(portableQuery, context, cachedSqlQueryId) {\n        return this.transactionalServer.searchOne(portableQuery, this.terminalStore.getInternalConnector().internalCredentials, {\n            internal: true,\n            ...context\n        }, cachedSqlQueryId);\n    }\n    async save(entity, context) {\n        return await this.transactionalServer.save(entity, this.terminalStore.getInternalConnector().internalCredentials, {\n            internal: true,\n            ...context\n        });\n    }\n    async saveToDestination(repositoryDestination, entity, context) {\n        return await this.transactionalServer.saveToDestination(repositoryDestination, entity, this.terminalStore.getInternalConnector().internalCredentials, {\n            internal: true,\n            ...context\n        });\n    }\n    async insertValues(portableQuery, context, ensureGeneratedValues // For internal use only\n    ) {\n        return await this.transactionalServer.insertValues(portableQuery, this.terminalStore.getInternalConnector().internalCredentials, {\n            internal: true,\n            ...context\n        }, ensureGeneratedValues);\n    }\n    async insertValuesGetIds(portableQuery, context) {\n        return await this.transactionalServer.insertValuesGetIds(portableQuery, this.terminalStore.getInternalConnector().internalCredentials, {\n            internal: true,\n            ...context\n        });\n    }\n    async updateValues(portableQuery, context) {\n        return await this.transactionalServer.updateValues(portableQuery, this.terminalStore.getInternalConnector().internalCredentials, {\n            internal: true,\n            ...context\n        });\n    }\n    async deleteWhere(portableQuery, context) {\n        return await this.transactionalServer.deleteWhere(portableQuery, this.terminalStore.getInternalConnector().internalCredentials, {\n            internal: true,\n            ...context\n        });\n    }\n    onMessage(callback) {\n        // Nothing to do, onMessage callback was added for demo purposes for Web implementations\n    }\n};\n__decorate([\n    Inject()\n], InternalTransactionalConnector.prototype, \"terminalStore\", void 0);\n__decorate([\n    Inject()\n], InternalTransactionalConnector.prototype, \"transactionalServer\", void 0);\nInternalTransactionalConnector = __decorate([\n    Injected()\n], InternalTransactionalConnector);\nexport { InternalTransactionalConnector };\nexport function injectTransactionalConnector() {\n    console.log('Injecting TransactionalConnector');\n}\n//# sourceMappingURL=InternalTransactionalConnector.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { container } from '@airport/direction-indicator';\nimport { BlockSyncStatus } from '@airport/ground-control';\nimport { RepositoryTransactionHistory, } from '@airport/holding-pattern-runtime';\nimport { UpdateState } from '@airport/terminal-map';\nlet OnlineManager = class OnlineManager {\n    constructor() {\n        this.online = false;\n    }\n    async goOffline(context = {}) {\n        this.repositoryManager.goOffline();\n        this.online = false;\n    }\n    /**\n     There are tree update states:\n     LOCAL            0\n     REMOTE_CHANGES   1\n     GO_ONLINE        2\n     Mutation operations of lower order type are blocked until the higher order operation finishes.\n     Blocking prevents conflicts in remove transaction application.\n     Go-Online logic\n     1)  Flip update state to GO_ONLINE\n     2)  Find the lastSyncedTransaction recorded locally\n     3)  Go Online and start listening for new transactions coming in\n     a) While Go-Online is in progress continue gatethering all remote transactions that come in\n     and add them to remoteChangesSinceInitialGoOffline\n     b) Once Go-Online finishes, when remote transactions come in\n     i)  Flip update state to REMOTE_CHANGES\n     ii)  Add remote transactions to local store\n     iii) Flip state to LOCAL\n     4)  Load from deltaStore all remote transactions since lastSyncedTransaction\n     5)  Add remote transactions to local store\n     6)  While there are more transactions coming in remotely:\n     Add them to local store\n     7)  Find all local unsynced transactions\n     a)  Mark them as synchronized\n     b)  add them to deltaStore\n     c)  save them back in local store, now with the synched flag\n     (and update db with new lastSyncedTransaction)\n     8)  While there are more transactions coming in remotely:\n     Add them to local store\n     9)  Flip the online state to true\n     Finally, always flip update state to LOCAL\n     * @returns {Promise<void>}\n     */\n    async goOnline(context = {}) {\n        const offlineDeltaStore = await container(this).get(OFFLINE_DELTA_STORE);\n        await this.transactionManager.transactInternal(async () => {\n            try {\n                // 1)  Flip update state to GO_ONLINE\n                this.repositoryManager.setUpdateStateForAll(UpdateState.GO_ONLINE);\n                // 2)  Find repositories\n                // const repoRecords = await this.repositoryDao.findWithTransaction()\n                const repoRecords = await this.repositoryDao.findReposWithDetailsByIds();\n                // 3) make each repository go Online\n                let goOnlineCalls = [];\n                repoRecords.forEach((repository) => {\n                    goOnlineCalls.push(this.repositoryGoOnline(repository, offlineDeltaStore, this.repositoryManager));\n                });\n                await Promise.all(goOnlineCalls);\n                // 9)  Flip the online state to true\n                this.online = true;\n            }\n            catch (error) {\n                // TODO: notify of error\n                throw error;\n            }\n            finally {\n                // Finally, always flip update state to LOCAL\n                this.repositoryManager.setUpdateStateForAll(UpdateState.LOCAL);\n            }\n        }, context);\n    }\n    async repositoryGoOnline(repository, offlineDeltaStore, repositoryManager) {\n        let deltaStore = repositoryManager.deltaStore[repository.id];\n        let remoteChangesSinceInitialGoOnline = [];\n        // 3)  Go Online and start listening for new transactions coming in\n        await deltaStore.goOnline(async (transactions) => {\n            if (!transactions.length) {\n                return;\n            }\n            transactions = transactions.map((repoTransaction) => {\n                repoTransaction = new RepositoryTransactionHistory(repoTransaction);\n                // TODO: ?is the following needed?\n                // repoTransaction.deserialize(repository)\n                return repoTransaction;\n            });\n            // a) While Go-Online is in progress continue gathering all remote transactions\n            // that come in and add them to remoteChangesSinceInitialGoOffline\n            if (repositoryManager.getUpdateState(repository) === UpdateState.GO_ONLINE) {\n                remoteChangesSinceInitialGoOnline.push(transactions);\n            }\n            // b) Once Go-Online finishes, when remote transactions come in\n            else {\n                try {\n                    // i)  Flip update state to REMOTE_CHANGES\n                    repositoryManager.setUpdateState(repository, UpdateState.REMOTE);\n                    // ii)  Add remote transactions to local store\n                    await offlineDeltaStore.addRemoteChanges(repository, transactions);\n                }\n                catch (error) {\n                    // TODO: notify of error\n                    throw error;\n                }\n                finally {\n                    // iii) Flip state to LOCAL\n                    repositoryManager.setUpdateState(repository, UpdateState.LOCAL);\n                }\n            }\n        });\n        // 4)  Load from deltaStore all remote transactions since lastSyncedTransaction\n        let remoteChangesIter = await deltaStore.loadTransactionsSinceLastKnown(repository.lastSyncedTransaction);\n        let remoteChanges = [];\n        while (remoteChangesIter.hasNext()) {\n            remoteChanges.push(remoteChangesIter.next());\n        }\n        // 5)  Add remote transactions to local store\n        if (remoteChanges.length) {\n            await offlineDeltaStore.addRemoteChanges(repository, remoteChanges);\n        }\n        // 6)  While there are more transactions coming in remotely:\n        while (remoteChangesSinceInitialGoOnline.length) {\n            remoteChanges = remoteChangesSinceInitialGoOnline;\n            remoteChangesSinceInitialGoOnline = [];\n            // Add them to local store\n            await offlineDeltaStore.addRemoteChanges(repository, remoteChanges);\n        }\n        // 7)  Find all local unsynced transactions\n        let unsyncedChanges = await this.repositoryTransactionHistoryDao\n            .findUnsyncedTransactions(repository);\n        if (unsyncedChanges.length) {\n            unsyncedChanges.forEach((transaction) => {\n                // a)  Mark them as synchronized\n                transaction.syncStatus = BlockSyncStatus.SYNCHRONIZED;\n            });\n            // b)  add them to deltaStore\n            await deltaStore.addChanges(deltaStore.config.changeListConfig, unsyncedChanges);\n            // c)  save them back in local store, now with the synched flag\n            // (and update db with new lastSyncedTransaction)\n            await offlineDeltaStore.markChangesAsSynced(repository, null);\n        }\n        // \t8)  While there are more transactions coming in remotely:\n        // Add them to local store\n        while (remoteChangesSinceInitialGoOnline.length) {\n            remoteChanges = remoteChangesSinceInitialGoOnline;\n            remoteChangesSinceInitialGoOnline = [];\n            await offlineDeltaStore.addRemoteChanges(repository, remoteChanges);\n        }\n        // 9)  Flip the online state to true\n        this.online = true;\n    }\n    isOnline(context = {}) {\n        return this.online;\n    }\n};\n__decorate([\n    Inject()\n], OnlineManager.prototype, \"repositoryDao\", void 0);\n__decorate([\n    Inject()\n], OnlineManager.prototype, \"repositoryManager\", void 0);\n__decorate([\n    Inject()\n], OnlineManager.prototype, \"repositoryTransactionHistoryDao\", void 0);\n__decorate([\n    Inject()\n], OnlineManager.prototype, \"transactionManager\", void 0);\nOnlineManager = __decorate([\n    Injected()\n], OnlineManager);\nexport { OnlineManager };\n//# sourceMappingURL=OnlineManager.js.map","export var IsolateMessageType;\n(function (IsolateMessageType) {\n    IsolateMessageType[\"ADD_REPOSITORY\"] = \"ADD_REPOSITORY\";\n    IsolateMessageType[\"APP_INITIALIZING\"] = \"APP_INITIALIZING\";\n    IsolateMessageType[\"APP_INITIALIZED\"] = \"APP_INITIALIZED\";\n    IsolateMessageType[\"CALL_API\"] = \"CALL_API\";\n    IsolateMessageType[\"DELETE_WHERE\"] = \"DELETE_WHERE\";\n    IsolateMessageType[\"FIND\"] = \"FIND\";\n    IsolateMessageType[\"FIND_ONE\"] = \"FIND_ONE\";\n    IsolateMessageType[\"GET_LATEST_APPLICATION_VERSION_BY_APPLICATION_NAME\"] = \"GET_LATEST_APPLICATION_VERSION_BY_APPLICATION_NAME\";\n    IsolateMessageType[\"INSERT_VALUES\"] = \"INSERT_VALUES\";\n    IsolateMessageType[\"INSERT_VALUES_GET_IDS\"] = \"INSERT_VALUES_GET_IDS\";\n    IsolateMessageType[\"RETRIEVE_DOMAIN\"] = \"RETRIEVE_DOMAIN\";\n    IsolateMessageType[\"SEARCH\"] = \"SEARCH\";\n    IsolateMessageType[\"SEARCH_ONE\"] = \"SEARCH_ONE\";\n    IsolateMessageType[\"SEARCH_UNSUBSCRIBE\"] = \"UNSUBSCRIBE\";\n    IsolateMessageType[\"SAVE\"] = \"SAVE\";\n    IsolateMessageType[\"SAVE_TO_DESTINATION\"] = \"SAVE_TO_DESTINATION\";\n    IsolateMessageType[\"UPDATE_VALUES\"] = \"UPDATE_VALUES\";\n})(IsolateMessageType || (IsolateMessageType = {}));\n//# sourceMappingURL=IsolateMessage.js.map","export var AppState;\n(function (AppState) {\n    AppState[\"NOT_INITIALIED\"] = \"NOT_INITIALIED\";\n    AppState[\"START_INITIALIZING\"] = \"START_INITIALIZING\";\n    AppState[\"INITIALIZING_IN_PROGRESS\"] = \"INITIALIZING_IN_PROGRESS\";\n    AppState[\"INITIALIZED\"] = \"INITIALIZED\";\n})(AppState || (AppState = {}));\n//# sourceMappingURL=ApplicationState.js.map","import { AppState } from \"./ApplicationState\";\nexport const applicationState = {\n    application: null,\n    appState: AppState.NOT_INITIALIED,\n    domain: null,\n    // FIXME: make this dynamic for web version (https://turbase.app), local version (https://localhost:PORT)\n    // and debugging (http://localhost:7500)\n    hostServer: 'http://localhost:7500',\n    lastIds: null,\n    // FIXME: tie this in to the hostServer variable\n    mainDomain: null,\n    observableMessageMap: new Map(),\n    pendingMessageMap: new Map(),\n    messageCallback: null,\n};\n//# sourceMappingURL=theApplicationState.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from \"@airport/direction-indicator\";\nimport { applicationState } from \"./theApplicationState\";\nlet ApplicationStore = class ApplicationStore {\n    get state() {\n        return applicationState;\n    }\n};\nApplicationStore = __decorate([\n    Injected()\n], ApplicationStore);\nexport { ApplicationStore };\n//# sourceMappingURL=ApplicationStore.js.map","import { API_REGISTRY } from '@airport/check-in';\nimport { lib } from '@airport/direction-indicator';\nimport { ApplicationStore } from './state/ApplicationStore';\nconst apron = lib('apron');\nexport const APPLICATION_LOADER = apron.token({\n    class: null,\n    interface: 'IApplicationLoader',\n    token: 'APPLICATION_LOADER'\n});\nexport const APPLICATION_STORE = apron.token({\n    class: ApplicationStore,\n    interface: 'IApplicationStore',\n    token: 'APPLICATION_STORE'\n});\nexport const LOCAL_API_SERVER = apron.token({\n    class: null,\n    interface: 'ILocalAPIServer',\n    token: 'LOCAL_API_SERVER'\n});\nLOCAL_API_SERVER.setDependencies({\n    apiRegistry: API_REGISTRY\n});\n//# sourceMappingURL=tokens.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { getFullApplicationName, getFullApplicationNameFromDomainAndName, INTERNAL_DOMAIN } from '@airport/ground-control';\nimport { IsolateMessageType } from '@airport/apron';\nlet TransactionalReceiver = class TransactionalReceiver {\n    async processMessage(message) {\n        let result;\n        let errorMessage;\n        try {\n            if (message.domain === INTERNAL_DOMAIN) {\n                throw new Error(`Internal domain cannot be used in external calls`);\n            }\n            let credentials = {\n                application: message.application,\n                domain: message.domain,\n                methodName: message.methodName,\n                objectName: message.objectName\n            };\n            let context = {};\n            context.startedAt = new Date();\n            switch (message.type) {\n                case IsolateMessageType.CALL_API: {\n                    const context = {};\n                    try {\n                        result = await this.nativeHandleApiCall(message, context);\n                    }\n                    catch (e) {\n                        errorMessage = e.message;\n                    }\n                    break;\n                }\n                case IsolateMessageType.APP_INITIALIZING:\n                    let initConnectionMessage = message;\n                    const application = initConnectionMessage.jsonApplication;\n                    const fullApplicationName = getFullApplicationName(application);\n                    const messageFullApplicationName = getFullApplicationNameFromDomainAndName(message.domain, message.application);\n                    if (fullApplicationName !== messageFullApplicationName) {\n                        result = null;\n                        break;\n                    }\n                    if (this.terminalStore.getReceiver().initializingApps\n                        .has(fullApplicationName)) {\n                        return null;\n                    }\n                    this.terminalStore.getReceiver().initializingApps\n                        .add(fullApplicationName);\n                    // FIXME: initalize ahead of time, at Isolate Loading\n                    await this.databaseManager.initFeatureApplications({}, [application]);\n                    await this.internalRecordManager.ensureApplicationRecords(application, {});\n                    result = application.lastIds;\n                    break;\n                case IsolateMessageType.APP_INITIALIZED:\n                    const initializedApps = this.terminalStore.getReceiver().initializedApps;\n                    initializedApps.add(message.fullApplicationName);\n                    return null;\n                case IsolateMessageType.GET_LATEST_APPLICATION_VERSION_BY_APPLICATION_NAME: {\n                    result = this.terminalStore.getLatestApplicationVersionMapByFullApplicationName()\n                        .get(message.fullApplicationName);\n                    break;\n                }\n                case IsolateMessageType.RETRIEVE_DOMAIN: {\n                    result = this.terminalStore.getDomainMapByName()\n                        .get(message.domain);\n                    break;\n                }\n                case IsolateMessageType.ADD_REPOSITORY:\n                    // const addRepositoryMessage: IAddRepositoryIMI = <IAddRepositoryIMI>message\n                    result = await this.transactionalServer.addRepository(\n                    // addRepositoryMessage.url,\n                    // addRepositoryMessage.platform,\n                    // addRepositoryMessage.platformConfig,\n                    // addRepositoryMessage.distributionStrategy,\n                    credentials, context);\n                    break;\n                case IsolateMessageType.DELETE_WHERE:\n                    const deleteWhereMessage = message;\n                    result = await this.transactionalServer.deleteWhere(deleteWhereMessage.portableQuery, credentials, context);\n                    break;\n                case IsolateMessageType.FIND:\n                    const findMessage = message;\n                    result = await this.transactionalServer.find(findMessage.portableQuery, credentials, {\n                        ...context,\n                        repository: findMessage.repository\n                    });\n                    break;\n                case IsolateMessageType.FIND_ONE:\n                    const findOneMessage = message;\n                    result = await this.transactionalServer.findOne(findOneMessage.portableQuery, credentials, {\n                        ...context,\n                        repository: findMessage.repository,\n                    });\n                    break;\n                case IsolateMessageType.INSERT_VALUES:\n                    const insertValuesMessage = message;\n                    result = await this.transactionalServer.insertValues(insertValuesMessage.portableQuery, credentials, context);\n                    break;\n                case IsolateMessageType.INSERT_VALUES_GET_IDS:\n                    const insertValuesGetIdsMessage = message;\n                    result = await this.transactionalServer.insertValuesGetIds(insertValuesGetIdsMessage.portableQuery, credentials, context);\n                    break;\n                case IsolateMessageType.SAVE:\n                case IsolateMessageType.SAVE_TO_DESTINATION: {\n                    const saveMessage = message;\n                    if (!saveMessage.dbEntity) {\n                        errorMessage = `DbEntity id was not passed in`;\n                        break;\n                    }\n                    const dbEntityId = saveMessage.dbEntity.id;\n                    const dbEntity = this.terminalStore.getAllEntities()[dbEntityId];\n                    if (!dbEntity) {\n                        errorMessage = `Could not find DbEntity with Id ${dbEntityId}`;\n                        break;\n                    }\n                    context.dbEntity = dbEntity;\n                    if (message.type === IsolateMessageType.SAVE) {\n                        result = await this.transactionalServer.save(saveMessage.entity, credentials, context);\n                    }\n                    else {\n                        const saveToDestinationMessage = message;\n                        result = await this.transactionalServer.saveToDestination(saveToDestinationMessage.repositoryDestination, saveToDestinationMessage.entity, credentials, context);\n                    }\n                    break;\n                }\n                case IsolateMessageType.SEARCH:\n                    const searchMessage = message;\n                    result = await this.transactionalServer.search(searchMessage.portableQuery, credentials, {\n                        ...context,\n                        repository: findMessage.repository,\n                    });\n                    break;\n                case IsolateMessageType.SEARCH_ONE:\n                    const searchOneMessage = message;\n                    result = await this.transactionalServer.search(searchOneMessage.portableQuery, credentials, {\n                        ...context,\n                        repository: findMessage.repository,\n                    });\n                    break;\n                case IsolateMessageType.UPDATE_VALUES:\n                    const updateValuesMessage = message;\n                    result = await this.transactionalServer.updateValues(updateValuesMessage.portableQuery, credentials, context);\n                    break;\n                default:\n                    // Unexpected IsolateMessageInType\n                    return;\n            }\n        }\n        catch (error) {\n            console.error(error);\n            result = null;\n            errorMessage = error.message;\n        }\n        return {\n            application: message.application,\n            category: 'FromDb',\n            domain: message.domain,\n            errorMessage,\n            id: message.id,\n            type: message.type,\n            result\n        };\n    }\n    async startApiCall(message, context, nativeHandleCallback) {\n        const transactionCredentials = {\n            application: message.application,\n            domain: message.domain,\n            methodName: message.methodName,\n            objectName: message.objectName,\n            transactionId: message.transactionId\n        };\n        if (!await this.transactionalServer.startTransaction(transactionCredentials, context)) {\n            return false;\n        }\n        const initiator = context.transaction.initiator;\n        initiator.application = message.application;\n        initiator.domain = message.domain;\n        initiator.methodName = message.methodName;\n        initiator.objectName = message.objectName;\n        message.transactionId = context.transaction.id;\n        try {\n            await nativeHandleCallback();\n        }\n        catch (e) {\n            context.errorMessage = e.message;\n            this.transactionalServer.rollback(transactionCredentials, context);\n            return false;\n        }\n        return true;\n    }\n    async endApiCall(credentials, errorMessage, context) {\n        if (errorMessage) {\n            return await this.transactionalServer.rollback(credentials, context);\n        }\n        else {\n            return await this.transactionalServer.commit(credentials, context);\n        }\n    }\n};\n__decorate([\n    Inject()\n], TransactionalReceiver.prototype, \"databaseManager\", void 0);\n__decorate([\n    Inject()\n], TransactionalReceiver.prototype, \"internalRecordManager\", void 0);\n__decorate([\n    Inject()\n], TransactionalReceiver.prototype, \"terminalStore\", void 0);\n__decorate([\n    Inject()\n], TransactionalReceiver.prototype, \"transactionalServer\", void 0);\nTransactionalReceiver = __decorate([\n    Injected()\n], TransactionalReceiver);\nexport { TransactionalReceiver };\n//# sourceMappingURL=TransactionalReceiver.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { INTERNAL_DOMAIN } from '@airport/ground-control';\nimport { Actor } from '@airport/holding-pattern-runtime';\n/**\n * Keeps track of transactions, per client and validates that a given\n * transaction belongs to the provided client.  If the connection\n * information matches, passes the transaction for handling.\n *\n * All transactions are queued.  Read operations are not blocked while\n * any transaction is in progress.  Best way to make sure that you get\n * the latest state is to subscribe to a query, which is guaranteed to\n * be updated after data has changed.\n *\n *\n * Should read operations be blocked while transactions are in process?\n * Probably not since they will just get snapshot of the state at any\n * given point in time and transactionality takes care of not exposing\n * inconsistent state.  There doesn't appear to be a need to que-up\n * read transactions, since SqLite can handle it:\n *\n * https://www.skoumal.net/en/parallel-read-and-write-in-sqlite/\n *\n * Also, there doesn't appear to be a reason to prioritize remote transactions\n * over local ones, since ultimately the state needs to sync either way.\n * A single transactional queue should be enough.\n *\n */\nlet TransactionalServer = class TransactionalServer {\n    async init(context = {}) {\n        return await this.transactionManager.initialize('airport', context);\n    }\n    async addRepository(credentials, context) {\n        await this.ensureContext(context);\n        this.transactionManager.getTransactionFromContextOrCredentials(credentials, context);\n        const actor = await this.getActor(credentials);\n        // FIXME: check actor\n        let repositoryId = 0;\n        await this.transactionManager.transactInternal(async () => {\n            const repository = await this.repositoryManager.createRepository(\n            // url, platform, platformConfig, distributionStrategy\n            actor, context);\n            repositoryId = repository.id;\n        }, context);\n        return repositoryId;\n    }\n    async find(portableQuery, credentials, context, cachedSqlQueryId) {\n        await this.ensureContext(context);\n        if (credentials.transactionId) {\n            this.transactionManager.getTransactionFromContextOrCredentials(credentials, context);\n        }\n        return await this.queryManager.find(portableQuery, context, cachedSqlQueryId);\n    }\n    async findOne(portableQuery, credentials, context, cachedSqlQueryId) {\n        await this.ensureContext(context);\n        if (credentials.transactionId) {\n            this.transactionManager.getTransactionFromContextOrCredentials(credentials, context);\n        }\n        return await this.queryManager.findOne(portableQuery, context, cachedSqlQueryId);\n    }\n    search(portableQuery, credentials, context, cachedSqlQueryId) {\n        this.ensureContextSync(context);\n        if (credentials.transactionId) {\n            this.transactionManager.getTransactionFromContextOrCredentials(credentials, context);\n        }\n        return this.queryManager.search(portableQuery, context);\n    }\n    searchOne(portableQuery, credentials, context, cachedSqlQueryId) {\n        this.ensureContextSync(context);\n        if (credentials.transactionId) {\n            this.transactionManager.getTransactionFromContextOrCredentials(credentials, context);\n        }\n        return this.queryManager.searchOne(portableQuery, context);\n    }\n    async startTransaction(credentials, context) {\n        try {\n            await this.ensureContext(context);\n            await this.transactionManager.startTransaction(credentials, context);\n            return true;\n        }\n        catch (e) {\n            context.errorMessage = e.message;\n            console.error(e);\n            return false;\n        }\n    }\n    async commit(credentials, context) {\n        try {\n            await this.ensureContext(context);\n            await this.transactionManager.commit(credentials, context);\n            return true;\n        }\n        catch (e) {\n            console.error(e);\n            context.errorMessage = e.message;\n            return false;\n        }\n    }\n    async rollback(credentials, context) {\n        if (context.transaction) {\n        }\n        try {\n            await this.ensureContext(context);\n            await this.transactionManager.rollback(credentials, context);\n            return true;\n        }\n        catch (e) {\n            console.error(e);\n            context.errorMessage = e.message;\n            return false;\n        }\n    }\n    async save(entity, credentials, context) {\n        if (!entity) {\n            return null;\n        }\n        await this.ensureContext(context);\n        this.transactionManager.getTransactionFromContextOrCredentials(credentials, context);\n        const actor = await this.getActor(credentials);\n        context.actor = actor;\n        let saveResult;\n        await this.transactionManager.transactInternal(async (transaction, context) => {\n            saveResult = await this.operationManager.performSave(entity, actor, transaction, context.rootTransaction, context);\n        }, context);\n        return saveResult;\n    }\n    async saveToDestination(repositoryDestination, entity, credentials, context) {\n        if (!entity) {\n            return null;\n        }\n        await this.ensureContext(context);\n        this.transactionManager.getTransactionFromContextOrCredentials(credentials, context);\n        const actor = await this.getActor(credentials);\n        context.actor = actor;\n        let saveResult;\n        await this.transactionManager.transactInternal(async (transaction, context) => {\n            // TODO: save to serialized repository to the specified destination\n            saveResult = await this.operationManager.performSave(entity, actor, transaction, context.rootTransaction, context);\n        }, context);\n        return saveResult;\n    }\n    async insertValues(portableQuery, credentials, context, ensureGeneratedValues // for internal use only\n    ) {\n        await this.ensureContext(context);\n        this.transactionManager.getTransactionFromContextOrCredentials(credentials, context);\n        const actor = await this.getActor(credentials);\n        let numInsertedRecords;\n        await this.transactionManager.transactInternal(async (transaction, context) => {\n            numInsertedRecords = await this.insertManager.insertValues(portableQuery, actor, transaction, context.rootTransaction, context, ensureGeneratedValues);\n        }, context);\n        return numInsertedRecords;\n    }\n    async insertValuesGetIds(portableQuery, credentials, context) {\n        await this.ensureContext(context);\n        this.transactionManager.getTransactionFromContextOrCredentials(credentials, context);\n        const actor = await this.getActor(credentials);\n        let ids;\n        await this.transactionManager.transactInternal(async (transaction, context) => {\n            ids = await this.insertManager.insertValuesGetIds(portableQuery, actor, transaction, context.rootTransaction, context);\n        }, context);\n        return ids;\n    }\n    async updateValues(portableQuery, credentials, context) {\n        await this.ensureContext(context);\n        this.transactionManager.getTransactionFromContextOrCredentials(credentials, context);\n        const actor = await this.getActor(credentials);\n        let numUpdatedRecords;\n        await this.transactionManager.transactInternal(async (transaction, context) => {\n            numUpdatedRecords = await this.updateManager.updateValues(portableQuery, actor, transaction, context.rootTransaction, context);\n        }, context);\n        return numUpdatedRecords;\n    }\n    async deleteWhere(portableQuery, credentials, context) {\n        await this.ensureContext(context);\n        this.transactionManager.getTransactionFromContextOrCredentials(credentials, context);\n        const actor = await this.getActor(credentials);\n        let numDeletedRecords;\n        await this.transactionManager.transactInternal(async (transaction, context) => {\n            numDeletedRecords = await this.deleteManager.deleteWhere(portableQuery, actor, transaction, context.rootTransaction, context);\n        }, context);\n        return numDeletedRecords;\n    }\n    async getActor(credentials) {\n        if (this.tempActor) {\n            return this.tempActor;\n        }\n        if (credentials.domain === INTERNAL_DOMAIN) {\n            return new Actor();\n        }\n        let actors;\n        const actorMapForDomain = this.terminalStore\n            .getApplicationActorMapByDomainAndApplicationNames().get(credentials.domain);\n        if (actorMapForDomain) {\n            actors = actorMapForDomain.get(credentials.application);\n        }\n        else {\n            throw new Error(`No Actors found for\r\n\tDomain:\r\n\t\t${credentials.domain}\r\n\t\t\t`);\n        }\n        if (!actors) {\n            throw new Error(`No Actors found for\r\n\tDomain:\r\n\t\t${credentials.domain}\r\n\tApplication:\r\n\t\t${credentials.application}\r\n\t\t\t`);\n        }\n        const localTerminal = this.terminalStore.getFrameworkActor().terminal;\n        if (!localTerminal.isLocal) {\n            throw new Error(`Expecting terminal of the TerminalStore.frameworkActor to be .isLocal`);\n        }\n        let actor;\n        for (const anActor of actors) {\n            if (anActor.terminal.uuId === localTerminal.uuId) {\n                actor = anActor;\n                break;\n            }\n        }\n        if (!actor) {\n            throw new Error(`Could not find actor for\r\n\tDomain:\r\n\t\t${credentials.domain}\r\n\tApplication:\r\n\t\t${credentials.application}\r\n\t\t\t`);\n        }\n        return actor;\n    }\n    async ensureContext(context) {\n        await this.operationContextLoader.ensure(context);\n    }\n    async ensureContextSync(context) {\n        this.operationContextLoader.ensureSync(context);\n    }\n};\n__decorate([\n    Inject()\n], TransactionalServer.prototype, \"deleteManager\", void 0);\n__decorate([\n    Inject()\n], TransactionalServer.prototype, \"insertManager\", void 0);\n__decorate([\n    Inject()\n], TransactionalServer.prototype, \"operationManager\", void 0);\n__decorate([\n    Inject()\n], TransactionalServer.prototype, \"operationContextLoader\", void 0);\n__decorate([\n    Inject()\n], TransactionalServer.prototype, \"queryManager\", void 0);\n__decorate([\n    Inject()\n], TransactionalServer.prototype, \"repositoryManager\", void 0);\n__decorate([\n    Inject()\n], TransactionalServer.prototype, \"terminalStore\", void 0);\n__decorate([\n    Inject()\n], TransactionalServer.prototype, \"transactionManager\", void 0);\n__decorate([\n    Inject()\n], TransactionalServer.prototype, \"updateManager\", void 0);\nTransactionalServer = __decorate([\n    Injected()\n], TransactionalServer);\nexport { TransactionalServer };\nexport function injectTransactionalServer() {\n    console.log('Injecting TransactionalServer');\n}\n//# sourceMappingURL=TransactionalServer.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { InsertValues, } from '@airport/air-traffic-control';\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet AbstractMutationManager = class AbstractMutationManager {\n    getPortableQuery(applicationIndex, tableIndex, query, queryResultType) {\n        return {\n            applicationIndex,\n            tableIndex,\n            jsonQuery: query.toJSON(this.queryUtils, this.fieldUtils, this.relationManager),\n            parameterMap: query.getParameters(),\n            queryResultType,\n        };\n    }\n    async doInsertValues(transaction, q, entities, context) {\n        const dbEntity = q.__driver__.dbEntity;\n        const columnIndexes = [];\n        const columnValueLookups = [];\n        for (const dbProperty of dbEntity.properties) {\n            let columnValueLookup = {\n                name: dbProperty.name,\n                nested: null,\n            };\n            if (dbProperty.relation && dbProperty.relation.length) {\n                const dbRelation = dbProperty.relation[0];\n                this.applicationUtils.forEachColumnTypeOfRelation(dbRelation, (dbColumn, propertyNameChains) => {\n                    if (columnIndexes[dbColumn.index]) {\n                        return;\n                    }\n                    columnIndexes[dbColumn.index] = dbColumn.index;\n                    columnValueLookups[dbColumn.index] = columnValueLookup;\n                    const firstPropertyNameChain = propertyNameChains[0];\n                    for (let i = 1; i < firstPropertyNameChain.length; i++) {\n                        const propertyName = firstPropertyNameChain[i];\n                        const nextColumnValueLookup = {\n                            name: propertyName,\n                            nested: null,\n                        };\n                        columnValueLookup.nested = nextColumnValueLookup;\n                        columnValueLookup = nextColumnValueLookup;\n                    }\n                });\n            }\n            else {\n                const dbColumn = dbProperty.propertyColumns[0].column;\n                if (columnIndexes[dbColumn.index]) {\n                    continue;\n                }\n                columnIndexes[dbColumn.index] = dbColumn.index;\n                columnValueLookups[dbColumn.index] = columnValueLookup;\n            }\n        }\n        const values = entities.map(entity => {\n            return columnValueLookups.map(lookup => {\n                let value = entity[lookup.name];\n                while (lookup.nested) {\n                    if (!(value instanceof Object)) {\n                        break;\n                    }\n                    lookup = lookup.nested;\n                    value = value[lookup.name];\n                }\n                return value === undefined ? null : value;\n            });\n        });\n        const rawInsertValues = {\n            insertInto: q,\n            columns: null,\n            values,\n        };\n        let insertValues = new InsertValues(rawInsertValues, columnIndexes);\n        let portableQuery = this.getPortableQuery(dbEntity.applicationVersion.application.index, dbEntity.index, insertValues, null);\n        return await transaction.insertValues(portableQuery, context);\n    }\n};\n__decorate([\n    Inject()\n], AbstractMutationManager.prototype, \"applicationUtils\", void 0);\n__decorate([\n    Inject()\n], AbstractMutationManager.prototype, \"fieldUtils\", void 0);\n__decorate([\n    Inject()\n], AbstractMutationManager.prototype, \"queryUtils\", void 0);\n__decorate([\n    Inject()\n], AbstractMutationManager.prototype, \"relationManager\", void 0);\nAbstractMutationManager = __decorate([\n    Injected()\n], AbstractMutationManager);\nexport { AbstractMutationManager };\n//# sourceMappingURL=AbstractMutationManager.js.map","/* eslint-disable */\nexport const APPLICATION = {\n    \"domain\": \"air\",\n    \"index\": null,\n    \"name\": \"@airport/airport-code\",\n    \"sinceVersion\": 1,\n    \"versions\": [\n        {\n            \"api\": {\n                \"apiObjectMap\": {\n                    \"IApplicationApi\": {\n                        \"operationMap\": {\n                            \"testApiDefinitionGeneration\": {\n                                \"isAsync\": true,\n                                \"parameters\": []\n                            }\n                        }\n                    }\n                }\n            },\n            \"entities\": [\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"APPLICATION_INDEX\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"TABLE_INDEX\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"COLUMN_INDEX\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 3,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"SEQUENCE_INCREMENT_BY\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 3\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 4,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"CURRENT_VALUE\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 4\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        },\n                        {\n                            \"index\": 1\n                        },\n                        {\n                            \"index\": 2\n                        }\n                    ],\n                    \"index\": 0,\n                    \"isLocal\": true,\n                    \"isRepositoryEntity\": false,\n                    \"name\": \"Sequence\",\n                    \"properties\": [\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"applicationIndex\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 1\n                            },\n                            \"index\": 1,\n                            \"isId\": true,\n                            \"name\": \"tableIndex\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 2\n                            },\n                            \"index\": 2,\n                            \"isId\": true,\n                            \"name\": \"columnIndex\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 3\n                            },\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"name\": \"incrementBy\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 4\n                            },\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"name\": \"currentValue\",\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"SEQUENCES\",\n                        \"columnIndexes\": []\n                    },\n                    \"operations\": {}\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": true,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"ID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        }\n                    ],\n                    \"index\": 1,\n                    \"isLocal\": true,\n                    \"isRepositoryEntity\": false,\n                    \"name\": \"SystemWideOperationId\",\n                    \"properties\": [\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"id\",\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"SYSTEM_WIDE_OPERATION_IDS\",\n                        \"columnIndexes\": []\n                    }\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": true,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"CREATE_TIMESTAMP\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"RANDOM_NUMBER\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        }\n                    ],\n                    \"index\": 2,\n                    \"isLocal\": true,\n                    \"isRepositoryEntity\": false,\n                    \"name\": \"TerminalRun\",\n                    \"properties\": [\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"id\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 1\n                            },\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"createTimestamp\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 2\n                            },\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"randomNumber\",\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"TERMINAL_RUNS\",\n                        \"columnIndexes\": []\n                    },\n                    \"operations\": {}\n                }\n            ],\n            \"integerVersion\": 1,\n            \"referencedApplications\": [],\n            \"versionString\": \"1.0.0\"\n        }\n    ]\n};\n//# sourceMappingURL=application.js.map","import { APPLICATION as AIRPORT_CODE } from '@airport/airport-code/lib/generated/application';\nimport { APPLICATION as HOLDING_PATTERN } from '@airport/holding-pattern-runtime/lib/application';\nimport { APPLICATION as AIRSPACE } from '@airport/airspace/lib/generated/application';\nimport { APPLICATION as TRAVEL_DOCUMENT_CHECKPOINT } from '@airport/travel-document-checkpoint-runtime/lib/application';\nimport { APPLICATION as MOVING_WALKWAY } from '@airport/moving-walkway/lib/generated/application';\nexport const BLUEPRINT = [\n    AIRPORT_CODE,\n    TRAVEL_DOCUMENT_CHECKPOINT,\n    AIRSPACE,\n    HOLDING_PATTERN,\n    MOVING_WALKWAY\n];\n//# sourceMappingURL=index.js.map","/* eslint-disable */\nexport const APPLICATION = {\n    \"domain\": \"air\",\n    \"index\": null,\n    \"name\": \"@airport/travel-document-checkpoint\",\n    \"sinceVersion\": 1,\n    \"versions\": [\n        {\n            \"api\": {\n                \"apiObjectMap\": {\n                    \"IUserApi\": {\n                        \"operationMap\": {\n                            \"addUser\": {\n                                \"isAsync\": true,\n                                \"parameters\": []\n                            },\n                            \"findUser\": {\n                                \"isAsync\": true,\n                                \"parameters\": []\n                            }\n                        }\n                    }\n                }\n            },\n            \"entities\": [\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": true,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"NAME\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        }\n                    ],\n                    \"index\": 0,\n                    \"isLocal\": true,\n                    \"isRepositoryEntity\": false,\n                    \"name\": \"Continent\",\n                    \"properties\": [\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"id\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 1\n                            },\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"name\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"countries\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"continent\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 2\n                            },\n                            \"relationTableIndex\": 1,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"CONTINENTS\",\n                        \"columnIndexes\": []\n                    }\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": true,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"NAME\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 0,\n                                    \"oneRelationIndex\": 0,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"CONTINENT_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        }\n                    ],\n                    \"index\": 1,\n                    \"isLocal\": true,\n                    \"isRepositoryEntity\": false,\n                    \"name\": \"Country\",\n                    \"properties\": [\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"id\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 1\n                            },\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"name\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"continent\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"name\": \"users\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 2\n                            },\n                            \"relationTableIndex\": 0,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"country\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 3\n                            },\n                            \"relationTableIndex\": 4,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"COUNTRIES\",\n                        \"columnIndexes\": []\n                    }\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 4,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"USER_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 1,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 5,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"TERMINAL_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        },\n                        {\n                            \"index\": 1\n                        }\n                    ],\n                    \"index\": 2,\n                    \"isLocal\": true,\n                    \"isRepositoryEntity\": false,\n                    \"name\": \"UserTerminal\",\n                    \"properties\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"user\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": true,\n                            \"name\": \"terminal\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 0\n                            },\n                            \"relationTableIndex\": 4,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": true,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 1\n                            },\n                            \"relationTableIndex\": 5,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"USER_TERMINAL\",\n                        \"columnIndexes\": []\n                    }\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": true,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": true,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 2,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 7,\n                                    \"oneRelationIndex\": 1,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                },\n                                {\n                                    \"manyRelationIndex\": 3,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 6,\n                                    \"oneRelationIndex\": 2,\n                                    \"oneColumnIndex\": 2,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"AGT_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"PASSWORD\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 3,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 4,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"USER_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 3\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 4,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 1,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 5,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                },\n                                {\n                                    \"manyRelationIndex\": 3,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 6,\n                                    \"oneRelationIndex\": 2,\n                                    \"oneColumnIndex\": 1,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"TERMINAL_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 4\n                                },\n                                {\n                                    \"index\": 6\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        },\n                        {\n                            \"index\": 1\n                        }\n                    ],\n                    \"index\": 3,\n                    \"isLocal\": true,\n                    \"isRepositoryEntity\": false,\n                    \"name\": \"UserTerminalAgt\",\n                    \"properties\": [\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"id\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 1\n                            },\n                            \"index\": 1,\n                            \"isId\": true,\n                            \"name\": \"agtId\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 2\n                            },\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"password\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"name\": \"user\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"name\": \"terminal\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 5,\n                            \"isId\": false,\n                            \"name\": \"agt\",\n                            \"relationRef\": {\n                                \"index\": 2\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 6,\n                            \"isId\": false,\n                            \"name\": \"terminalAgt\",\n                            \"relationRef\": {\n                                \"index\": 3\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 3\n                            },\n                            \"relationTableIndex\": 4,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 4\n                            },\n                            \"relationTableIndex\": 5,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 5\n                            },\n                            \"relationTableIndex\": 7,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 6\n                            },\n                            \"relationTableIndex\": 6,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"USER_TERMINAL_AGT\",\n                        \"columnIndexes\": []\n                    }\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": true,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"EMAIL\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"PASSWORD_HASH\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 3,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"USERNAME\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 3\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 4,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"UUID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 4\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        }\n                    ],\n                    \"index\": 4,\n                    \"isLocal\": true,\n                    \"isRepositoryEntity\": false,\n                    \"name\": \"User\",\n                    \"properties\": [\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"id\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 1\n                            },\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"email\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 2\n                            },\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"passwordHash\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 3\n                            },\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"name\": \"username\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 4\n                            },\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"name\": \"uuId\",\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"columnIndexes\": []\n                    },\n                    \"operations\": {}\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": true,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"UUID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"IS_LOCAL\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 3\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"BOOLEAN\"\n                        },\n                        {\n                            \"index\": 3,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 4,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"OWNER_USER_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        }\n                    ],\n                    \"index\": 5,\n                    \"isLocal\": true,\n                    \"isRepositoryEntity\": false,\n                    \"name\": \"Terminal\",\n                    \"properties\": [\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"id\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 1\n                            },\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"uuId\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"owner\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 2\n                            },\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"name\": \"isLocal\",\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 2\n                            },\n                            \"relationTableIndex\": 4,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"TERMINAL\",\n                        \"propertyIndexes\": [\n                            {\n                                \"propertyIndex\": 1,\n                                \"unique\": true\n                            }\n                        ]\n                    },\n                    \"operations\": {}\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"PASSWORD\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 5,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"TERMINAL_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 1,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 7,\n                                    \"oneRelationIndex\": 0,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"AGT_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 1\n                        },\n                        {\n                            \"index\": 2\n                        }\n                    ],\n                    \"index\": 6,\n                    \"isLocal\": true,\n                    \"isRepositoryEntity\": false,\n                    \"name\": \"TerminalAgt\",\n                    \"properties\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"terminal\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": true,\n                            \"name\": \"agt\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"password\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"name\": \"userTerminalAgts\",\n                            \"relationRef\": {\n                                \"index\": 2\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 0\n                            },\n                            \"relationTableIndex\": 5,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": true,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 1\n                            },\n                            \"relationTableIndex\": 7,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"terminalAgt\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 3\n                            },\n                            \"relationTableIndex\": 3,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"TERMINAL_AGTS\",\n                        \"columnIndexes\": []\n                    }\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": true,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"ADDRESS\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        }\n                    ],\n                    \"index\": 7,\n                    \"isLocal\": true,\n                    \"isRepositoryEntity\": false,\n                    \"name\": \"Agt\",\n                    \"properties\": [\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"id\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 1\n                            },\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"address\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"terminalAgts\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"name\": \"userTerminalAgts\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"agt\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 2\n                            },\n                            \"relationTableIndex\": 6,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"agt\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 3\n                            },\n                            \"relationTableIndex\": 3,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"columnIndexes\": []\n                    }\n                }\n            ],\n            \"integerVersion\": 1,\n            \"referencedApplications\": [],\n            \"versionString\": \"1.0.0\"\n        }\n    ]\n};\n//# sourceMappingURL=application.js.map","/* eslint-disable */\nexport const APPLICATION = {\n    \"domain\": \"air\",\n    \"index\": null,\n    \"name\": \"@airport/airspace\",\n    \"sinceVersion\": 1,\n    \"versions\": [\n        {\n            \"api\": {\n                \"apiObjectMap\": {}\n            },\n            \"entities\": [\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"DEPRECATED_SINCE_APPLICATION_VERSION_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 1,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"REMOVED_IN_APPLICATION_VERSION_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 2,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"SINCE_APPLICATION_VERSION_ID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 3,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 3\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 4,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 3,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 4,\n                                    \"oneRelationIndex\": 5,\n                                    \"oneColumnIndex\": 3,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"MANY_APPLICATION_COLUMN_ID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 4\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 5,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 4,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 4,\n                                    \"oneRelationIndex\": 6,\n                                    \"oneColumnIndex\": 3,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"ONE_APPLICATION_COLUMN_ID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 5\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 6,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 5,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 1,\n                                    \"oneRelationIndex\": 6,\n                                    \"oneColumnIndex\": 3,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"MANY_APPLICATION_RELATION_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 6\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 7,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 6,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 1,\n                                    \"oneRelationIndex\": 7,\n                                    \"oneColumnIndex\": 3,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"ONE_APPLICATION_RELATION_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 7\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 8,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 7,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 1,\n                                    \"oneColumnIndex\": 3,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"PARENT_RELATION_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 8\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 3\n                        }\n                    ],\n                    \"index\": 0,\n                    \"isLocal\": true,\n                    \"isRepositoryEntity\": false,\n                    \"name\": \"ApplicationRelationColumn\",\n                    \"properties\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"name\": \"deprecatedSinceVersion\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"removedInVersion\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"sinceVersion\",\n                            \"relationRef\": {\n                                \"index\": 2\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 3\n                            },\n                            \"index\": 3,\n                            \"isId\": true,\n                            \"name\": \"id\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"name\": \"manyColumn\",\n                            \"relationRef\": {\n                                \"index\": 3\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 5,\n                            \"isId\": false,\n                            \"name\": \"oneColumn\",\n                            \"relationRef\": {\n                                \"index\": 4\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 6,\n                            \"isId\": false,\n                            \"name\": \"manyRelation\",\n                            \"relationRef\": {\n                                \"index\": 5\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 7,\n                            \"isId\": false,\n                            \"name\": \"oneRelation\",\n                            \"relationRef\": {\n                                \"index\": 6\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 8,\n                            \"isId\": false,\n                            \"name\": \"parentRelation\",\n                            \"relationRef\": {\n                                \"index\": 7\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 0\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 1\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 2\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 4\n                            },\n                            \"relationTableIndex\": 4,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 5\n                            },\n                            \"relationTableIndex\": 4,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 5,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 6\n                            },\n                            \"relationTableIndex\": 1,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 6,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 7\n                            },\n                            \"relationTableIndex\": 1,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 7,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 8\n                            },\n                            \"relationTableIndex\": 1,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"APPLICATION_RELATION_COLUMNS\",\n                        \"columnIndexes\": []\n                    },\n                    \"operations\": {}\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"DEPRECATED_SINCE_APPLICATION_VERSION_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 1,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"REMOVED_IN_APPLICATION_VERSION_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 2,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"SINCE_APPLICATION_VERSION_ID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 3,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 3\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 4,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"RELATION_INDEX\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 4\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 5,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"FOREIGN_KEY\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 6\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"JSON\"\n                        },\n                        {\n                            \"index\": 6,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"MANY_TO_ONE_ELEMENTS\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 7\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"JSON\"\n                        },\n                        {\n                            \"index\": 7,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"ONE_TO_MANY_ELEMENTS\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 8\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"JSON\"\n                        },\n                        {\n                            \"index\": 8,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"RELATION_TYPE\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 9\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 9,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"IS_ID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 10\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"BOOLEAN\"\n                        },\n                        {\n                            \"index\": 10,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 3,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 2,\n                                    \"oneRelationIndex\": 5,\n                                    \"oneColumnIndex\": 3,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"APPLICATION_PROPERTY_ID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 5\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 11,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 4,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 6,\n                                    \"oneRelationIndex\": 7,\n                                    \"oneColumnIndex\": 3,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"APPLICATION_TABLE_ID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 11\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 12,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 5,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 6,\n                                    \"oneRelationIndex\": 8,\n                                    \"oneColumnIndex\": 3,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"RELATION_APPLICATION_TABLE_ID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 12\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 3\n                        }\n                    ],\n                    \"index\": 1,\n                    \"isLocal\": true,\n                    \"isRepositoryEntity\": false,\n                    \"name\": \"ApplicationRelation\",\n                    \"properties\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"name\": \"deprecatedSinceVersion\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"removedInVersion\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"sinceVersion\",\n                            \"relationRef\": {\n                                \"index\": 2\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 3\n                            },\n                            \"index\": 3,\n                            \"isId\": true,\n                            \"name\": \"id\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 4\n                            },\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"name\": \"index\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 5,\n                            \"isId\": false,\n                            \"name\": \"property\",\n                            \"relationRef\": {\n                                \"index\": 3\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 5\n                            },\n                            \"index\": 6,\n                            \"isId\": false,\n                            \"name\": \"foreignKey\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 6\n                            },\n                            \"index\": 7,\n                            \"isId\": false,\n                            \"name\": \"manyToOneElems\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 7\n                            },\n                            \"index\": 8,\n                            \"isId\": false,\n                            \"name\": \"oneToManyElems\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 8\n                            },\n                            \"index\": 9,\n                            \"isId\": false,\n                            \"name\": \"relationType\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 9\n                            },\n                            \"index\": 10,\n                            \"isId\": false,\n                            \"name\": \"isId\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 11,\n                            \"isId\": false,\n                            \"name\": \"entity\",\n                            \"relationRef\": {\n                                \"index\": 4\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 12,\n                            \"isId\": false,\n                            \"name\": \"relationEntity\",\n                            \"relationRef\": {\n                                \"index\": 5\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 13,\n                            \"isId\": false,\n                            \"name\": \"manyRelationColumns\",\n                            \"relationRef\": {\n                                \"index\": 6\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 14,\n                            \"isId\": false,\n                            \"name\": \"oneRelationColumns\",\n                            \"relationRef\": {\n                                \"index\": 7\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 0\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 1\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 2\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 5\n                            },\n                            \"relationTableIndex\": 2,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 11\n                            },\n                            \"relationTableIndex\": 6,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 5,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 12\n                            },\n                            \"relationTableIndex\": 6,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 6,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"manyRelation\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 13\n                            },\n                            \"relationTableIndex\": 0,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 7,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"oneRelation\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 14\n                            },\n                            \"relationTableIndex\": 0,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"APPLICATION_RELATIONS\",\n                        \"columnIndexes\": []\n                    },\n                    \"operations\": {}\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"DEPRECATED_SINCE_APPLICATION_VERSION_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 1,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"REMOVED_IN_APPLICATION_VERSION_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 2,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"SINCE_APPLICATION_VERSION_ID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 3,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 3\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 4,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"PROPERTY_INDEX\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 4\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 5,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"NAME\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 5\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 6,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"IS_ID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 6\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"BOOLEAN\"\n                        },\n                        {\n                            \"index\": 7,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 3,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 6,\n                                    \"oneRelationIndex\": 6,\n                                    \"oneColumnIndex\": 3,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"APPLICATION_ENTITY_ID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 7\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 3\n                        }\n                    ],\n                    \"index\": 2,\n                    \"isLocal\": true,\n                    \"isRepositoryEntity\": false,\n                    \"name\": \"ApplicationProperty\",\n                    \"properties\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"name\": \"deprecatedSinceVersion\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"removedInVersion\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"sinceVersion\",\n                            \"relationRef\": {\n                                \"index\": 2\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 3\n                            },\n                            \"index\": 3,\n                            \"isId\": true,\n                            \"name\": \"id\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 4\n                            },\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"name\": \"index\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 5\n                            },\n                            \"index\": 5,\n                            \"isId\": false,\n                            \"name\": \"name\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 6\n                            },\n                            \"index\": 6,\n                            \"isId\": false,\n                            \"name\": \"isId\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 7,\n                            \"isId\": false,\n                            \"name\": \"entity\",\n                            \"relationRef\": {\n                                \"index\": 3\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 8,\n                            \"isId\": false,\n                            \"name\": \"propertyColumns\",\n                            \"relationRef\": {\n                                \"index\": 4\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 9,\n                            \"isId\": false,\n                            \"name\": \"relation\",\n                            \"relationRef\": {\n                                \"index\": 5\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 0\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 1\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 2\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 7\n                            },\n                            \"relationTableIndex\": 6,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"property\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 8\n                            },\n                            \"relationTableIndex\": 3,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 5,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"property\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 9\n                            },\n                            \"relationTableIndex\": 1,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"APPLICATION_PROPERTIES\",\n                        \"columnIndexes\": []\n                    },\n                    \"operations\": {}\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"DEPRECATED_SINCE_APPLICATION_VERSION_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 1,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"REMOVED_IN_APPLICATION_VERSION_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 2,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"SINCE_APPLICATION_VERSION_ID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 3,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 3,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 4,\n                                    \"oneRelationIndex\": 4,\n                                    \"oneColumnIndex\": 3,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"APPLICATION_COLUMN_ID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 3\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 4,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 4,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 2,\n                                    \"oneRelationIndex\": 4,\n                                    \"oneColumnIndex\": 3,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"APPLICATION_PROPERTY_ID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 4\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 3\n                        },\n                        {\n                            \"index\": 4\n                        }\n                    ],\n                    \"index\": 3,\n                    \"isLocal\": true,\n                    \"isRepositoryEntity\": false,\n                    \"name\": \"ApplicationPropertyColumn\",\n                    \"properties\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"name\": \"deprecatedSinceVersion\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"removedInVersion\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"sinceVersion\",\n                            \"relationRef\": {\n                                \"index\": 2\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": true,\n                            \"name\": \"column\",\n                            \"relationRef\": {\n                                \"index\": 3\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 4,\n                            \"isId\": true,\n                            \"name\": \"property\",\n                            \"relationRef\": {\n                                \"index\": 4\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 0\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 1\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 2\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": true,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 3\n                            },\n                            \"relationTableIndex\": 4,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 4,\n                            \"isId\": true,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 4\n                            },\n                            \"relationTableIndex\": 2,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"APPLICATION_PROPERTY_COLUMNS\",\n                        \"columnIndexes\": []\n                    },\n                    \"operations\": {}\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"DEPRECATED_SINCE_APPLICATION_VERSION_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 1,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"REMOVED_IN_APPLICATION_VERSION_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 2,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"SINCE_APPLICATION_VERSION_ID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 3,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 3\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 4,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"COLUMN_INDEX\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 4\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 5,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"ID_INDEX\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 5\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 6,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"IS_GENERATED\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 6\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"BOOLEAN\"\n                        },\n                        {\n                            \"index\": 7,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"ALLOCATION_SIZE\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 7\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 8,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"NAME\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 8\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 9,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"NOT_NULL\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 9\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"BOOLEAN\"\n                        },\n                        {\n                            \"index\": 10,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"PRECISION\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 10\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 11,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"SCALE\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 11\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 12,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"TYPE\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 12\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 13,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 3,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 6,\n                                    \"oneRelationIndex\": 4,\n                                    \"oneColumnIndex\": 3,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"APPLICATION_ENTITY_ID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 13\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 3\n                        }\n                    ],\n                    \"index\": 4,\n                    \"isLocal\": true,\n                    \"isRepositoryEntity\": false,\n                    \"name\": \"ApplicationColumn\",\n                    \"properties\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"name\": \"deprecatedSinceVersion\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"removedInVersion\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"sinceVersion\",\n                            \"relationRef\": {\n                                \"index\": 2\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 3\n                            },\n                            \"index\": 3,\n                            \"isId\": true,\n                            \"name\": \"id\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 4\n                            },\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"name\": \"index\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 5\n                            },\n                            \"index\": 5,\n                            \"isId\": false,\n                            \"name\": \"idIndex\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 6\n                            },\n                            \"index\": 6,\n                            \"isId\": false,\n                            \"name\": \"isGenerated\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 7\n                            },\n                            \"index\": 7,\n                            \"isId\": false,\n                            \"name\": \"allocationSize\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 8\n                            },\n                            \"index\": 8,\n                            \"isId\": false,\n                            \"name\": \"name\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 9\n                            },\n                            \"index\": 9,\n                            \"isId\": false,\n                            \"name\": \"notNull\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 10\n                            },\n                            \"index\": 10,\n                            \"isId\": false,\n                            \"name\": \"precision\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 11\n                            },\n                            \"index\": 11,\n                            \"isId\": false,\n                            \"name\": \"scale\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 12\n                            },\n                            \"index\": 12,\n                            \"isId\": false,\n                            \"name\": \"type\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 13,\n                            \"isId\": false,\n                            \"name\": \"entity\",\n                            \"relationRef\": {\n                                \"index\": 3\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 14,\n                            \"isId\": false,\n                            \"name\": \"propertyColumns\",\n                            \"relationRef\": {\n                                \"index\": 4\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 15,\n                            \"isId\": false,\n                            \"name\": \"manyRelationColumns\",\n                            \"relationRef\": {\n                                \"index\": 5\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 16,\n                            \"isId\": false,\n                            \"name\": \"oneRelationColumns\",\n                            \"relationRef\": {\n                                \"index\": 6\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 0\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 1\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 2\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 13\n                            },\n                            \"relationTableIndex\": 6,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"column\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 14\n                            },\n                            \"relationTableIndex\": 3,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 5,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"manyColumn\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 15\n                            },\n                            \"relationTableIndex\": 0,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 6,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"oneColumn\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 16\n                            },\n                            \"relationTableIndex\": 0,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"APPLICATION_COLUMNS\",\n                        \"columnIndexes\": []\n                    },\n                    \"operations\": {}\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"DEPRECATED_SINCE_APPLICATION_VERSION_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 1,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"REMOVED_IN_APPLICATION_VERSION_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 2,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"SINCE_APPLICATION_VERSION_ID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 3,\n                            \"isGenerated\": true,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 3\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 4,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"TYPE\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 4\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 5,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"NAME\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 6\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 6,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"RULE\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 7\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"JSON\"\n                        },\n                        {\n                            \"index\": 7,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 3,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 6,\n                                    \"oneRelationIndex\": 5,\n                                    \"oneColumnIndex\": 3,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"APPLICATION_ENTITY_ID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 5\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 3\n                        }\n                    ],\n                    \"index\": 5,\n                    \"isLocal\": true,\n                    \"isRepositoryEntity\": false,\n                    \"name\": \"ApplicationOperation\",\n                    \"properties\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"name\": \"deprecatedSinceVersion\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"removedInVersion\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"sinceVersion\",\n                            \"relationRef\": {\n                                \"index\": 2\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 3\n                            },\n                            \"index\": 3,\n                            \"isId\": true,\n                            \"name\": \"id\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 4\n                            },\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"name\": \"type\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 5,\n                            \"isId\": false,\n                            \"name\": \"entity\",\n                            \"relationRef\": {\n                                \"index\": 3\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 5\n                            },\n                            \"index\": 6,\n                            \"isId\": false,\n                            \"name\": \"name\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 6\n                            },\n                            \"index\": 7,\n                            \"isId\": false,\n                            \"name\": \"rule\",\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 0\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 1\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 2\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 5\n                            },\n                            \"relationTableIndex\": 6,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"APPLICATION_OPERATIONS\",\n                        \"columnIndexes\": []\n                    }\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"DEPRECATED_SINCE_APPLICATION_VERSION_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 1,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"REMOVED_IN_APPLICATION_VERSION_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 2,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"SINCE_APPLICATION_VERSION_ID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 3,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 3\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 4,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"TABLE_INDEX\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 4\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 5,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"IS_LOCAL\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 5\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"BOOLEAN\"\n                        },\n                        {\n                            \"index\": 6,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"IS_REPOSITORY_ENTITY\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 6\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"BOOLEAN\"\n                        },\n                        {\n                            \"index\": 7,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"NAME\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 7\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 8,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"TABLE_CONFIGURATION\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 8\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"JSON\"\n                        },\n                        {\n                            \"index\": 9,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 3,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneRelationIndex\": 1,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"APPLICATION_VERSION_ID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 9\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 3\n                        }\n                    ],\n                    \"index\": 6,\n                    \"isLocal\": true,\n                    \"isRepositoryEntity\": false,\n                    \"name\": \"ApplicationEntity\",\n                    \"properties\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"name\": \"deprecatedSinceVersion\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"removedInVersion\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"sinceVersion\",\n                            \"relationRef\": {\n                                \"index\": 2\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 3\n                            },\n                            \"index\": 3,\n                            \"isId\": true,\n                            \"name\": \"id\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 4\n                            },\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"name\": \"index\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 5\n                            },\n                            \"index\": 5,\n                            \"isId\": false,\n                            \"name\": \"isLocal\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 6\n                            },\n                            \"index\": 6,\n                            \"isId\": false,\n                            \"name\": \"isRepositoryEntity\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 7\n                            },\n                            \"index\": 7,\n                            \"isId\": false,\n                            \"name\": \"name\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 8\n                            },\n                            \"index\": 8,\n                            \"isId\": false,\n                            \"name\": \"tableConfig\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 9,\n                            \"isId\": false,\n                            \"name\": \"applicationVersion\",\n                            \"relationRef\": {\n                                \"index\": 3\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 10,\n                            \"isId\": false,\n                            \"name\": \"columns\",\n                            \"relationRef\": {\n                                \"index\": 4\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 11,\n                            \"isId\": false,\n                            \"name\": \"operations\",\n                            \"relationRef\": {\n                                \"index\": 5\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 12,\n                            \"isId\": false,\n                            \"name\": \"properties\",\n                            \"relationRef\": {\n                                \"index\": 6\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 13,\n                            \"isId\": false,\n                            \"name\": \"relations\",\n                            \"relationRef\": {\n                                \"index\": 7\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 14,\n                            \"isId\": false,\n                            \"name\": \"relationReferences\",\n                            \"relationRef\": {\n                                \"index\": 8\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 0\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 1\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 2\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 9\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"entity\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 10\n                            },\n                            \"relationTableIndex\": 4,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 5,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"entity\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 11\n                            },\n                            \"relationTableIndex\": 5,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 6,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"entity\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 12\n                            },\n                            \"relationTableIndex\": 2,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 7,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"entity\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 13\n                            },\n                            \"relationTableIndex\": 1,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 8,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"relationEntity\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 14\n                            },\n                            \"relationTableIndex\": 1,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"APPLICATION_ENTITIES\",\n                        \"columnIndexes\": []\n                    },\n                    \"operations\": {}\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"DEPRECATED_SINCE_APPLICATION_VERSION_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 1,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"REMOVED_IN_APPLICATION_VERSION_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 2,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"SINCE_APPLICATION_VERSION_ID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 3,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"APPLICATION_REFERENCE_INDEX\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 5\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 4,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 3,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneRelationIndex\": 2,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"OWN_APPLICATION_VERSION_ID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 3\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 5,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 4,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneRelationIndex\": 3,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"REFERENCED_APPLICATION_VERSION_ID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 4\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 4\n                        },\n                        {\n                            \"index\": 5\n                        }\n                    ],\n                    \"index\": 7,\n                    \"isLocal\": true,\n                    \"isRepositoryEntity\": false,\n                    \"name\": \"ApplicationReference\",\n                    \"properties\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"name\": \"deprecatedSinceVersion\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"removedInVersion\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"sinceVersion\",\n                            \"relationRef\": {\n                                \"index\": 2\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": true,\n                            \"name\": \"ownApplicationVersion\",\n                            \"relationRef\": {\n                                \"index\": 3\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 4,\n                            \"isId\": true,\n                            \"name\": \"referencedApplicationVersion\",\n                            \"relationRef\": {\n                                \"index\": 4\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 3\n                            },\n                            \"index\": 5,\n                            \"isId\": false,\n                            \"name\": \"index\",\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 0\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 1\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 2\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": true,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 3\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 4,\n                            \"isId\": true,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 4\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"APPLICATION_REFERENCES\",\n                        \"columnIndexes\": []\n                    },\n                    \"operations\": {}\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"allocationSize\": 100,\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"INTEGER_VERSION\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"VERSION_STRING\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 3,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"MAJOR_VERSION\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 3\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 4,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"MINOR_VERSION\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 4\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 5,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"PATCH_VERSION\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 5\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 6,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"JSON_APPLICATION\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 6\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"JSON\"\n                        },\n                        {\n                            \"index\": 7,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 10,\n                                    \"oneRelationIndex\": 1,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"APPLICATION_INDEX\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 7\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        }\n                    ],\n                    \"index\": 8,\n                    \"isLocal\": true,\n                    \"isRepositoryEntity\": false,\n                    \"name\": \"ApplicationVersion\",\n                    \"properties\": [\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"id\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 1\n                            },\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"integerVersion\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 2\n                            },\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"versionString\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 3\n                            },\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"name\": \"majorVersion\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 4\n                            },\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"name\": \"minorVersion\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 5\n                            },\n                            \"index\": 5,\n                            \"isId\": false,\n                            \"name\": \"patchVersion\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 6\n                            },\n                            \"index\": 6,\n                            \"isId\": false,\n                            \"name\": \"jsonApplication\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 7,\n                            \"isId\": false,\n                            \"name\": \"application\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 8,\n                            \"isId\": false,\n                            \"name\": \"entities\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 9,\n                            \"isId\": false,\n                            \"name\": \"references\",\n                            \"relationRef\": {\n                                \"index\": 2\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 10,\n                            \"isId\": false,\n                            \"name\": \"referencedBy\",\n                            \"relationRef\": {\n                                \"index\": 3\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 7\n                            },\n                            \"relationTableIndex\": 10,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"applicationVersion\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 8\n                            },\n                            \"relationTableIndex\": 6,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"ownApplicationVersion\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 9\n                            },\n                            \"relationTableIndex\": 7,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"referencedApplicationVersion\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 10\n                            },\n                            \"relationTableIndex\": 7,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"APPLICATION_VERSIONS\",\n                        \"columnIndexes\": []\n                    },\n                    \"operations\": {}\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 10,\n                                    \"oneRelationIndex\": 2,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"APPLICATION_INDEX\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 1,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"APPLICATION_VERSION_ID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        },\n                        {\n                            \"index\": 1\n                        }\n                    ],\n                    \"index\": 9,\n                    \"isLocal\": true,\n                    \"isRepositoryEntity\": false,\n                    \"name\": \"ApplicationCurrentVersion\",\n                    \"properties\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"application\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": true,\n                            \"name\": \"applicationVersion\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 0\n                            },\n                            \"relationTableIndex\": 10,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": true,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 1\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"APPLICATION_CURRENT_VERSIONS\",\n                        \"columnIndexes\": []\n                    }\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"APPLICATION_INDEX\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"SCOPE\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"APPLICATION_NAME\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 3\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 3,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"FULL_APPLICATION_NAME\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 4\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 4,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"STATUS\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 5\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 5,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"SIGNATURE\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 6\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 6,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 11,\n                                    \"oneRelationIndex\": 0,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"DOMAIN_ID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        }\n                    ],\n                    \"index\": 10,\n                    \"isLocal\": true,\n                    \"isRepositoryEntity\": false,\n                    \"name\": \"Application\",\n                    \"properties\": [\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"index\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"domain\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 1\n                            },\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"scope\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 2\n                            },\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"name\": \"name\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 3\n                            },\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"name\": \"fullName\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 4\n                            },\n                            \"index\": 5,\n                            \"isId\": false,\n                            \"name\": \"status\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 5\n                            },\n                            \"index\": 6,\n                            \"isId\": false,\n                            \"name\": \"signature\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 7,\n                            \"isId\": false,\n                            \"name\": \"versions\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 8,\n                            \"isId\": false,\n                            \"name\": \"currentVersion\",\n                            \"relationRef\": {\n                                \"index\": 2\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 1\n                            },\n                            \"relationTableIndex\": 11,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"application\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 7\n                            },\n                            \"relationTableIndex\": 8,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"application\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 8\n                            },\n                            \"relationTableIndex\": 9,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"APPLICATIONS\",\n                        \"columnIndexes\": []\n                    },\n                    \"operations\": {}\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"NAME\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        }\n                    ],\n                    \"index\": 11,\n                    \"isLocal\": true,\n                    \"isRepositoryEntity\": false,\n                    \"name\": \"Domain\",\n                    \"properties\": [\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"id\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 1\n                            },\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"name\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"applications\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"domain\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 2\n                            },\n                            \"relationTableIndex\": 10,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"DOMAINS\",\n                        \"columnIndexes\": []\n                    },\n                    \"operations\": {}\n                }\n            ],\n            \"integerVersion\": 1,\n            \"referencedApplications\": [],\n            \"versionString\": \"1.0.0\"\n        }\n    ]\n};\n//# sourceMappingURL=application.js.map","/* eslint-disable */\nexport const APPLICATION = {\n    \"domain\": \"air\",\n    \"index\": null,\n    \"name\": \"@airport/holding-pattern\",\n    \"sinceVersion\": 1,\n    \"versions\": [\n        {\n            \"api\": {\n                \"apiObjectMap\": {}\n            },\n            \"entities\": [\n                {\n                    \"columns\": [\n                        {\n                            \"allocationSize\": 2000,\n                            \"index\": 0,\n                            \"isGenerated\": true,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"ACTOR_RECORD_ID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 1,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"ACTOR_ID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 3,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 1,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 5,\n                                    \"oneRelationIndex\": 3,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"REPOSITORY_OPERATION_HISTORY_ID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 3\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        }\n                    ],\n                    \"index\": 0,\n                    \"isLocal\": true,\n                    \"isRepositoryEntity\": false,\n                    \"name\": \"RecordHistory\",\n                    \"properties\": [\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"id\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 1\n                            },\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"actorRecordId\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"actor\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"name\": \"operationHistory\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"name\": \"newValues\",\n                            \"relationRef\": {\n                                \"index\": 2\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 5,\n                            \"isId\": false,\n                            \"name\": \"oldValues\",\n                            \"relationRef\": {\n                                \"index\": 3\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 2\n                            },\n                            \"relationTableIndex\": 1,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 3\n                            },\n                            \"relationTableIndex\": 5,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"recordHistory\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 4\n                            },\n                            \"relationTableIndex\": 6,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"recordHistory\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 5\n                            },\n                            \"relationTableIndex\": 7,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"REPOSITORY_RECORD_HISTORY\",\n                        \"columnIndexes\": [\n                            {\n                                \"name\": \"RCRD_HSTR_TO_OPRTN_HSTR_FX\",\n                                \"columnList\": [\n                                    \"REPOSITORY_OPERATION_HISTORY_ID\"\n                                ],\n                                \"unique\": false\n                            }\n                        ]\n                    }\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": true,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"UU_ID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplicationIndex\": 0,\n                                    \"oneTableIndex\": 4,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"USER_ID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 3,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 1,\n                                    \"oneApplicationIndex\": 0,\n                                    \"oneTableIndex\": 5,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"TERMINAL_ID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 3\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 4,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 2,\n                                    \"oneApplicationIndex\": 1,\n                                    \"oneTableIndex\": 10,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"APPLICATION_INDEX\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 4\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        }\n                    ],\n                    \"index\": 1,\n                    \"isLocal\": true,\n                    \"isRepositoryEntity\": false,\n                    \"name\": \"Actor\",\n                    \"properties\": [\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"id\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 1\n                            },\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"uuId\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"user\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"name\": \"terminal\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"name\": \"application\",\n                            \"relationRef\": {\n                                \"index\": 2\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 2\n                            },\n                            \"relationTableIndex\": 4,\n                            \"relationTableApplicationIndex\": 0,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 3\n                            },\n                            \"relationTableIndex\": 5,\n                            \"relationTableApplicationIndex\": 0,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 4\n                            },\n                            \"relationTableIndex\": 10,\n                            \"relationTableApplicationIndex\": 1,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"columnIndexes\": []\n                    },\n                    \"operations\": {}\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": true,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"AGE_SUITABILITY\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"CREATED_AT\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"DATE\"\n                        },\n                        {\n                            \"index\": 3,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"IMMUTABLE\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 3\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"BOOLEAN\"\n                        },\n                        {\n                            \"index\": 4,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"SOURCE\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 4\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 5,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"UU_ID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 5\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 6,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplicationIndex\": 0,\n                                    \"oneTableIndex\": 4,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"OWNER_USER_ID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 6\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        }\n                    ],\n                    \"index\": 2,\n                    \"isLocal\": true,\n                    \"isRepositoryEntity\": false,\n                    \"name\": \"Repository\",\n                    \"properties\": [\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"id\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 1\n                            },\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"ageSuitability\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 2\n                            },\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"createdAt\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 3\n                            },\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"name\": \"immutable\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 4\n                            },\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"name\": \"source\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 5\n                            },\n                            \"index\": 5,\n                            \"isId\": false,\n                            \"name\": \"uuId\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 6,\n                            \"isId\": false,\n                            \"name\": \"owner\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 7,\n                            \"isId\": false,\n                            \"name\": \"repositoryTransactionHistory\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 6\n                            },\n                            \"relationTableIndex\": 4,\n                            \"relationTableApplicationIndex\": 0,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"repository\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 7\n                            },\n                            \"relationTableIndex\": 4,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"REPOSITORY\",\n                        \"columnIndexes\": []\n                    },\n                    \"operations\": {}\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"allocationSize\": 100,\n                            \"index\": 0,\n                            \"isGenerated\": true,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"TRANSACTION_TYPE\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        }\n                    ],\n                    \"index\": 3,\n                    \"isLocal\": true,\n                    \"isRepositoryEntity\": false,\n                    \"name\": \"TransactionHistory\",\n                    \"properties\": [\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"id\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 1\n                            },\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"transactionType\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"repositoryTransactionHistories\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"transactionHistory\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 2\n                            },\n                            \"relationTableIndex\": 4,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"TRANSACTION_HISTORY\",\n                        \"columnIndexes\": []\n                    }\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"allocationSize\": 200,\n                            \"index\": 0,\n                            \"isGenerated\": true,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"REPOSITORY_TRANSACTION_TYPE\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"SAVE_TIMESTAMP\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 3,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"SYNC_TIMESTAMP\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 3\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 4,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"UUID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 4\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 5,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"IS_REPOSITORY_CREATION\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 5\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"BOOLEAN\"\n                        },\n                        {\n                            \"index\": 6,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 2,\n                                    \"oneRelationIndex\": 1,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"REPOSITORY_ID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 6\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 7,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 1,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 3,\n                                    \"oneRelationIndex\": 0,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"TRANSACTION_HISTORY_ID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 7\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        }\n                    ],\n                    \"index\": 4,\n                    \"isLocal\": true,\n                    \"isRepositoryEntity\": false,\n                    \"name\": \"RepositoryTransactionHistory\",\n                    \"properties\": [\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"id\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 1\n                            },\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"repositoryTransactionType\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 2\n                            },\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"saveTimestamp\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 3\n                            },\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"name\": \"syncTimestamp\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 4\n                            },\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"name\": \"uuId\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 5\n                            },\n                            \"index\": 5,\n                            \"isId\": false,\n                            \"name\": \"isRepositoryCreation\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 6,\n                            \"isId\": false,\n                            \"name\": \"repository\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 7,\n                            \"isId\": false,\n                            \"name\": \"transactionHistory\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 8,\n                            \"isId\": false,\n                            \"name\": \"operationHistory\",\n                            \"relationRef\": {\n                                \"index\": 2\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 6\n                            },\n                            \"relationTableIndex\": 2,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 7\n                            },\n                            \"relationTableIndex\": 3,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"repositoryTransactionHistory\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 8\n                            },\n                            \"relationTableIndex\": 5,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"REPOSITORY_TRANSACTION_HISTORY\",\n                        \"columnIndexes\": []\n                    },\n                    \"operations\": {}\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"allocationSize\": 600,\n                            \"index\": 0,\n                            \"isGenerated\": true,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"ORDER_NUMBER\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"CHANGE_TYPE\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 3,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"SYSTEM_WIDE_OPERATION_ID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 3\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 4,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplicationIndex\": 1,\n                                    \"oneTableIndex\": 6,\n                                    \"oneColumnIndex\": 3,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"ENTITY_ID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 4\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 5,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 1,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 1,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"ACTOR_ID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 5\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 6,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 2,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 4,\n                                    \"oneRelationIndex\": 2,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"REPOSITORY_TRANSACTION_HISTORY_ID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 6\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        }\n                    ],\n                    \"index\": 5,\n                    \"isLocal\": true,\n                    \"isRepositoryEntity\": false,\n                    \"name\": \"OperationHistory\",\n                    \"properties\": [\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"id\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 1\n                            },\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"orderNumber\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 2\n                            },\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"changeType\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 3\n                            },\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"name\": \"systemWideOperationId\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"name\": \"entity\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 5,\n                            \"isId\": false,\n                            \"name\": \"actor\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 6,\n                            \"isId\": false,\n                            \"name\": \"repositoryTransactionHistory\",\n                            \"relationRef\": {\n                                \"index\": 2\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 7,\n                            \"isId\": false,\n                            \"name\": \"recordHistory\",\n                            \"relationRef\": {\n                                \"index\": 3\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 4\n                            },\n                            \"relationTableIndex\": 6,\n                            \"relationTableApplicationIndex\": 1,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 5\n                            },\n                            \"relationTableIndex\": 1,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 6\n                            },\n                            \"relationTableIndex\": 4,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"operationHistory\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 7\n                            },\n                            \"relationTableIndex\": 0,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"REPOSITORY_OPERATION_HISTORY\",\n                        \"columnIndexes\": []\n                    }\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"COLUMN_INDEX\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"NEW_VALUE\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"ANY\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 0,\n                                    \"oneRelationIndex\": 2,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"REPOSITORY_RECORD_HISTORY_ID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        },\n                        {\n                            \"index\": 2\n                        }\n                    ],\n                    \"index\": 6,\n                    \"isLocal\": true,\n                    \"isRepositoryEntity\": false,\n                    \"name\": \"RecordHistoryNewValue\",\n                    \"properties\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"recordHistory\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 1,\n                            \"isId\": true,\n                            \"name\": \"columnIndex\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 1\n                            },\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"newValue\",\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 0\n                            },\n                            \"relationTableIndex\": 0,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"REPOSITORY_RECORD_HISTORY_NEW_VALUES\",\n                        \"columnIndexes\": []\n                    },\n                    \"operations\": {}\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"COLUMN_INDEX\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"OLD_VALUE\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"ANY\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 0,\n                                    \"oneRelationIndex\": 3,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"REPOSITORY_RECORD_HISTORY_ID\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        },\n                        {\n                            \"index\": 2\n                        }\n                    ],\n                    \"index\": 7,\n                    \"isLocal\": true,\n                    \"isRepositoryEntity\": false,\n                    \"name\": \"RecordHistoryOldValue\",\n                    \"properties\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"recordHistory\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 1,\n                            \"isId\": true,\n                            \"name\": \"columnIndex\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 1\n                            },\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"oldValue\",\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 0\n                            },\n                            \"relationTableIndex\": 0,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"REPOSITORY_RECORD_HISTORY_OLD_VALUES\",\n                        \"columnIndexes\": []\n                    },\n                    \"operations\": {}\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": true,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"REPOSITORY_APPLICATION_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"APPLICATION_INDEX\",\n                            \"notNull\": true,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 2,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"REPOSITORY_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        },\n                        {\n                            \"index\": 2\n                        }\n                    ],\n                    \"index\": 8,\n                    \"isLocal\": true,\n                    \"isRepositoryEntity\": false,\n                    \"name\": \"RepositoryApplication\",\n                    \"properties\": [\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"id\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": true,\n                            \"name\": \"repository\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 1\n                            },\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"applicationIndex\",\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 1\n                            },\n                            \"relationTableIndex\": 2,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"REPOSITORY_APPLICATIONS\",\n                        \"columnIndexes\": []\n                    }\n                }\n            ],\n            \"integerVersion\": 1,\n            \"referencedApplications\": [\n                {\n                    \"domain\": \"air\",\n                    \"index\": 0,\n                    \"name\": \"@airport/travel-document-checkpoint\",\n                    \"sinceVersion\": 1,\n                    \"versions\": [\n                        {\n                            \"entities\": null,\n                            \"integerVersion\": 1,\n                            \"referencedApplications\": null,\n                            \"versionString\": \"1.0.0\"\n                        }\n                    ]\n                },\n                {\n                    \"domain\": \"air\",\n                    \"index\": 1,\n                    \"name\": \"@airport/airspace\",\n                    \"sinceVersion\": 1,\n                    \"versions\": [\n                        {\n                            \"entities\": null,\n                            \"integerVersion\": 1,\n                            \"referencedApplications\": null,\n                            \"versionString\": \"1.0.0\"\n                        }\n                    ]\n                }\n            ],\n            \"versionString\": \"1.0.0\"\n        }\n    ]\n};\n//# sourceMappingURL=application.js.map","/* eslint-disable */\nexport const APPLICATION = {\n    \"domain\": \"air\",\n    \"index\": null,\n    \"name\": \"@airport/moving-walkway\",\n    \"sinceVersion\": 1,\n    \"versions\": [\n        {\n            \"api\": {\n                \"apiObjectMap\": {}\n            },\n            \"entities\": [\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"COLUMNINDEX\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplicationIndex\": null,\n                                    \"oneTableIndex\": 1,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"SYNCHRONIZATION_CONFLICT_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        },\n                        {\n                            \"index\": 1\n                        }\n                    ],\n                    \"index\": 0,\n                    \"isLocal\": true,\n                    \"isRepositoryEntity\": false,\n                    \"name\": \"SynchronizationConflictValues\",\n                    \"properties\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"synchronizationConflict\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 1,\n                            \"isId\": true,\n                            \"name\": \"columnIndex\",\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 0\n                            },\n                            \"relationTableIndex\": 1,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"SYNCHRONIZATION_CONFLICT_VALUES\",\n                        \"columnIndexes\": []\n                    },\n                    \"operations\": {}\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": true,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"TYPE\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"STRING\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"ACKNOWLEDGED\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"BOOLEAN\"\n                        },\n                        {\n                            \"index\": 3,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplicationIndex\": 0,\n                                    \"oneTableIndex\": 2,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"REPOSITORY_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 3\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 4,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 1,\n                                    \"oneApplicationIndex\": 0,\n                                    \"oneTableIndex\": 0,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"OVERWRITTEN_RECORD_HISTORY_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 4\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 5,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 2,\n                                    \"oneApplicationIndex\": 0,\n                                    \"oneTableIndex\": 0,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"OVERWRITING_RECORD_HISTORY_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 5\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        }\n                    ],\n                    \"index\": 1,\n                    \"isLocal\": true,\n                    \"isRepositoryEntity\": false,\n                    \"name\": \"SynchronizationConflict\",\n                    \"properties\": [\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"id\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 1\n                            },\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"type\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 2\n                            },\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"acknowledged\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"name\": \"repository\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"name\": \"overwrittenRecordHistory\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 5,\n                            \"isId\": false,\n                            \"name\": \"overwritingRecordHistory\",\n                            \"relationRef\": {\n                                \"index\": 2\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 6,\n                            \"isId\": false,\n                            \"name\": \"values\",\n                            \"relationRef\": {\n                                \"index\": 3\n                            },\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 3\n                            },\n                            \"relationTableIndex\": 2,\n                            \"relationTableApplicationIndex\": 0,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 4\n                            },\n                            \"relationTableIndex\": 0,\n                            \"relationTableApplicationIndex\": 0,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 5\n                            },\n                            \"relationTableIndex\": 0,\n                            \"relationTableApplicationIndex\": 0,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"oneToManyElems\": {\n                                \"mappedBy\": \"SYNCHRONIZATION_CONFLICT_ID\"\n                            },\n                            \"relationType\": \"ONE_TO_MANY\",\n                            \"propertyRef\": {\n                                \"index\": 6\n                            },\n                            \"relationTableIndex\": 0,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"SYNCHRONIZATION_CONFLICT\",\n                        \"columnIndexes\": []\n                    },\n                    \"operations\": {}\n                },\n                {\n                    \"columns\": [\n                        {\n                            \"index\": 0,\n                            \"isGenerated\": true,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 0\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 1,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"ACTOR_RECORD_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 5\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 2,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [],\n                            \"name\": \"UPDATED_VALUE\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 7\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"ANY\"\n                        },\n                        {\n                            \"index\": 3,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 0,\n                                    \"oneApplicationIndex\": 1,\n                                    \"oneTableIndex\": 8,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"APPLICATION_VERSION_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 1\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 4,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 1,\n                                    \"oneApplicationIndex\": 1,\n                                    \"oneTableIndex\": 6,\n                                    \"oneColumnIndex\": 3,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"APPLICATION_ENTITY_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 2\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 5,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 2,\n                                    \"oneApplicationIndex\": 0,\n                                    \"oneTableIndex\": 2,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"REPOSITORY_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 3\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 6,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 3,\n                                    \"oneApplicationIndex\": 0,\n                                    \"oneTableIndex\": 1,\n                                    \"oneColumnIndex\": 0,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"ACTOR_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 4\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        },\n                        {\n                            \"index\": 7,\n                            \"isGenerated\": false,\n                            \"manyRelationColumnRefs\": [\n                                {\n                                    \"manyRelationIndex\": 4,\n                                    \"oneApplicationIndex\": 1,\n                                    \"oneTableIndex\": 4,\n                                    \"oneColumnIndex\": 3,\n                                    \"sinceVersion\": 1\n                                }\n                            ],\n                            \"name\": \"APPLICATION_COLUMN_ID\",\n                            \"notNull\": false,\n                            \"propertyRefs\": [\n                                {\n                                    \"index\": 6\n                                }\n                            ],\n                            \"sinceVersion\": 1,\n                            \"type\": \"NUMBER\"\n                        }\n                    ],\n                    \"idColumnRefs\": [\n                        {\n                            \"index\": 0\n                        }\n                    ],\n                    \"index\": 2,\n                    \"isLocal\": true,\n                    \"isRepositoryEntity\": false,\n                    \"name\": \"RecordUpdateStage\",\n                    \"properties\": [\n                        {\n                            \"columnRef\": {\n                                \"index\": 0\n                            },\n                            \"index\": 0,\n                            \"isId\": true,\n                            \"name\": \"id\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"name\": \"applicationVersion\",\n                            \"relationRef\": {\n                                \"index\": 0\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"name\": \"entity\",\n                            \"relationRef\": {\n                                \"index\": 1\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"name\": \"repository\",\n                            \"relationRef\": {\n                                \"index\": 2\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"name\": \"actor\",\n                            \"relationRef\": {\n                                \"index\": 3\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 1\n                            },\n                            \"index\": 5,\n                            \"isId\": false,\n                            \"name\": \"actorRecordId\",\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 6,\n                            \"isId\": false,\n                            \"name\": \"column\",\n                            \"relationRef\": {\n                                \"index\": 4\n                            },\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"columnRef\": {\n                                \"index\": 2\n                            },\n                            \"index\": 7,\n                            \"isId\": false,\n                            \"name\": \"updatedValue\",\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"relations\": [\n                        {\n                            \"index\": 0,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 1\n                            },\n                            \"relationTableIndex\": 8,\n                            \"relationTableApplicationIndex\": 1,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 1,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 2\n                            },\n                            \"relationTableIndex\": 6,\n                            \"relationTableApplicationIndex\": 1,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 2,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 3\n                            },\n                            \"relationTableIndex\": 2,\n                            \"relationTableApplicationIndex\": 0,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 3,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 4\n                            },\n                            \"relationTableIndex\": 1,\n                            \"relationTableApplicationIndex\": 0,\n                            \"sinceVersion\": 1\n                        },\n                        {\n                            \"index\": 4,\n                            \"isId\": false,\n                            \"relationType\": \"MANY_TO_ONE\",\n                            \"propertyRef\": {\n                                \"index\": 6\n                            },\n                            \"relationTableIndex\": 4,\n                            \"relationTableApplicationIndex\": 1,\n                            \"sinceVersion\": 1\n                        }\n                    ],\n                    \"sinceVersion\": 1,\n                    \"tableConfig\": {\n                        \"name\": \"RECORD_UPDATE_STAGE\",\n                        \"columnIndexes\": []\n                    },\n                    \"operations\": {}\n                }\n            ],\n            \"integerVersion\": 1,\n            \"referencedApplications\": [\n                {\n                    \"domain\": \"air\",\n                    \"index\": 0,\n                    \"name\": \"@airport/holding-pattern-runtime\",\n                    \"sinceVersion\": 1,\n                    \"versions\": [\n                        {\n                            \"entities\": null,\n                            \"integerVersion\": 1,\n                            \"referencedApplications\": null,\n                            \"versionString\": \"1.0.0\"\n                        }\n                    ]\n                },\n                {\n                    \"domain\": \"air\",\n                    \"index\": 1,\n                    \"name\": \"@airport/airspace\",\n                    \"sinceVersion\": 1,\n                    \"versions\": [\n                        {\n                            \"entities\": null,\n                            \"integerVersion\": 1,\n                            \"referencedApplications\": null,\n                            \"versionString\": \"1.0.0\"\n                        }\n                    ]\n                }\n            ],\n            \"versionString\": \"1.0.0\"\n        }\n    ]\n};\n//# sourceMappingURL=application.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { AIRPORT_DATABASE } from '@airport/air-traffic-control';\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { container } from '@airport/direction-indicator';\nimport { getFullApplicationName, } from '@airport/ground-control';\nimport { Actor, } from '@airport/holding-pattern-runtime';\nimport { BLUEPRINT } from '@airport/blueprint';\nlet DatabaseManager = class DatabaseManager {\n    constructor() {\n        this.initialized = false;\n    }\n    async initNoDb(context, ...applications) {\n        await container(this).get(AIRPORT_DATABASE);\n        this.transactionalServer.tempActor = new Actor();\n        await this.installStarterApplication(true, false, context);\n        await this.applicationInitializer.stage(applications, context);\n        this.transactionalServer.tempActor = null;\n        this.initialized = true;\n    }\n    async initWithDb(domainName, context) {\n        await container(this).get(AIRPORT_DATABASE);\n        this.transactionalServer.tempActor = new Actor();\n        const hydrate = await this.storeDriver.doesTableExist(getFullApplicationName(BLUEPRINT[0]), 'PACKAGES', context);\n        await this.installStarterApplication(false, hydrate, context);\n        if (!hydrate) {\n            await this.internalRecordManager.initTerminal(domainName, context);\n        }\n        this.transactionalServer.tempActor = null;\n        this.initialized = true;\n    }\n    isInitialized() {\n        return this.initialized;\n    }\n    async initFeatureApplications(context, jsonApplications) {\n        const applications = await this.applicationDao.findAllWithJson();\n        const existingApplicationMap = new Map();\n        for (const application of applications) {\n            existingApplicationMap.set(application.fullName, application);\n        }\n        const applicationsToCreate = [];\n        for (const jsonApplication of jsonApplications) {\n            const existingApplication = existingApplicationMap.get(getFullApplicationName(jsonApplication));\n            if (existingApplication) {\n                jsonApplication.lastIds = existingApplication.versions[0].jsonApplication.lastIds;\n            }\n            else {\n                applicationsToCreate.push(jsonApplication);\n            }\n        }\n        this.transactionalServer.tempActor = new Actor();\n        await this.applicationInitializer.initialize(applicationsToCreate, context, true, true);\n        this.transactionalServer.tempActor = null;\n    }\n    /*\n    static async addDataStore(\n        storeType: StoreType,\n        terminalName: string\n    ): Promise<void> {\n        if (this.isInitialized(terminalName)) {\n            throw new Error(\n            `Database '${terminalName}' is already initialized`);\n        }\n        const newDataStore = await QDataStore.db(dbConst.DEFAULT_DB).save({\n            name: terminalName,\n            storeType: storeType\n        });\n        await TQ.init(storeType, terminalName);\n    }\n\n    private doEnsureInitialized(\n        terminalName: string,\n        resolve,\n        reject,\n        remainingTimeout: number\n    ): void {\n        if (this.isInitialized(terminalName)) {\n            resolve()\n        }\n        if (remainingTimeout <= 0) {\n            reject(`Timeout out waiting for initialization of DB: [${terminalName}]`)\n        }\n        remainingTimeout -= 100\n        setTimeout(() => {\n            this.doEnsureInitialized(terminalName, resolve, reject, remainingTimeout)\n        }, 100)\n    }\n    */\n    async installStarterApplication(stage, hydrate, context) {\n        const blueprintFile = await import('@airport/blueprint');\n        if (stage) {\n            await this.applicationInitializer.stage(blueprintFile.BLUEPRINT, context);\n        }\n        else if (hydrate) {\n            await this.applicationInitializer.hydrate(blueprintFile.BLUEPRINT, context);\n        }\n        else {\n            await this.applicationInitializer.initialize(blueprintFile.BLUEPRINT, context, false, false);\n        }\n    }\n};\n__decorate([\n    Inject()\n], DatabaseManager.prototype, \"applicationDao\", void 0);\n__decorate([\n    Inject()\n], DatabaseManager.prototype, \"applicationInitializer\", void 0);\n__decorate([\n    Inject()\n], DatabaseManager.prototype, \"internalRecordManager\", void 0);\n__decorate([\n    Inject()\n], DatabaseManager.prototype, \"storeDriver\", void 0);\n__decorate([\n    Inject()\n], DatabaseManager.prototype, \"transactionalServer\", void 0);\nDatabaseManager = __decorate([\n    Injected()\n], DatabaseManager);\nexport { DatabaseManager };\n//# sourceMappingURL=DatabaseManager.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { valuesEqual, Y } from '@airport/air-traffic-control';\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { getSysWideOpId } from '@airport/check-in';\nimport { ChangeType, ensureChildArray, ensureChildJsMap, EntityRelationType, QueryResultType, repositoryEntity, } from '@airport/ground-control';\nlet DeleteManager = class DeleteManager {\n    async deleteWhere(portableQuery, actor, transaction, rootTransaction, context) {\n        const dbEntity = this.airportDatabase\n            .applications[portableQuery.applicationIndex].currentVersion[0].applicationVersion\n            .entities[portableQuery.tableIndex];\n        const deleteCommand = transaction.deleteWhere(portableQuery, context);\n        if (dbEntity.isLocal || transaction.isSync) {\n            return await deleteCommand;\n        }\n        const selectCascadeTree = this.getCascadeSubTree(dbEntity);\n        const jsonDelete = portableQuery.jsonQuery;\n        const jsonSelect = {\n            S: selectCascadeTree,\n            F: [jsonDelete.DF],\n            W: jsonDelete.W,\n        };\n        const portableSelect = {\n            applicationIndex: portableQuery.applicationIndex,\n            tableIndex: portableQuery.tableIndex,\n            jsonQuery: jsonSelect,\n            queryResultType: QueryResultType.ENTITY_TREE,\n            parameterMap: portableQuery.parameterMap,\n            // values: portableQuery.values,\n        };\n        const treesToDelete = await transaction\n            .find(portableSelect, {}, context);\n        const recordsToDelete = new Map();\n        const repositoryIdSet = new Set();\n        for (const treeToDelete of treesToDelete) {\n            this.recordRepositoryIds(treeToDelete, dbEntity, recordsToDelete, repositoryIdSet, this.applicationUtils);\n        }\n        await this.recordTreeToDelete(recordsToDelete, actor, transaction, rootTransaction, context);\n        return await deleteCommand;\n    }\n    recordRepositoryIds(treeToDelete, dbEntity, recordsToDelete, repositoryIdSet, applicationUtils) {\n        const repositoryId = treeToDelete.repository.id;\n        repositoryIdSet.add(repositoryId);\n        const recordsToDeleteForApplication = ensureChildJsMap(recordsToDelete, dbEntity.applicationVersion.application.index);\n        const recordsToDeleteForTable = ensureChildJsMap(recordsToDeleteForApplication, dbEntity.index);\n        const recordsToDeleteForRepository = ensureChildArray(recordsToDeleteForTable, repositoryId);\n        const recordToDelete = {};\n        // FIXME: implement\n        recordsToDeleteForRepository.push(recordToDelete);\n        for (const dbProperty of dbEntity.properties) {\n            if (dbProperty.relation && dbProperty.relation.length) {\n                if (!treeToDelete[dbProperty.name]) {\n                    continue;\n                }\n                const dbRelation = dbProperty.relation[0];\n                switch (dbRelation.relationType) {\n                    case EntityRelationType.MANY_TO_ONE:\n                        applicationUtils.forEachColumnOfRelation(dbRelation, treeToDelete, (dbColumn, value, propertyNameChains) => {\n                            this.columnProcessed(dbProperty, recordToDelete, dbColumn, value);\n                        }, false);\n                        break;\n                    case EntityRelationType.ONE_TO_MANY:\n                        if (!dbRelation.oneToManyElems) {\n                            continue;\n                        }\n                        let childTrees = treeToDelete[dbRelation.property.name];\n                        if (childTrees && childTrees.length) {\n                            const childDbEntity = dbRelation.relationEntity;\n                            childTrees.forEach(childTree => {\n                                this.recordRepositoryIds(childTree, childDbEntity, recordsToDelete, repositoryIdSet, applicationUtils);\n                            });\n                        }\n                        break;\n                    default:\n                        throw new Error(`Unknown relation type: '${dbRelation.relationType}' \r\n\t\t\t\t\t\t\ton '${dbEntity.name}.${dbRelation.property.name}'.`);\n                }\n            }\n            else {\n                const value = treeToDelete[dbProperty.name];\n                if (value === null || value === undefined) {\n                    continue;\n                }\n                this.columnProcessed(dbProperty, recordToDelete, dbProperty.propertyColumns[0].column, value);\n            }\n        }\n    }\n    /*\n     Values for the same column could be repeated in different places in the object graph.\n     For example, if the same column is mapped to two different @ManyToOne relations.\n     In this case, when persisting an entity we need to make sure that all values for the\n     entity in question are being persisted.\n     */\n    columnProcessed(dbProperty, foundValues, dbColumn, value) {\n        // if (value === undefined) {\n        // \tthrow new Error(`Values cannot be undefined, please use null.`_;\n        // }\n        if (foundValues[dbColumn.name] === undefined) {\n            foundValues[dbColumn.name] = value;\n            return false;\n        }\n        if (!valuesEqual(foundValues[dbColumn.name], value)) {\n            throw new Error(`Found value mismatch in '${dbProperty.entity.name}.${dbProperty.name}'\r\n\t\t\t(column: '${dbColumn.name}'): ${foundValues[dbColumn.name]} !== ${value}`);\n        }\n        return true;\n    }\n    async recordTreeToDelete(recordsToDelete, actor, transaction, rootTransaction, context) {\n        let systemWideOperationId;\n        for (const [applicationIndex, applicationRecordsToDelete] of recordsToDelete) {\n            for (const [entityIndex, entityRecordsToDelete] of applicationRecordsToDelete) {\n                const dbEntity = this.airportDatabase.applications[applicationIndex].currentVersion[0]\n                    .applicationVersion.entities[entityIndex];\n                if (!systemWideOperationId) {\n                    systemWideOperationId = await getSysWideOpId(this.airportDatabase, this.sequenceGenerator);\n                }\n                for (const [repositoryId, entityRecordsToDeleteForRepo] of entityRecordsToDelete) {\n                    const repositoryTransactionHistory = await this.historyManager.getNewRepositoryTransactionHistory(transaction.transactionHistory, repositoryId, context);\n                    const operationHistory = this.repositoryTransactionHistoryDuo.startOperation(repositoryTransactionHistory, systemWideOperationId, ChangeType.DELETE_ROWS, dbEntity, actor, rootTransaction);\n                    for (const recordToDelete of entityRecordsToDeleteForRepo) {\n                        const recordHistory = this.operationHistoryDuo.startRecordHistory(operationHistory, recordToDelete.actor.id, recordToDelete.actorRecordId);\n                        for (const dbProperty of dbEntity.properties) {\n                            if (dbProperty.relation && dbProperty.relation.length) {\n                                const dbRelation = dbProperty.relation[0];\n                                switch (dbRelation.relationType) {\n                                    case EntityRelationType.MANY_TO_ONE:\n                                        this.applicationUtils.forEachColumnOfRelation(dbRelation, recordToDelete, (dbColumn, value, propertyNameChains) => {\n                                            switch (dbColumn.name) {\n                                                // Do not add Actor or Repository the are recorded\n                                                // at record history level\n                                                case repositoryEntity.ACTOR_ID:\n                                                case repositoryEntity.REPOSITORY_ID:\n                                                    break;\n                                                default:\n                                                    this.recordHistoryDuo.addOldValue(recordHistory, dbColumn, value);\n                                            }\n                                        });\n                                        break;\n                                    case EntityRelationType.ONE_TO_MANY:\n                                        // One-To-Many do not contain any columns in source entity\n                                        break;\n                                    default:\n                                        throw new Error(`Unknown relation type: '${dbRelation.relationType}'\r\n\t\t\t\t\t\t\t\t\t\ton '${dbEntity.name}.${dbProperty.name}'.`);\n                                }\n                            }\n                            else {\n                                const dbColumn = dbProperty.propertyColumns[0].column;\n                                this.recordHistoryDuo\n                                    .addOldValue(recordHistory, dbColumn, recordToDelete[dbProperty.name]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    getCascadeSubTree(dbEntity, selectClause = {}) {\n        for (const dbProperty of dbEntity.properties) {\n            let dbRelation;\n            if (dbProperty.relation && dbProperty.relation.length) {\n                dbRelation = dbProperty.relation[0];\n            }\n            if (dbRelation) {\n                switch (dbRelation.relationType) {\n                    case EntityRelationType.ONE_TO_MANY:\n                        if (!dbRelation.oneToManyElems) {\n                            continue;\n                        }\n                        const subTree = {};\n                        selectClause[dbProperty.name] = subTree;\n                        this.getCascadeSubTree(dbRelation.relationEntity, subTree);\n                        break;\n                    case EntityRelationType.MANY_TO_ONE:\n                        this.applicationUtils.addRelationToEntitySelectClause(dbRelation, selectClause);\n                        break;\n                    default:\n                        throw new Error(`Unknown relation type: '${dbRelation.relationType}' \r\n\t\t\t\t\t\t\ton '${dbEntity.name}.${dbProperty.name}'.`);\n                }\n            }\n            else {\n                selectClause[dbProperty.name] = Y;\n            }\n        }\n        return selectClause;\n    }\n};\n__decorate([\n    Inject()\n], DeleteManager.prototype, \"airportDatabase\", void 0);\n__decorate([\n    Inject()\n], DeleteManager.prototype, \"applicationUtils\", void 0);\n__decorate([\n    Inject()\n], DeleteManager.prototype, \"historyManager\", void 0);\n__decorate([\n    Inject()\n], DeleteManager.prototype, \"operationHistoryDuo\", void 0);\n__decorate([\n    Inject()\n], DeleteManager.prototype, \"recordHistoryDuo\", void 0);\n__decorate([\n    Inject()\n], DeleteManager.prototype, \"repositoryTransactionHistoryDuo\", void 0);\n__decorate([\n    Inject()\n], DeleteManager.prototype, \"sequenceGenerator\", void 0);\nDeleteManager = __decorate([\n    Injected()\n], DeleteManager);\nexport { DeleteManager };\n//# sourceMappingURL=DeleteManager.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { TransactionType } from '@airport/ground-control';\nlet HistoryManager = class HistoryManager {\n    async getNewTransactionHistory(transactionType = TransactionType.LOCAL) {\n        return await this.transactionHistoryDuo.getNewRecord(transactionType);\n    }\n    async getNewRepositoryTransactionHistory(transactionHistory, repositoryId, context) {\n        return await this.transactionHistoryDuo.getRepositoryTransaction(transactionHistory, repositoryId, !!context.newRepository);\n    }\n};\n__decorate([\n    Inject()\n], HistoryManager.prototype, \"transactionHistoryDuo\", void 0);\nHistoryManager = __decorate([\n    Injected()\n], HistoryManager);\nexport { HistoryManager };\n//# sourceMappingURL=HistoryManager.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { getSysWideOpId } from '@airport/check-in';\nimport { ChangeType, repositoryEntity, } from '@airport/ground-control';\nlet InsertManager = class InsertManager {\n    async insertValues(portableQuery, actor, transaction, rootTransaction, context, ensureGeneratedValues) {\n        return await this.internalInsertValues(portableQuery, actor, transaction, rootTransaction, context, false, ensureGeneratedValues);\n    }\n    async insertValuesGetIds(portableQuery, actor, transaction, rootTransaction, context) {\n        return await this.internalInsertValues(portableQuery, actor, transaction, rootTransaction, context, true);\n    }\n    verifyNoGeneratedColumns(dbEntity, jsonInsertValues, errorPrefix) {\n        for (let i = 0; i < jsonInsertValues.C.length; i++) {\n            const columnIndex = jsonInsertValues.C[i];\n            const dbColumn = dbEntity.columns[columnIndex];\n            if (dbColumn.isGenerated) {\n                throw new Error(errorPrefix +\n                    `You cannot explicitly insert into a @GeneratedValue column '${dbColumn.name}'`);\n            }\n        }\n        return dbEntity.columns.filter(dbColumn => dbColumn.isGenerated);\n    }\n    async internalInsertValues(portableQuery, actor, transaction, rootTransaction, context, getIds = false, ensureGeneratedValues = true) {\n        const dbEntity = this.airportDatabase.applications[portableQuery.applicationIndex]\n            .currentVersion[0].applicationVersion.entities[portableQuery.tableIndex];\n        const errorPrefix = `Error inserting into '${dbEntity.name}'.'\r\n`;\n        this.validateValueRowLength(portableQuery, errorPrefix);\n        const jsonInsertValues = portableQuery.jsonQuery;\n        const columnIndexSet = {};\n        let inStatementIndex = 0;\n        for (const columnIndex of jsonInsertValues.C) {\n            if (columnIndex < 0 || columnIndex >= dbEntity.columns.length) {\n                throw new Error(errorPrefix +\n                    `Invalid column index: ${columnIndex}`);\n            }\n            if (columnIndexSet[columnIndex]) {\n                throw new Error(errorPrefix +\n                    `Column ${dbEntity.name}.${dbEntity.columns[columnIndex].name} \r\nappears more than once in the Columns clause`);\n            }\n            let rowNumber = 1;\n            for (let row of jsonInsertValues.V) {\n                if (row[inStatementIndex] === undefined) {\n                    throw new Error(errorPrefix +\n                        `\r\n\t'undefined' value in column ${dbEntity.name}.${dbEntity.columns[columnIndex].name} of row ${rowNumber}.\r\n\tAll values in an insert statment must either be null or have a non-null value.`);\n                }\n                rowNumber++;\n            }\n            inStatementIndex++;\n            columnIndexSet[columnIndex] = true;\n        }\n        let columnsToPopulate;\n        const insertValues = portableQuery.jsonQuery;\n        if (dbEntity.isRepositoryEntity) {\n            columnsToPopulate = this.ensureRepositoryEntityIdValues(actor, dbEntity, insertValues, errorPrefix, transaction, context);\n        }\n        let generatedColumns;\n        if (!transaction.isSync || context.generateOnSync) {\n            generatedColumns = this.verifyNoGeneratedColumns(dbEntity, portableQuery.jsonQuery, errorPrefix);\n        }\n        let ids;\n        let systemWideOperationId;\n        if (!dbEntity.isLocal) {\n            systemWideOperationId = await getSysWideOpId(this.airportDatabase, this.sequenceGenerator);\n        }\n        if ((!transaction.isSync || context.generateOnSync) && ensureGeneratedValues) {\n            ids = await this.ensureGeneratedValues(dbEntity, insertValues, actor, columnsToPopulate, generatedColumns, systemWideOperationId, errorPrefix, this.sequenceGenerator);\n        }\n        if (!dbEntity.isLocal && !transaction.isSync) {\n            await this.addInsertHistory(dbEntity, portableQuery, actor, systemWideOperationId, transaction, rootTransaction, context);\n        }\n        const numberOfInsertedRecords = await transaction.insertValues(portableQuery, context);\n        return getIds ? ids : numberOfInsertedRecords;\n    }\n    async validateValueRowLength(portableQuery, errorPrefix) {\n        const values = portableQuery.jsonQuery.V;\n        if (!values.length) {\n            throw new Error(errorPrefix + `no colum values provided`);\n        }\n        const firstValuesRow = values[0];\n        if (!firstValuesRow || !firstValuesRow.length) {\n            throw new Error(errorPrefix + `First row has no values`);\n        }\n        const numValuesInRow = firstValuesRow.length;\n        for (let i = 0; i < values.length; i++) {\n            const valuesRow = values[i];\n            if (valuesRow.length !== numValuesInRow) {\n                throw new Error(errorPrefix + `First row has ${numValuesInRow} values,\r\n\twhile row ${i + 1} has ${valuesRow.length} values`);\n            }\n        }\n    }\n    async ensureGeneratedValues(dbEntity, jsonInsertValues, actor, columnsToPopulate, generatedColumns, systemWideOperationId, errorPrefix, sequenceGenerator) {\n        const values = jsonInsertValues.V;\n        const idColumns = dbEntity.idColumns;\n        const allIds = [];\n        for (const _entityValues of values) {\n            allIds.push([]);\n        }\n        let actorIdColumn;\n        let sysWideOperationIdColumn;\n        if (!dbEntity.isLocal) {\n            actorIdColumn = columnsToPopulate.actorIdColumn;\n            sysWideOperationIdColumn = columnsToPopulate.sysWideOperationIdColumn;\n        }\n        for (const idColumn of idColumns) {\n            if (idColumn.isGenerated) {\n                continue;\n            }\n            let isActorIdColumn = false;\n            let inStatementColumnIndex;\n            const matchingColumns = jsonInsertValues.C.filter((columnIndex, index) => {\n                if (columnIndex === idColumn.index) {\n                    inStatementColumnIndex = index;\n                    return true;\n                }\n            });\n            if (matchingColumns.length < 1) {\n                // Actor Id cannot be in the insert statement\n                if (idColumn.id === actorIdColumn.id) {\n                    isActorIdColumn = true;\n                    inStatementColumnIndex = jsonInsertValues.C.length;\n                    jsonInsertValues.C.push(actorIdColumn.index);\n                }\n                else {\n                    throw new Error(errorPrefix +\n                        `Could not find @Id column ${dbEntity.name}.${idColumn.name} in\r\n\t\t\t\t\tthe insert statement.  Non-generated @Id columns must be present in the Insert\r\n\t\t\t\t\tstatement (with exception of Actor ID).`);\n                }\n            }\n            for (let i = 0; i < values.length; i++) {\n                const entityValues = values[i];\n                const idValues = allIds[i];\n                let idValue;\n                if (isActorIdColumn) {\n                    idValue = actor.id;\n                }\n                else {\n                    idValue = entityValues[inStatementColumnIndex];\n                    if (!idValue && idValue !== 0) {\n                        throw new Error(errorPrefix +\n                            `No value provided on insert for @Id '${dbEntity.name}.${idColumn.name}'.`);\n                    }\n                }\n                idValues[idColumn.index] = idValue;\n            }\n        }\n        // if (dbEntity.isRepositoryEntity) {\n        // \tconst repositoryColumn  = dbEntity.columnMap[repositoryEntity.FOREIGN_KEY]\n        // \tconst repositoryIdIndex = repositoryColumn.index\n        // \tfor (const entityValues of values) {\n        // \t\tconst repositoryId = entityValues[repositoryIdIndex]\n        // \t\tif (!repositoryId && repositoryId !== 0) {\n        // \t\t\tthrow new Error(`@Column({ name: 'REPOSITORY_ID'}) value is not specified on\n        // insert for '${dbEntity0.name}.${repositoryColumn.name}'.`) } } }\n        const generatedColumnIndexes = [];\n        // let numAddedColumns                    = 0\n        for (const generatedColumn of generatedColumns) {\n            // const matchingColumns = jsonInsertValues.C.filter(\n            // \tcolumnIndex => columnIndex === generatedColumn.index)\n            // if (!matchingColumns.length) {\n            // TODO: verify that it is OK to mutate the JsonInsertValues query\n            const generatedIdColumnIndex = jsonInsertValues.C.length;\n            generatedColumnIndexes.push(jsonInsertValues.C.length);\n            jsonInsertValues.C.push(generatedColumn.index);\n            // numAddedColumns++\n            continue;\n            // }\n            // const generatedIdColumnIndex = matchingColumns[0]\n            // generatedColumnIndexes.push(generatedIdColumnIndex)\n            for (const entityValues of values) {\n                const generatedValue = entityValues[generatedIdColumnIndex];\n                if (generatedValue || generatedValue === 0) {\n                    // Allowing negative integers for temporary identification\n                    // within the circular dependency management lookup\n                    if (generatedValue >= 0) {\n                        throw new Error(errorPrefix +\n                            `Already provided value '${entityValues[generatedColumn.index]}'\r\n\t\t\t\t\ton insert for @GeneratedValue '${dbEntity.name}.${generatedColumn.name}'.\r\n\t\t\t\t\tYou cannot explicitly provide values for @GeneratedValue columns'.`);\n                    }\n                }\n            }\n        }\n        // Populating generated values AFTER the checks\n        // to not waste sequence numbers on invalid input\n        // (thus reducing storage requirements in SqLite)\n        const numSequencesNeeded = generatedColumns.map(_ => values.length);\n        const generatedSequenceValues = await sequenceGenerator.generateSequenceNumbers(generatedColumns, numSequencesNeeded);\n        generatedColumns.forEach((dbColumn, generatedColumnIndex) => {\n            const generatedColumnSequenceValues = generatedSequenceValues[generatedColumnIndex];\n            const insertColumnIndex = generatedColumnIndexes[generatedColumnIndex];\n            // const columnIndex                   = dbColumn.index\n            values.forEach((entityValues, index) => {\n                const generatedValue = generatedColumnSequenceValues[index];\n                entityValues[insertColumnIndex] = generatedValue;\n                allIds[index][dbColumn.index] = generatedValue;\n            });\n        });\n        if (!dbEntity.isLocal) {\n            jsonInsertValues.C.push(sysWideOperationIdColumn.index);\n            values.forEach(entityValues => {\n                entityValues.push(systemWideOperationId);\n            });\n        }\n        if (!idColumns.length && !generatedColumns.length) {\n            return values.length;\n        }\n        // switch (idColumns.length) {\n        // \tcase 0: {\n        // \t\t// If there is just one @Generated column and no @Id columns\n        // \t\tif (generatedColumns.length == 1) {\n        // \t\t\tconst columnIndex = generatedColumns[0].index\n        // \t\t\treturn allIds.map(\n        // \t\t\t\trowIds => rowIds[columnIndex])\n        // \t\t}\n        // \t\tbreak\n        // \t}\n        // \tcase 1: {\n        // \t\t// If there is exactly 1 @Id column and no @Generated columns\n        // \t\t// or it is the @Generated column\n        // \t\tif (!generatedColumns.length\n        // \t\t\t|| (generatedColumns.length === 1\n        // \t\t\t\t&& idColumns[0].index === generatedColumns[0].index)) {\n        // \t\t\tconst columnIndex = idColumns[0].index\n        // \t\t\treturn allIds.map(\n        // \t\t\t\trowIds => rowIds[columnIndex])\n        // \t\t}\n        // \t\tbreak\n        // \t}\n        // }\n        return allIds;\n    }\n    ensureRepositoryEntityIdValues(actor, dbEntity, jsonInsertValues, errorPrefix, transaction, context) {\n        const actorIdColumn = dbEntity.idColumnMap[repositoryEntity.ACTOR_ID];\n        const actorRecordIdColumn = dbEntity.idColumnMap[repositoryEntity.ACTOR_RECORD_ID];\n        const repositoryIdColumn = dbEntity.idColumnMap[repositoryEntity.REPOSITORY_ID];\n        const sysWideOperationIdColumn = dbEntity.columnMap[repositoryEntity.SYSTEM_WIDE_OPERATION_ID];\n        let repositoryIdColumnQueryIndex;\n        let foundActorIdColumn = false;\n        let foundActorRecordIdColumn = false;\n        let foundSystemWideOperationIdColumn = false;\n        for (let i = 0; i < jsonInsertValues.C.length; i++) {\n            const columnIndex = jsonInsertValues.C[i];\n            switch (columnIndex) {\n                case actorIdColumn.index:\n                    foundActorIdColumn = true;\n                    if (context.isSaveOperation) {\n                        // Save operations validate Actor ealier and set it on the entity objects\n                        break;\n                    }\n                    if (!transaction.isSync) {\n                        throw new Error(errorPrefix +\n                            `You cannot explicitly provide an ACTOR_ID value for Repository entities.`);\n                    }\n                    break;\n                case actorRecordIdColumn.index:\n                    foundActorRecordIdColumn = true;\n                    if (!transaction.isSync) {\n                        throw new Error(errorPrefix +\n                            `You cannot explicitly provide an ACTOR_RECORD_ID value for Repository entities.`);\n                    }\n                    break;\n                case sysWideOperationIdColumn.index:\n                    foundSystemWideOperationIdColumn = true;\n                    if (!transaction.isSync) {\n                        throw new Error(`Error inserting into '${dbEntity.name}'.\r\nYou cannot explicitly provide a SYSTEM_WIDE_OPERATION_ID value for Repository entities.`);\n                    }\n                    break;\n                case repositoryIdColumn.index:\n                    repositoryIdColumnQueryIndex = i;\n                    break;\n            }\n        }\n        const missingRepositoryIdErrorMsg = errorPrefix +\n            `Error inserting into '${dbEntity.name}'.\r\nYou must provide a valid REPOSITORY_ID value for Repository entities.`;\n        if (repositoryIdColumnQueryIndex === undefined) {\n            throw new Error(missingRepositoryIdErrorMsg);\n        }\n        if (transaction.isSync) {\n            if (!foundActorIdColumn) {\n                throw new Error(errorPrefix +\n                    `ACTOR_ID must be provided for sync operations.`);\n            }\n            if (!foundActorRecordIdColumn) {\n                throw new Error(errorPrefix +\n                    `ACTOR_RECORD_ID must be provided for sync operations.`);\n            }\n            if (!foundSystemWideOperationIdColumn) {\n                throw new Error(errorPrefix +\n                    `SYSTEM_WIDE_OPERATION_ID must be provided for sync operations.`);\n            }\n        }\n        for (const entityValues of jsonInsertValues.V) {\n            if (entityValues.length !== jsonInsertValues.C.length) {\n                throw new Error(errorPrefix +\n                    `Number of columns (${jsonInsertValues.C.length}) does not match number of values (${entityValues.length}).\r\n\t\t\t\t`);\n            }\n            let repositoryId = entityValues[repositoryIdColumnQueryIndex];\n            if (typeof repositoryId !== 'number'\n                || !Number.isInteger(repositoryId)\n                || repositoryId < 1) {\n                throw new Error(missingRepositoryIdErrorMsg);\n            }\n            for (let i = 0; i < entityValues.length; i++) {\n                switch (i) {\n                    case repositoryIdColumnQueryIndex:\n                        continue;\n                }\n                const value = entityValues[i];\n                const columnIndex = jsonInsertValues.C[i];\n                const dbColumn = dbEntity.columns[columnIndex];\n                if (dbColumn.notNull && value === null) {\n                    throw new Error(errorPrefix +\n                        `Column '${dbColumn.name}' is NOT NULL\r\nand cannot have NULL values.`);\n                }\n            }\n            if (!context.isSaveOperation && !transaction.isSync) {\n                // Save operation set Actor ealier (at the entity level, to be returned back to client)\n                entityValues[actorIdColumn.index] = actor.id;\n            }\n        }\n        return {\n            actorIdColumn,\n            sysWideOperationIdColumn\n        };\n    }\n    /**\n     *\n     * All repository records must have ids when inserted.  Currently AP doesn't support\n     * inserting from select and in the values provided id's must either be explicitly\n     * specified or already provided. For all repository entities all ids must be\n     * auto-generated.\n     *\n     * @param {DbEntity} dbEntity\n     * @param {PortableQuery} portableQuery\n     * @returns {Promise<void>}\n     */\n    async addInsertHistory(dbEntity, portableQuery, actor, systemWideOperationId, transaction, rootTransaction, context) {\n        const jsonInsertValues = portableQuery.jsonQuery;\n        let operationsByRepo = [];\n        let repoTransHistories = [];\n        const repositoryIdIndex = dbEntity.columnMap[repositoryEntity.REPOSITORY_ID].index;\n        const actorIdIndex = dbEntity.columnMap[repositoryEntity.ACTOR_ID].index;\n        const actorRecordIdIndex = dbEntity.columnMap[repositoryEntity.ACTOR_RECORD_ID].index;\n        let repositoryIdColumnNumber;\n        let actorIdColumnNumber;\n        let actorRecordIdColumnNumber;\n        for (const columnNumber in jsonInsertValues.C) {\n            const columnIndex = jsonInsertValues.C[columnNumber];\n            switch (columnIndex) {\n                case repositoryIdIndex:\n                    repositoryIdColumnNumber = columnNumber;\n                    break;\n                case actorIdIndex:\n                    actorIdColumnNumber = columnNumber;\n                    break;\n                case actorRecordIdIndex:\n                    actorRecordIdColumnNumber = columnNumber;\n                    break;\n            }\n        }\n        // Rows may belong to different repositories\n        for (const row of jsonInsertValues.V) {\n            const repositoryId = row[repositoryIdColumnNumber];\n            // const repo           = await repoManager.getRepository(repositoryId)\n            let repositoryTransactionHistory = repoTransHistories[repositoryId];\n            if (!repositoryTransactionHistory) {\n                repositoryTransactionHistory = await this.historyManager\n                    .getNewRepositoryTransactionHistory(transaction.transactionHistory, repositoryId, context);\n            }\n            let operationHistory = operationsByRepo[repositoryId];\n            if (!operationHistory) {\n                operationHistory = this.repositoryTransactionHistoryDuo.startOperation(repositoryTransactionHistory, systemWideOperationId, ChangeType.INSERT_VALUES, dbEntity, actor, rootTransaction);\n                operationsByRepo[repositoryId] = operationHistory;\n            }\n            const actorRecordId = row[actorRecordIdColumnNumber];\n            const actorId = row[actorIdColumnNumber];\n            const recordHistory = this.operationHistoryDuo.startRecordHistory(operationHistory, actorId, actorRecordId);\n            for (const columnNumber in jsonInsertValues.C) {\n                if (columnNumber === repositoryIdColumnNumber\n                    || columnNumber === actorIdColumnNumber\n                    || columnNumber === actorRecordIdColumnNumber) {\n                    continue;\n                }\n                const columnIndex = jsonInsertValues.C[columnNumber];\n                const dbColumn = dbEntity.columns[columnIndex];\n                const newValue = row[columnNumber];\n                this.recordHistoryDuo.addNewValue(recordHistory, dbColumn, newValue);\n            }\n        }\n        // for (const repositoryId in operationsByRepo) {\n        // \tconst repoTransHistory = await\n        // \t\tthis.currentTransHistory.getRepositoryTransaction(\n        // \t\t\trepositoryId, null, null, null, repoTransHistoryDuo);\n        // \trepoTransHistory.endGroupMutation(operationsByRepo[repositoryId]);\n        // }\n    }\n};\n__decorate([\n    Inject()\n], InsertManager.prototype, \"airportDatabase\", void 0);\n__decorate([\n    Inject()\n], InsertManager.prototype, \"historyManager\", void 0);\n__decorate([\n    Inject()\n], InsertManager.prototype, \"insertManager\", void 0);\n__decorate([\n    Inject()\n], InsertManager.prototype, \"operationHistoryDuo\", void 0);\n__decorate([\n    Inject()\n], InsertManager.prototype, \"recordHistoryDuo\", void 0);\n__decorate([\n    Inject()\n], InsertManager.prototype, \"repositoryTransactionHistoryDuo\", void 0);\n__decorate([\n    Inject()\n], InsertManager.prototype, \"sequenceGenerator\", void 0);\nInsertManager = __decorate([\n    Injected()\n], InsertManager);\nexport { InsertManager };\n//# sourceMappingURL=InsertManager.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet QueryManager = class QueryManager {\n    async find(portableQuery, context, cachedSqlQueryId) {\n        await this.ensureRepositoryPresenceAndCurrentState(context);\n        return await this.storeDriver.find(portableQuery, {}, context, cachedSqlQueryId);\n    }\n    async findOne(portableQuery, context, cachedSqlQueryId) {\n        await this.ensureRepositoryPresenceAndCurrentState(context);\n        return await this.storeDriver.findOne(portableQuery, {}, context, cachedSqlQueryId);\n    }\n    search(portableQuery, context, cachedSqlQueryId) {\n        // TODO: checking for presence of a repository in in an observable\n        // await this.ensureRepositoryPresenceAndCurrentState(context)\n        return this.storeDriver.search(portableQuery, {}, context, cachedSqlQueryId);\n    }\n    searchOne(portableQuery, context, cachedSqlQueryId) {\n        // TODO: checking for presence of a repository in in an observable\n        // await this.ensureRepositoryPresenceAndCurrentState(context)\n        return this.storeDriver.searchOne(portableQuery, {}, context, cachedSqlQueryId);\n    }\n    async ensureRepositoryPresenceAndCurrentState(context) {\n        if (context.repository && context.repository.source && context.repository.uuId) {\n            await this.repositoryLoader.loadRepository(context.repository.source, context.repository.uuId, context);\n        }\n    }\n};\n__decorate([\n    Inject()\n], QueryManager.prototype, \"repositoryLoader\", void 0);\n__decorate([\n    Inject()\n], QueryManager.prototype, \"storeDriver\", void 0);\nQueryManager = __decorate([\n    Injected()\n], QueryManager);\nexport { QueryManager };\n//# sourceMappingURL=QueryManager.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { INTERNAL_APP, INTERNAL_DOMAIN } from '@airport/ground-control';\nimport { Q } from '@airport/holding-pattern-runtime';\nimport { AbstractMutationManager } from './AbstractMutationManager';\nlet TransactionManager = class TransactionManager extends AbstractMutationManager {\n    /**\n     * Initializes the EntityManager at server load time.\n     * @returns {Promise<void>}\n     */\n    async initialize(dbName, context) {\n        return await this.storeDriver.initialize(dbName, context);\n        // await this.dataStore.initialize(dbName)\n        // await this.repositoryManager.initialize();\n    }\n    getInProgressTransactionById(transactionId) {\n        return this.terminalStore.getTransactionManager()\n            .transactionInProgressMap.get(transactionId);\n    }\n    isServer(context) {\n        return this.storeDriver.isServer(context);\n    }\n    async transactInternal(transactionalCallback, context) {\n        return await this.transact({\n            application: INTERNAL_APP,\n            domain: INTERNAL_DOMAIN,\n            methodName: null,\n            objectName: null\n        }, transactionalCallback, context);\n    }\n    async transact(credentials, transactionalCallback, context) {\n        if (context.transaction) {\n            // Nested transactal() calls in internal operations\n            // do not create nested transactions \n            await transactionalCallback(context.transaction, context);\n            return;\n        }\n        const transaction = await this.startTransaction(credentials, context);\n        try {\n            await transactionalCallback(transaction, context);\n            await this.commit(credentials, context);\n        }\n        catch (e) {\n            await this.rollback(credentials, context);\n            throw e;\n        }\n    }\n    async startTransaction(credentials, context) {\n        const transactionManagerStore = this.terminalStore.getTransactionManager();\n        let parentTransaction;\n        if (credentials.transactionId) {\n            parentTransaction = transactionManagerStore\n                .transactionInProgressMap.get(credentials.transactionId);\n            if (!parentTransaction) {\n                throw new Error(`\r\nRecieved a startTransaction call (@Api call) with parent transaction id:\r\n\t${credentials.transactionId}\r\nBut, there is no such transaction in progress.`);\n            }\n            if (parentTransaction.id !==\n                credentials.transactionId) {\n                throw new Error(`\r\nIn-progress transaction id does not match the passed in transaction id:\r\n${credentials.transactionId}`);\n            }\n            this.checkForCircularDependencies(parentTransaction, credentials);\n        }\n        else {\n            /*\n             * NOTE: Current policy is to NOT limit the number of transactions\n             * a domain can initiate.  In the future, specifically for the\n             * client-side Turbase, it may make sence to limit the number\n             * of transactions to 1 per tab.  This can be accomplished by\n             * generating a unique id on the nested client iframe of an\n             * application.\n             */\n            /*\nthrow new Error(`\n    Domain:\n        ${credentials.domain}\n    Application:\n        ${credentials.application}\ninitialized multiple transactions at the same time.\nOnly one concurrent transaction is allowed per application.`)\n            */\n            if (!this.isServer(context)\n                && transactionManagerStore.transactionInProgressMap.size > 0) {\n                // Delay the start of the transaction\n                return new Promise((resolve, reject) => {\n                    // Add the transaction to the queue of pending transactions\n                    transactionManagerStore.pendingTransactionQueue.unshift({\n                        credentials,\n                        reject,\n                        resolve\n                    });\n                });\n            }\n        }\n        const transaction = await this.internalStartTransaction(credentials, parentTransaction, context);\n        if (!parentTransaction) {\n            transaction.numberOfOperations = 0;\n        }\n        return transaction;\n    }\n    async internalStartTransaction(credentials, parentTransaction, context) {\n        const transactionManagerStore = this.terminalStore.getTransactionManager();\n        const transaction = await this.storeDriver\n            .setupTransaction(context, parentTransaction);\n        await this.storeDriver.startTransaction(transaction, context);\n        transaction.credentials = credentials;\n        await this.setupTransaction(credentials, transaction, parentTransaction, transactionManagerStore, context);\n        return transaction;\n    }\n    async rollback(credentials, context) {\n        const transaction = await this.getTransactionFromContextOrCredentials(credentials, context);\n        let parentTransaction = transaction.parentTransaction;\n        await transaction.rollback(null, context);\n        await this.clearTransaction(transaction, parentTransaction, credentials, context);\n        await this.resumeParentOrPendingTransaction(parentTransaction, context);\n    }\n    async getTransactionFromContextOrCredentials(credentials, context) {\n        let transaction = context.transaction;\n        if (!transaction) {\n            if (!credentials.transactionId) {\n                throw new Error(`\r\nNo Transaction Id is passed in Credentials for a Rollback operation.\r\n\t\t\t\t`);\n            }\n            const transactionManagerStore = this.terminalStore\n                .getTransactionManager();\n            transaction = transactionManagerStore.transactionInProgressMap.get(credentials.transactionId);\n            if (!transaction) {\n                throw new Error(`\r\nCould not find Transaction: ${credentials.transactionId} in Transactons in-progress.\r\nNOTE: nested/child transactions must be commited or rolled back before their\r\nparent transactions.\r\n\t\t\t\t`);\n            }\n            context.transaction = transaction;\n        }\n        let ancestorTransaction = transaction;\n        while (ancestorTransaction = ancestorTransaction.parentTransaction)\n            ;\n        context.rootTransaction = ancestorTransaction;\n        return transaction;\n    }\n    async resumeParentOrPendingTransaction(parentTransaction, context) {\n        const transactionManagerStore = this.terminalStore\n            .getTransactionManager();\n        if (parentTransaction) {\n            await this.setupTransaction(parentTransaction.credentials, parentTransaction, parentTransaction.parentTransaction, transactionManagerStore, context);\n        }\n        else if (transactionManagerStore.pendingTransactionQueue.length) {\n            const pendingTransaction = transactionManagerStore.pendingTransactionQueue.pop();\n            const transaction = await this.internalStartTransaction(pendingTransaction.credentials, null, context);\n            pendingTransaction.resolve(transaction);\n        }\n    }\n    async commit(credentials, context) {\n        const transaction = await this.getTransactionFromContextOrCredentials(credentials, context);\n        let parentTransaction = transaction.parentTransaction;\n        try {\n            if (parentTransaction) {\n                // Copy transaction history to the parent transaction\n                let childTransactionHistory = transaction.transactionHistory;\n                let parentTransactionHistory = parentTransaction.transactionHistory;\n                for (const operationHistory of childTransactionHistory.allOperationHistory) {\n                    const repositoryId = operationHistory.repositoryTransactionHistory.repository.id;\n                    const parentRepositoryTransactionRecord = parentTransactionHistory\n                        .repositoryTransactionHistoryMap[repositoryId];\n                    if (parentRepositoryTransactionRecord) {\n                        operationHistory.repositoryTransactionHistory = parentRepositoryTransactionRecord;\n                    }\n                    else {\n                        parentTransactionHistory.repositoryTransactionHistoryMap[repositoryId]\n                            = operationHistory.repositoryTransactionHistory;\n                        parentTransactionHistory.repositoryTransactionHistories\n                            .push(operationHistory.repositoryTransactionHistory);\n                    }\n                }\n                parentTransactionHistory.allOperationHistory = parentTransactionHistory\n                    .allOperationHistory.concat(childTransactionHistory.allOperationHistory);\n                parentTransactionHistory.allRecordHistory = parentTransactionHistory\n                    .allRecordHistory.concat(childTransactionHistory.allRecordHistory);\n                parentTransactionHistory.allRecordHistoryNewValues = parentTransactionHistory\n                    .allRecordHistoryNewValues.concat(childTransactionHistory.allRecordHistoryNewValues);\n                parentTransactionHistory.allRecordHistoryOldValues = parentTransactionHistory\n                    .allRecordHistoryOldValues.concat(childTransactionHistory.allRecordHistoryOldValues);\n            }\n            else {\n                // This is the root transaction, save it's history, along with any nested transactions\n                await this.saveRepositoryHistory(transaction, context);\n                await transaction.saveTransaction(transaction.transactionHistory);\n            }\n            this.activeQueries.rerunQueries();\n            await transaction.commit(null, context);\n            let transactionHistory = transaction.transactionHistory;\n            if (!parentTransaction && transactionHistory.allRecordHistory.length) {\n                await this.synchronizationOutManager.synchronizeOut(transactionHistory.repositoryTransactionHistories);\n            }\n        }\n        finally {\n            await this.clearTransaction(transaction, parentTransaction, credentials, context);\n            // Right now transactions are tied to @Api() calls,\n            // If an @Api() fails to commit the parent @Api() call should resume\n            // it's transaction or the next \n            await this.resumeParentOrPendingTransaction(parentTransaction, context);\n        }\n    }\n    checkForCircularDependencies(transaction, credentials) {\n        if (credentials.domain === INTERNAL_DOMAIN) {\n            return;\n        }\n        do {\n            if (this.isSameSource(transaction, credentials)) {\n                let callHerarchy = this.getApiName(credentials);\n                let hierarchyTransaction = transaction;\n                do {\n                    callHerarchy = `${this.getApiName(hierarchyTransaction.initiator)} ->\r\n${callHerarchy}`;\n                } while (hierarchyTransaction = hierarchyTransaction.parentTransaction);\n                throw new Error(`Circular API call detected:\r\n\t\t\t\t\r\n${callHerarchy}\r\n\r\n\t\t\t\t`);\n            }\n        } while (transaction = transaction.parentTransaction);\n    }\n    async setupTransaction(credentials, transaction, parentTransaction, transactionManagerStore, context) {\n        context.transaction = transaction;\n        credentials.transactionId = transaction.id;\n        transaction.transactionHistory = this.transactionHistoryDuo.getNewRecord();\n        transactionManagerStore.transactionInProgressMap.set(transaction.id, transaction);\n        if (parentTransaction) {\n            transactionManagerStore.transactionInProgressMap.delete(parentTransaction.id);\n        }\n        else {\n            transactionManagerStore.rootTransactionInProgressMap.set(transaction.id, transaction);\n        }\n    }\n    // @Transactional()\n    // private async recordRepositoryTransactionBlock(\n    // \ttransaction: IRepositoryTransactionHistory\n    // ): Promise<void> {\n    // \tif (this.onlineManager.isOnline()) {\n    // \t\t// let repository = transaction.repository;\n    // \t\ttransaction.serialize();\n    //\n    // \t\tlet deltaStore = this.repositoryManager.getDeltaStore(transaction.repository);\n    // \t\tawait deltaStore.addChanges(deltaStore.config.changeListConfig, [transaction]);\n    //\n    // \t\ttransaction.deserialize(\n    // \t\t\t// repository\n    // \t\t);\n    // \t\tawait this.offlineDeltaStore.markChangesAsSynced(transaction.repository,\n    // [transaction]);\n    // this.queries.markQueriesToRerun(transaction.transactionHistory.applicationMap); } }\n    isSameSource(transaction, credentials) {\n        const initiator = transaction.initiator;\n        return initiator.domain === credentials.domain\n            && initiator.application === credentials.application\n            && initiator.objectName === credentials.objectName\n            && initiator.methodName === credentials.methodName;\n    }\n    getApiName(nameContainer) {\n        return `${nameContainer.domain}.${nameContainer.application}.${nameContainer.objectName}.${nameContainer.methodName}`;\n    }\n    async clearTransaction(transaction, parentTransaction, credentials, context) {\n        const transactionManagerStore = this.terminalStore\n            .getTransactionManager();\n        transactionManagerStore.transactionInProgressMap.delete(transaction.id);\n        if (!parentTransaction) {\n            transactionManagerStore.rootTransactionInProgressMap.delete(transaction.id);\n        }\n        context.transaction = null;\n        credentials.transactionId = null;\n    }\n    async saveRepositoryHistory(transaction, context) {\n        let transactionHistory = transaction.transactionHistory;\n        if (!transactionHistory.allRecordHistory.length) {\n            return false;\n        }\n        let applicationMap = transactionHistory.applicationMap;\n        const transactionHistoryIds = await this.idGenerator.generateTransactionHistoryIds(transactionHistory.repositoryTransactionHistories.length, transactionHistory.allOperationHistory.length, transactionHistory.allRecordHistory.length);\n        applicationMap.ensureEntity(Q.TransactionHistory.__driver__.dbEntity, true);\n        transactionHistory.id = transactionHistoryIds.transactionHistoryId;\n        await this.doInsertValues(transaction, Q.TransactionHistory, [transactionHistory], context);\n        applicationMap.ensureEntity(Q.RepositoryTransactionHistory.__driver__.dbEntity, true);\n        transactionHistory.repositoryTransactionHistories.forEach((repositoryTransactionHistory, index) => {\n            repositoryTransactionHistory.id = transactionHistoryIds.repositoryHistoryIds[index];\n            repositoryTransactionHistory.transactionHistory = transactionHistory;\n        });\n        await this.doInsertValues(transaction, Q.RepositoryTransactionHistory, transactionHistory.repositoryTransactionHistories, context);\n        applicationMap.ensureEntity(Q.OperationHistory.__driver__.dbEntity, true);\n        transactionHistory.allOperationHistory.forEach((operationHistory, index) => {\n            operationHistory.id = transactionHistoryIds.operationHistoryIds[index];\n        });\n        await this.doInsertValues(transaction, Q.OperationHistory, transactionHistory.allOperationHistory, context);\n        applicationMap.ensureEntity(Q.RecordHistory.__driver__.dbEntity, true);\n        transactionHistory.allRecordHistory.forEach((recordHistory, index) => {\n            recordHistory.id = transactionHistoryIds.recordHistoryIds[index];\n        });\n        await this.doInsertValues(transaction, Q.RecordHistory, transactionHistory.allRecordHistory, context);\n        if (transactionHistory.allRecordHistoryNewValues.length) {\n            applicationMap.ensureEntity(Q.RecordHistoryNewValue.__driver__.dbEntity, true);\n            await this.doInsertValues(transaction, Q.RecordHistoryNewValue, transactionHistory.allRecordHistoryNewValues, context);\n        }\n        if (transactionHistory.allRecordHistoryOldValues.length) {\n            applicationMap.ensureEntity(Q.RecordHistoryOldValue.__driver__.dbEntity, true);\n            await this.doInsertValues(transaction, Q.RecordHistoryOldValue, transactionHistory.allRecordHistoryOldValues, context);\n        }\n        return true;\n    }\n};\n__decorate([\n    Inject()\n], TransactionManager.prototype, \"activeQueries\", void 0);\n__decorate([\n    Inject()\n], TransactionManager.prototype, \"idGenerator\", void 0);\n__decorate([\n    Inject()\n], TransactionManager.prototype, \"storeDriver\", void 0);\n__decorate([\n    Inject()\n], TransactionManager.prototype, \"synchronizationOutManager\", void 0);\n__decorate([\n    Inject()\n], TransactionManager.prototype, \"terminalStore\", void 0);\n__decorate([\n    Inject()\n], TransactionManager.prototype, \"transactionHistoryDuo\", void 0);\nTransactionManager = __decorate([\n    Injected()\n], TransactionManager);\nexport { TransactionManager };\n//# sourceMappingURL=TransactionManager.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { SheetQuery } from '@airport/air-traffic-control';\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { getSysWideOpId } from '@airport/check-in';\nimport { ChangeType, ensureChildArray, ensureChildMap, QueryResultType, repositoryEntity, } from '@airport/ground-control';\nlet UpdateManager = class UpdateManager {\n    async updateValues(portableQuery, actor, transaction, rootTransaction, context) {\n        const dbEntity = this.airportDatabase.applications[portableQuery.applicationIndex]\n            .currentVersion[0].applicationVersion.entities[portableQuery.tableIndex];\n        const errorPrefix = `Error updating '${dbEntity.name}'\r\n`;\n        const internalFragments = {\n            SET: []\n        };\n        let recordHistoryMap;\n        let repositorySheetSelectInfo;\n        let systemWideOperationId;\n        if (!dbEntity.isLocal && !transaction.isSync) {\n            systemWideOperationId = await getSysWideOpId(this.airportDatabase, this.sequenceGenerator);\n            // TODO: For entity queries an additional query really shouldn't be needed\n            // Specifically for entity queries, we got the new values, just record them\n            // This will require an additional operation on the first update\n            // where the original values of the record are saved\n            // This eats up more disk space but saves on operations that need\n            // to be performed (one less query)\n            [recordHistoryMap, repositorySheetSelectInfo]\n                = await this.addUpdateHistory(portableQuery, actor, systemWideOperationId, errorPrefix, transaction, rootTransaction, context);\n            internalFragments.SET.push({\n                column: repositorySheetSelectInfo.systemWideOperationIdColumn,\n                value: systemWideOperationId\n            });\n        }\n        const numUpdatedRows = await transaction\n            .updateWhere(portableQuery, internalFragments, context);\n        if (!dbEntity.isLocal && !transaction.isSync) {\n            const previousDbEntity = context.dbEntity;\n            context.dbEntity = dbEntity;\n            // TODO: Entity based updates already have all of the new values being\n            // updated, detect the type of update and if entity just pull out\n            // the new values from them\n            await this.addNewValueHistory(portableQuery.jsonQuery, recordHistoryMap, systemWideOperationId, repositorySheetSelectInfo, errorPrefix, transaction, context);\n            context.dbEntity = previousDbEntity;\n        }\n        return numUpdatedRows;\n    }\n    async addUpdateHistory(portableQuery, actor, systemWideOperationId, errorPrefix, transaction, rootTransaction, context) {\n        if (!context.dbEntity.isRepositoryEntity) {\n            throw new Error(errorPrefix +\n                `Cannot add update history for a non-RepositoryEntity`);\n        }\n        const qEntity = this.airportDatabase\n            .qApplications[context.dbEntity.applicationVersion.application.index][context.dbEntity.name];\n        const jsonUpdate = portableQuery.jsonQuery;\n        const getSheetSelectFromSetClauseResult = this.applicationUtils.getSheetSelectFromSetClause(context.dbEntity, qEntity, jsonUpdate.S, errorPrefix);\n        const sheetQuery = new SheetQuery(null);\n        const jsonSelectClause = sheetQuery.nonDistinctSelectClauseToJSON(getSheetSelectFromSetClauseResult.selectClause, this.queryUtils, this.fieldUtils, this.relationManager);\n        const jsonSelect = {\n            S: jsonSelectClause,\n            F: [jsonUpdate.U],\n            W: jsonUpdate.W,\n        };\n        const portableSelect = {\n            applicationIndex: portableQuery.applicationIndex,\n            tableIndex: portableQuery.tableIndex,\n            jsonQuery: jsonSelect,\n            queryResultType: QueryResultType.SHEET,\n            parameterMap: portableQuery.parameterMap,\n            // values: portableQuery.values,\n        };\n        const recordsToUpdate = await transaction.find(portableSelect, {}, context);\n        const { recordsByRepositoryId, repositoryIdSet } = this.groupRecordsByRepository(recordsToUpdate, getSheetSelectFromSetClauseResult);\n        const repositoryIds = Array.from(repositoryIdSet);\n        const recordHistoryMapByRecordId = {};\n        for (const repositoryId of repositoryIds) {\n            // const repository                         = repositories.get(repositoryId)\n            const recordHistoryMapForRepository = {};\n            recordHistoryMapByRecordId[repositoryId] = recordHistoryMapForRepository;\n            const repositoryTransactionHistory = await this.historyManager.getNewRepositoryTransactionHistory(transaction.transactionHistory, repositoryId, context);\n            const operationHistory = this.repositoryTransactionHistoryDuo.startOperation(repositoryTransactionHistory, systemWideOperationId, ChangeType.UPDATE_ROWS, context.dbEntity, actor, rootTransaction);\n            const recordsForRepositoryId = recordsByRepositoryId[repositoryId];\n            for (const recordToUpdate of recordsForRepositoryId) {\n                const actorId = recordToUpdate[getSheetSelectFromSetClauseResult.actorIdColumnIndex];\n                const recordHistoryMapForActor = ensureChildMap(recordHistoryMapForRepository, actorId);\n                const actorRecordId = recordToUpdate[getSheetSelectFromSetClauseResult.actorRecordIdColumnIndex];\n                const recordHistory = this.operationHistoryDuo.startRecordHistory(operationHistory, actorId, actorRecordId);\n                recordHistoryMapForActor[actorRecordId] = recordHistory;\n                for (let i = 0; i < recordToUpdate.length; i++) {\n                    switch (i) {\n                        case getSheetSelectFromSetClauseResult.actorIdColumnIndex:\n                        case getSheetSelectFromSetClauseResult.actorRecordIdColumnIndex:\n                        case getSheetSelectFromSetClauseResult.repositoryIdColumnIndex:\n                            continue;\n                    }\n                    const dbColumn = getSheetSelectFromSetClauseResult\n                        .selectClause[i].dbColumn;\n                    const value = recordToUpdate[i];\n                    this.recordHistoryDuo.addOldValue(recordHistory, dbColumn, value);\n                }\n            }\n        }\n        return [recordHistoryMapByRecordId, getSheetSelectFromSetClauseResult];\n    }\n    async addNewValueHistory(jsonUpdate, recordHistoryMapByRecordId, systemWideOperationId, repositorySheetSelectInfo, errorPrefix, transaction, context) {\n        const qEntity = this.airportDatabase.qApplications[context.dbEntity.applicationVersion.application.index][context.dbEntity.name];\n        const sheetQuery = new SheetQuery({\n            from: [\n                qEntity\n            ],\n            select: [],\n            where: qEntity[repositoryEntity.systemWideOperationId]\n                .equals(systemWideOperationId)\n        });\n        let portableSelect = this.queryFacade.getPortableQuery(sheetQuery, QueryResultType.SHEET, context);\n        const resultSetIndexByColumnIndex = new Map();\n        const selectDbColumns = [];\n        let i = 0;\n        for (const qField of repositorySheetSelectInfo.selectClause) {\n            const dbColumn = qField.dbColumn;\n            selectDbColumns.push(dbColumn);\n            resultSetIndexByColumnIndex.set(dbColumn.index, i);\n            i++;\n        }\n        const internalFragments = {\n            SELECT: selectDbColumns\n        };\n        const updatedRecords = await transaction.find(portableSelect, internalFragments, context);\n        const { recordsByRepositoryId, repositoryIdSet } = this.groupRecordsByRepository(updatedRecords, repositorySheetSelectInfo);\n        for (const repositoryId of repositoryIdSet) {\n            const recordsForRepositoryId = recordsByRepositoryId[repositoryId];\n            for (const updatedRecord of recordsForRepositoryId) {\n                const repositoryId = updatedRecord[resultSetIndexByColumnIndex.get(repositorySheetSelectInfo.repositoryIdColumnIndex)];\n                const actorId = updatedRecord[resultSetIndexByColumnIndex.get(repositorySheetSelectInfo.actorIdColumnIndex)];\n                const actorRecordId = updatedRecord[resultSetIndexByColumnIndex.get(repositorySheetSelectInfo.actorRecordIdColumnIndex)];\n                const recordHistory = recordHistoryMapByRecordId[repositoryId][actorId][actorRecordId];\n                for (const columnName in jsonUpdate.S) {\n                    const dbColumn = context.dbEntity.columnMap[columnName];\n                    const value = updatedRecord[resultSetIndexByColumnIndex.get(dbColumn.index)];\n                    if (value === undefined) {\n                        throw new Error(errorPrefix + `Values cannot be 'undefined'.`);\n                    }\n                    if (dbColumn.notNull && value === null) {\n                        throw new Error(errorPrefix + `Column '${dbColumn.entity.name}'.'${dbColumn.name}' is NOT NULL\r\n\t\t\t\t\t\tand cannot have NULL values.`);\n                    }\n                    this.recordHistoryDuo.addNewValue(recordHistory, dbColumn, value);\n                }\n            }\n        }\n    }\n    groupRecordsByRepository(records, repositorySheetSelectInfo) {\n        const recordsByRepositoryId = {};\n        const repositoryIdSet = new Set();\n        for (const recordToUpdate of records) {\n            const repositoryId = recordToUpdate[repositorySheetSelectInfo.repositoryIdColumnIndex];\n            repositoryIdSet.add(repositoryId);\n            const recordsForRepositoryId = ensureChildArray(recordsByRepositoryId, repositoryId);\n            recordsForRepositoryId.push(recordToUpdate);\n        }\n        return {\n            recordsByRepositoryId,\n            repositoryIdSet\n        };\n    }\n};\n__decorate([\n    Inject()\n], UpdateManager.prototype, \"airportDatabase\", void 0);\n__decorate([\n    Inject()\n], UpdateManager.prototype, \"applicationUtils\", void 0);\n__decorate([\n    Inject()\n], UpdateManager.prototype, \"fieldUtils\", void 0);\n__decorate([\n    Inject()\n], UpdateManager.prototype, \"historyManager\", void 0);\n__decorate([\n    Inject()\n], UpdateManager.prototype, \"operationHistoryDuo\", void 0);\n__decorate([\n    Inject()\n], UpdateManager.prototype, \"queryFacade\", void 0);\n__decorate([\n    Inject()\n], UpdateManager.prototype, \"queryUtils\", void 0);\n__decorate([\n    Inject()\n], UpdateManager.prototype, \"recordHistoryDuo\", void 0);\n__decorate([\n    Inject()\n], UpdateManager.prototype, \"relationManager\", void 0);\n__decorate([\n    Inject()\n], UpdateManager.prototype, \"repositoryTransactionHistoryDuo\", void 0);\n__decorate([\n    Inject()\n], UpdateManager.prototype, \"sequenceGenerator\", void 0);\nUpdateManager = __decorate([\n    Injected()\n], UpdateManager);\nexport { UpdateManager };\n//# sourceMappingURL=UpdateManager.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nlet CascadeGraphVerifier = class CascadeGraphVerifier {\n    verify(root, context) {\n        if (!(root instanceof Array)) {\n            root = [root];\n        }\n        // TODO: validate the rules specified in the graph\n        // The graph will be defined via a @Save({\n        //\t...RULES\n        //})\n        // decorator\n        return root;\n    }\n};\nCascadeGraphVerifier = __decorate([\n    Injected()\n], CascadeGraphVerifier);\nexport { CascadeGraphVerifier };\n//# sourceMappingURL=CascadeGraphVerifier.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { ensureChildArray, EntityRelationType } from '@airport/ground-control';\n/*\n * Takes a (potentially) interconnected entity graph and returns\n * an array of entities to be operated on, in a order that is valid\n * for insertion (with all needed new ids being inserted in an order\n * that will work).\n */\nlet DependencyGraphResolver = class DependencyGraphResolver {\n    getOperationsInOrder(entities, context) {\n        const unorderedDependencies = this.getEntitiesToPersist(entities, [], [], context);\n        this.resolveCircularDependencies(unorderedDependencies, context);\n        const orderedDependencies = this.orderEntitiesToPersist(unorderedDependencies, context);\n        const operationNodes = this.optimizePersistOperations(orderedDependencies, context);\n        return this.ensureUpdatesAreGroupedCorrectly(operationNodes, context);\n    }\n    getEntitiesToPersist(entities, operatedOnEntities, operatedOnPassThroughs, context, dependsOn, dependency, deleteByCascade = false) {\n        let allProcessedNodes = [];\n        const dbEntity = context.dbEntity;\n        for (const entity of entities) {\n            /*\n             * A passed in graph has either entities to be saved or\n             * entity stubs that are needed structurally to get to\n             * other entities (or parentIds in case part of an id\n             * actually resides in a nested object that that object\n             * has no associated operations or child entities of\n             * it's own).\n             */\n            const { isCreate, isDelete, isParentId, isPassThrough, isStub, isUpdate } = this.entityStateManager\n                .getEntityStateTypeAsFlags(entity, dbEntity);\n            if (isStub) {\n                // No processing is needed\n                continue;\n            }\n            const operationUniqueId = this.entityStateManager.getOperationUniqueId(entity);\n            if (deleteByCascade && (isCreate || isUpdate)) {\n                throw new Error(`Cannot do a Create or Update operation on an entity that will be\r\ndeleted by cascading rules.  Entity: ${dbEntity.name}.\r\nEntity \"${this.entityStateManager.getUniqueIdFieldName()}\":  ${operationUniqueId}`);\n            }\n            let dependencyGraphNode;\n            if (isPassThrough) {\n                if (operatedOnPassThroughs[operationUniqueId]) {\n                    continue;\n                }\n                else {\n                    operatedOnPassThroughs[operationUniqueId] = true;\n                }\n            }\n            else {\n                dependencyGraphNode = operatedOnEntities[operationUniqueId];\n                let isExistingNode = false;\n                if (dependencyGraphNode) {\n                    isExistingNode = true;\n                }\n                else if (!isParentId && !deleteByCascade) {\n                    dependencyGraphNode = {\n                        circleTraversedFor: {},\n                        dbEntity,\n                        dependsOnByOUID: [],\n                        dependsOn: [],\n                        entity,\n                        isCreate,\n                        isDelete\n                    };\n                    allProcessedNodes.push(dependencyGraphNode);\n                    operatedOnEntities[operationUniqueId] = dependencyGraphNode;\n                }\n                if (!isParentId && !isDelete) {\n                    if (dependsOn && !isDelete) {\n                        const dependsOnOUID = this.entityStateManager.getOperationUniqueId(dependsOn.entity);\n                        if (!dependencyGraphNode.dependsOnByOUID[dependsOnOUID]\n                            && this.entityStateManager\n                                .getOperationUniqueId(dependencyGraphNode.entity) !== dependsOnOUID) {\n                            dependencyGraphNode.dependsOnByOUID[dependsOnOUID] = dependsOn;\n                            dependencyGraphNode.dependsOn.push(dependsOn);\n                        }\n                    }\n                    if (dependency) {\n                        if (!dependencyGraphNode.dependsOnByOUID[operationUniqueId]\n                            && this.entityStateManager\n                                .getOperationUniqueId(dependency.entity) !== operationUniqueId) {\n                            dependency.dependsOnByOUID[operationUniqueId] = dependencyGraphNode;\n                            dependency.dependsOn.push(dependencyGraphNode);\n                        }\n                    }\n                }\n                if (isExistingNode) {\n                    continue;\n                }\n            }\n            for (const dbProperty of context.dbEntity.properties) {\n                let relatedEntities;\n                let propertyValue = entity[dbProperty.name];\n                if (!propertyValue || typeof propertyValue !== 'object'\n                    || !(dbProperty.relation && dbProperty.relation.length)) {\n                    continue;\n                }\n                let fromDependencyForChild = null;\n                let isDependency = false;\n                let childDeleteByCascade = deleteByCascade || isDelete;\n                const dbRelation = dbProperty.relation[0];\n                switch (dbRelation.relationType) {\n                    // Relation is an entity that this entity depends on\n                    case EntityRelationType.MANY_TO_ONE:\n                        childDeleteByCascade = false;\n                        // TODO: see if there is a cleaner way to escape nested Actor and Repository records\n                        if (dbEntity.isRepositoryEntity && (dbProperty.name === 'repository'\n                            || dbProperty.name === 'actor')\n                            && !propertyValue[this.entityStateManager.getStateFieldName()]) {\n                            continue;\n                        }\n                        const parentState = this.entityStateManager\n                            .getEntityStateTypeAsFlags(propertyValue, dbRelation.relationEntity);\n                        if (parentState.isParentId) {\n                            continue;\n                        }\n                        if (parentState.isDelete) {\n                            if (isPassThrough) {\n                                // Automatically delete all contained records\n                                this.entityStateManager.markForDeletion(entity);\n                            }\n                            else if (!isDelete) {\n                                throw new Error(`Cannot delete an entity without removing all references to it.\r\n\t\t\t\t\t\t\t\tFound a reference in ${dbEntity.name}.${dbProperty.name}.\r\n\t\t\t\t\t\t\t\tEntity \"${this.entityStateManager.getUniqueIdFieldName()}\":  ${operationUniqueId}`);\n                            }\n                            else {\n                                // Prune this entry\n                                if (!deleteByCascade) {\n                                    if (dependency) {\n                                        dependency.dependsOn.pop();\n                                    }\n                                    allProcessedNodes.pop();\n                                }\n                                deleteByCascade = true;\n                            }\n                        }\n                        if (parentState.isCreate) {\n                            isDependency = true;\n                        }\n                        // Do not persist actor or repository, they\n                        // are created separately\n                        relatedEntities = [propertyValue];\n                        break;\n                    // Relation is an array of entities that depend in this entity\n                    case EntityRelationType.ONE_TO_MANY:\n                        if (isCreate) {\n                            fromDependencyForChild = dependencyGraphNode;\n                        }\n                        // Nested deletions wil be automatically pruned in recursive calls\n                        relatedEntities = propertyValue;\n                        break;\n                }\n                if (relatedEntities) {\n                    const dbEntity = dbRelation.relationEntity;\n                    const previousDbEntity = context.dbEntity;\n                    context.dbEntity = dbEntity;\n                    const childDependencyLinkedNodes = this.getEntitiesToPersist(relatedEntities, operatedOnEntities, operatedOnPassThroughs, context, fromDependencyForChild, !isParentId && !isDelete && isDependency ? dependencyGraphNode : null, childDeleteByCascade);\n                    allProcessedNodes = allProcessedNodes.concat(childDependencyLinkedNodes);\n                    context.dbEntity = previousDbEntity;\n                }\n            } // for properties\n        } // for entities\n        return allProcessedNodes;\n    }\n    resolveCircularDependencies(unorderedDependencies, context) {\n        for (const node of unorderedDependencies) {\n            const nodeOUID = this.entityStateManager.getOperationUniqueId(node.entity);\n            this.resolveCircularDependenciesForNode(node, nodeOUID, node, context);\n        }\n    }\n    resolveCircularDependenciesForNode(node, nodeOUID, currentlyTraversedNode, context, nodePath = []) {\n        if (!currentlyTraversedNode.dependsOn\n            || currentlyTraversedNode.circleTraversedFor[nodeOUID]) {\n            return;\n        }\n        currentlyTraversedNode.circleTraversedFor[nodeOUID] = true;\n        for (let i = currentlyTraversedNode.dependsOn.length - 1; i >= 0; i--) {\n            const dependency = currentlyTraversedNode.dependsOn[i];\n            const dependencyOUID = this.entityStateManager\n                .getOperationUniqueId(dependency.entity);\n            if (dependencyOUID === nodeOUID) {\n                let entityPath = [];\n                for (let pathNode of nodePath) {\n                    let entityLongName = pathNode.dbEntity.applicationVersion.application.name + ':' + pathNode.dbEntity.name;\n                    entityPath.push(entityLongName);\n                }\n                let entityLongName = dependency.dbEntity.applicationVersion.application.name + ':' + dependency.dbEntity.name;\n                entityPath.push(entityLongName);\n                entityLongName = nodePath[0].dbEntity.applicationVersion.application.name + ':' + nodePath[0].dbEntity.name;\n                throw new Error(`Found a circular dependency in\r\n\t\t\t\t\t${entityPath.join(' -> ')}\r\n\t\t\t\t\t`);\n            }\n            nodePath.push(dependency);\n            this.resolveCircularDependenciesForNode(node, nodeOUID, dependency, context, nodePath);\n            nodePath.pop();\n        }\n    }\n    orderEntitiesToPersist(unorderedDependencies, context) {\n        let orderedNodes = [];\n        let processedNodes = [];\n        while (orderedNodes.length < unorderedDependencies.length) {\n            for (const node of unorderedDependencies) {\n                const entityUid = this.entityStateManager\n                    .getOperationUniqueId(node.entity);\n                if (processedNodes[entityUid]) {\n                    continue;\n                }\n                let nodeProcessed = true;\n                for (const dependency of node.dependsOn) {\n                    const dependencyUid = this.entityStateManager\n                        .getOperationUniqueId(dependency.entity);\n                    // If a dependency is not yet processed (and is possibly has\n                    // other dependencies of it's own)\n                    if (!processedNodes[dependencyUid]) {\n                        nodeProcessed = false;\n                        break;\n                    }\n                }\n                if (nodeProcessed) {\n                    processedNodes[entityUid] = node;\n                    orderedNodes.push(node);\n                }\n            }\n        }\n        return orderedNodes;\n    }\n    // Group alike operations together, where possible\n    optimizePersistOperations(orderedDependencies, context) {\n        let operationNodes = [];\n        let processedNodes = [];\n        let operationsByApplicationIndex = [];\n        for (const node of orderedDependencies) {\n            const dbEntity = node.dbEntity;\n            const applicationOperationNodes = ensureChildArray(operationsByApplicationIndex, dbEntity.applicationVersion.application.index);\n            let entityOperations = applicationOperationNodes[dbEntity.index];\n            if (!entityOperations) {\n                entityOperations = {\n                    create: [],\n                    delete: [],\n                    update: []\n                };\n                applicationOperationNodes[dbEntity.index] = entityOperations;\n            }\n            let operations = [];\n            if (node.isCreate) {\n                operations = entityOperations.create;\n            }\n            else if (node.isDelete) {\n                operations = entityOperations.delete;\n            }\n            else {\n                operations = entityOperations.update;\n            }\n            let operation;\n            if (!operations.length) {\n                operation = {\n                    dbEntity,\n                    entities: [],\n                    isCreate: node.isCreate,\n                    isDelete: node.isDelete,\n                };\n                operations.push(operation);\n                operationNodes.push(operation);\n            }\n            else {\n                operation = operations[operations.length - 1];\n            }\n            // For each node traverse its dependencies\n            // if it has dependencies that haven't been processed yet\n            // then it can't be combined with an earlier alike operation\n            // on the same entity\n            let canBeCombined = true;\n            for (const dependency of node.dependsOn) {\n                const dependencyUid = this.entityStateManager\n                    .getOperationUniqueId(dependency.entity);\n                const operationUniqueId = this.entityStateManager.getOperationUniqueId(dependency.entity);\n                if (!processedNodes[dependencyUid]) {\n                    canBeCombined = false;\n                    break;\n                }\n            }\n            if (!canBeCombined && operation.entities.length) {\n                operation = {\n                    dbEntity,\n                    entities: [],\n                    isCreate: node.isCreate,\n                    isDelete: node.isDelete,\n                };\n                operations.push(operation);\n                operationNodes.push(operation);\n            }\n            operation.entities.push(node.entity);\n        }\n        return operationNodes;\n    }\n    /**\n     *\n     * @param operationNodes\n     * @param context\n     */\n    ensureUpdatesAreGroupedCorrectly(operationNodes, context) {\n        // TODO: group related updates ONLY if all updates field values are\n        // the same\n        // throw new Error('Not Implemented.')\n        return operationNodes;\n    }\n};\n__decorate([\n    Inject()\n], DependencyGraphResolver.prototype, \"entityStateManager\", void 0);\nDependencyGraphResolver = __decorate([\n    Injected()\n], DependencyGraphResolver);\nexport { DependencyGraphResolver };\n//# sourceMappingURL=DependencyGraphResolver.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { EntityRelationType } from '@airport/ground-control';\n/**\n * Takes a serialized object tree and reconstructs a (potentially)\n * interlinked object graph.\n */\nlet EntityGraphReconstructor = class EntityGraphReconstructor {\n    restoreEntityGraph(root, context) {\n        const entitiesByOperationIndex = [];\n        const processedEntitySet = new Set();\n        const rootCopy = this.linkEntityGraph(root, entitiesByOperationIndex, processedEntitySet, context);\n        for (let i = 1; i < entitiesByOperationIndex.length; i++) {\n            const entity = entitiesByOperationIndex[i];\n            if (!entity) {\n                throw new Error(`Missing entity for\r\n\"${this.entityStateManager.getUniqueIdFieldName()}\": ${i}`);\n            }\n        }\n        context.lastOUID = entitiesByOperationIndex.length - 1;\n        return rootCopy;\n    }\n    linkEntityGraph(currentEntities, entitiesByOperationIndex, processedEntitySet, context) {\n        const dbEntity = context.dbEntity;\n        const results = [];\n        for (const entity of currentEntities) {\n            if (!entity) {\n                throw new Error(`Null root entities and @OneToMany arrays with null entities are not allowed`);\n            }\n            const operationUniqueId = this.entityStateManager.getOperationUniqueId(entity);\n            if (!operationUniqueId || typeof operationUniqueId !== 'number'\n                || operationUniqueId < 1) {\n                throw new Error(`Invalid entity Unique Id Field\r\n\"${this.entityStateManager.getUniqueIdFieldName()}\": ${operationUniqueId}.`);\n            }\n            const previouslyFoundEntity = entitiesByOperationIndex[operationUniqueId];\n            if (processedEntitySet.has(entity)) {\n                if (!previouslyFoundEntity) {\n                    throw new Error(`Entity has been processed but is not found by operationUniqueId`);\n                }\n                results.push(previouslyFoundEntity);\n                continue;\n            }\n            processedEntitySet.add(entity);\n            /*\n             * A passed in graph has either entities to be saved or\n             * entity stubs that are needed structurally to get to\n             * other entities.\n             */\n            const { isParentId, isStub } = this.entityStateManager\n                .getEntityStateTypeAsFlags(entity, dbEntity);\n            let entityCopy;\n            if (previouslyFoundEntity) {\n                if (!this.entityStateManager.isStub(previouslyFoundEntity)) {\n                    if (!isStub) {\n                        throw new Error(`More than 1 non-Stub object found in input\r\nfor \"${this.entityStateManager.getUniqueIdFieldName()}\": ${operationUniqueId}`);\n                    }\n                }\n                else {\n                    if (!isStub) {\n                        this.entityStateManager.copyEntityState(entity, previouslyFoundEntity);\n                    }\n                }\n                entityCopy = previouslyFoundEntity;\n            }\n            else {\n                entityCopy = {};\n                entityCopy[this.entityStateManager.getUniqueIdFieldName()]\n                    = operationUniqueId;\n                entityCopy[this.entityStateManager.getStateFieldName()]\n                    = this.entityStateManager.getEntityState(entity);\n                this.entityStateManager.copyEntityState(entity, entityCopy);\n                entitiesByOperationIndex[operationUniqueId]\n                    = entityCopy;\n            }\n            for (const dbProperty of dbEntity.properties) {\n                let propertyValue = entity[dbProperty.name];\n                if (propertyValue === undefined) {\n                    continue;\n                }\n                if (dbProperty.relation && dbProperty.relation.length) {\n                    const dbRelation = dbProperty.relation[0];\n                    let relatedEntities = propertyValue;\n                    let isManyToOne = false;\n                    this.assertRelationValueIsAnObject(propertyValue, dbProperty);\n                    switch (dbRelation.relationType) {\n                        case EntityRelationType.MANY_TO_ONE:\n                            isManyToOne = true;\n                            this.assertManyToOneNotArray(propertyValue, dbProperty);\n                            relatedEntities = [propertyValue];\n                            break;\n                        case EntityRelationType.ONE_TO_MANY:\n                            this.assertOneToManyIsArray(propertyValue, dbProperty);\n                            if (isParentId) {\n                                throw new Error(`Parent Ids may not contain any @OneToMany relations`);\n                            }\n                            break;\n                        default:\n                            throw new Error(`Unexpected relation type ${dbRelation.relationType}\r\nfor ${dbEntity.name}.${dbProperty.name}`);\n                    } // switch dbRelation.relationType\n                    const previousDbEntity = context.dbEntity;\n                    const previousDbApplication = previousDbEntity.applicationVersion.application;\n                    const propertyDbApplication = dbRelation.relationEntity.applicationVersion.application;\n                    if (propertyDbApplication.domain.name !== 'air'\n                        && previousDbApplication.fullName !== propertyDbApplication.fullName) {\n                        // If a child entity is in a different application it won't be processed\n                        // the calling application should call the API of the other application\n                        // explicitly so that the application logic may be run\n                        continue;\n                    }\n                    context.dbEntity = dbRelation.relationEntity;\n                    let propertyCopyValue;\n                    if (propertyValue) {\n                        propertyCopyValue = this.linkEntityGraph(relatedEntities, entitiesByOperationIndex, processedEntitySet, context);\n                        if (isManyToOne) {\n                            propertyCopyValue = propertyCopyValue[0];\n                            if (isParentId) {\n                                if (!this.entityStateManager.isParentId(propertyCopyValue)) {\n                                    throw new Error(`Parent Ids may only contain @ManyToOne relations\r\nthat are themselves Parent Ids.`);\n                                }\n                            }\n                        }\n                        else {\n                            if (isParentId) {\n                                throw new Error(`Parent Ids may NOT contain @OneToMany colletions.`);\n                            }\n                        } // if (isManyToOne\n                        // if !isManyToOne - nothing to do\n                    } // if (propertyValue\n                    propertyValue = propertyCopyValue;\n                    context.dbEntity = previousDbEntity;\n                } // if (dbProperty.relation\n                else {\n                    if ((isParentId || isStub) && !dbProperty.isId) {\n                        // TODO: can a ParentId comprise of fields that are not part of it's own Id\n                        // but are a part of Parent's Id?\n                        throw new Error(`Deletes, ParentIds and Stubs may only contain @Id properties or relations.`);\n                    }\n                } // else (dbProperty.relation\n                entityCopy[dbProperty.name] = propertyValue;\n            } // for (const dbProperty\n            results.push(entityCopy);\n        } // for (const entity\n        return results;\n    }\n    assertRelationValueIsAnObject(relationValue, dbProperty) {\n        if (relationValue !== null && relationValue !== undefined &&\n            (typeof relationValue != 'object' || relationValue instanceof Date)) {\n            throw new Error(`Unexpected value in relation property: ${dbProperty.name}, \r\n\t\t\t\tof entity ${dbProperty.entity.name}`);\n        }\n    }\n    assertManyToOneNotArray(relationValue, dbProperty) {\n        if (relationValue instanceof Array) {\n            throw new Error(`@ManyToOne relation cannot be an array. Relation property: ${dbProperty.name}, \r\nof entity ${dbProperty.entity.name}`);\n        }\n    }\n    assertOneToManyIsArray(relationValue, dbProperty) {\n        if (relationValue !== null\n            && relationValue !== undefined\n            && !(relationValue instanceof Array)) {\n            throw new Error(`@OneToMany relation must be an array. Relation property: ${dbProperty.name}, \r\nof entity ${dbProperty.entity.name}\\``);\n        }\n    }\n};\n__decorate([\n    Inject()\n], EntityGraphReconstructor.prototype, \"entityStateManager\", void 0);\nEntityGraphReconstructor = __decorate([\n    Injected()\n], EntityGraphReconstructor);\nexport { EntityGraphReconstructor };\n//# sourceMappingURL=EntityGraphReconstructor.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nlet OperationContextLoader = class OperationContextLoader {\n    async ensure(context) {\n    }\n    ensureSync(context) {\n    }\n};\nOperationContextLoader = __decorate([\n    Injected()\n], OperationContextLoader);\nexport { OperationContextLoader };\n//# sourceMappingURL=OperationContext.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { and, Delete, InsertValues, or, UpdateProperties, valuesEqual } from '@airport/air-traffic-control';\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { EntityRelationType } from '@airport/ground-control';\n/**\n * Created by Papa on 11/15/2016.\n */\nlet OperationManager = class OperationManager {\n    /**\n     * Transactional context must have been started by the time this method is called.\n     *\n     * @param qEntity\n     * @param entity\n     */\n    async performSave(entities, actor, transaction, rootTransaction, context) {\n        let entityGraph;\n        context.isSaveOperation = true;\n        if (context.internal) {\n            if (entities instanceof Array) {\n                entityGraph = entities;\n            }\n            else {\n                entityGraph = [entities];\n            }\n        }\n        else {\n            const verifiedTree = this.cascadeGraphVerifier\n                .verify(entities, context);\n            entityGraph = this.entityGraphReconstructor\n                .restoreEntityGraph(verifiedTree, context);\n        }\n        await this.structuralEntityValidator.validate(entityGraph, [], context);\n        const operations = this.dependencyGraphResolver\n            .getOperationsInOrder(entityGraph, context);\n        const rootDbEntity = context.dbEntity;\n        let saveActor = {\n            id: actor.id,\n            uuId: actor.uuId,\n            user: actor.user ? {\n                id: actor.user.id\n            } : null\n        };\n        let newRepository;\n        if (context.newRepository) {\n            newRepository = {\n                id: context.newRepository.id,\n                createdAt: context.newRepository.createdAt,\n                uuId: context.newRepository.uuId,\n                ageSuitability: context.newRepository.ageSuitability,\n                source: context.newRepository.source,\n                ownerActor: {\n                    id: actor.id,\n                    uuId: actor.uuId,\n                    user: actor.user ? {\n                        id: actor.user.id\n                    } : null\n                }\n            };\n        }\n        const saveResult = {\n            actor: saveActor,\n            created: {},\n            newRepository,\n            deleted: {},\n            updated: {},\n        };\n        for (const operation of operations) {\n            context.dbEntity = operation.dbEntity;\n            if (operation.isCreate) {\n                await this.internalCreate(operation.entities, actor, transaction, rootTransaction, saveResult, context, true);\n            }\n            else if (operation.isDelete) {\n                await this.internalDelete(operation.entities, actor, transaction, rootTransaction, saveResult, context);\n            }\n            else {\n                await this.internalUpdate(operation.entities, actor, transaction, rootTransaction, saveResult, context);\n            }\n        }\n        context.dbEntity = rootDbEntity;\n        return saveResult;\n    }\n    async internalCreate(entities, actor, transaction, rootTransaction, saveResult, context, ensureGeneratedValues) {\n        const qEntity = this.airportDatabase.qApplications[context.dbEntity.applicationVersion.application.index][context.dbEntity.name];\n        let rawInsert = {\n            insertInto: qEntity,\n            columns: this.qMetadataUtils.getAllInsertableColumns(qEntity),\n            values: []\n        };\n        let columnIndexesInValues = [];\n        rawInsert.columns.forEach((qField, index) => {\n            columnIndexesInValues[qField.dbColumn.index] = index;\n        });\n        for (const entity of entities) {\n            let valuesFragment = [];\n            for (const dbProperty of context.dbEntity.properties) {\n                let newValue = entity[dbProperty.name];\n                if (newValue === undefined) {\n                    newValue = null;\n                }\n                if (dbProperty.relation && dbProperty.relation.length) {\n                    const dbRelation = dbProperty.relation[0];\n                    switch (dbRelation.relationType) {\n                        case EntityRelationType.MANY_TO_ONE:\n                            this.applicationUtils.forEachColumnOfRelation(dbRelation, entity, (dbColumn, columnValue, _propertyNameChains) => {\n                                if (dbColumn.isGenerated) {\n                                    return;\n                                }\n                                valuesFragment[columnIndexesInValues[dbColumn.index]]\n                                    = columnValue === undefined ? null : columnValue;\n                            }, false);\n                            break;\n                        case EntityRelationType.ONE_TO_MANY:\n                            break;\n                        default:\n                            throw new Error(`Unknown relationType '${dbRelation.relationType}' \r\n\t\t\t\t\t\tfor '${context.dbEntity.name}.${dbProperty.name}'.`);\n                    }\n                }\n                else {\n                    let column = dbProperty.propertyColumns[0].column;\n                    if (!column.isGenerated) {\n                        valuesFragment[columnIndexesInValues[column.index]] = newValue;\n                    }\n                }\n            }\n            rawInsert.values.push(valuesFragment);\n        }\n        const insertValues = new InsertValues(rawInsert);\n        if (rawInsert.values.length) {\n            const generatedColumns = context.dbEntity.columns.filter(column => column.isGenerated);\n            if (generatedColumns.length && ensureGeneratedValues) {\n                const portableQuery = this.queryFacade\n                    .getPortableQuery(insertValues, null, context);\n                const idsAndGeneratedValues = await this.insertManager\n                    .insertValuesGetIds(portableQuery, actor, transaction, rootTransaction, context);\n                for (let i = 0; i < entities.length; i++) {\n                    const entity = entities[i];\n                    const entitySaveResult = {};\n                    saveResult.created[this.entityStateManager.getOperationUniqueId(entity)] = entitySaveResult;\n                    for (const generatedColumn of generatedColumns) {\n                        // Return index for generated column values is: DbColumn.index\n                        const generatedPropertyName = generatedColumn.propertyColumns[0].property.name;\n                        const generatedPropertyValue = idsAndGeneratedValues[i][generatedColumn.index];\n                        entity[generatedPropertyName] = generatedPropertyValue;\n                        entitySaveResult[generatedPropertyName] = generatedPropertyValue;\n                    }\n                }\n            }\n            else {\n                const portableQuery = this.queryFacade\n                    .getPortableQuery(insertValues, null, context);\n                await this.insertManager.insertValues(portableQuery, actor, transaction, rootTransaction, context, ensureGeneratedValues);\n                for (let i = 0; i < entities.length; i++) {\n                    const entity = entities[i];\n                    saveResult.created[this.entityStateManager.getOperationUniqueId(entity)] = true;\n                }\n            }\n        }\n    }\n    /**\n     * On an update operation, can a nested create contain an update?\n     * Via:\n     *  OneToMany:\n     *    Yes, if the child entity is itself in the update cache\n     *  ManyToOne:\n     *    Cascades do not travel across ManyToOne\n     */\n    async internalUpdate(entities, actor, transaction, rootTransaction, saveResult, context) {\n        const qEntity = this.airportDatabase.qApplications[context.dbEntity.applicationVersion.application.index][context.dbEntity.name];\n        for (const entity of entities) {\n            const setFragment = {};\n            const idWhereFragments = [];\n            let runUpdate = false;\n            const originalEntity = this.entityStateManager.getOriginalValues(entity);\n            if (!originalEntity) {\n                continue;\n            }\n            for (const dbProperty of context.dbEntity.properties) {\n                const updatedValue = entity[dbProperty.name];\n                if (!dbProperty.relation || !dbProperty.relation.length) {\n                    const originalValue = originalEntity[dbProperty.name];\n                    if (dbProperty.isId) {\n                        // For an id property, the value is guaranteed to be the same (and not empty) -\n                        // cannot entity-update id fields\n                        idWhereFragments.push(qEntity[dbProperty.name]\n                            .equals(updatedValue));\n                    }\n                    else if (!valuesEqual(originalValue, updatedValue)) {\n                        setFragment[dbProperty.name] = updatedValue;\n                        saveResult.updated[this.entityStateManager.getOperationUniqueId(entity)] = true;\n                        runUpdate = true;\n                    }\n                }\n                else {\n                    const dbRelation = dbProperty.relation[0];\n                    switch (dbRelation.relationType) {\n                        case EntityRelationType.MANY_TO_ONE:\n                            let propertyOriginalValue = originalEntity[dbProperty.name];\n                            this.applicationUtils.forEachColumnOfRelation(dbRelation, entity, (_dbColumn, value, propertyNameChains) => {\n                                let originalColumnValue = propertyOriginalValue;\n                                let columnValue = value;\n                                let valuePropertyNameChain = value;\n                                for (const childPropertyName of propertyNameChains[0]) {\n                                    if (originalColumnValue instanceof Object\n                                        && originalColumnValue[childPropertyName]) {\n                                        originalColumnValue = originalColumnValue[childPropertyName];\n                                    }\n                                    else {\n                                        originalColumnValue = null;\n                                    }\n                                    if (columnValue instanceof Object\n                                        && columnValue[childPropertyName]) {\n                                        columnValue = columnValue[childPropertyName];\n                                        valuePropertyNameChain.push(childPropertyName);\n                                    }\n                                    else {\n                                        columnValue = null;\n                                    }\n                                }\n                                if (dbProperty.isId) {\n                                    let idQProperty = qEntity;\n                                    for (const propertyNameLink of propertyNameChains[0]) {\n                                        idQProperty = idQProperty[propertyNameLink];\n                                    }\n                                    // For an id property, the value is guaranteed to be the same (and not\n                                    // empty) - cannot entity-update id fields\n                                    idWhereFragments.push(idQProperty.equals(value));\n                                }\n                                else if (!valuesEqual(originalColumnValue, columnValue)) {\n                                    let currentSetFragment = setFragment;\n                                    for (let i = 0; i < valuePropertyNameChain.length - 1; i++) {\n                                        const childPropertyName = valuePropertyNameChain[i];\n                                        if (!currentSetFragment[childPropertyName]) {\n                                            currentSetFragment[childPropertyName] = {};\n                                        }\n                                        currentSetFragment = currentSetFragment[childPropertyName];\n                                    }\n                                    currentSetFragment[valuePropertyNameChain.length - 1] = columnValue;\n                                    saveResult.updated[this.entityStateManager.getOperationUniqueId(entity)] = true;\n                                    runUpdate = true;\n                                }\n                            }, dbProperty.isId);\n                            break;\n                        case EntityRelationType.ONE_TO_MANY:\n                            break;\n                        default:\n                            throw new Error(`Unknown relationType '${dbRelation.relationType}' \r\n\t\t\t\t\t\tfor '${context.dbEntity.name}.${dbProperty.name}'.`);\n                    }\n                }\n            }\n            if (runUpdate) {\n                let whereFragment;\n                if (idWhereFragments.length > 1) {\n                    whereFragment = and(...idWhereFragments);\n                }\n                else {\n                    whereFragment = idWhereFragments[0];\n                }\n                const rawUpdate = {\n                    update: qEntity,\n                    set: setFragment,\n                    where: whereFragment\n                };\n                const update = new UpdateProperties(rawUpdate);\n                const portableQuery = this.queryFacade.getPortableQuery(update, null, context);\n                await this.updateManager.updateValues(portableQuery, actor, transaction, rootTransaction, context);\n            }\n        }\n    }\n    async internalDelete(entities, actor, transaction, rootTransaction, saveResult, context) {\n        const dbEntity = context.dbEntity;\n        const qEntity = this.airportDatabase.qApplications[dbEntity.applicationVersion.application.index][dbEntity.name];\n        const idWhereFragments = [];\n        const valuesMapByColumn = [];\n        let entityIdWhereClauses = [];\n        for (const entity of entities) {\n            for (let propertyName in entity) {\n                if (!entity.hasOwnProperty(propertyName)) {\n                    continue;\n                }\n                const dbProperty = dbEntity.propertyMap[propertyName];\n                // Skip transient fields\n                if (!dbProperty) {\n                    continue;\n                }\n                const deletedValue = entity[propertyName];\n                let dbRelation;\n                if (dbProperty.relation && dbProperty.relation.length) {\n                    dbRelation = dbProperty.relation[0];\n                }\n                if (!dbRelation) {\n                    if (dbProperty.isId) {\n                        // For an id property, the value is guaranteed to be the same (and not empty) -\n                        // cannot entity-update id fields\n                        idWhereFragments.push(qEntity[propertyName].equals(deletedValue));\n                    }\n                }\n                else {\n                    switch (dbRelation.relationType) {\n                        case EntityRelationType.MANY_TO_ONE:\n                            this.applicationUtils.forEachColumnOfRelation(dbRelation, dbEntity, (dbColumn, value, propertyNameChains) => {\n                                if (dbProperty.isId && valuesMapByColumn[dbColumn.index] === undefined) {\n                                    let idQProperty = qEntity;\n                                    for (const propertyNameLink of propertyNameChains[0]) {\n                                        idQProperty = idQProperty[propertyNameLink];\n                                    }\n                                    // For an id property, the value is guaranteed to be the same (and not\n                                    // empty) - cannot entity-update id fields\n                                    idWhereFragments.push(idQProperty.equals(value));\n                                }\n                            }, false);\n                            break;\n                        case EntityRelationType.ONE_TO_MANY:\n                            break;\n                        default:\n                            throw new Error(`Unknown relationType '${dbRelation.relationType}' \r\n\t\t\t\t\t\tfor '${dbEntity.name}.${dbProperty.name}'.`);\n                    }\n                }\n            }\n            if (idWhereFragments.length > 1) {\n                entityIdWhereClauses.push(and(...idWhereFragments));\n            }\n            else {\n                entityIdWhereClauses.push(idWhereFragments[0]);\n            }\n            saveResult.deleted[this.entityStateManager.getOperationUniqueId(entity)] = true;\n        }\n        let where;\n        if (entityIdWhereClauses.length === 1) {\n            where = entityIdWhereClauses[0];\n        }\n        else {\n            where = or(...entityIdWhereClauses);\n        }\n        let rawDelete = {\n            deleteFrom: qEntity,\n            where\n        };\n        let deleteWhere = new Delete(rawDelete);\n        let portableQuery = this.queryFacade.getPortableQuery(deleteWhere, null, context);\n        await this.deleteManager.deleteWhere(portableQuery, actor, transaction, rootTransaction, context);\n    }\n};\n__decorate([\n    Inject()\n], OperationManager.prototype, \"airportDatabase\", void 0);\n__decorate([\n    Inject()\n], OperationManager.prototype, \"applicationUtils\", void 0);\n__decorate([\n    Inject()\n], OperationManager.prototype, \"cascadeGraphVerifier\", void 0);\n__decorate([\n    Inject()\n], OperationManager.prototype, \"deleteManager\", void 0);\n__decorate([\n    Inject()\n], OperationManager.prototype, \"dependencyGraphResolver\", void 0);\n__decorate([\n    Inject()\n], OperationManager.prototype, \"entityGraphReconstructor\", void 0);\n__decorate([\n    Inject()\n], OperationManager.prototype, \"entityStateManager\", void 0);\n__decorate([\n    Inject()\n], OperationManager.prototype, \"insertManager\", void 0);\n__decorate([\n    Inject()\n], OperationManager.prototype, \"qMetadataUtils\", void 0);\n__decorate([\n    Inject()\n], OperationManager.prototype, \"queryFacade\", void 0);\n__decorate([\n    Inject()\n], OperationManager.prototype, \"structuralEntityValidator\", void 0);\n__decorate([\n    Inject()\n], OperationManager.prototype, \"updateManager\", void 0);\nOperationManager = __decorate([\n    Injected()\n], OperationManager);\nexport { OperationManager };\n//# sourceMappingURL=OperationManager.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { EntityRelationType, EntityState, SQLDataType } from '@airport/ground-control';\nlet StructuralEntityValidator = class StructuralEntityValidator {\n    async validate(records, operatedOnEntityIndicator, context, fromOneToMany = false, parentRelationProperty = null, rootRelationRecord = null, parentRelationRecord = null) {\n        const dbEntity = context.dbEntity;\n        if (!dbEntity.idColumns.length) {\n            throw new Error(`Cannot run 'save' for entity '${dbEntity.name}' with no @Id(s).\r\n\t\t\t\t\tPlease use non-entity operations (like 'insert' or 'updateWhere') instead.`);\n        }\n        let haveRootRelationRecord = !!rootRelationRecord;\n        for (const record of records) {\n            if (!haveRootRelationRecord) {\n                rootRelationRecord = record;\n            }\n            const { isCreate, isParentId, isStub } = this.entityStateManager.getEntityStateTypeAsFlags(record, dbEntity);\n            if (isParentId) {\n                // No processing is needed (already covered by id check)\n                continue;\n            }\n            const operationUniqueId = this.entityStateManager.getOperationUniqueId(record);\n            const entityOperatedOn = !!operatedOnEntityIndicator[operationUniqueId];\n            if (entityOperatedOn) {\n                continue;\n            }\n            operatedOnEntityIndicator[operationUniqueId] = true;\n            let newRepositoryNeeded = false;\n            for (const dbProperty of dbEntity.properties) {\n                let propertyValue = record[dbProperty.name];\n                if (propertyValue === undefined && !isStub) {\n                    propertyValue = null;\n                    record[dbProperty.name] = propertyValue;\n                }\n                /*\n                 * It is possible for the @Id's of an entity to be in\n                 * a @ManyToOne, so we need to check\n                 */\n                if (dbProperty.relation && dbProperty.relation.length) {\n                    const dbRelation = dbProperty.relation[0];\n                    let relatedEntities = null;\n                    let relationIsOneToMany = false;\n                    let isRelationNullable = true;\n                    switch (dbRelation.relationType) {\n                        case EntityRelationType.MANY_TO_ONE:\n                            // Id columns are for the parent (currently processed) entity and must be\n                            // checked as part of this entity\n                            if (dbProperty.isId) {\n                                let isMissingRepositoryProperty = false;\n                                this.applicationUtils.forEachColumnOfRelation(dbRelation, record, (dbColumn, columnValue, _propertyNameChains) => {\n                                    if (dbColumn.notNull) {\n                                        isRelationNullable = false;\n                                    }\n                                    if (this.isRepositoryColumnAndNewRepositoryNeed(dbEntity, dbProperty, dbColumn, isCreate, record, columnValue, context)) {\n                                        isMissingRepositoryProperty = true;\n                                    }\n                                }, false);\n                                if (isMissingRepositoryProperty) {\n                                    if (!context.newRepository) {\n                                        await this.repositoryManager.createRepository(context.actor, context);\n                                        newRepositoryNeeded = true;\n                                    }\n                                    record[dbProperty.name] = context.newRepository;\n                                }\n                            }\n                            if (fromOneToMany) {\n                                const parentOneToManyElems = parentRelationProperty.relation[0].oneToManyElems;\n                                const parentMappedBy = parentOneToManyElems ? parentOneToManyElems.mappedBy : null;\n                                const mappedBy = dbRelation.manyToOneElems ? dbRelation.manyToOneElems.mappedBy : null;\n                                // NOTE: 'actor' or the 'repository' property may be automatically populated\n                                // in the entity by this.validateRelationColumn\n                                if (parentMappedBy === dbProperty.name\n                                    || mappedBy === parentRelationProperty.name) {\n                                    // Always fix to the parent record\n                                    record[dbProperty.name] = parentRelationRecord;\n                                    // if (!propertyValue && !entity[dbProperty.name]) {\n                                    // \t// The @ManyToOne side of the relationship is missing, add it\n                                    // \tentity[dbProperty.name] = parentRelationEntity\n                                    // }\n                                }\n                            }\n                            if (propertyValue) {\n                                if (propertyValue) {\n                                    relatedEntities = [propertyValue];\n                                }\n                                else if (!isRelationNullable) {\n                                    throw new Error(`Non-nullable relation ${dbEntity.name}.${dbProperty.name} does not have value assigned`);\n                                }\n                                else {\n                                    console.warn(`Probably OK: Nullable @ManyToOne ${dbEntity.name}.${dbProperty.name} does not have anything assigned.`);\n                                }\n                            }\n                            break;\n                        case EntityRelationType.ONE_TO_MANY:\n                            relationIsOneToMany = true;\n                            relatedEntities = propertyValue;\n                            break;\n                        default:\n                            throw new Error(`Unexpected relation type ${dbRelation.relationType}\r\nfor ${dbEntity.name}.${dbProperty.name}`);\n                    } // switch dbRelation.relationType\n                    if (relatedEntities && relatedEntities.length) {\n                        const previousDbEntity = context.dbEntity;\n                        context.dbEntity = dbRelation.relationEntity;\n                        this.validate(relatedEntities, operatedOnEntityIndicator, context, relationIsOneToMany, dbProperty, rootRelationRecord, record);\n                        context.dbEntity = previousDbEntity;\n                    }\n                } // if (dbProperty.relation // If is a relation property\n                else {\n                    const dbColumn = dbProperty.propertyColumns[0].column;\n                    if (dbProperty.isId) {\n                        const isIdColumnEmpty = this.applicationUtils.isIdEmpty(propertyValue);\n                        this.ensureIdValue(dbEntity, dbProperty, dbColumn, isCreate, isIdColumnEmpty);\n                    }\n                    else {\n                        if (isStub || isParentId) {\n                            if (propertyValue !== undefined) {\n                                throw new Error(`Unexpected non-@Id value Stub|ParentId|Deleted record.\r\nProperty: ${dbEntity.name}.${dbProperty.name}, with \"${this.entityStateManager.getUniqueIdFieldName()}\":  ${operationUniqueId}`);\n                            }\n                        }\n                    }\n                    this.ensureNonRelationalValue(dbProperty, dbColumn, propertyValue);\n                } // else (dbProperty.relation  // If not a relation property\n            } // for (const dbProperty of dbEntity.properties)\n            this.ensureRepositoryValidity(record, rootRelationRecord, parentRelationRecord, dbEntity, parentRelationProperty, isCreate, fromOneToMany, newRepositoryNeeded, context);\n        } // for (const record of entities)\n    }\n    ensureRepositoryValidity(record, rootRelationRecord, parentRelationRecord, dbEntity, parentRelationProperty, isCreate, fromOneToMany, newRepositoryNeeded, context) {\n        if (!dbEntity.isRepositoryEntity) {\n            return;\n        }\n        if (!parentRelationRecord) {\n            const originalValues = this.entityStateManager.getOriginalValues(record);\n            if (newRepositoryNeeded && originalValues && originalValues.repository\n                && originalValues.actor && originalValues.actorRecordId) {\n                const repositoryEntity = record;\n                repositoryEntity.originalRepository = originalValues.repository;\n                this.entityStateManager.markAsStub(repositoryEntity.originalRepository);\n                repositoryEntity.originalActor = originalValues.actor;\n                this.entityStateManager.markAsStub(repositoryEntity.originalActor);\n                repositoryEntity.originalActorRecordId = originalValues.actorRecordId;\n            }\n            return;\n        }\n        if (newRepositoryNeeded) {\n            throw new Error(`Error creating a new repository in a nested record:\r\nIn Entity: ${dbEntity.name}\r\nThat is a child of ${parentRelationProperty.entity.name} via ${parentRelationProperty.entity.name}.${parentRelationProperty.name}\r\n->\r\nWhen creating a new repository the top level record should be of the newly created repository.\r\n`);\n        }\n        // One to many get traversed as well, if it's in the input graph/tree\n        // it is assumed to be part of the same repository\n        // if (fromOneToMany) {\n        // \treturn\n        // }\n        let repositoryEntity = record;\n        // If the repositories of parent record and child record match\n        if (rootRelationRecord.repository.id === repositoryEntity.repository.id) {\n            // no further checks needed\n            return;\n        }\n        if (isCreate) {\n            throw new Error(`A newly created ${dbEntity.name} via ${dbEntity.name} record for repository id ${repositoryEntity.repository.id} (UUID: ${repositoryEntity.repository.id})\r\nis being assigned to repository id ${repositoryEntity.repository.id} (UUID: ${repositoryEntity.repository.id})\r\n\tThis is because it is being referenced via ${parentRelationProperty.entity.name}.${parentRelationProperty.name},\r\n\tfrom a record of repository id ${repositoryEntity.repository.id} (UUID: ${repositoryEntity.repository.id})\r\n\t\r\n\tIf you are manually creating a copy of a record in another repository, there is no need,\r\n\tAIRport automatically copies all records refrenced via @ManyToOne()s into the created/modified\r\n\trepository.\r\n\r\n\tOtherwise, did you mean to set this record's repository to the same one as the referencing record?`);\n        }\n        // If it doesn't then it is a reference to another repository - switch\n        // the record to the parent repository and set the originalRepositoryValue\n        repositoryEntity.originalRepository = repositoryEntity.repository;\n        repositoryEntity.repository = rootRelationRecord.repository;\n        // Aslo set originalActor and originalActorRecordId to look up the original record\n        repositoryEntity.originalActor = repositoryEntity.actor;\n        repositoryEntity.originalActorRecordId = repositoryEntity.actorRecordId;\n        // reset 'actor' and clear 'actorRecordId' to prevents unique constraint\n        // violation if multiple databases flip to the same exact record (independently)\n        repositoryEntity.actor = context.actor;\n        delete repositoryEntity.actorRecordId;\n        // Flip the state of this record to EntityState.CREATE this record now\n        // has to be created in the referencing repository\n        repositoryEntity[this.entityStateManager.getStateFieldName()] = EntityState.CREATE;\n        // NOTE: If the child record is not provided and it's an optional\n        // @ManyToOne() it will be treated as if no record is there.  That is\n        // probaby the only correct way to handle it and a warning is\n        // shown to the user in this case\n    }\n    isRepositoryColumnAndNewRepositoryNeed(dbEntity, dbProperty, dbColumn, isCreate, entity, columnValue, context) {\n        if (!dbColumn.idIndex && dbColumn.idIndex !== 0) {\n            return;\n        }\n        const isIdColumnEmpty = this.applicationUtils.isIdEmpty(columnValue);\n        if (!dbEntity.isRepositoryEntity) {\n            this.ensureIdValue(dbEntity, dbProperty, dbColumn, isCreate, isIdColumnEmpty);\n            return false;\n        }\n        if (!isIdColumnEmpty) {\n            if (isCreate) {\n                if (this.applicationUtils.isActorId(dbColumn.name)) {\n                    throw new Error(`Actor cannot be passed in for create Operations`);\n                }\n            }\n            return false;\n        }\n        if (!isCreate) {\n            throw new Error(`Ids must be populated in entities for non-Create operations`);\n        }\n        if (this.applicationUtils.isRepositoryId(dbColumn.name)) {\n            // Repository was not provided - use context's 'newRepository'\n            return true;\n        }\n        else if (this.applicationUtils.isActorId(dbColumn.name)) {\n            // Use context's 'actor'\n            entity[dbProperty.name] = context.actor;\n            return false;\n        }\n        else if (this.applicationUtils.isActorRecordId(dbColumn.name)) {\n            return false;\n        }\n        throw new Error(`Unexpected @Id column '${dbColumn.name}' in a Repository Entity.`);\n    }\n    ensureIdValue(dbEntity, dbProperty, dbColumn, isCreate, isIdColumnEmpty) {\n        if (dbColumn.isGenerated) {\n            if (isCreate && !isIdColumnEmpty) {\n                throw new Error(`@GeneratedValue() @Id() ${dbEntity.name}.${dbProperty.name},\r\ncolumn:  ${dbColumn.name}\r\nmust NOT have a value for entity Insert operation.`);\n            }\n            else if (!isCreate && isIdColumnEmpty) {\n                throw new Error(`@GeneratedValue() @Id() ${dbEntity.name}.${dbProperty.name} \r\ncolumn:  ${dbColumn.name}\r\nmust have a value for entity non-Insert operations.`);\n            }\n        }\n        else if (isIdColumnEmpty) {\n            throw new Error(`non-@GeneratedValue() @Id() ${dbEntity.name}.${dbProperty.name},\r\ncolumn:  ${dbColumn.name}\r\nmust always have a value for all entity operations.`);\n        }\n    }\n    ensureNonRelationalValue(dbProperty, dbColumn, value) {\n        if (value === undefined || value === null) {\n            return;\n        }\n        switch (dbColumn.type) {\n            case SQLDataType.ANY:\n                break;\n            case SQLDataType.BOOLEAN:\n                if (typeof value !== 'boolean') {\n                    this.throwUnexpectedProperty(dbProperty, dbColumn, value);\n                }\n                break;\n            case SQLDataType.DATE:\n                if (typeof value !== 'object' || !(value instanceof Date)) {\n                    this.throwUnexpectedProperty(dbProperty, dbColumn, value);\n                }\n                break;\n            case SQLDataType.JSON:\n                if (typeof value !== 'object' || value instanceof Date) {\n                    this.throwUnexpectedProperty(dbProperty, dbColumn, value);\n                }\n                break;\n            case SQLDataType.NUMBER:\n                if (typeof value !== 'number') {\n                    this.throwUnexpectedProperty(dbProperty, dbColumn, value);\n                }\n                break;\n            case SQLDataType.STRING:\n                if (typeof value !== 'string') {\n                    this.throwUnexpectedProperty(dbProperty, dbColumn, value);\n                }\n                break;\n        }\n    }\n    throwUnexpectedProperty(dbProperty, dbColumn, value) {\n        throw new Error(`Unexpected property value '${value.toString()}' in property '${dbProperty.entity.name}.${dbProperty.name}'\r\n\t\t(column: '${dbColumn.name}').`);\n    }\n};\n__decorate([\n    Inject()\n], StructuralEntityValidator.prototype, \"applicationUtils\", void 0);\n__decorate([\n    Inject()\n], StructuralEntityValidator.prototype, \"entityStateManager\", void 0);\n__decorate([\n    Inject()\n], StructuralEntityValidator.prototype, \"repositoryManager\", void 0);\nStructuralEntityValidator = __decorate([\n    Injected()\n], StructuralEntityValidator);\nexport { StructuralEntityValidator };\n//# sourceMappingURL=StructuralEntityValidator.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { SQLDataType } from \"@airport/ground-control\";\n// TODO: figure out if this is needed - originally written for deserializing\n// Client-side query parameters.  Since then moved to Isolates and generic\n// API calls.  Probably should be used in go-tower to deserialize all of the\n// method argiments passed it (and won't be tied to a query of any kind, API\n// interface is generic, unless already known to contain entity objects.)\nlet QueryParameterDeserializer = class QueryParameterDeserializer {\n    deserialize(parameters, query, entityStateManager) {\n        if (parameters.length !== query.jsonQuery.parameters.length) {\n            throw new Error(`Wrong number of parameters for ${query.dbEntity.name}.${query.jsonQuery.queryName}\r\n            Received:  ${parameters.length}\r\n            Expecting: ${query.jsonQuery.parameters.length}\r\n            `);\n        }\n        const deserializedParameters = [];\n        for (let i = 0; i < parameters.length; i++) {\n            const deserializedParameter = this.deserializeParameter(parameters[i], query.jsonQuery.parameters[i], i + 1, query, entityStateManager);\n            deserializedParameters.push(deserializedParameter);\n        }\n        return deserializedParameters;\n    }\n    deserializeParameter(parameter, jsonQueryParameter, parameterIndex, query, entityStateManager) {\n        switch (jsonQueryParameter.type) {\n            case SQLDataType.BOOLEAN:\n                this.checkTypeOfParameter(parameter, 'boolean', parameterIndex, query);\n                break;\n            case SQLDataType.DATE:\n                if (!(parameter instanceof Object)\n                    || parameter[entityStateManager.getStateFieldName()] !== EntityState.RESULT_DATE\n                    || !parameter.value) {\n                    throw new Error(`Invalid Serialized Date format for:\r\n                    ${query.dbEntity.name}.${query.jsonQuery.queryName}\r\n                    parameter #: ${parameterIndex}\r\n        got: ${JSON.stringify(parameter)}\r\n                    `);\n                }\n                try {\n                    return new Date(parameter);\n                }\n                catch (e) {\n                    throw new Error(`Invalid Serialized Date format for:\r\n                    ${query.dbEntity.name}.${query.jsonQuery.queryName}\r\n                    parameter #: ${parameterIndex}\r\n        got: ${JSON.stringify(parameter)}\r\n                    `);\n                }\n                break;\n            case SQLDataType.NUMBER:\n                this.checkTypeOfParameter(parameter, 'number', parameterIndex, query);\n                break;\n            case SQLDataType.STRING:\n                this.checkTypeOfParameter(parameter, 'string', parameterIndex, query);\n                break;\n            default:\n                throw new Error(`Unsupported parameter type for:\r\n                ${query.dbEntity.name}.${query.jsonQuery.queryName}\r\n                parameter #: ${parameterIndex}\r\n    got: ${jsonQueryParameter.type}\r\n                `);\n        }\n        return parameter;\n    }\n    checkTypeOfParameter(parameter, expectedParameterType, parameterIndex, query) {\n        const typeOfParameter = typeof parameter;\n        if (typeOfParameter !== expectedParameterType) {\n            throw new Error(`Expecting a '${expectedParameterType}' parameter for:\r\n            ${query.dbEntity.name}.${query.jsonQuery.queryName}\r\n            parameter #: ${parameterIndex}\r\ngot: ${typeOfParameter}\r\n            `);\n        }\n    }\n};\nQueryParameterDeserializer = __decorate([\n    Injected()\n], QueryParameterDeserializer);\nexport { QueryParameterDeserializer };\n//# sourceMappingURL=QueryParameterDeserializer.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { EntityState, SQLDataType } from '@airport/ground-control';\n// TODO: figure out if this is needed - originally written for serializing\n// query resuts returned to the client.  Since then moved to Isolates and\n// generic API calls.  Probably should be used in go-tower to serialize\n// the values returned (and won't be tied to a query of any kind, API\n// interface is generic, unless already known to contain entity objects.)\nlet QueryResultsSerializer = class QueryResultsSerializer {\n    serialize(entity, dbEntity, entityStateManager, applicationUtils) {\n        const operation = {\n            lookupTable: [],\n            sequence: 0,\n            stubLookupTable: []\n        };\n        let serializedEntity;\n        if (entity instanceof Array) {\n            serializedEntity = entity.map(anEntity => this.doSerialize(anEntity, dbEntity, operation, entityStateManager, applicationUtils));\n        }\n        else {\n            serializedEntity = this.doSerialize(entity, dbEntity, operation, entityStateManager, applicationUtils);\n        }\n        for (let i = 1; i < operation.lookupTable.length; i++) {\n            delete operation.lookupTable[i][entityStateManager.getUniqueIdFieldName()];\n        }\n        return serializedEntity;\n    }\n    doSerialize(entity, dbEntity, operation, entityStateManager, applicationUtils) {\n        // TODO: add support for non-create operations\n        let operationUniqueId = entityStateManager.getOperationUniqueId(entity);\n        if (operationUniqueId) {\n            return operation.stubLookupTable[operationUniqueId];\n        }\n        operationUniqueId = ++operation.sequence;\n        let entityStub = {};\n        entityStub[entityStateManager.getUniqueIdFieldName()] = operationUniqueId;\n        entityStub[entityStateManager.getStateFieldName()] = EntityState.STUB;\n        operation.stubLookupTable[operationUniqueId] = entityStub;\n        let entityCopy = {};\n        operation.lookupTable[operationUniqueId] = entity;\n        entityCopy[entityStateManager.getUniqueIdFieldName()] = operationUniqueId;\n        // TODO: Test this - used to be assigned to EntitState.RESULT, which is removed\n        entityCopy[entityStateManager.getStateFieldName()]\n            = entity[entityStateManager.getStateFieldName()];\n        for (const dbProperty of dbEntity.properties) {\n            let property = entity[dbProperty.name];\n            if (applicationUtils.isEmpty(property)) {\n                continue;\n            }\n            let propertyCopy;\n            if (dbProperty.relation) {\n                const dbRelation = dbProperty.relation[0];\n                if (property instanceof Array) {\n                    propertyCopy = property.map(manyObject => {\n                        this.doSerialize(manyObject, dbRelation.relationEntity, operation, entityStateManager, applicationUtils);\n                    });\n                }\n                else {\n                    propertyCopy = this.doSerialize(property, dbRelation.relationEntity, operation, entityStateManager, applicationUtils);\n                }\n            }\n            else {\n                switch (dbProperty.propertyColumns[0].column.type) {\n                    case SQLDataType.JSON:\n                        // \tif (property instanceof Array) {\n                        // \t\tpropertyCopy = {\n                        // \t\t\tvalue: property\n                        // \t\t}\n                        // \t\tpropertyCopy[entityStateManager.getStateFieldName()]\n                        // \t\t\t= EntityState.RESULT_JSON_ARRAY\n                        // \t} else {\n                        // \t\tpropertyCopy = property\n                        // \t\tpropertyCopy[entityStateManager.getStateFieldName()]\n                        // \t\t\t= EntityState.RESULT_JSON\n                        // \t}\n                        throw new Error(`@Json() properties cannot be serialized.`);\n                        break;\n                    case SQLDataType.DATE:\n                        propertyCopy = {\n                            value: property.toISOString()\n                        };\n                        propertyCopy[entityStateManager.getStateFieldName()]\n                            = EntityState.DATE;\n                        break;\n                    case SQLDataType.ANY:\n                    case SQLDataType.BOOLEAN:\n                    case SQLDataType.NUMBER:\n                    case SQLDataType.STRING:\n                        propertyCopy = property;\n                        break;\n                    default:\n                        throw new Error(`Unsupported data type for property ${dbEntity.applicationVersion.application.name}.${dbEntity.name}.${dbProperty.name}`);\n                }\n            }\n            entityCopy[dbProperty.name] = propertyCopy;\n        }\n        return entityCopy;\n    }\n};\nQueryResultsSerializer = __decorate([\n    Injected()\n], QueryResultsSerializer);\nexport { QueryResultsSerializer };\n//# sourceMappingURL=QueryResultsSerializer.js.map","/**\n * Created by Papa on 6/30/2016.\n */\nvar startTime = new Date().getTime();\n// Invoke the random algorithm (?change the seed?)\nMath.random();\nexport class PlatformUtils {\n    static async getNewDatabaseId() {\n        return new Date().getTime().toString(36) + await this.createNonce(7, true);\n    }\n    static async createNonce(length, sleep) {\n        var text = \"\";\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n        // Sleep a random number of milliseconds to ensure different random characters\n        await this.randomize();\n        for (var i = 0; i < length; i++) {\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n        return text;\n    }\n    static async randomize() {\n        for (let i = 0; i < startTime % 1000; i++) {\n            Math.random();\n        }\n        /*\n        return new Promise((\n            resolve,\n            reject\n        ) => {\n            setTimeout(() => {\n                resolve();\n            }, startTime % 1000);\n        });\n        */\n    }\n}\n//# sourceMappingURL=PlatformUtils.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\n/**\n * TODO: probably not-needed - queries no longer come from\n * the client directly.  They can come from the client but\n * are considered generic API calls. DaoRegistry is now\n * replaced with API registry.\n */\nlet ClientQueryManager = class ClientQueryManager {\n    async getClientQuery(applicationName, daoName, methodName) {\n        // const daoRegistry = await container(this).get(DAO_REGISTRY)\n        throw new Error('TODO: implement');\n    }\n};\nClientQueryManager = __decorate([\n    Injected()\n], ClientQueryManager);\nexport { ClientQueryManager };\n//# sourceMappingURL=ClientQueryManager.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DbNumber, DbString, Entity, Id, OneToMany, Table, } from '@airport/air-traffic-control';\nlet Domain = class Domain {\n};\n__decorate([\n    Id(),\n    DbNumber()\n], Domain.prototype, \"id\", void 0);\n__decorate([\n    DbString()\n], Domain.prototype, \"name\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'domain' })\n], Domain.prototype, \"applications\", void 0);\nDomain = __decorate([\n    Entity(),\n    Table({ name: 'DOMAINS' })\n], Domain);\nexport { Domain };\n//# sourceMappingURL=Domain.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbNumber, DbString, Entity, Id, JoinColumn, ManyToOne, OneToMany, Table } from '@airport/air-traffic-control';\nlet Application = class Application {\n    constructor() {\n        this.versions = [];\n        this.currentVersion = [];\n    }\n};\n__decorate([\n    Id(),\n    DbNumber(),\n    Column({ name: 'APPLICATION_INDEX', nullable: false })\n], Application.prototype, \"index\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({ name: 'DOMAIN_ID', referencedColumnName: 'ID', nullable: false })\n], Application.prototype, \"domain\", void 0);\n__decorate([\n    Column({ name: 'SCOPE', nullable: false }),\n    DbString()\n], Application.prototype, \"scope\", void 0);\n__decorate([\n    Column({ name: 'APPLICATION_NAME', nullable: false }),\n    DbString()\n], Application.prototype, \"name\", void 0);\n__decorate([\n    Column({ name: 'FULL_APPLICATION_NAME', nullable: false }),\n    DbString()\n], Application.prototype, \"fullName\", void 0);\n__decorate([\n    Column({ name: 'STATUS', nullable: false }),\n    DbString()\n], Application.prototype, \"status\", void 0);\n__decorate([\n    Column({ name: 'SIGNATURE', nullable: false }),\n    DbString()\n], Application.prototype, \"signature\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'application' })\n], Application.prototype, \"versions\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'application' })\n], Application.prototype, \"currentVersion\", void 0);\nApplication = __decorate([\n    Entity(),\n    Table({\n        name: 'APPLICATIONS'\n    })\n], Application);\nexport { Application };\n//# sourceMappingURL=Application.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { JoinColumn, ManyToOne, MappedSuperclass } from '@airport/air-traffic-control';\nlet VersionedApplicationObject = class VersionedApplicationObject {\n};\n__decorate([\n    ManyToOne(),\n    JoinColumn({ name: 'DEPRECATED_SINCE_APPLICATION_VERSION_ID', referencedColumnName: 'ID' })\n], VersionedApplicationObject.prototype, \"deprecatedSinceVersion\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({ name: 'REMOVED_IN_APPLICATION_VERSION_ID', referencedColumnName: 'ID' })\n], VersionedApplicationObject.prototype, \"removedInVersion\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({ name: 'SINCE_APPLICATION_VERSION_ID', referencedColumnName: 'ID', nullable: false })\n], VersionedApplicationObject.prototype, \"sinceVersion\", void 0);\nVersionedApplicationObject = __decorate([\n    MappedSuperclass()\n], VersionedApplicationObject);\nexport { VersionedApplicationObject };\n//# sourceMappingURL=VersionedApplicationObject.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbBoolean, DbNumber, DbString, Entity, Id, JoinColumn, ManyToOne, OneToMany, Table } from '@airport/air-traffic-control';\nimport { VersionedApplicationObject } from './VersionedApplicationObject';\nlet ApplicationColumn = class ApplicationColumn extends VersionedApplicationObject {\n    constructor() {\n        super(...arguments);\n        this.propertyColumns = [];\n        this.manyRelationColumns = [];\n        this.oneRelationColumns = [];\n    }\n};\n__decorate([\n    DbNumber(),\n    Id()\n], ApplicationColumn.prototype, \"id\", void 0);\n__decorate([\n    Column({ name: 'COLUMN_INDEX', nullable: false }),\n    DbNumber()\n], ApplicationColumn.prototype, \"index\", void 0);\n__decorate([\n    Column({ name: 'ID_INDEX' }),\n    DbNumber()\n], ApplicationColumn.prototype, \"idIndex\", void 0);\n__decorate([\n    Column({ name: 'IS_GENERATED', nullable: false }),\n    DbBoolean()\n], ApplicationColumn.prototype, \"isGenerated\", void 0);\n__decorate([\n    Column({ name: 'ALLOCATION_SIZE' }),\n    DbNumber()\n], ApplicationColumn.prototype, \"allocationSize\", void 0);\n__decorate([\n    Column({ name: 'NAME', nullable: false }),\n    DbString()\n], ApplicationColumn.prototype, \"name\", void 0);\n__decorate([\n    Column({ name: 'NOT_NULL', nullable: false }),\n    DbBoolean()\n], ApplicationColumn.prototype, \"notNull\", void 0);\n__decorate([\n    Column({ name: 'PRECISION' }),\n    DbNumber()\n], ApplicationColumn.prototype, \"precision\", void 0);\n__decorate([\n    Column({ name: 'SCALE' }),\n    DbNumber()\n], ApplicationColumn.prototype, \"scale\", void 0);\n__decorate([\n    Column({ name: 'TYPE', nullable: false }),\n    DbString()\n], ApplicationColumn.prototype, \"type\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({ name: 'APPLICATION_ENTITY_ID', referencedColumnName: 'ID', nullable: false })\n], ApplicationColumn.prototype, \"entity\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'column' })\n], ApplicationColumn.prototype, \"propertyColumns\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'manyColumn' })\n], ApplicationColumn.prototype, \"manyRelationColumns\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'oneColumn' })\n], ApplicationColumn.prototype, \"oneRelationColumns\", void 0);\nApplicationColumn = __decorate([\n    Entity(),\n    Table({\n        name: 'APPLICATION_COLUMNS'\n    })\n], ApplicationColumn);\nexport { ApplicationColumn };\n//# sourceMappingURL=ApplicationColumn.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Entity, Id, JoinColumn, ManyToOne, Table } from \"@airport/air-traffic-control\";\nlet ApplicationCurrentVersion = class ApplicationCurrentVersion {\n};\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({ name: 'APPLICATION_INDEX', referencedColumnName: 'APPLICATION_INDEX', nullable: false })\n], ApplicationCurrentVersion.prototype, \"application\", void 0);\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({ name: 'APPLICATION_VERSION_ID', referencedColumnName: 'ID', nullable: false })\n], ApplicationCurrentVersion.prototype, \"applicationVersion\", void 0);\nApplicationCurrentVersion = __decorate([\n    Entity(),\n    Table({\n        name: 'APPLICATION_CURRENT_VERSIONS'\n    })\n], ApplicationCurrentVersion);\nexport { ApplicationCurrentVersion };\n//# sourceMappingURL=ApplicationCurrentVersion.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbBoolean, DbNumber, DbString, Entity, Id, JoinColumn, Json, ManyToOne, OneToMany, Table, Transient } from '@airport/air-traffic-control';\nimport { VersionedApplicationObject } from './VersionedApplicationObject';\nlet ApplicationEntity = class ApplicationEntity extends VersionedApplicationObject {\n    constructor() {\n        super(...arguments);\n        //\n        // One-to-Many's\n        //\n        this.columns = [];\n        // TODO: implement if needed\n        // @OneToMany()\n        // @JoinColumns([\n        // \t{name: \"APPLICATION_VERSION_ID\"},\n        // \t{name: \"TABLE_INDEX\", referencedColumnName: \"INDEX\"}\n        // ])\n        // @WhereJoinTable((\n        // \totm: QApplicationEntity,\n        // \tmto: QApplicationColumn\n        // ) => mto.idIndex.isNotNull())\n        // idColumns: IApplicationColumn[];\n        this.operations = [];\n        this.properties = [];\n        this.relations = [];\n        this.relationReferences = [];\n        this.columnMap = {};\n        this.idColumns = [];\n        this.idColumnMap = {};\n        this.propertyMap = {};\n    }\n};\n__decorate([\n    DbNumber(),\n    Id()\n], ApplicationEntity.prototype, \"id\", void 0);\n__decorate([\n    Column({ name: 'TABLE_INDEX', nullable: false }),\n    DbNumber()\n], ApplicationEntity.prototype, \"index\", void 0);\n__decorate([\n    Column({ name: 'IS_LOCAL', nullable: false }),\n    DbBoolean()\n], ApplicationEntity.prototype, \"isLocal\", void 0);\n__decorate([\n    Column({ name: 'IS_REPOSITORY_ENTITY', nullable: false }),\n    DbBoolean()\n], ApplicationEntity.prototype, \"isRepositoryEntity\", void 0);\n__decorate([\n    Column({ name: 'NAME', nullable: false }),\n    DbString()\n], ApplicationEntity.prototype, \"name\", void 0);\n__decorate([\n    Column({ name: 'TABLE_CONFIGURATION', nullable: false }),\n    Json()\n], ApplicationEntity.prototype, \"tableConfig\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({ name: 'APPLICATION_VERSION_ID', referencedColumnName: 'ID', nullable: false })\n], ApplicationEntity.prototype, \"applicationVersion\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'entity' })\n], ApplicationEntity.prototype, \"columns\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'entity' })\n], ApplicationEntity.prototype, \"operations\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'entity' })\n], ApplicationEntity.prototype, \"properties\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'entity' })\n], ApplicationEntity.prototype, \"relations\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'relationEntity' })\n], ApplicationEntity.prototype, \"relationReferences\", void 0);\n__decorate([\n    Transient()\n], ApplicationEntity.prototype, \"columnMap\", void 0);\n__decorate([\n    Transient()\n], ApplicationEntity.prototype, \"idColumns\", void 0);\n__decorate([\n    Transient()\n], ApplicationEntity.prototype, \"idColumnMap\", void 0);\n__decorate([\n    Transient()\n], ApplicationEntity.prototype, \"propertyMap\", void 0);\nApplicationEntity = __decorate([\n    Entity(),\n    Table({\n        name: 'APPLICATION_ENTITIES',\n        // indexes: (se: ApplicationEntity) => [{\n        // \tproperty: se.applicationVersion\n        // }]\n    })\n], ApplicationEntity);\nexport { ApplicationEntity };\n//# sourceMappingURL=ApplicationEntity.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbNumber, DbString, Entity, GeneratedValue, Id, JoinColumn, Json, ManyToOne, Table } from '@airport/air-traffic-control';\nimport { VersionedApplicationObject } from './VersionedApplicationObject';\nlet ApplicationOperation = class ApplicationOperation extends VersionedApplicationObject {\n};\n__decorate([\n    Id(),\n    GeneratedValue(),\n    DbNumber()\n], ApplicationOperation.prototype, \"id\", void 0);\n__decorate([\n    Column({\n        name: 'TYPE',\n        nullable: false\n    }),\n    DbNumber()\n], ApplicationOperation.prototype, \"type\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'APPLICATION_ENTITY_ID',\n        referencedColumnName: 'ID',\n        nullable: false\n    })\n], ApplicationOperation.prototype, \"entity\", void 0);\n__decorate([\n    Column({ name: 'NAME', nullable: false }),\n    DbString()\n], ApplicationOperation.prototype, \"name\", void 0);\n__decorate([\n    Column({ name: 'RULE', nullable: false }),\n    Json()\n], ApplicationOperation.prototype, \"rule\", void 0);\nApplicationOperation = __decorate([\n    Entity(),\n    Table({\n        name: 'APPLICATION_OPERATIONS'\n    })\n], ApplicationOperation);\nexport { ApplicationOperation };\n//# sourceMappingURL=ApplicationOperation.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbBoolean, DbNumber, DbString, Entity, Id, JoinColumn, ManyToOne, OneToMany, Table } from '@airport/air-traffic-control';\nimport { VersionedApplicationObject } from './VersionedApplicationObject';\nlet ApplicationProperty = class ApplicationProperty extends VersionedApplicationObject {\n    constructor() {\n        super(...arguments);\n        this.propertyColumns = [];\n        this.relation = [];\n    }\n};\n__decorate([\n    DbNumber(),\n    Id()\n], ApplicationProperty.prototype, \"id\", void 0);\n__decorate([\n    DbNumber(),\n    Column({ name: 'PROPERTY_INDEX', nullable: false })\n], ApplicationProperty.prototype, \"index\", void 0);\n__decorate([\n    DbString(),\n    Column({ name: 'NAME', nullable: false })\n], ApplicationProperty.prototype, \"name\", void 0);\n__decorate([\n    DbBoolean(),\n    Column({ name: 'IS_ID', nullable: false })\n], ApplicationProperty.prototype, \"isId\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({ name: 'APPLICATION_ENTITY_ID', referencedColumnName: 'ID', nullable: false })\n], ApplicationProperty.prototype, \"entity\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'property' })\n], ApplicationProperty.prototype, \"propertyColumns\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'property' })\n], ApplicationProperty.prototype, \"relation\", void 0);\nApplicationProperty = __decorate([\n    Entity(),\n    Table({\n        name: 'APPLICATION_PROPERTIES'\n    })\n], ApplicationProperty);\nexport { ApplicationProperty };\n//# sourceMappingURL=ApplicationProperty.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Entity, Id, JoinColumn, ManyToOne, Table } from '@airport/air-traffic-control';\nimport { VersionedApplicationObject } from './VersionedApplicationObject';\n/**\n * Many-to-Many between Columns and properties\n */\nlet ApplicationPropertyColumn = class ApplicationPropertyColumn extends VersionedApplicationObject {\n};\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({ name: 'APPLICATION_COLUMN_ID', referencedColumnName: 'ID', nullable: false })\n], ApplicationPropertyColumn.prototype, \"column\", void 0);\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({ name: 'APPLICATION_PROPERTY_ID', referencedColumnName: 'ID', nullable: false })\n], ApplicationPropertyColumn.prototype, \"property\", void 0);\nApplicationPropertyColumn = __decorate([\n    Entity()\n    // TODO: rename table name to APPLICATION_PROPERTY_COLUMNS\n    ,\n    Table({\n        name: 'APPLICATION_PROPERTY_COLUMNS'\n    })\n], ApplicationPropertyColumn);\nexport { ApplicationPropertyColumn };\n//# sourceMappingURL=ApplicationPropertyColumn.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbNumber, Entity, Id, JoinColumn, ManyToOne, Table } from '@airport/air-traffic-control';\nimport { VersionedApplicationObject } from './VersionedApplicationObject';\nlet ApplicationReference = class ApplicationReference extends VersionedApplicationObject {\n};\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({ name: 'OWN_APPLICATION_VERSION_ID', referencedColumnName: 'ID', nullable: false })\n], ApplicationReference.prototype, \"ownApplicationVersion\", void 0);\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({ name: 'REFERENCED_APPLICATION_VERSION_ID', referencedColumnName: 'ID', nullable: false })\n], ApplicationReference.prototype, \"referencedApplicationVersion\", void 0);\n__decorate([\n    Column({ name: 'APPLICATION_REFERENCE_INDEX', nullable: false }),\n    DbNumber()\n], ApplicationReference.prototype, \"index\", void 0);\nApplicationReference = __decorate([\n    Entity(),\n    Table({\n        name: 'APPLICATION_REFERENCES'\n    })\n], ApplicationReference);\nexport { ApplicationReference };\n//# sourceMappingURL=ApplicationReference.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbNumber, DbString, Entity, Id, JoinColumn, Json, ManyToOne, OneToMany, Table } from '@airport/air-traffic-control';\nimport { VersionedApplicationObject } from './VersionedApplicationObject';\nlet ApplicationRelation = class ApplicationRelation extends VersionedApplicationObject {\n    constructor() {\n        super(...arguments);\n        this.manyRelationColumns = [];\n        this.oneRelationColumns = [];\n    }\n};\n__decorate([\n    DbNumber(),\n    Id()\n], ApplicationRelation.prototype, \"id\", void 0);\n__decorate([\n    DbNumber(),\n    Column({ name: 'RELATION_INDEX', nullable: false })\n], ApplicationRelation.prototype, \"index\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({ name: 'APPLICATION_PROPERTY_ID', referencedColumnName: 'ID', nullable: false })\n], ApplicationRelation.prototype, \"property\", void 0);\n__decorate([\n    Json(),\n    Column({ name: 'FOREIGN_KEY' })\n], ApplicationRelation.prototype, \"foreignKey\", void 0);\n__decorate([\n    Json(),\n    Column({ name: 'MANY_TO_ONE_ELEMENTS' })\n], ApplicationRelation.prototype, \"manyToOneElems\", void 0);\n__decorate([\n    Json(),\n    Column({ name: 'ONE_TO_MANY_ELEMENTS' })\n], ApplicationRelation.prototype, \"oneToManyElems\", void 0);\n__decorate([\n    DbString(),\n    Column({ name: 'RELATION_TYPE', nullable: false })\n], ApplicationRelation.prototype, \"relationType\", void 0);\n__decorate([\n    Column({ name: 'IS_ID', nullable: false })\n], ApplicationRelation.prototype, \"isId\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({ name: 'APPLICATION_TABLE_ID', referencedColumnName: 'ID', nullable: false })\n], ApplicationRelation.prototype, \"entity\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({ name: 'RELATION_APPLICATION_TABLE_ID', referencedColumnName: 'ID', nullable: false })\n], ApplicationRelation.prototype, \"relationEntity\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'manyRelation' })\n], ApplicationRelation.prototype, \"manyRelationColumns\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'oneRelation' })\n], ApplicationRelation.prototype, \"oneRelationColumns\", void 0);\nApplicationRelation = __decorate([\n    Entity(),\n    Table({\n        name: 'APPLICATION_RELATIONS'\n    })\n], ApplicationRelation);\nexport { ApplicationRelation };\n//# sourceMappingURL=ApplicationRelation.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Entity, Id, JoinColumn, ManyToOne, Table } from '@airport/air-traffic-control';\nimport { VersionedApplicationObject } from './VersionedApplicationObject';\nlet ApplicationRelationColumn = class ApplicationRelationColumn extends VersionedApplicationObject {\n};\n__decorate([\n    Id()\n], ApplicationRelationColumn.prototype, \"id\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({\n        name: 'MANY_APPLICATION_COLUMN_ID',\n        referencedColumnName: 'ID',\n        nullable: false\n    })\n], ApplicationRelationColumn.prototype, \"manyColumn\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({ name: 'ONE_APPLICATION_COLUMN_ID', referencedColumnName: 'ID', nullable: false })\n], ApplicationRelationColumn.prototype, \"oneColumn\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({ name: 'MANY_APPLICATION_RELATION_ID', referencedColumnName: 'ID' })\n], ApplicationRelationColumn.prototype, \"manyRelation\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({ name: 'ONE_APPLICATION_RELATION_ID', referencedColumnName: 'ID' })\n], ApplicationRelationColumn.prototype, \"oneRelation\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({ name: 'PARENT_RELATION_ID', referencedColumnName: 'ID' })\n], ApplicationRelationColumn.prototype, \"parentRelation\", void 0);\nApplicationRelationColumn = __decorate([\n    Entity(),\n    Table({\n        name: 'APPLICATION_RELATION_COLUMNS'\n    })\n], ApplicationRelationColumn);\nexport { ApplicationRelationColumn };\n//# sourceMappingURL=ApplicationRelationColumn.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbNumber, DbString, Entity, Id, JoinColumn, Json, ManyToOne, OneToMany, SequenceGenerator, Table, Transient } from '@airport/air-traffic-control';\nlet ApplicationVersion = class ApplicationVersion {\n    constructor() {\n        this.entities = [];\n        this.references = [];\n        this.referencedBy = [];\n        this.entityMapByName = {};\n        this.referencesMapByName = {};\n        this.referencedByMapByName = {};\n    }\n};\n__decorate([\n    DbNumber(),\n    Id(),\n    SequenceGenerator({ allocationSize: 100 })\n], ApplicationVersion.prototype, \"id\", void 0);\n__decorate([\n    Column({ name: 'INTEGER_VERSION', nullable: false }),\n    DbNumber()\n], ApplicationVersion.prototype, \"integerVersion\", void 0);\n__decorate([\n    Column({ name: 'VERSION_STRING', nullable: false }),\n    DbString()\n], ApplicationVersion.prototype, \"versionString\", void 0);\n__decorate([\n    Column({ name: 'MAJOR_VERSION', nullable: false }),\n    DbNumber()\n], ApplicationVersion.prototype, \"majorVersion\", void 0);\n__decorate([\n    Column({ name: 'MINOR_VERSION', nullable: false }),\n    DbNumber()\n], ApplicationVersion.prototype, \"minorVersion\", void 0);\n__decorate([\n    Column({ name: 'PATCH_VERSION', nullable: false }),\n    DbNumber()\n], ApplicationVersion.prototype, \"patchVersion\", void 0);\n__decorate([\n    Column({ name: 'JSON_APPLICATION', nullable: false }),\n    Json()\n], ApplicationVersion.prototype, \"jsonApplication\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({ name: 'APPLICATION_INDEX', nullable: false })\n], ApplicationVersion.prototype, \"application\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'applicationVersion' })\n], ApplicationVersion.prototype, \"entities\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'ownApplicationVersion' })\n], ApplicationVersion.prototype, \"references\", void 0);\n__decorate([\n    OneToMany({ mappedBy: 'referencedApplicationVersion' })\n], ApplicationVersion.prototype, \"referencedBy\", void 0);\n__decorate([\n    Transient()\n], ApplicationVersion.prototype, \"entityMapByName\", void 0);\n__decorate([\n    Transient()\n], ApplicationVersion.prototype, \"referencesMapByName\", void 0);\n__decorate([\n    Transient()\n], ApplicationVersion.prototype, \"referencedByMapByName\", void 0);\nApplicationVersion = __decorate([\n    Entity(),\n    Table({ name: 'APPLICATION_VERSIONS' })\n], ApplicationVersion);\nexport { ApplicationVersion };\n//# sourceMappingURL=ApplicationVersion.js.map","import { AIRPORT_DATABASE } from '@airport/air-traffic-control';\nimport { diSet as dS, duoDiSet as ddS } from '@airport/check-in';\nimport { DEPENDENCY_INJECTION } from '@airport/direction-indicator';\nimport { getFullApplicationName } from '@airport/ground-control';\nimport { Application, ApplicationColumn, ApplicationCurrentVersion, ApplicationEntity, ApplicationOperation, ApplicationProperty, ApplicationPropertyColumn, ApplicationReference, ApplicationRelation, ApplicationRelationColumn, ApplicationVersion, Domain, VersionedApplicationObject } from '../ddl/ddl';\nconst __constructors__ = {\n    Application: Application,\n    ApplicationColumn: ApplicationColumn,\n    ApplicationCurrentVersion: ApplicationCurrentVersion,\n    ApplicationEntity: ApplicationEntity,\n    ApplicationOperation: ApplicationOperation,\n    ApplicationProperty: ApplicationProperty,\n    ApplicationPropertyColumn: ApplicationPropertyColumn,\n    ApplicationReference: ApplicationReference,\n    ApplicationRelation: ApplicationRelation,\n    ApplicationRelationColumn: ApplicationRelationColumn,\n    ApplicationVersion: ApplicationVersion,\n    Domain: Domain,\n    VersionedApplicationObject: VersionedApplicationObject\n};\nexport const Q_APPLICATION = {\n    __constructors__,\n    domain: 'air',\n    name: '@airport/airspace'\n};\nexport const Q = Q_APPLICATION;\nexport function diSet(dbEntityId) {\n    return dS(Q.__dbApplication__, dbEntityId);\n}\nexport function duoDiSet(dbEntityId) {\n    return ddS(Q.__dbApplication__, dbEntityId);\n}\nDEPENDENCY_INJECTION.db().eventuallyGet(AIRPORT_DATABASE).then((airDb) => {\n    airDb.QM[getFullApplicationName(Q_APPLICATION)] = Q;\n});\n//# sourceMappingURL=qApplication.js.map","import { Dao, DaoQueryDecorators, } from '@airport/check-in';\nimport { Q, duoDiSet, } from './qApplication';\n// Application Q object Dependency Injection readiness detection Dao\nexport class SQDIDao extends Dao {\n    constructor(dbEntityId) {\n        super(dbEntityId, Q);\n    }\n}\nexport class BaseApplicationDao extends SQDIDao {\n    constructor() {\n        super(10);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(10);\n    }\n}\nBaseApplicationDao.Find = new DaoQueryDecorators();\nBaseApplicationDao.FindOne = new DaoQueryDecorators();\nBaseApplicationDao.Search = new DaoQueryDecorators();\nBaseApplicationDao.SearchOne = new DaoQueryDecorators();\nexport class BaseApplicationColumnDao extends SQDIDao {\n    constructor() {\n        super(4);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(4);\n    }\n}\nBaseApplicationColumnDao.Find = new DaoQueryDecorators();\nBaseApplicationColumnDao.FindOne = new DaoQueryDecorators();\nBaseApplicationColumnDao.Search = new DaoQueryDecorators();\nBaseApplicationColumnDao.SearchOne = new DaoQueryDecorators();\nexport class BaseApplicationCurrentVersionDao extends SQDIDao {\n    constructor() {\n        super(9);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(9);\n    }\n}\nBaseApplicationCurrentVersionDao.Find = new DaoQueryDecorators();\nBaseApplicationCurrentVersionDao.FindOne = new DaoQueryDecorators();\nBaseApplicationCurrentVersionDao.Search = new DaoQueryDecorators();\nBaseApplicationCurrentVersionDao.SearchOne = new DaoQueryDecorators();\nexport class BaseApplicationEntityDao extends SQDIDao {\n    constructor() {\n        super(6);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(6);\n    }\n}\nBaseApplicationEntityDao.Find = new DaoQueryDecorators();\nBaseApplicationEntityDao.FindOne = new DaoQueryDecorators();\nBaseApplicationEntityDao.Search = new DaoQueryDecorators();\nBaseApplicationEntityDao.SearchOne = new DaoQueryDecorators();\nexport class BaseApplicationOperationDao extends SQDIDao {\n    constructor() {\n        super(5);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(5);\n    }\n}\nBaseApplicationOperationDao.Find = new DaoQueryDecorators();\nBaseApplicationOperationDao.FindOne = new DaoQueryDecorators();\nBaseApplicationOperationDao.Search = new DaoQueryDecorators();\nBaseApplicationOperationDao.SearchOne = new DaoQueryDecorators();\nexport class BaseApplicationPropertyDao extends SQDIDao {\n    constructor() {\n        super(2);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(2);\n    }\n}\nBaseApplicationPropertyDao.Find = new DaoQueryDecorators();\nBaseApplicationPropertyDao.FindOne = new DaoQueryDecorators();\nBaseApplicationPropertyDao.Search = new DaoQueryDecorators();\nBaseApplicationPropertyDao.SearchOne = new DaoQueryDecorators();\nexport class BaseApplicationPropertyColumnDao extends SQDIDao {\n    constructor() {\n        super(3);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(3);\n    }\n}\nBaseApplicationPropertyColumnDao.Find = new DaoQueryDecorators();\nBaseApplicationPropertyColumnDao.FindOne = new DaoQueryDecorators();\nBaseApplicationPropertyColumnDao.Search = new DaoQueryDecorators();\nBaseApplicationPropertyColumnDao.SearchOne = new DaoQueryDecorators();\nexport class BaseApplicationReferenceDao extends SQDIDao {\n    constructor() {\n        super(7);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(7);\n    }\n}\nBaseApplicationReferenceDao.Find = new DaoQueryDecorators();\nBaseApplicationReferenceDao.FindOne = new DaoQueryDecorators();\nBaseApplicationReferenceDao.Search = new DaoQueryDecorators();\nBaseApplicationReferenceDao.SearchOne = new DaoQueryDecorators();\nexport class BaseApplicationRelationDao extends SQDIDao {\n    constructor() {\n        super(1);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(1);\n    }\n}\nBaseApplicationRelationDao.Find = new DaoQueryDecorators();\nBaseApplicationRelationDao.FindOne = new DaoQueryDecorators();\nBaseApplicationRelationDao.Search = new DaoQueryDecorators();\nBaseApplicationRelationDao.SearchOne = new DaoQueryDecorators();\nexport class BaseApplicationRelationColumnDao extends SQDIDao {\n    constructor() {\n        super(0);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(0);\n    }\n}\nBaseApplicationRelationColumnDao.Find = new DaoQueryDecorators();\nBaseApplicationRelationColumnDao.FindOne = new DaoQueryDecorators();\nBaseApplicationRelationColumnDao.Search = new DaoQueryDecorators();\nBaseApplicationRelationColumnDao.SearchOne = new DaoQueryDecorators();\nexport class BaseApplicationVersionDao extends SQDIDao {\n    constructor() {\n        super(8);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(8);\n    }\n}\nBaseApplicationVersionDao.Find = new DaoQueryDecorators();\nBaseApplicationVersionDao.FindOne = new DaoQueryDecorators();\nBaseApplicationVersionDao.Search = new DaoQueryDecorators();\nBaseApplicationVersionDao.SearchOne = new DaoQueryDecorators();\nexport class BaseDomainDao extends SQDIDao {\n    constructor() {\n        super(11);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(11);\n    }\n}\nBaseDomainDao.Find = new DaoQueryDecorators();\nBaseDomainDao.FindOne = new DaoQueryDecorators();\nBaseDomainDao.Search = new DaoQueryDecorators();\nBaseDomainDao.SearchOne = new DaoQueryDecorators();\n//# sourceMappingURL=baseDaos.js.map","import { Duo, } from '@airport/check-in';\nimport { Q, duoDiSet, } from './qApplication';\n// Application Q object Dependency Injection readiness detection Duo\nexport class SQDIDuo extends Duo {\n    constructor(dbEntityId) {\n        super(dbEntityId, Q);\n    }\n}\nexport class BaseApplicationDuo extends SQDIDuo {\n    static diSet() {\n        return duoDiSet(10);\n    }\n    constructor() {\n        super(10);\n    }\n}\nexport class BaseApplicationColumnDuo extends SQDIDuo {\n    static diSet() {\n        return duoDiSet(4);\n    }\n    constructor() {\n        super(4);\n    }\n}\nexport class BaseApplicationCurrentVersionDuo extends SQDIDuo {\n    static diSet() {\n        return duoDiSet(9);\n    }\n    constructor() {\n        super(9);\n    }\n}\nexport class BaseApplicationEntityDuo extends SQDIDuo {\n    static diSet() {\n        return duoDiSet(6);\n    }\n    constructor() {\n        super(6);\n    }\n}\nexport class BaseApplicationOperationDuo extends SQDIDuo {\n    static diSet() {\n        return duoDiSet(5);\n    }\n    constructor() {\n        super(5);\n    }\n}\nexport class BaseApplicationPropertyDuo extends SQDIDuo {\n    static diSet() {\n        return duoDiSet(2);\n    }\n    constructor() {\n        super(2);\n    }\n}\nexport class BaseApplicationPropertyColumnDuo extends SQDIDuo {\n    static diSet() {\n        return duoDiSet(3);\n    }\n    constructor() {\n        super(3);\n    }\n}\nexport class BaseApplicationReferenceDuo extends SQDIDuo {\n    static diSet() {\n        return duoDiSet(7);\n    }\n    constructor() {\n        super(7);\n    }\n}\nexport class BaseApplicationRelationDuo extends SQDIDuo {\n    static diSet() {\n        return duoDiSet(1);\n    }\n    constructor() {\n        super(1);\n    }\n}\nexport class BaseApplicationRelationColumnDuo extends SQDIDuo {\n    static diSet() {\n        return duoDiSet(0);\n    }\n    constructor() {\n        super(0);\n    }\n}\nexport class BaseApplicationVersionDuo extends SQDIDuo {\n    static diSet() {\n        return duoDiSet(8);\n    }\n    constructor() {\n        super(8);\n    }\n}\nexport class BaseDomainDuo extends SQDIDuo {\n    static diSet() {\n        return duoDiSet(11);\n    }\n    constructor() {\n        super(11);\n    }\n}\n//# sourceMappingURL=baseDuos.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { BaseDomainDao, Q } from '../generated/generated';\nlet DomainDao = class DomainDao extends BaseDomainDao {\n    async findByIdIn(domainIds) {\n        let d;\n        return await this.db.find.tree({\n            select: {},\n            from: [\n                d = Q.Domain\n            ],\n            where: d.id.in(domainIds)\n        });\n    }\n    async findMapByNameWithNames(domainNames) {\n        let d;\n        const domains = await this.db.find.tree({\n            select: {},\n            from: [d = Q.Domain],\n            where: d.name.in(domainNames)\n        });\n        const domainMapByNameWithNames = new Map();\n        for (const domain of domains) {\n            domainMapByNameWithNames.set(domain.name, domain);\n        }\n        return domainMapByNameWithNames;\n    }\n    async findOneByName(name) {\n        let d;\n        return await this.db.findOne.tree({\n            select: {},\n            from: [d = Q.Domain],\n            where: d.name.equals(name)\n        });\n    }\n    async findByNames(names) {\n        let d;\n        return await this.db.find.tree({\n            select: {},\n            from: [d = Q.Domain],\n            where: d.name.in(names)\n        });\n    }\n    async findByName(name) {\n        let d;\n        return await this.db.findOne.tree({\n            select: {},\n            from: [d = Q.Domain],\n            where: d.name.equals(name)\n        });\n    }\n    async checkAndInsertIfNeeded(domains) {\n        const existingDomains = await this.findByIdIn(domains.map(domain => domain.id));\n        const existingDomainMap = new Map();\n        for (const existingDomain of existingDomains) {\n            existingDomainMap.set(existingDomain.id, existingDomain);\n        }\n        const newDomains = [];\n        for (const domain of domains) {\n            if (!existingDomainMap.has(domain.id)) {\n                newDomains.push(domain);\n            }\n        }\n        if (!newDomains.length) {\n            return;\n        }\n        let d;\n        const values = [];\n        for (const domain of newDomains) {\n            values.push([\n                domain.id, domain.name\n            ]);\n        }\n        await this.db.insertValuesGenerateIds({\n            insertInto: d = Q.Domain,\n            columns: [\n                d.id,\n                d.name,\n            ],\n            values\n        });\n    }\n    async insert(domains) {\n        let d;\n        const values = [];\n        for (const domain of domains) {\n            values.push([\n                domain.name\n            ]);\n        }\n        const ids = await this.db.insertValuesGenerateIds({\n            insertInto: d = Q.Domain,\n            columns: [\n                d.name\n            ],\n            values\n        });\n        for (let i = 0; i < domains.length; i++) {\n            let domain = domains[i];\n            domain.id = ids[i][0];\n        }\n    }\n};\nDomainDao = __decorate([\n    Injected()\n], DomainDao);\nexport { DomainDao };\n//# sourceMappingURL=DomainDao.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { undefinedToNull } from '@airport/ground-control';\nimport { BaseApplicationColumnDao, Q } from '../generated/generated';\nlet ApplicationColumnDao = class ApplicationColumnDao extends BaseApplicationColumnDao {\n    async findAllForEntities(entityIds) {\n        let c;\n        return this.db.find.tree({\n            select: {},\n            from: [\n                c = Q.ApplicationColumn\n            ],\n            where: c.entity.id.in(entityIds)\n        });\n    }\n    async insert(applicationColumns) {\n        let sc;\n        const values = [];\n        for (const applicationColumn of applicationColumns) {\n            values.push([\n                applicationColumn.id, applicationColumn.index,\n                undefinedToNull(applicationColumn.idIndex),\n                applicationColumn.isGenerated,\n                undefinedToNull(applicationColumn.allocationSize),\n                applicationColumn.name,\n                applicationColumn.notNull,\n                undefinedToNull(applicationColumn.precision),\n                undefinedToNull(applicationColumn.scale),\n                applicationColumn.type,\n                applicationColumn.entity.id,\n                applicationColumn.deprecatedSinceVersion ? applicationColumn.deprecatedSinceVersion.id : null,\n                applicationColumn.removedInVersion ? applicationColumn.removedInVersion.id : null,\n                applicationColumn.sinceVersion ? applicationColumn.sinceVersion.id : null,\n            ]);\n        }\n        await this.db.insertValuesGenerateIds({\n            insertInto: sc = Q.ApplicationColumn,\n            columns: [\n                sc.id,\n                sc.index,\n                sc.idIndex,\n                sc.isGenerated,\n                sc.allocationSize,\n                sc.name,\n                sc.notNull,\n                sc.precision,\n                sc.scale,\n                sc.type,\n                sc.entity.id,\n                sc.deprecatedSinceVersion.id,\n                sc.removedInVersion.id,\n                sc.sinceVersion.id\n            ],\n            values\n        });\n    }\n};\nApplicationColumnDao = __decorate([\n    Injected()\n], ApplicationColumnDao);\nexport { ApplicationColumnDao };\n//# sourceMappingURL=ApplicationColumnDao.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ALL_FIELDS, and, max, tree, Y } from '@airport/air-traffic-control';\nimport { Injected } from '@airport/direction-indicator';\nimport { ensureChildJsMap } from '@airport/ground-control';\nimport { BaseApplicationDao, Q } from '../generated/generated';\nlet ApplicationDao = class ApplicationDao extends BaseApplicationDao {\n    async findAllActive() {\n        let s;\n        return this.db.find.tree({\n            select: {},\n            from: [\n                s = Q.Application\n            ]\n        });\n    }\n    async findAllWithJson() {\n        let a;\n        let av;\n        // FIXME: this should be don through currentVersion - verify that it get's populated and switch\n        let cv;\n        return this.db.find.tree({\n            select: {\n                ...ALL_FIELDS,\n                // currentVersion: {\n                // \tapplicationVersion: {\n                // \t\tid: Y,\n                // \t\tjsonApplication: Y\n                // \t}\n                // }\n                versions: {\n                    id: Y,\n                    jsonApplication: Y\n                }\n            },\n            from: [\n                a = Q.Application,\n                // cv = a.currentVersion.innerJoin(),\n                // av = cv.applicationVersion.innerJoin()\n                av = a.versions.innerJoin()\n            ]\n        });\n    }\n    async findMapByVersionIds(applicationVersionIds) {\n        const applicationMapByIndex = new Map();\n        let s, sv;\n        const applications = await this.db.find.tree({\n            select: {\n                index: Y,\n                domain: {\n                    id: Y,\n                    name: Y\n                },\n                name: Y,\n                fullName: Y,\n                versions: {\n                    id: Y,\n                    majorVersion: Y,\n                    minorVersion: Y,\n                    patchVersion: Y\n                }\n            },\n            from: [\n                s = Q.Application,\n                sv = s.versions.innerJoin()\n            ],\n            where: sv.id.in(applicationVersionIds)\n        });\n        for (const application of applications) {\n            for (const applicationVersion of application.versions) {\n                applicationMapByIndex.set(applicationVersion.id, application);\n            }\n        }\n        return applicationMapByIndex;\n    }\n    async findMaxIndex() {\n        const s = Q.Application;\n        return await this.airportDatabase.findOne.field({\n            select: max(s.index),\n            from: [\n                s\n            ]\n        });\n    }\n    async findMaxVersionedMapByApplicationAndDomainNames(applicationDomainNames, applicationNames) {\n        const maxVersionedMapByApplicationAndDomainNames = new Map();\n        let sv;\n        let s;\n        let d;\n        let sMaV;\n        let sMiV;\n        const applicationLookupRecords = await this.airportDatabase.find.tree({\n            from: [\n                sMiV = tree({\n                    from: [\n                        sMaV = tree({\n                            from: [\n                                s = Q.Application,\n                                sv = s.versions.innerJoin(),\n                                d = s.domain.innerJoin()\n                            ],\n                            select: {\n                                index: s.index,\n                                domainId: d.id,\n                                domainName: d.name,\n                                name: s.name,\n                                majorVersion: max(sv.majorVersion),\n                                minorVersion: sv.minorVersion,\n                                patchVersion: sv.patchVersion,\n                            },\n                            where: and(d.name.in(applicationDomainNames), s.name.in(applicationNames)),\n                            groupBy: [\n                                s.index,\n                                d.id,\n                                d.name,\n                                s.name,\n                                sv.minorVersion,\n                                sv.patchVersion,\n                            ]\n                        })\n                    ],\n                    select: {\n                        index: sMaV.index,\n                        domainId: sMaV.domainId,\n                        domainName: sMaV.domainName,\n                        name: sMaV.name,\n                        majorVersion: sMaV.majorVersion,\n                        minorVersion: max(sMaV.minorVersion),\n                        patchVersion: sMaV.patchVersion,\n                    },\n                    groupBy: [\n                        sMaV.index,\n                        sMaV.domainId,\n                        sMaV.domainName,\n                        sMaV.name,\n                        sMaV.majorVersion,\n                        sMaV.patchVersion\n                    ]\n                })\n            ],\n            select: {\n                index: sMiV.index,\n                domain: {\n                    id: sMiV.domainId,\n                    name: sMiV.domainName\n                },\n                name: sMiV.name,\n                majorVersion: sMiV.majorVersion,\n                minorVersion: sMiV.minorVersion,\n                patchVersion: max(sMiV.patchVersion),\n            },\n            groupBy: [\n                sMiV.index,\n                sMiV.domainId,\n                sMiV.domainName,\n                sMiV.name,\n                sMiV.majorVersion,\n                sMiV.minorVersion\n            ]\n        });\n        for (const applicationLookupRecord of applicationLookupRecords) {\n            ensureChildJsMap(maxVersionedMapByApplicationAndDomainNames, applicationLookupRecord.domain.name)\n                .set(applicationLookupRecord.name, applicationLookupRecord);\n        }\n        return maxVersionedMapByApplicationAndDomainNames;\n    }\n    async setStatusByIndexes(indexes, status) {\n        let s;\n        await this.db.updateWhere({\n            update: s = Q.Application,\n            set: {\n                status\n            },\n            where: s.index.in(indexes)\n        });\n    }\n    async findMapByFullNames(fullApplicationNames) {\n        const mapByFullName = new Map();\n        let s;\n        const records = await this.db.find.tree({\n            select: {},\n            from: [\n                s = Q.Application\n            ],\n            where: s.fullName.in(fullApplicationNames)\n        });\n        for (const record of records) {\n            mapByFullName.set(record.fullName, record);\n        }\n        return mapByFullName;\n    }\n    async findByDomainNamesAndApplicationNames(domainNames, applicationNames) {\n        let s;\n        let d;\n        return await this.db.find.tree({\n            select: {\n                index: Y,\n                domain: {\n                    id: Y,\n                    name: Y\n                },\n                fullName: Y,\n                name: Y\n            },\n            from: [\n                s = Q.Application,\n                d = s.domain.innerJoin()\n            ],\n            where: and(d.name.in(domainNames), s.name.in(applicationNames))\n        });\n    }\n    async findByIndex(index) {\n        let a;\n        let d;\n        return await this.db.findOne.tree({\n            select: {\n                ...ALL_FIELDS,\n                domain: {}\n            },\n            from: [\n                a = Q.Application,\n                d = a.domain.innerJoin()\n            ],\n            where: a.index.equals(index)\n        });\n    }\n    async insert(applications) {\n        let a;\n        const values = [];\n        for (const application of applications) {\n            values.push([\n                application.index, application.domain.id, application.scope,\n                application.fullName, application.name,\n                // application.packageName,\n                application.status, application.signature\n            ]);\n        }\n        await this.db.insertValuesGenerateIds({\n            insertInto: a = Q.Application,\n            columns: [\n                a.index,\n                a.domain.id,\n                a.scope,\n                a.fullName,\n                a.name,\n                // a.packageName,\n                a.status,\n                a.signature\n            ],\n            values\n        });\n    }\n};\nApplicationDao = __decorate([\n    Injected()\n], ApplicationDao);\nexport { ApplicationDao };\n//# sourceMappingURL=ApplicationDao.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { BaseApplicationEntityDao, Q, } from '../generated/generated';\nlet ApplicationEntityDao = class ApplicationEntityDao extends BaseApplicationEntityDao {\n    async findAllForApplicationVersions(applicationVersionIds) {\n        let se;\n        return await this.db.find.tree({\n            select: {},\n            from: [\n                se = Q.ApplicationEntity\n            ],\n            where: se.applicationVersion.id.in(applicationVersionIds)\n        });\n    }\n    async insert(applicationEntities) {\n        let se;\n        const values = [];\n        for (const applicationEntity of applicationEntities) {\n            values.push([\n                applicationEntity.id, applicationEntity.index,\n                applicationEntity.isLocal, applicationEntity.isRepositoryEntity,\n                applicationEntity.name, applicationEntity.tableConfig,\n                applicationEntity.applicationVersion.id,\n                applicationEntity.deprecatedSinceVersion ? applicationEntity.deprecatedSinceVersion.id : null,\n                applicationEntity.removedInVersion ? applicationEntity.removedInVersion.id : null,\n                applicationEntity.sinceVersion ? applicationEntity.sinceVersion.id : null,\n            ]);\n        }\n        await this.db.insertValuesGenerateIds({\n            insertInto: se = Q.ApplicationEntity,\n            columns: [\n                se.id,\n                se.index,\n                se.isLocal,\n                se.isRepositoryEntity,\n                se.name,\n                se.tableConfig,\n                se.applicationVersion.id,\n                se.deprecatedSinceVersion.id,\n                se.removedInVersion.id,\n                se.sinceVersion.id\n            ],\n            values\n        });\n    }\n};\nApplicationEntityDao = __decorate([\n    Injected()\n], ApplicationEntityDao);\nexport { ApplicationEntityDao };\n//# sourceMappingURL=ApplicationEntityDao.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { BaseApplicationPropertyColumnDao, Q, } from '../generated/generated';\nlet ApplicationPropertyColumnDao = class ApplicationPropertyColumnDao extends BaseApplicationPropertyColumnDao {\n    async findAllForColumns(columnIds) {\n        let rc;\n        return this.db.find.tree({\n            select: {},\n            from: [\n                rc = Q.ApplicationPropertyColumn\n            ],\n            where: rc.column.id.in(columnIds)\n        });\n    }\n    async insert(applicationPropertyColumns) {\n        let spc;\n        const values = [];\n        for (const applicationPropertyColumn of applicationPropertyColumns) {\n            values.push([\n                applicationPropertyColumn.column.id, applicationPropertyColumn.property.id,\n                applicationPropertyColumn.deprecatedSinceVersion ? applicationPropertyColumn.deprecatedSinceVersion.id : null,\n                applicationPropertyColumn.removedInVersion ? applicationPropertyColumn.removedInVersion.id : null,\n                applicationPropertyColumn.sinceVersion ? applicationPropertyColumn.sinceVersion.id : null,\n            ]);\n        }\n        await this.db.insertValuesGenerateIds({\n            insertInto: spc = Q.ApplicationPropertyColumn,\n            columns: [\n                spc.column.id,\n                spc.property.id,\n                spc.deprecatedSinceVersion.id,\n                spc.removedInVersion.id,\n                spc.sinceVersion.id\n            ],\n            values\n        });\n    }\n};\nApplicationPropertyColumnDao = __decorate([\n    Injected()\n], ApplicationPropertyColumnDao);\nexport { ApplicationPropertyColumnDao };\n//# sourceMappingURL=ApplicationPropertyColumnDao.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { BaseApplicationPropertyDao, Q, } from '../generated/generated';\nlet ApplicationPropertyDao = class ApplicationPropertyDao extends BaseApplicationPropertyDao {\n    async findAllForEntities(entityIds) {\n        let p;\n        return this.db.find.tree({\n            select: {},\n            from: [\n                p = Q.ApplicationProperty\n            ],\n            where: p.entity.id.in(entityIds)\n        });\n    }\n    async insert(applicationProperties) {\n        let sp;\n        const values = [];\n        for (const applicationProperty of applicationProperties) {\n            values.push([\n                applicationProperty.id, applicationProperty.index,\n                applicationProperty.name, applicationProperty.isId,\n                applicationProperty.entity.id,\n                applicationProperty.deprecatedSinceVersion ? applicationProperty.deprecatedSinceVersion.id : null,\n                applicationProperty.removedInVersion ? applicationProperty.removedInVersion.id : null,\n                applicationProperty.sinceVersion ? applicationProperty.sinceVersion.id : null,\n            ]);\n        }\n        await this.db.insertValuesGenerateIds({\n            insertInto: sp = Q.ApplicationProperty,\n            columns: [\n                sp.id,\n                sp.index,\n                sp.name,\n                sp.isId,\n                sp.entity.id,\n                sp.deprecatedSinceVersion.id,\n                sp.removedInVersion.id,\n                sp.sinceVersion.id\n            ],\n            values\n        });\n    }\n};\nApplicationPropertyDao = __decorate([\n    Injected()\n], ApplicationPropertyDao);\nexport { ApplicationPropertyDao };\n//# sourceMappingURL=ApplicationPropertyDao.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { BaseApplicationReferenceDao, Q, } from '../generated/generated';\nlet ApplicationReferenceDao = class ApplicationReferenceDao extends BaseApplicationReferenceDao {\n    async findAllForApplicationVersions(applicationVersionIds) {\n        let sr;\n        return await this.db.find.tree({\n            select: {},\n            from: [\n                sr = Q.ApplicationReference\n            ],\n            where: sr.ownApplicationVersion.id.in(applicationVersionIds)\n        });\n    }\n    async insert(applicationReferences) {\n        let sr;\n        const values = [];\n        for (const applicationReference of applicationReferences) {\n            values.push([\n                applicationReference.ownApplicationVersion.id,\n                applicationReference.referencedApplicationVersion.id,\n                applicationReference.index,\n                applicationReference.deprecatedSinceVersion ? applicationReference.deprecatedSinceVersion.id : null,\n                applicationReference.removedInVersion ? applicationReference.removedInVersion.id : null,\n                applicationReference.sinceVersion ? applicationReference.sinceVersion.id : null,\n            ]);\n        }\n        await this.db.insertValuesGenerateIds({\n            insertInto: sr = Q.ApplicationReference,\n            columns: [\n                sr.ownApplicationVersion.id,\n                sr.referencedApplicationVersion.id,\n                sr.index,\n                sr.deprecatedSinceVersion.id,\n                sr.removedInVersion.id,\n                sr.sinceVersion.id\n            ],\n            values\n        });\n    }\n};\nApplicationReferenceDao = __decorate([\n    Injected()\n], ApplicationReferenceDao);\nexport { ApplicationReferenceDao };\n//# sourceMappingURL=ApplicationReferenceDao.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { or } from '@airport/air-traffic-control';\nimport { Injected } from '@airport/direction-indicator';\nimport { BaseApplicationRelationColumnDao, Q, } from '../generated/generated';\nlet ApplicationRelationColumnDao = class ApplicationRelationColumnDao extends BaseApplicationRelationColumnDao {\n    async findAllForColumns(columnIds) {\n        let rc;\n        return this.db.find.tree({\n            select: {},\n            from: [\n                rc = Q.ApplicationRelationColumn\n            ],\n            where: or(rc.oneColumn.id.in(columnIds), rc.manyColumn.id.in(columnIds))\n        });\n    }\n    async insert(applicationRelationColumns) {\n        let src;\n        const values = [];\n        for (const applicationRelationColumn of applicationRelationColumns) {\n            values.push([\n                applicationRelationColumn.id,\n                applicationRelationColumn.manyColumn ? applicationRelationColumn.manyColumn.id : null,\n                applicationRelationColumn.oneColumn ? applicationRelationColumn.oneColumn.id : null,\n                applicationRelationColumn.manyRelation ? applicationRelationColumn.manyRelation.id : null,\n                applicationRelationColumn.oneRelation ? applicationRelationColumn.oneRelation.id : null,\n                applicationRelationColumn.parentRelation ? applicationRelationColumn.parentRelation.id : null,\n                applicationRelationColumn.deprecatedSinceVersion ? applicationRelationColumn.deprecatedSinceVersion.id : null,\n                applicationRelationColumn.removedInVersion ? applicationRelationColumn.removedInVersion.id : null,\n                applicationRelationColumn.sinceVersion ? applicationRelationColumn.sinceVersion.id : null,\n            ]);\n        }\n        await this.db.insertValuesGenerateIds({\n            insertInto: src = Q.ApplicationRelationColumn,\n            columns: [\n                src.id,\n                src.manyColumn.id,\n                src.oneColumn.id,\n                src.manyRelation.id,\n                src.oneRelation.id,\n                src.parentRelation.id,\n                src.deprecatedSinceVersion.id,\n                src.removedInVersion.id,\n                src.sinceVersion.id\n            ],\n            values\n        });\n    }\n};\nApplicationRelationColumnDao = __decorate([\n    Injected()\n], ApplicationRelationColumnDao);\nexport { ApplicationRelationColumnDao };\n//# sourceMappingURL=ApplicationRelationColumnDao.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { undefinedToNull } from '@airport/ground-control';\nimport { BaseApplicationRelationDao, Q, } from '../generated/generated';\nlet ApplicationRelationDao = class ApplicationRelationDao extends BaseApplicationRelationDao {\n    async findAllForProperties(propertyIds) {\n        let r;\n        return this.db.find.tree({\n            select: {},\n            from: [\n                r = Q.ApplicationRelation\n            ],\n            where: r.property.id.in(propertyIds)\n        });\n    }\n    async insert(applicationRelations) {\n        let sr;\n        const values = [];\n        for (const applicationRelation of applicationRelations) {\n            values.push([\n                applicationRelation.id, applicationRelation.index,\n                applicationRelation.property.id,\n                undefinedToNull(applicationRelation.foreignKey),\n                undefinedToNull(applicationRelation.manyToOneElems),\n                undefinedToNull(applicationRelation.oneToManyElems),\n                applicationRelation.relationType, applicationRelation.isId,\n                applicationRelation.entity.id, applicationRelation.relationEntity.id,\n                applicationRelation.deprecatedSinceVersion ? applicationRelation.deprecatedSinceVersion.id : null,\n                applicationRelation.removedInVersion ? applicationRelation.removedInVersion.id : null,\n                applicationRelation.sinceVersion ? applicationRelation.sinceVersion.id : null,\n            ]);\n        }\n        await this.db.insertValuesGenerateIds({\n            insertInto: sr = Q.ApplicationRelation,\n            columns: [\n                sr.id,\n                sr.index,\n                sr.property.id,\n                sr.foreignKey,\n                sr.manyToOneElems,\n                sr.oneToManyElems,\n                sr.relationType,\n                sr.isId,\n                sr.entity.id,\n                sr.relationEntity.id,\n                sr.deprecatedSinceVersion.id,\n                sr.removedInVersion.id,\n                sr.sinceVersion.id\n            ],\n            values\n        });\n    }\n};\nApplicationRelationDao = __decorate([\n    Injected()\n], ApplicationRelationDao);\nexport { ApplicationRelationDao };\n//# sourceMappingURL=ApplicationRelationDao.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { and, Y } from '@airport/air-traffic-control';\nimport { Injected } from '@airport/direction-indicator';\nimport { BaseApplicationVersionDao, Q } from '../generated/generated';\nlet ApplicationVersionDao = class ApplicationVersionDao extends BaseApplicationVersionDao {\n    /*\n    async findAllLatestForApplicationIndexes(\n        applicationIndexes: ApplicationIndex[]\n    ): Promise<IApplicationVersion[]> {\n        let sv: QApplicationVersion\n\n        return await this.db.find.tree({\n            from: [\n                sv = Q.ApplicationVersion\n            ],\n            select: {},\n            where: and(\n                sv.id.in(this.idsForMaxVersionSelect()),\n                sv.application.index.in(applicationIndexes)\n            )\n        })\n    }\n    */\n    async findAllActiveOrderByApplicationIndexAndId() {\n        let sv;\n        // let s: QApplication\n        return await this.db.find.tree({\n            from: [\n                sv = Q.ApplicationVersion,\n                // s = sv.application.innerJoin()\n            ],\n            select: {},\n            orderBy: [\n                sv.application.index.asc(),\n                sv.id.desc()\n            ]\n        });\n    }\n    async findByDomainNamesAndApplicationNames(domainNames, applicationNames) {\n        let sv;\n        let s;\n        let d;\n        return await this.db.find.tree({\n            select: {\n                id: Y,\n                integerVersion: Y,\n                application: {\n                    domain: {\n                        name: Y\n                    },\n                    fullName: Y,\n                    name: Y\n                }\n            },\n            from: [\n                sv = Q.ApplicationVersion,\n                s = sv.application.innerJoin(),\n                d = s.domain.innerJoin()\n            ],\n            where: and(d.name.in(domainNames), s.name.in(applicationNames))\n        });\n    }\n    /*\n    async findMaxVersionedMapByApplicationAndDomainNames(\n        applicationDomainNames: DomainName[],\n        applicationNames: ApplicationName[]\n    ): Promise<Map<DomainName, Map<ApplicationName, IApplicationVersion>>> {\n        const maxVersionedMapByApplicationAndDomainNames\n                  : Map<DomainName, Map<ApplicationName, IApplicationVersion>>\n                  = new Map()\n\n        let sv: QApplicationVersion\n        let s: QApplication\n        let d: QDomain\n\n        const maxApplicationVersions: IApplicationVersion[] = <any>await this.db.find.tree({\n            select: {\n                integerVersion: Y,\n                majorVersion: Y,\n                minorVersion: Y,\n                patchVersion: Y,\n                application: {\n                    index: Y,\n                    name: Y,\n                    domain: {\n                        id: Y,\n                        name: Y\n                    }\n                },\n                id: Y\n            },\n            from: [\n                sv = Q.ApplicationVersion,\n                s = sv.application.innerJoin(),\n                d = s.domain.innerJoin()\n            ],\n            where: and(\n                sv.id.in(this.idsForMaxVersionSelect()),\n                d.name.in(applicationDomainNames),\n                s.name.in(applicationNames)\n            ),\n        })\n\n        for (const maxApplicationVersion of maxApplicationVersions) {\n            const application = maxApplicationVersion.application\n            this.utils.ensureChildJsMap(\n                maxVersionedMapByApplicationAndDomainNames, application.domain.name)\n                .set(application.name, maxApplicationVersion)\n        }\n\n\n        return maxVersionedMapByApplicationAndDomainNames\n    }\n\n    private idsForMaxVersionSelect(): RawFieldQuery<IQNumberField> {\n        let svMax\n        let sv2: QApplicationVersion\n\n        return field({\n            from: [\n                svMax = tree({\n                    from: [\n                        sv2 = Q.ApplicationVersion\n                    ],\n                    select: distinct({\n                        integerVersion: max(sv2.integerVersion),\n                        id: sv2.id,\n                        applicationIndex: sv2.application.index\n                    })\n                })\n            ],\n            select: svMax.id\n        })\n    }\n*/\n    async insert(applicationVersions) {\n        let sv;\n        const values = [];\n        for (const applicationVersion of applicationVersions) {\n            values.push([\n                applicationVersion.id, applicationVersion.integerVersion,\n                applicationVersion.versionString, applicationVersion.majorVersion,\n                applicationVersion.minorVersion, applicationVersion.patchVersion,\n                applicationVersion.application.index, applicationVersion.jsonApplication\n            ]);\n        }\n        await this.db.insertValuesGenerateIds({\n            insertInto: sv = Q.ApplicationVersion,\n            columns: [\n                sv.id,\n                sv.integerVersion,\n                sv.versionString,\n                sv.majorVersion,\n                sv.minorVersion,\n                sv.patchVersion,\n                sv.application.index,\n                sv.jsonApplication\n            ],\n            values\n        });\n    }\n};\nApplicationVersionDao = __decorate([\n    Injected()\n], ApplicationVersionDao);\nexport { ApplicationVersionDao };\n//# sourceMappingURL=ApplicationVersionDao.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { BaseApplicationVersionDuo } from '../generated/generated';\nlet ApplicationVersionDuo = class ApplicationVersionDuo extends BaseApplicationVersionDuo {\n};\nApplicationVersionDuo = __decorate([\n    Injected()\n], ApplicationVersionDuo);\nexport { ApplicationVersionDuo };\n//# sourceMappingURL=ApplicationVersionDuo.js.map","import { lib } from '@airport/direction-indicator';\nimport { DomainDao } from './dao/DomainDao';\nimport { ApplicationColumnDao } from './dao/ApplicationColumnDao';\nimport { ApplicationDao } from './dao/ApplicationDao';\nimport { ApplicationEntityDao } from './dao/ApplicationEntityDao';\nimport { ApplicationPropertyColumnDao } from './dao/ApplicationPropertyColumnDao';\nimport { ApplicationPropertyDao } from './dao/ApplicationPropertyDao';\nimport { ApplicationReferenceDao } from './dao/ApplicationReferenceDao';\nimport { ApplicationRelationColumnDao } from './dao/ApplicationRelationColumnDao';\nimport { ApplicationRelationDao } from './dao/ApplicationRelationDao';\nimport { ApplicationVersionDao } from './dao/ApplicationVersionDao';\nimport { ApplicationVersionDuo } from './duo/ApplicationVersionDuo';\nconst trafficPattern = lib('traffic-pattern');\nexport const DOMAIN_DAO = trafficPattern.token({\n    class: DomainDao,\n    interface: 'IDomainDao',\n    token: 'DOMAIN_DAO'\n});\nexport const APPLICATION_COLUMN_DAO = trafficPattern.token({\n    class: ApplicationColumnDao,\n    interface: 'IApplicationColumnDao',\n    token: 'APPLICATION_COLUMN_DAO'\n});\nexport const APPLICATION_DAO = trafficPattern.token({\n    class: ApplicationDao,\n    interface: 'IApplicationDao',\n    token: 'APPLICATION_DAO'\n});\nexport const APPLICATION_ENTITY_DAO = trafficPattern.token({\n    class: ApplicationEntityDao,\n    interface: 'IApplicationEntityDao',\n    token: 'APPLICATION_ENTITY_DAO'\n});\nexport const APPLICATION_PROPERTY_COLUMN_DAO = trafficPattern.token({\n    class: ApplicationPropertyColumnDao,\n    interface: 'IApplicationPropertyColumnDao',\n    token: 'APPLICATION_PROPERTY_COLUMN_DAO'\n});\nexport const APPLICATION_PROPERTY_DAO = trafficPattern.token({\n    class: ApplicationPropertyDao,\n    interface: 'IApplicationPropertyDao',\n    token: 'APPLICATION_PROPERTY_DAO'\n});\nexport const APPLICATION_REFERENCE_DAO = trafficPattern.token({\n    class: ApplicationReferenceDao,\n    interface: 'IApplicationReferenceDao',\n    token: 'APPLICATION_REFERENCE_DAO'\n});\nexport const APPLICATION_RELATION_COLUMN_DAO = trafficPattern.token({\n    class: ApplicationRelationColumnDao,\n    interface: 'IApplicationRelationColumnDao',\n    token: 'APPLICATION_RELATION_COLUMN_DAO'\n});\nexport const APPLICATION_RELATION_DAO = trafficPattern.token({\n    class: ApplicationRelationDao,\n    interface: 'IApplicationRelationDao',\n    token: 'APPLICATION_RELATION_DAO'\n});\nexport const APPLICATION_VERSION_DAO = trafficPattern.token({\n    class: ApplicationVersionDao,\n    interface: 'IApplicationVersionDao',\n    token: 'APPLICATION_VERSION_DAO'\n});\nexport const APPLICATION_VERSION_DUO = trafficPattern.token({\n    class: ApplicationVersionDuo,\n    interface: 'IApplicationVersionDuo',\n    token: 'APPLICATION_VERSION_DUO'\n});\n//# sourceMappingURL=tokens.js.map","import { SortOrder } from '@airport/ground-control';\nimport { AbstractEntityOrderByParser } from './AbstractEntityOrderByParser';\n/**\n * Created by Papa on 10/16/2016.\n */\n/**\n * Will hierarchically order the results of the query using breadth-first processing.\n * Within a given entity will take into account the sort order specified in the Order By\n * clause.\n */\nexport class EntityOrderByParser extends AbstractEntityOrderByParser {\n    /**\n     * Using the following algorithm\n     * http://stackoverflow.com/questions/2549541/performing-breadth-first-search-recursively\n     * :\n     BinarySearchTree.prototype.breadthFirst = function() {\n      var result = '',\n      queue = [],\n      current = this.root;\n      if (!current) return null;\n      queue.push(current);\n      while (current = queue.shift()) {\n            result += current.value + ' ';\n            current.left && queue.push(current.left);\n            current.right && queue.push(current.right);\n        }\n      return result;\n     }\n     *\n     * @param joinTree\n     * @param qEntityMapByAlias\n     * @returns {string}\n     */\n    getOrderByFragment(joinTree, qEntityMapByAlias, context) {\n        let orderByFragments = [];\n        let orderBy = [];\n        if (this.orderBy) {\n            orderBy = this.orderBy.slice();\n        }\n        const selectFragmentQueue = [];\n        let currentSelectFragment = this.rootSelectClauseFragment;\n        selectFragmentQueue.push(currentSelectFragment);\n        const joinNodeQueue = [];\n        let currentJoinNode = joinTree;\n        joinNodeQueue.push(currentJoinNode);\n        // Perform breadth-first select clause traversal\n        while ((currentSelectFragment = selectFragmentQueue.shift())\n            && (currentJoinNode = joinNodeQueue.shift())) {\n            const tableAlias = this.relationManager.getAlias(currentJoinNode.jsonRelation);\n            const dbEntity = qEntityMapByAlias[tableAlias].__driver__.dbEntity;\n            const currentEntityOrderBy = [];\n            let parentNodeFound;\n            orderBy = orderBy.filter((orderByField) => {\n                if (parentNodeFound) {\n                    return true;\n                }\n                const orderByDbEntity = this.airportDatabase.applications[orderByField.si]\n                    .currentVersion[0].applicationVersion.entities[orderByField.ti];\n                const dbColumn = orderByDbEntity.columns[orderByField.ci];\n                if (this.isForParentNode(currentJoinNode, orderByField)) {\n                    throw new Error(`Found out of order entry in Order By \r\n\t\t\t\t\t[${orderByDbEntity.applicationVersion.application.name} - ${orderByDbEntity.name}.${dbColumn.name}].\r\n\t\t\t\t\tEntries must be ordered hierarchically, in breadth-first order.`);\n                }\n                if (orderByField.si !== dbEntity.applicationVersion.application.index || orderByField.ti !== dbEntity.index) {\n                    return true;\n                }\n                this.qValidator.validateReadProperty(dbColumn);\n                orderByField.fa = `${tableAlias}.${dbColumn.name}`;\n                currentEntityOrderBy.push(orderByField);\n                return false;\n            });\n            // NOTE: Order by Ids is necessary to correctly reconstruct \n            // the entity graph\n            const allColumnsToSortBy = [];\n            const idColumnsToSortBy = [];\n            // By now the select clause is guaranteed to have:\n            // Either all ID columns defined on the entity (if @Id columns are defined)\n            // Or ALL of the columns on the entity (if no @Id columns are defined)\n            for (const propertyName in currentSelectFragment) {\n                const dbProperty = dbEntity.propertyMap[propertyName];\n                if (dbProperty.relation && dbProperty.relation.length) {\n                    for (const dbPropertyColumn of dbProperty.propertyColumns) {\n                        const dbColumn = dbPropertyColumn.column;\n                        allColumnsToSortBy.push(dbColumn.name);\n                        if (dbProperty.isId) {\n                            idColumnsToSortBy.push(dbColumn.name);\n                        }\n                    }\n                    if (!currentJoinNode.childNodes.length) {\n                        continue;\n                    }\n                    const dbRelation = dbProperty.relation[0];\n                    const dbEntity = dbRelation.relationEntity;\n                    const matchingNodes = currentJoinNode.childNodes.filter(childNode => {\n                        const jsonRelation = childNode.jsonRelation;\n                        return jsonRelation.si === dbEntity.applicationVersion.application.index\n                            && jsonRelation.ti === dbEntity.index;\n                    });\n                    if (!matchingNodes.length) {\n                        return;\n                    }\n                    selectFragmentQueue.push(this.rootSelectClauseFragment[propertyName]);\n                    const childJoinNode = currentJoinNode.getEntityRelationChildNode(dbRelation);\n                    joinNodeQueue.push(childJoinNode);\n                }\n                else {\n                    const dbColumn = dbProperty.propertyColumns[0].column;\n                    allColumnsToSortBy.push(dbColumn.name);\n                    // Tentatively add column to the list of columnIndexes to sort by\n                    if (dbProperty.isId) {\n                        idColumnsToSortBy.push(dbColumn.name);\n                    }\n                }\n            }\n            let entityOrderByFragments = this.buildOrderByFragmentForEntity(tableAlias, allColumnsToSortBy, idColumnsToSortBy, currentEntityOrderBy, qEntityMapByAlias);\n            orderByFragments = orderByFragments.concat(entityOrderByFragments);\n        }\n        if (orderBy.length) {\n            throw new Error(`\r\n\t\t\tFound entries in Order By for tables not found in select clause.  \r\n\t\t\tEntries must be ordered hierarchically, in breadth-first order.`);\n        }\n        return orderByFragments.join(', ');\n    }\n    buildOrderByFragmentForEntity(tableAlias, allColumnsToSortBy, idColumnsToSortBy, currentEntityOrderBy, qEntityMapByAlias) {\n        const finalOrderByColumnsFragments = [];\n        const inputOrderByPropertyNameSet = {};\n        const dbEntity = qEntityMapByAlias[tableAlias].__driver__.dbEntity;\n        // First add the fields specified in the Order By clause for this entity\n        currentEntityOrderBy.forEach((orderByField) => {\n            finalOrderByColumnsFragments.push(orderByField);\n            const columnName = dbEntity.columns[orderByField.ci].name;\n            inputOrderByPropertyNameSet[columnName] = true;\n        });\n        if (idColumnsToSortBy.length) {\n            // Then if the ID column is present in the result set, just order by id\n            for (const idColumnName of idColumnsToSortBy) {\n                if (!inputOrderByPropertyNameSet[idColumnName]) {\n                    finalOrderByColumnsFragments.push({\n                        fa: `${tableAlias}.${idColumnName}`,\n                        so: SortOrder.ASCENDING\n                    });\n                }\n            }\n        }\n        else {\n            allColumnsToSortBy.forEach((columnName) => {\n                if (!inputOrderByPropertyNameSet[columnName]) {\n                    finalOrderByColumnsFragments.push({\n                        fa: `${tableAlias}.${columnName}`,\n                        so: SortOrder.ASCENDING\n                    });\n                }\n            });\n        }\n        return this.getCommonOrderByFragment(finalOrderByColumnsFragments);\n    }\n    isForParentNode(joinTreeNode, orderByField) {\n        do {\n            joinTreeNode = joinTreeNode.parentNode;\n            if (!joinTreeNode) {\n                return false;\n            }\n            if (orderByField.si === joinTreeNode.jsonRelation.si\n                && orderByField.ti === joinTreeNode.jsonRelation.ti) {\n                return true;\n            }\n        } while (joinTreeNode.parentNode);\n        return false;\n    }\n}\n//# sourceMappingURL=EntityOrderByParser.js.map","import { SortOrder } from '@airport/ground-control';\nexport class AbstractEntityOrderByParser {\n    constructor(rootSelectClauseFragment, airportDatabase, qValidator, relationManager, orderBy) {\n        this.rootSelectClauseFragment = rootSelectClauseFragment;\n        this.airportDatabase = airportDatabase;\n        this.qValidator = qValidator;\n        this.relationManager = relationManager;\n        this.orderBy = orderBy;\n    }\n    getCommonOrderByFragment(orderByFields) {\n        return orderByFields.map((orderByField) => {\n            switch (orderByField.so) {\n                case SortOrder.ASCENDING:\n                    return `${orderByField.fa} ASC`;\n                case SortOrder.DESCENDING:\n                    return `${orderByField.fa} DESC`;\n            }\n        })\n            .join(', ');\n    }\n}\n//# sourceMappingURL=AbstractEntityOrderByParser.js.map","import { SortOrder } from '@airport/ground-control';\n/**\n * Created by Papa on 10/16/2016.\n */\n/**\n * Will order the results exactly as specified in the Order By clause\n */\nexport class ExactOrderByParser {\n    constructor(validator) {\n        this.validator = validator;\n    }\n    getOrderByFragment(rootSelectClauseFragment, orderBy) {\n        return orderBy.map((orderByField) => {\n            this.validator.validateAliasedFieldAccess(orderByField.fa);\n            switch (orderByField.so) {\n                case SortOrder.ASCENDING:\n                    return `${orderByField.fa} ASC`;\n                case SortOrder.DESCENDING:\n                    return `${orderByField.fa} DESC`;\n            }\n        })\n            .join(', ');\n    }\n}\n//# sourceMappingURL=ExactOrderByParser.js.map","import { SortOrder } from '@airport/ground-control';\n/**\n * Created by Papa on 11/8/2016.\n */\n/**\n * Will hierarchically order the results of the query using breadth-first processing.\n * Within a given sub-select facade will take into account the sort order specified in the Order\n * By clause.\n */\nexport class MappedOrderByParser {\n    constructor(validator) {\n        this.validator = validator;\n    }\n    /**\n     * Using the following algorithm\n     * http://stackoverflow.com/questions/2549541/performing-breadth-first-search-recursively\n     * :\n     BinarySearchTree.prototype.breadthFirst = function() {\n      var result = '',\n      queue = [],\n      current = this.root;\n\n      if (!current) return null;\n      queue.push(current);\n\n      while (current = queue.shift()) {\n            result += current.value + ' ';\n            current.left && queue.push(current.left);\n            current.right && queue.push(current.right);\n        }\n      return result;\n     }\n     *\n     * @param joinTree\n     * @param qEntityMapByAlias\n     * @returns {string}\n     */\n    getOrderByFragment(rootSelectClauseFragment, originalOrderBy) {\n        let orderByFragments = [];\n        let orderBy = [];\n        if (originalOrderBy) {\n            orderBy = originalOrderBy.slice();\n        }\n        let selectFragmentQueue = [];\n        let currentSelectFragment = rootSelectClauseFragment;\n        selectFragmentQueue.push(currentSelectFragment);\n        // Breadth first traversal using a queue\n        while (currentSelectFragment = selectFragmentQueue.shift()) {\n            let currentSelectFragmentFieldSet = {};\n            for (let propertyName in currentSelectFragment) {\n                let field = currentSelectFragment[propertyName];\n                if (!field.appliedFunctions) {\n                    selectFragmentQueue.push(field);\n                    continue;\n                }\n                currentSelectFragmentFieldSet[field.fa] = true;\n            }\n            let currentEntityOrderBy = [];\n            // First add the fields specified in the query Order By clause for this entity, in the\n            // order they are specified\n            orderBy = orderBy.filter((orderByField) => {\n                if (!currentSelectFragmentFieldSet[orderByField.fa]) {\n                    return true;\n                }\n                delete currentSelectFragmentFieldSet[orderByField.fa];\n                currentEntityOrderBy.push(orderByField);\n                return false;\n            });\n            // Then add all the rest of the fields for this entity, we are maintaining the tree\n            // structure of the result\n            for (let alias in currentSelectFragmentFieldSet) {\n                currentEntityOrderBy.push({\n                    fa: alias,\n                    so: SortOrder.ASCENDING\n                });\n            }\n            let entityOrderByFragments = this.buildOrderByFragmentForEntity(currentEntityOrderBy);\n            orderByFragments = orderByFragments.concat(entityOrderByFragments);\n        }\n        if (orderBy.length) {\n            throw new Error(`Found entries in Order By for tables not found in select clause.  Entries must be ordered hierarchically, in breadth-first order.`);\n        }\n        return orderByFragments.join(', ');\n    }\n    buildOrderByFragmentForEntity(orderByFields) {\n        return orderByFields.map((orderByField) => {\n            this.validator.validateAliasedFieldAccess(orderByField.fa);\n            switch (orderByField.so) {\n                case SortOrder.ASCENDING:\n                    return `${orderByField.fa} ASC`;\n                case SortOrder.DESCENDING:\n                    return `${orderByField.fa} DESC`;\n            }\n        });\n    }\n}\n//# sourceMappingURL=MappedOrderByParser.js.map","import { ensureChildArray, ensureChildMap } from '@airport/ground-control';\n// For MtO mapping in bridged queries\nexport class GraphMtoMapper {\n    constructor() {\n        // Map of all objects that have a given MtO reference\n        // [] MtO reference Application Entity Index\n        // [] MtO reference Entity Index\n        this.mtoStubReferenceMap = [];\n    }\n    addMtoReference(mtoStubReference, mtoEntityIdValue) {\n        const mtoDbEntity = mtoStubReference.mtoDbEntity;\n        let mtoEntitiesForTypeMap = ensureChildMap(ensureChildArray(this.mtoStubReferenceMap, mtoDbEntity.applicationVersion.application.index), mtoDbEntity.index);\n        let mtosForEntity = ensureChildMap(mtoEntitiesForTypeMap, mtoEntityIdValue);\n        mtosForEntity[mtoStubReference.mtoRelationField] = mtoStubReference;\n    }\n    populateMtos(entityMap) {\n        for (const applicationIndex in this.mtoStubReferenceMap) {\n            const mtoEntitiesForApplicationMap = this.mtoStubReferenceMap[applicationIndex];\n            for (const entityIndex in mtoEntitiesForApplicationMap) {\n                const mtoEntitiesForTypeMap = mtoEntitiesForApplicationMap[entityIndex];\n                for (let mtoEntityId in mtoEntitiesForTypeMap) {\n                    let mtosForEntity = mtoEntitiesForTypeMap[mtoEntityId];\n                    for (let mtoPropertyName in mtosForEntity) {\n                        let mtoStubReference = mtosForEntity[mtoPropertyName];\n                        let otmDbEntity = mtoStubReference.otmDbEntity;\n                        if (!entityMap[otmDbEntity.applicationVersion.application.index]) {\n                            continue;\n                        }\n                        let otmEntitiesForTypeMap = entityMap[otmDbEntity.applicationVersion.application.index][otmDbEntity.index];\n                        if (!otmEntitiesForTypeMap) {\n                            continue;\n                        }\n                        let otmEntity = otmEntitiesForTypeMap[mtoStubReference.otmEntityId];\n                        if (!otmEntity) {\n                            continue;\n                        }\n                        mtoStubReference.mtoParentObject[mtoStubReference.mtoRelationField] = otmEntity;\n                    }\n                }\n            }\n        }\n    }\n}\n//# sourceMappingURL=GraphMtoMapper.js.map","import { ensureChildArray, ensureChildMap } from '@airport/ground-control';\n// For OtM mapping in bridged queries\nexport class GraphOtmMapper {\n    constructor() {\n        // Map of MtO referred objects by OtM references\n        // [] OTM Reference Entity Application Index\n        // [] OTM Reference Entity Index\n        this.mtoEntityReferenceMap = [];\n        // Map of objects with OtM references by\n        // [] OtM reference Application Entity Index\n        // [] OtM reference Entity Index\n        this.otmEntityReferenceMap = [];\n    }\n    addMtoReference(mtoStubReference, mtoEntityId, dbEntity, context) {\n        // If the @OneToMany({ mappedBy: ... }) is missing, there is nothing to map to\n        if (!mtoStubReference.otmEntityField) {\n            return;\n        }\n        // Add into mtoEntityReferenceMap\n        const otmDbEntity = mtoStubReference.otmDbEntity;\n        let mtoEntityReferenceMapForEntity = ensureChildMap(ensureChildArray(this.mtoEntityReferenceMap, otmDbEntity.applicationVersion.application.index), otmDbEntity.index);\n        // TODO: MappedEntityArray is not serializable, make it so before using\n        // let mtoEntityReferenceMapForEntity: {\n        // \t[otmReferenceId: string]: { [otmProperty: string]: MappedEntityArray<any> }\n        // }                 = ensureChildMap(\n        // \tensureChildArray(this.mtoEntityReferenceMap, otmDbEntity.applicationVersion.application.index),\n        // \totmDbEntity.index\n        // )\n        // let mapForOtmEntity: { [otmProperty: string]: MappedEntityArray<any> } = mtoEntityReferenceMapForEntity[mtoStubReference.otmEntityId]\n        let mapForOtmEntity = mtoEntityReferenceMapForEntity[mtoStubReference.otmEntityId];\n        if (!mapForOtmEntity) {\n            mapForOtmEntity = {};\n            mtoEntityReferenceMapForEntity[mtoStubReference.otmEntityId] = mapForOtmEntity;\n        }\n        // let mtoCollection: MappedEntityArray<any> = mapForOtmEntity[mtoStubReference.otmEntityField]\n        let mtoCollection = mapForOtmEntity[mtoStubReference.otmEntityField];\n        if (!mtoCollection) {\n            // mtoCollection = newMappedEntityArray<any>(this.applicationUtils, dbEntity)\n            mtoCollection = [];\n            mapForOtmEntity[mtoStubReference.otmEntityField]\n                = mtoCollection;\n        }\n        // mtoCollection.put(mtoStubReference.mtoParentObject)\n        mtoCollection.push(mtoStubReference.mtoParentObject);\n    }\n    addOtmReference(otmStubReference, otmEntityIdValue) {\n        // Add into otoEntityReferenceMap\n        const otmDbEntity = otmStubReference.otmDbEntity;\n        let mtoEntityReferenceMapForEntity = ensureChildMap(ensureChildArray(this.otmEntityReferenceMap, otmDbEntity.applicationVersion.application.index), otmDbEntity.index);\n        let otmRecordByPropertyName = mtoEntityReferenceMapForEntity[otmEntityIdValue];\n        if (!otmRecordByPropertyName) {\n            otmRecordByPropertyName = {};\n            mtoEntityReferenceMapForEntity[otmEntityIdValue] = otmRecordByPropertyName;\n        }\n        otmRecordByPropertyName[otmStubReference.otmPropertyName] = otmStubReference.otmObject;\n    }\n    populateOtms(entityMap, keepMappedEntityArrays) {\n        for (const applicationIndex in this.mtoEntityReferenceMap) {\n            const mtoEntityReferenceMapForApplication = this.mtoEntityReferenceMap[applicationIndex];\n            for (const entityIndex in mtoEntityReferenceMapForApplication) {\n                const mtoEntityReferenceMapForEntity = mtoEntityReferenceMapForApplication[entityIndex];\n                // If there are no entities of this type in query results, just keep the stubs\n                if (!entityMap[applicationIndex]) {\n                    continue;\n                }\n                let entityOfTypeMap = entityMap[applicationIndex][entityIndex];\n                // If there are no entities of this type in query results, just keep the stubs\n                if (!entityOfTypeMap) {\n                    continue;\n                }\n                // If there are no OTM for this type in query results, no mapping needs to happen\n                if (!this.otmEntityReferenceMap[applicationIndex]) {\n                    continue;\n                }\n                let entityWithOtmMap = this.otmEntityReferenceMap[applicationIndex][entityIndex];\n                // If there are no OTM for this type in query results, no mapping needs to happen\n                if (!entityWithOtmMap) {\n                    continue;\n                }\n                for (let otmEntityId in mtoEntityReferenceMapForEntity) {\n                    let referencedEntitiesByPropertyMap = mtoEntityReferenceMapForEntity[otmEntityId];\n                    let otmRecordByPropertyName = entityWithOtmMap[otmEntityId];\n                    // If there are no OtMs for this entity, no mapping needs to happen\n                    if (!otmRecordByPropertyName) {\n                        continue;\n                    }\n                    for (let otmProperty in referencedEntitiesByPropertyMap) {\n                        let otmEntity = otmRecordByPropertyName[otmProperty];\n                        // If OtM entity doesn't have this collection, no mapping needs to happen\n                        if (!otmEntity) {\n                            continue;\n                        }\n                        let referencedEntityMap = referencedEntitiesByPropertyMap[otmProperty];\n                        let otmCollection = otmEntity[otmProperty];\n                        // If @OneToMany isn't set yet\n                        if (!otmCollection) {\n                            otmEntity[otmProperty] = referencedEntityMap;\n                        }\n                        else {\n                            otmCollection.putAll(referencedEntityMap);\n                        }\n                        if (!keepMappedEntityArrays) {\n                            otmRecordByPropertyName[otmProperty] = otmEntity[otmProperty].slice();\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n//# sourceMappingURL=GraphOtmMapper.js.map","/**\n * Created by Papa on 10/16/2016.\n */\nexport class GraphQueryConfiguration {\n    constructor() {\n        // This is for conflicts on OneToMany references\n        this.strict = true;\n        this.mapped = true;\n        // Always fail on no ID - bridged entities must have IDs\n        // failOnNoId: boolean = true;\n        // Assume there are no conflicts on ManyToOneReferences\n        //failOnManyToOneConflicts: boolean = true;\n    }\n}\nexport class AbstractObjectResultParser {\n    constructor(applicationUtils, entityStateManager) {\n        this.applicationUtils = applicationUtils;\n        this.entityStateManager = entityStateManager;\n    }\n    addManyToOneStub(resultObject, propertyName, relationInfos, context) {\n        let manyToOneStub = {};\n        this.entityStateManager.isStub(manyToOneStub);\n        resultObject[propertyName] = manyToOneStub;\n        let haveAllIds = true;\n        relationInfos.forEach((relationInfo) => {\n            if (this.applicationUtils.isIdEmpty(relationInfo.value)) {\n                haveAllIds = false;\n                return;\n            }\n            let lastObject;\n            let currentObject = manyToOneStub;\n            let currentIndex = 1;\n            const propertyNameChain = relationInfo.propertyNameChains[0];\n            while (currentIndex < propertyNameChain.length) {\n                // If there is no object in context, create one\n                if (!currentObject) {\n                    currentObject = {};\n                    this.entityStateManager.markAsStub(currentObject);\n                    lastObject[propertyNameChain[currentIndex - 1]] = currentObject;\n                }\n                // If it's not a leaf (more objects in the chain exist)\n                if (currentIndex < propertyNameChain.length - 1) {\n                    lastObject = currentObject;\n                    currentObject = lastObject[propertyNameChain[currentIndex]];\n                }\n                else {\n                    // Otherwise, just assign the value\n                    currentObject[propertyNameChain[currentIndex]] = relationInfo.value;\n                }\n                currentIndex++;\n            }\n        });\n        return haveAllIds;\n    }\n}\n//# sourceMappingURL=IEntityResultParser.js.map","import { \n// newMappedEntityArray,\nobjectExists } from '@airport/air-traffic-control';\nimport { ensureChildArray, ensureChildMap, EntityRelationType } from '@airport/ground-control';\nimport { GraphMtoMapper } from './GraphMtoMapper';\nimport { GraphOtmMapper } from './GraphOtmMapper';\nimport { AbstractObjectResultParser } from './IEntityResultParser';\n/**\n * Created by Papa on 10/16/2016.\n */\n/**\n * The goal of this parser to to bridge all entity references and arrive at an\n * inter-connected graph (where possible).\n */\nexport class EntityGraphResultParser extends AbstractObjectResultParser {\n    constructor(config, rootDbEntity, applicationUtils, entityStateManager) {\n        super(applicationUtils, entityStateManager);\n        this.config = config;\n        this.rootDbEntity = rootDbEntity;\n        // Keys can only be strings or numbers | TODO: change to JS Maps, if needed\n        this.entityMapByApplicationAndTableIndexes = [];\n        // One-To-Many & MtO temp stubs (before entityId is available)\n        this.otmStubBuffer = [];\n        this.mtoStubBuffer = [];\n        // Used in ENTITY_FLATTENED queries\n        this.currentResultRow = [];\n        this.otmMapper = new GraphOtmMapper();\n        this.mtoMapper = new GraphMtoMapper();\n    }\n    addEntity(entityAlias, dbEntity, context) {\n        return this.applicationUtils.getNewEntity(dbEntity);\n    }\n    addProperty(entityAlias, resultObject, dataType, propertyName, propertyValue) {\n        resultObject[propertyName] = propertyValue;\n        return objectExists(propertyValue);\n    }\n    bufferManyToOneStub(entityAlias, dbEntity, resultObject, propertyName, relationDbEntity, relationInfos, context) {\n        const oneToManyStubAdded = this.addManyToOneStub(resultObject, propertyName, relationInfos, context);\n        if (oneToManyStubAdded) {\n            const relatedEntityId = this.applicationUtils.getIdKey(resultObject[propertyName], relationDbEntity);\n            this.bufferManyToOne(dbEntity, propertyName, relationDbEntity, relatedEntityId);\n        }\n    }\n    bufferBlankManyToOneStub(entityAlias, resultObject, propertyName) {\n        resultObject[propertyName] = null;\n        // Nothing to do for bridged parser - bridging will map blanks, where possible\n    }\n    bufferManyToOneObject(entityAlias, dbEntity, resultObject, propertyName, relationDbEntity, childResultObject, context) {\n        resultObject[propertyName] = childResultObject;\n        const relatedEntityId = this.applicationUtils.getIdKey(resultObject[propertyName], relationDbEntity);\n        this.bufferManyToOne(dbEntity, propertyName, relationDbEntity, relatedEntityId);\n    }\n    bufferBlankManyToOneObject(entityAlias, resultObject, propertyName) {\n        resultObject[propertyName] = null;\n        // Nothing to do for bridged parser - bridging will map blanks, where possible\n    }\n    bufferOneToManyStub(otmDbEntity, otmPropertyName) {\n        this.bufferOneToMany(otmDbEntity, otmPropertyName);\n    }\n    bufferOneToManyCollection(entityAlias, resultObject, otmDbEntity, propertyName, relationDbEntity, childResultObject, context) {\n        this.bufferOneToMany(otmDbEntity, propertyName);\n        // TODO: MappedEntityArray is not serializable, make it so before using\n        // let childResultsArray = newMappedEntityArray(this.applicationUtils, relationDbEntity)\n        // childResultsArray.put(childResultObject)\n        // resultObject[propertyName] = childResultsArray\n        resultObject[propertyName] = [childResultObject];\n    }\n    bufferBlankOneToMany(entityAlias, resultObject, otmEntityName, propertyName, relationDbEntity, context) {\n        // TODO: MappedEntityArray is not serializable, make it so before using\n        // resultObject[propertyName] = newMappedEntityArray<any>(this.applicationUtils, relationDbEntity)\n        resultObject[propertyName] = [];\n    }\n    flushEntity(entityAlias, dbEntity, selectClauseFragment, entityIdValue, resultObject, context) {\n        if (!entityIdValue) {\n            throw new Error(`No Id provided for entity \r\n\t\t\t'${dbEntity.applicationVersion.application.name}.${dbEntity.name}'`);\n        }\n        let currentEntity = this.getEntityToFlush(dbEntity, selectClauseFragment, entityIdValue, resultObject, context);\n        this.flushRelationStubBuffers(entityIdValue, currentEntity, dbEntity, context);\n        return currentEntity;\n    }\n    flushRow() {\n        // Nothing to do, bridged queries don't rely on rows changing\n    }\n    bridge(parsedResults, selectClauseFragment, context) {\n        this.mtoMapper.populateMtos(this.entityMapByApplicationAndTableIndexes);\n        this.otmMapper.populateOtms(this.entityMapByApplicationAndTableIndexes, !this.config || this.config.mapped);\n        // merge any out of order entity references (there shouldn't be any)\n        // TODO: MappedEntityArray is not serializable, make it so before using\n        // let resultMEA = newMappedEntityArray(this.applicationUtils, this.rootDbEntity)\n        // resultMEA.putAll(parsedResults)\n        // if (!this.config || this.config.mapped) {\n        // \treturn resultMEA\n        // }\n        // return resultMEA.toArray()\n        return parsedResults;\n    }\n    bufferManyToOne(dbEntity, propertyName, relationDbEntity, relatedEntityId) {\n        let otmEntityField;\n        for (const dbRelation of relationDbEntity.relations) {\n            switch (dbRelation.relationType) {\n                case EntityRelationType.ONE_TO_MANY:\n                    break;\n                case EntityRelationType.MANY_TO_ONE:\n                    continue;\n                default:\n                    throw new Error(`Unknown EntityRelationType: ${dbRelation.relationType}`);\n            }\n            if (dbRelation.oneToManyElems && dbRelation.oneToManyElems.mappedBy) {\n                if (dbEntity.id === dbRelation.relationEntity.id\n                    || dbRelation.oneToManyElems.mappedBy === propertyName) {\n                    otmEntityField = dbRelation.property.name;\n                }\n            }\n        }\n        this.mtoStubBuffer.push({\n            otmEntityId: relatedEntityId,\n            otmDbEntity: relationDbEntity,\n            otmEntityField: otmEntityField,\n            mtoDbEntity: dbEntity,\n            mtoRelationField: propertyName,\n            mtoParentObject: null\n        });\n    }\n    bufferOneToMany(otmDbEntity, otmPropertyName) {\n        this.otmStubBuffer.push({\n            otmDbEntity: otmDbEntity,\n            otmPropertyName: otmPropertyName,\n            otmObject: null\n        });\n    }\n    getEntityToFlush(dbEntity, selectClauseFragment, idValue, resultObject, context) {\n        if (!idValue) {\n            throw new Error(`Entity ID not specified for entity \r\n\t\t\t'${dbEntity.applicationVersion.application.name}.${dbEntity.name}'.`);\n        }\n        let entityMapForName = ensureChildMap(ensureChildArray(this.entityMapByApplicationAndTableIndexes, dbEntity.applicationVersion.application.index), dbEntity.index);\n        let existingEntity = entityMapForName[idValue];\n        let currentEntity = this.mergeEntities(existingEntity, resultObject, dbEntity, selectClauseFragment, context);\n        entityMapForName[idValue] = currentEntity;\n        return currentEntity;\n    }\n    // Must merge the one-to-many relationships returned as part of the result tree\n    /**\n     * Merge entities with of the same class and with the same Id\n     *\n     * @param source\n     * @param target\n     * @param qEntity\n     * @param selectClauseFragment\n     * @param entityPropertyTypeMap\n     * @param entityRelationMap\n     * @returns {any}\n     */\n    mergeEntities(source, target, dbEntity, selectClauseFragment, context) {\n        if (!source || target === source) {\n            return target;\n        }\n        const id = this.applicationUtils.getIdKey(target, dbEntity);\n        for (let propertyName in selectClauseFragment) {\n            if (selectClauseFragment[propertyName] === undefined) {\n                continue;\n            }\n            const dbProperty = dbEntity.propertyMap[propertyName];\n            // Merge properties (conflicts detected at query parsing time):\n            if (!dbProperty.relation || !dbProperty.relation.length) {\n                // If source property doesn't exist\n                if (this.applicationUtils.isEmpty(source[propertyName])) {\n                    // set the source property to value of target\n                    source[propertyName] = target[propertyName];\n                }\n                // Else if target property doesn't exist, keep the source value\n                // Else, assume that properties must be the same\n            }\n            // Merge relations\n            else {\n                const childSelectClauseFragment = selectClauseFragment[propertyName];\n                // For stubs (conflicts detected at query parsing time)\n                if (childSelectClauseFragment == null) {\n                    // For Many-to-One stubs, assume they are are the same and don't detect\n                    // conflicts, just merge\n                    source[propertyName] = target[propertyName];\n                    // Don't process One-to-Many stubs yet (not all related MTOs may have been\n                    // collected).\n                }\n                // For actual objects\n                else {\n                    const dbRelation = dbProperty.relation[0];\n                    const childDbEntity = dbRelation.relationEntity;\n                    switch (dbRelation.relationType) {\n                        case EntityRelationType.MANY_TO_ONE:\n                            // Many-to-One (conflicts detected at query parsing time)\n                            // If source is missing this mapping and target has it\n                            if (source[propertyName] === undefined && target[propertyName] !== undefined) {\n                                // set the source property to value of target\n                                source[propertyName] = target[propertyName];\n                            }\n                            // Else if target property doesn't exist, keep the source value\n                            // Assume that the child objects have already been merged themselves and\n                            // don't process\n                            break;\n                        case EntityRelationType.ONE_TO_MANY:\n                            let sourceArray = source[propertyName];\n                            const targetArray = target[propertyName];\n                            // Because parseQueryResult is depth-first, all child objects have already\n                            // been processed\n                            // TODO: this will probably fail, since the merged in array should always\n                            // have only one entity in it because it is created for a single result set\n                            // row.\n                            if (this.config && this.config.strict) {\n                                if ((!sourceArray && targetArray)\n                                    || (!targetArray && sourceArray)\n                                    || sourceArray.length != targetArray.length) {\n                                    throw new Error(`One-to-Many child arrays don't match for \r\n\t\t\t\t\t\t\t\t\t'${dbEntity.name}.${dbProperty.name}', Id: ${id}`);\n                                }\n                            }\n                            const sourceSet = {};\n                            if (sourceArray) {\n                                sourceArray.forEach((sourceChild) => {\n                                    const sourceChildIdValue = this.applicationUtils.getIdKey(sourceChild, childDbEntity);\n                                    sourceSet[sourceChildIdValue] = sourceChild;\n                                });\n                            }\n                            else {\n                                sourceArray = [];\n                                source[propertyName] = sourceArray;\n                            }\n                            if (targetArray) {\n                                targetArray.forEach((targetChild) => {\n                                    const targetChildIdValue = this.applicationUtils.getIdKey(targetChild, childDbEntity);\n                                    if (this.config && this.config.strict && !sourceSet[targetChildIdValue]) {\n                                        throw new Error(`One-to-Many child arrays don't match for \r\n\t\t\t\t\t\t\t\t\t\t'${dbEntity.name}.${dbProperty.name}', Id: ${id}`);\n                                    }\n                                    // If target child array has a value that source doesn't\n                                    if (!sourceSet[targetChildIdValue]) {\n                                        // add it to source (preserve order)\n                                        sourceArray.put(targetChild);\n                                    }\n                                });\n                            }\n                            // So instead just do\n                            // sourceArray.putAll(targetArray);\n                            break;\n                        default:\n                            throw new Error(`Unknown relation type '${dbRelation.relationType}' for \r\n\t\t\t\t\t\t\t'${dbEntity.name}.${dbProperty.name}'`);\n                    }\n                }\n            }\n        }\n        return source;\n    }\n    flushRelationStubBuffers(entityIdValue, currentEntity, dbEntity, context) {\n        let otmStubBuffer = this.otmStubBuffer;\n        this.otmStubBuffer = [];\n        otmStubBuffer.forEach((otmStub) => {\n            otmStub.otmObject = currentEntity;\n            this.otmMapper.addOtmReference(otmStub, entityIdValue);\n        });\n        let mtoStubBuffer = this.mtoStubBuffer;\n        this.mtoStubBuffer = [];\n        mtoStubBuffer.forEach((mtoStub) => {\n            mtoStub.mtoParentObject = currentEntity;\n            this.otmMapper.addMtoReference(mtoStub, entityIdValue, dbEntity, context);\n            this.mtoMapper.addMtoReference(mtoStub, entityIdValue);\n        });\n    }\n}\n//# sourceMappingURL=EntityGraphResultParser.js.map","import { objectExists } from '@airport/air-traffic-control';\nimport { SQLDataType } from '@airport/ground-control';\nimport { AbstractObjectResultParser } from './entity/IEntityResultParser';\n/**\n * Created by Papa on 10/16/2016.\n */\n/**\n * The goal of this Parser is to determine which objects in the current row are the same\n * as they were in the previous row.  If the objects are the same this parser will merge\n * them.\n */\nexport class TreeResultParser extends AbstractObjectResultParser {\n    constructor() {\n        super(...arguments);\n        this.currentRowObjectMap = {};\n        this.objectEqualityMap = {};\n        this.lastRowObjectMap = {};\n        this.currentObjectOneToManys = {};\n    }\n    addProperty(entityAlias, resultObject, dataType, propertyName, propertyValue) {\n        resultObject[propertyName] = propertyValue;\n        if (this.isDifferentOrDoesntExist(entityAlias, resultObject, propertyName)) {\n            return objectExists(propertyValue);\n        }\n        // Both last and current objects must exist here\n        let lastObject = this.lastRowObjectMap[entityAlias];\n        // Both of the properties are truthy\n        switch (dataType) {\n            case SQLDataType.DATE:\n                this.objectEqualityMap[entityAlias] = (lastObject[propertyName].getTime() === resultObject[propertyName].getTime());\n                break;\n            default:\n                this.objectEqualityMap[entityAlias] = (lastObject[propertyName] === resultObject[propertyName]);\n                break;\n        }\n        return true;\n    }\n    flushRow() {\n        this.lastRowObjectMap = this.currentRowObjectMap;\n        this.currentRowObjectMap = {};\n    }\n    isDifferentOrDoesntExist(entityAlias, resultObject, propertyName) {\n        // If we already know that this is a new facade, no need to keep on checking\n        if (!this.objectEqualityMap[entityAlias]) {\n            return true;\n        }\n        let lastObject = this.lastRowObjectMap[entityAlias];\n        // If there was no last facade\n        if (!lastObject) {\n            this.objectEqualityMap[entityAlias] = false;\n            return true;\n        }\n        if (!resultObject) {\n            return true;\n        }\n        // Types are guaranteed to be the same, so:\n        // If the last property is not there or is falsy\n        if (!lastObject[propertyName]) {\n            this.objectEqualityMap[entityAlias] = !resultObject[propertyName];\n            return true;\n        } // If the current property is not there or is falsy\n        else if (!resultObject[propertyName]) {\n            this.objectEqualityMap[entityAlias] = !lastObject[propertyName];\n            return true;\n        }\n        return false;\n    }\n    addOneToManyCollection(entityAlias, resultObject, propertyName) {\n        let currentOtmCollection = resultObject[propertyName];\n        this.currentObjectOneToManys[propertyName] = currentOtmCollection;\n        if (this.isDifferentOrDoesntExist(entityAlias, resultObject, propertyName)) {\n            return;\n        }\n        let lastObject = this.lastRowObjectMap[entityAlias];\n        let lastOtmCollection = lastObject[propertyName];\n        // Now both arrays are guaranteed to exist\n        // TODO: verify assumption below:\n        // For @OneToMany collections, if existence of last child facade changes it must be a\n        // new facade\n        if (!lastOtmCollection.length) {\n            if (currentOtmCollection.length) {\n                this.objectEqualityMap[entityAlias] = false;\n            }\n        }\n        else if (!currentOtmCollection.length) {\n            if (lastOtmCollection.length) {\n                this.objectEqualityMap[entityAlias] = false;\n            }\n        }\n        // Otherwise if it still exists\n    }\n    mergeEntity(entityAlias, resultObject) {\n        let isSameObjectAsLastRow = this.objectEqualityMap[entityAlias];\n        this.objectEqualityMap[entityAlias] = true;\n        let oneToManys = this.currentObjectOneToManys;\n        this.currentObjectOneToManys = {};\n        // If it's a new facade\n        if (!isSameObjectAsLastRow) {\n            return resultObject;\n        }\n        // All equality checks have passed - this is the same exact facade as last time\n        resultObject = this.lastRowObjectMap[entityAlias];\n        this.currentRowObjectMap[entityAlias] = resultObject;\n        // All @ManyToOnes have been merged automatically (because they are entities\n        // themselves)\n        // For @OneToManys:\n        // If the current one it the same as the last one of the ones in the last entity then\n        // it's the same otherwise its new and should be added to the collection\n        for (let oneToManyProperty in oneToManys) {\n            let currentOneToMany = oneToManys[oneToManyProperty];\n            if (currentOneToMany && currentOneToMany.length) {\n                // There will always be only one current record, since this is done per result\n                // set row\n                let currentMto = currentOneToMany[0];\n                let existingOneToMany = resultObject[oneToManyProperty];\n                if (!existingOneToMany || !existingOneToMany.length) {\n                    resultObject[oneToManyProperty] = currentOneToMany;\n                }\n                // Otherwise if the last facade doesn't match then its a new one\n                else if (existingOneToMany[existingOneToMany.length - 1] !== currentMto) {\n                    existingOneToMany.push(currentMto);\n                }\n            }\n        }\n        return resultObject;\n    }\n}\n//# sourceMappingURL=TreeResultParser.js.map","import { valuesEqual } from '@airport/air-traffic-control';\nimport { TreeResultParser } from '../TreeResultParser';\n/**\n * Created by Papa on 10/16/2016.\n */\n/**\n * The goal of this Parser is to determine which objects in the current row are the same\n * as they were in the previous row.  If the objects are the same this parser will merge\n * them.\n */\nexport class EntityTreeResultParser extends TreeResultParser {\n    constructor() {\n        super(...arguments);\n        this.currentRowObjectMap = {};\n        this.objectEqualityMap = {};\n        this.lastRowObjectMap = {};\n        this.currentObjectOneToManys = {};\n    }\n    addEntity(entityAlias, dbEntity, context) {\n        let resultObject = this.applicationUtils.getNewEntity(dbEntity);\n        this.currentRowObjectMap[entityAlias] = resultObject;\n        if (this.objectEqualityMap[entityAlias] !== undefined) {\n            this.objectEqualityMap[entityAlias] = true;\n        }\n        return resultObject;\n    }\n    bufferManyToOneStub(entityAlias, dbEntity, resultObject, propertyName, relationDbEntity, relationInfos, context) {\n        this.addManyToOneStub(resultObject, propertyName, relationInfos, context);\n        this.addManyToOneReference(entityAlias, resultObject, propertyName);\n    }\n    bufferBlankManyToOneStub(entityAlias, resultObject, propertyName) {\n        resultObject[propertyName] = null;\n        this.addManyToOneReference(entityAlias, resultObject, propertyName);\n    }\n    bufferManyToOneObject(entityAlias, dbEntity, resultObject, propertyName, relationDbEntity, childResultObject, context) {\n        resultObject[propertyName] = childResultObject;\n        if (this.isDifferentOrDoesntExist(entityAlias, resultObject, propertyName)) {\n            return;\n        }\n        // Both last and current objects must exist here\n        let lastObject = this.lastRowObjectMap[entityAlias];\n        // @ManyToOne objects will have been merged by now, just check if its the same facade\n        this.objectEqualityMap[entityAlias] = lastObject[propertyName] === resultObject[propertyName];\n    }\n    bufferBlankManyToOneObject(entityAlias, resultObject, propertyName) {\n        resultObject[propertyName] = null;\n        this.addManyToOneReference(entityAlias, null, propertyName);\n    }\n    bufferOneToManyStub(otmDbEntity, otmPropertyName) {\n        throw new Error(`@OneToMany stubs not allowed in QueryResultType.HIERARCHICAL`);\n    }\n    bufferOneToManyCollection(entityAlias, resultObject, otmDbEntity, propertyName, relationDbEntity, childResultObject, context) {\n        resultObject[propertyName] = [childResultObject];\n        this.addOneToManyCollection(entityAlias, resultObject, propertyName);\n    }\n    bufferBlankOneToMany(entityAlias, resultObject, otmEntityName, propertyName, relationDbEntity, context) {\n        resultObject[propertyName] = [];\n        this.addOneToManyCollection(entityAlias, resultObject, propertyName);\n    }\n    flushEntity(entityAlias, dbEntity, selectClauseFragment, entityId, resultObject, context) {\n        return this.mergeEntity(entityAlias, resultObject);\n    }\n    bridge(parsedResults, selectClauseFragment, context) {\n        // Nothing to be done, hierarchical queries are not bridged\n        return parsedResults;\n    }\n    addManyToOneReference(entityAlias, resultObject, propertyName) {\n        if (this.isDifferentOrDoesntExist(entityAlias, resultObject, propertyName)) {\n            return;\n        }\n        // Both last and current objects must exist here\n        let lastMtoStub = this.lastRowObjectMap[entityAlias][propertyName];\n        let currentMtoStub = resultObject[propertyName];\n        this.objectEqualityMap[entityAlias] = valuesEqual(lastMtoStub, currentMtoStub, true);\n    }\n}\n//# sourceMappingURL=EntityTreeResultParser.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { QueryResultType } from '@airport/ground-control';\nimport { EntityGraphResultParser } from './EntityGraphResultParser';\nimport { EntityTreeResultParser } from './EntityTreeResultParser';\nlet ObjectResultParserFactory = class ObjectResultParserFactory {\n    getObjectResultParser(queryResultType, config, rootDbEntity) {\n        switch (queryResultType) {\n            case QueryResultType.ENTITY_GRAPH:\n            case QueryResultType.MAPPED_ENTITY_GRAPH:\n                return new EntityGraphResultParser(config, rootDbEntity, this.applicationUtils, this.entityStateManager);\n            case QueryResultType.ENTITY_TREE:\n            case QueryResultType.MAPPED_ENTITY_TREE:\n                return new EntityTreeResultParser(this.applicationUtils, this.entityStateManager);\n            default:\n                throw new Error(`ObjectQueryParser not supported for QueryResultType: ${queryResultType}`);\n        }\n    }\n};\n__decorate([\n    Inject()\n], ObjectResultParserFactory.prototype, \"applicationUtils\", void 0);\n__decorate([\n    Inject()\n], ObjectResultParserFactory.prototype, \"entityStateManager\", void 0);\nObjectResultParserFactory = __decorate([\n    Injected()\n], ObjectResultParserFactory);\nexport { ObjectResultParserFactory };\n//# sourceMappingURL=ObjectResultParserFactory.js.map","import { TreeResultParser } from './TreeResultParser';\n/**\n * Created by Papa on 11/8/2016.\n */\nexport class TreeQueryResultParser extends TreeResultParser {\n    addEntity(entityAlias) {\n        let resultObject = {};\n        this.currentRowObjectMap[entityAlias] = resultObject;\n        return resultObject;\n    }\n    bufferOneToManyCollection(entityAlias, resultObject, propertyName, childResultObject) {\n        resultObject[propertyName] = [childResultObject];\n        this.addOneToManyCollection(entityAlias, resultObject, propertyName);\n    }\n    flushEntity(entityAlias, resultObject) {\n        return this.mergeEntity(entityAlias, resultObject);\n    }\n}\n//# sourceMappingURL=TreeQueryResultParser.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { JSONClauseObjectType, OperationCategory, ApplicationMap, SqlOperator } from '@airport/ground-control';\n/**\n * Created by Papa on 10/2/2016.\n */\nexport var ClauseType;\n(function (ClauseType) {\n    ClauseType[\"MAPPED_SELECT_CLAUSE\"] = \"MAPPED_SELECT_CLAUSE\";\n    ClauseType[\"NON_MAPPED_SELECT_CLAUSE\"] = \"NON_MAPPED_SELECT_CLAUSE\";\n    ClauseType[\"WHERE_CLAUSE\"] = \"WHERE_CLAUSE\";\n    ClauseType[\"FUNCTION_CALL\"] = \"FUNCTION_CALL\";\n})(ClauseType || (ClauseType = {}));\nlet SQLWhereBase = class SQLWhereBase {\n    constructor(dbEntity, dialect, airportDatabase, applicationUtils, entityStateManager, qMetadataUtils, sqlQueryAdapter, storeDriver, context) {\n        this.dbEntity = dbEntity;\n        this.dialect = dialect;\n        this.airportDatabase = airportDatabase;\n        this.applicationUtils = applicationUtils;\n        this.entityStateManager = entityStateManager;\n        this.qMetadataUtils = qMetadataUtils;\n        this.sqlQueryAdapter = sqlQueryAdapter;\n        this.storeDriver = storeDriver;\n        this.context = context;\n        this.parameterReferences = [];\n        this.fieldMap = new ApplicationMap();\n        this.qEntityMapByAlias = {};\n        this.jsonRelationMapByAlias = {};\n    }\n    getParameters(parameterMap, //,\n    context) {\n        // let populatedParameterMap: {[parameterAlias: string]: boolean} = {};\n        return this.parameterReferences\n            /*\n             .parameterReferences.filter(( parameterReference ) => {\n             if (!populatedParameterMap[parameterReference]) {\n             populatedParameterMap[parameterReference] = true;\n             return true;\n             }\n             return false;\n             })\n             */\n            .map((parameterReference) => {\n            let parameter = parameterMap[parameterReference];\n            if (!parameter) {\n                const isReference = parameterReference === null || ['number', 'string'].indexOf(typeof parameterReference) > -1;\n                if (isReference) {\n                    // if (!valuesArray) {\n                    return parameterReference;\n                    // } else if (typeof parameterReference === 'number') {\n                    // \treturn sqlAdaptor.getValue(valuesArray[parameterReference])\n                    // }\n                }\n                throw new Error(`No parameter found for alias '${parameterReference}'`);\n            }\n            return this.sqlQueryAdapter.getParameterValue(parameter);\n        });\n    }\n    getFunctionCallValue(rawValue, context) {\n        return this.getFieldValue(rawValue, ClauseType.FUNCTION_CALL, null, context);\n    }\n    getFieldFunctionValue(aField, defaultCallback, context) {\n        let aValue = aField.v;\n        if (this.isParameterReference(aValue)) {\n            let stringValue = aValue;\n            this.parameterReferences.push(stringValue);\n            aValue = this.sqlQueryAdapter.getParameterReference(this.parameterReferences, stringValue);\n        }\n        else {\n            aValue = this.getFieldValue(aValue, ClauseType.FUNCTION_CALL, defaultCallback, context);\n        }\n        aValue = this.sqlQueryAdapter.getFunctionAdaptor()\n            .getFunctionCalls(aField, aValue, this.qEntityMapByAlias, this, context);\n        this.validator.addFunctionAlias(aField.fa);\n        return aValue;\n    }\n    getFieldValue(clauseField, clauseType, defaultCallback, context) {\n        let columnName;\n        if (!clauseField) {\n            throw new Error(`Missing Clause Field definition`);\n        }\n        if (clauseField instanceof Array) {\n            return clauseField\n                .map((clauseFieldMember) => this.getFieldValue(clauseFieldMember, clauseType, defaultCallback, context))\n                .join(', ');\n        }\n        if (clauseType !== ClauseType.MAPPED_SELECT_CLAUSE && !clauseField.ot) {\n            throw new Error(`Object Type is not defined in JSONClauseField`);\n        }\n        const aField = clauseField;\n        let qEntity;\n        switch (clauseField.ot) {\n            case JSONClauseObjectType.FIELD_FUNCTION:\n                return this.getFieldFunctionValue(aField, defaultCallback, context);\n            case JSONClauseObjectType.DISTINCT_FUNCTION:\n                throw new Error(`Distinct function cannot be nested.`);\n            case JSONClauseObjectType.EXISTS_FUNCTION: {\n                if (clauseType !== ClauseType.WHERE_CLAUSE) {\n                    throw new Error(`Exists can only be used as a top function in a WHERE clause.`);\n                }\n                const { parameterReferences, subQuerySql } = this.subStatementSqlGenerator.getTreeQuerySql(aField.v, this.dialect, context);\n                if (parameterReferences.length) {\n                    this.parameterReferences = this.parameterReferences.concat(parameterReferences);\n                }\n                return `EXISTS(${subQuerySql})`;\n            }\n            case JSONClauseObjectType.FIELD: {\n                qEntity = this.qEntityMapByAlias[aField.ta];\n                this.validator.validateReadQEntityProperty(aField.si, aField.ti, aField.ci);\n                columnName = this.getEntityPropertyColumnName(qEntity, aField.ci, context);\n                this.addField(aField.si, aField.ti, aField.ci);\n                return this.getComplexColumnFragment(aField, columnName, context);\n            }\n            case JSONClauseObjectType.FIELD_QUERY: {\n                let jsonFieldSqlSubQuery = aField.fieldSubQuery;\n                if (aField.S) {\n                    jsonFieldSqlSubQuery = aField;\n                }\n                const { parameterReferences, subQuerySql } = this.subStatementSqlGenerator.getFieldQuerySql(jsonFieldSqlSubQuery, this.dialect, this.qEntityMapByAlias, context);\n                if (parameterReferences.length) {\n                    this.parameterReferences = this.parameterReferences.concat(parameterReferences);\n                }\n                this.validator.addSubQueryAlias(aField.fa);\n                return `(${subQuerySql})`;\n            }\n            case JSONClauseObjectType.MANY_TO_ONE_RELATION: {\n                qEntity = this.qEntityMapByAlias[aField.ta];\n                this.validator.validateReadQEntityManyToOneRelation(aField.si, aField.ti, aField.ci);\n                columnName = this.getEntityManyToOneColumnName(qEntity, aField.ci, context);\n                this.addField(aField.si, aField.ti, aField.ci);\n                return this.getComplexColumnFragment(aField, columnName, context);\n            }\n            // must be a nested object\n            default: {\n                if (clauseType !== ClauseType.MAPPED_SELECT_CLAUSE) {\n                    `Nested objects only allowed in the mapped SELECT clause.`;\n                }\n                return defaultCallback();\n            }\n        }\n    }\n    applyOperator(operator, rValue) {\n        switch (operator) {\n            case SqlOperator.EQUALS:\n                return ` = ${rValue}`;\n            case SqlOperator.GREATER_THAN:\n                return ` > ${rValue}`;\n            case SqlOperator.GREATER_THAN_OR_EQUALS:\n                return ` >= ${rValue}`;\n            case SqlOperator.IS_NOT_NULL:\n                return ` IS NOT NULL`;\n            case SqlOperator.IS_NULL:\n                return ` IS NULL`;\n            case SqlOperator.IN:\n                return ` IN (${rValue})`;\n            case SqlOperator.LESS_THAN:\n                return ` < ${rValue}`;\n            case SqlOperator.LESS_THAN_OR_EQUALS:\n                return ` <= ${rValue}`;\n            case SqlOperator.NOT_EQUALS:\n                return ` != ${rValue}`;\n            case SqlOperator.NOT_IN:\n                return ` NOT IN (${rValue})`;\n            case SqlOperator.LIKE:\n                return ` LIKE ${rValue}`;\n            default:\n                throw new Error(`Unsupported operator ${operator}`);\n        }\n    }\n    getWHEREFragment(operation, nestingPrefix, context) {\n        let whereFragment = '';\n        if (!operation) {\n            throw new Error(`An operation is missing in WHERE or HAVING clause`);\n        }\n        nestingPrefix = `${nestingPrefix}\\t`;\n        switch (operation.c) {\n            case OperationCategory.LOGICAL:\n                return this.getLogicalWhereFragment(operation, nestingPrefix, context);\n            case OperationCategory.BOOLEAN:\n            case OperationCategory.DATE:\n            case OperationCategory.NUMBER:\n            case OperationCategory.STRING:\n            case OperationCategory.UNTYPED:\n                let valueOperation = operation;\n                let lValueSql = this.getFieldValue(valueOperation.l, ClauseType.WHERE_CLAUSE, null, context);\n                let rValueSql = this.getFieldValue(valueOperation.r, ClauseType.WHERE_CLAUSE, null, context);\n                let rValueWithOperator = this.applyOperator(valueOperation.o, rValueSql);\n                whereFragment += `${lValueSql}${rValueWithOperator}`;\n                break;\n            case OperationCategory.FUNCTION:\n                let functionOperation = operation;\n                whereFragment = this.getFieldValue(functionOperation.ob, ClauseType.WHERE_CLAUSE, null, context);\n                // exists function and maybe others\n                break;\n        }\n        return whereFragment;\n    }\n    getEntityPropertyColumnName(qEntity, columnIndex, context) {\n        const dbEntity = this.qMetadataUtils.getDbEntity(qEntity);\n        return dbEntity.columns[columnIndex].name;\n    }\n    addFieldFromColumn(dbColumn) {\n        const dbEntity = dbColumn.propertyColumns[0].property.entity;\n        this.addField(dbEntity.applicationVersion.id, dbEntity.index, dbColumn.index);\n    }\n    addField(applicationIndex, tableIndex, columnIndex) {\n        this.fieldMap.ensure(applicationIndex, tableIndex)\n            .ensure(columnIndex);\n    }\n    warn(warning) {\n        console.log(warning);\n    }\n    getSimpleColumnFragment(tableAlias, columnName) {\n        return `${tableAlias}.${columnName}`;\n    }\n    getComplexColumnFragment(value, columnName, context) {\n        let selectSqlFragment = `${value.ta}.${columnName}`;\n        selectSqlFragment = this.sqlQueryAdapter.getFunctionAdaptor()\n            .getFunctionCalls(value, selectSqlFragment, this.qEntityMapByAlias, this, context);\n        return selectSqlFragment;\n    }\n    getEntityManyToOneColumnName(qEntity, columnIndex, context) {\n        return this.getEntityPropertyColumnName(qEntity, columnIndex, context);\n    }\n    getLogicalWhereFragment(operation, nestingPrefix, context) {\n        let operator;\n        switch (operation.o) {\n            case SqlOperator.AND:\n                operator = 'AND';\n                break;\n            case SqlOperator.OR:\n                operator = 'OR';\n                break;\n            case SqlOperator.NOT:\n                const whereFragment = this.getWHEREFragment(operation.v, nestingPrefix, context);\n                return ` NOT (${whereFragment})`;\n            default:\n                throw new Error(`Unknown logical operator: ${operation.o}`);\n        }\n        let childOperations = operation.v;\n        if (!(childOperations instanceof Array)) {\n            throw new Error(`Expecting an array of child operations as a value for operator ${operator}, \r\n\t\t\t\tin the WHERE Clause.`);\n        }\n        let whereFragment = childOperations.map((childOperation) => {\n            return this.getWHEREFragment(childOperation, nestingPrefix, context);\n        })\n            .join(`\\n${nestingPrefix}${operator} `);\n        return `( ${whereFragment} )`;\n    }\n    isParameterReference(value) {\n        if (value === null) {\n            return false;\n        }\n        if (value === undefined || value === '' || value === NaN) {\n            throw new Error(`Invalid query value: ${value}`);\n        }\n        switch (typeof value) {\n            case 'boolean':\n            case 'number':\n                throw new Error(`Unexpected primitive instance, expecting parameter alias.`);\n            case 'string':\n                return true;\n        }\n        if (value instanceof Date) {\n            throw new Error(`Unexpected date instance, expecting parameter alias.`);\n        }\n        return false;\n    }\n};\n__decorate([\n    Inject()\n], SQLWhereBase.prototype, \"validator\", void 0);\n__decorate([\n    Inject()\n], SQLWhereBase.prototype, \"subStatementSqlGenerator\", void 0);\nSQLWhereBase = __decorate([\n    Injected()\n], SQLWhereBase);\nexport { SQLWhereBase };\n//# sourceMappingURL=SQLWhereBase.js.map","import { QEntity } from '@airport/air-traffic-control';\nimport { SQLWhereBase } from './SQLWhereBase';\n/**\n * Created by Papa on 10/2/2016.\n */\nexport class SQLNoJoinQuery extends SQLWhereBase {\n    constructor(dbEntity, dialect, airportDatabase, applicationUtils, entityStateManager, qMetadataUtils, relationManager, sqlQueryAdapter, storeDriver, context) {\n        super(dbEntity, dialect, airportDatabase, applicationUtils, entityStateManager, qMetadataUtils, sqlQueryAdapter, storeDriver, context);\n        this.relationManager = relationManager;\n    }\n    getTableFragment(fromRelation, context, addAs = true) {\n        if (!fromRelation) {\n            throw new Error(`Expecting exactly one table in UPDATE/DELETE clause`);\n        }\n        if (fromRelation.ri || fromRelation.jt) {\n            throw new Error(`Table in UPDATE/DELETE clause cannot be joined`);\n        }\n        const firstDbEntity = this.airportDatabase.applications[fromRelation.si]\n            .currentVersion[0].applicationVersion.entities[fromRelation.ti];\n        let tableName = this.storeDriver.getEntityTableName(firstDbEntity, context);\n        if (fromRelation.si !== this.dbEntity.applicationVersion.application.index\n            || fromRelation.ti !== this.dbEntity.index) {\n            throw new Error(`Unexpected table in UPDATE/DELETE clause: \r\n\t\t\t'${tableName}',\r\n\t\t\texpecting: '${this.dbEntity.applicationVersion.application.name}.${this.dbEntity.name}'`);\n        }\n        const firstQEntity = new QEntity(firstDbEntity, this.applicationUtils, this.relationManager);\n        const tableAlias = this.relationManager.getAlias(fromRelation);\n        this.qEntityMapByAlias[tableAlias] = firstQEntity;\n        let fromFragment = `\\t${tableName}`;\n        if (addAs) {\n            fromFragment += ` AS ${tableAlias}`;\n        }\n        return fromFragment;\n    }\n}\n//# sourceMappingURL=SQLNoJoinQuery.js.map","import { SQLNoJoinQuery } from './SQLNoJoinQuery';\n/**\n * Created by Papa on 10/2/2016.\n */\nexport class SQLDelete extends SQLNoJoinQuery {\n    constructor(jsonDelete, dialect, airportDatabase, applicationUtils, entityStateManager, qMetadataUtils, relationManager, sqlQueryAdapter, storeDriver, context) {\n        super(airportDatabase.applications[jsonDelete.DF.si].currentVersion[0]\n            .applicationVersion.entities[jsonDelete.DF.ti], dialect, airportDatabase, applicationUtils, entityStateManager, qMetadataUtils, relationManager, sqlQueryAdapter, storeDriver, context);\n        this.jsonDelete = jsonDelete;\n    }\n    toSQL(context) {\n        let fromFragment = this.getTableFragment(this.jsonDelete.DF, context);\n        let whereFragment = '';\n        let jsonQuery = this.jsonDelete;\n        if (jsonQuery.W) {\n            whereFragment = this.getWHEREFragment(jsonQuery.W, '', context);\n            whereFragment = `\r\nWHERE\r\n${whereFragment}`;\n            // TODO: following might be needed for some RDBMS, does not work for SqLite\n            // Replace the root entity alias reference with the table name\n            // let tableAlias = this.relationManager.getAlias(this.jsonDelete.DF)\n            // let tableName = this.storeDriver.getEntityTableName(this.qEntityMapByAlias[tableAlias].__driver__.dbEntity, context)\n            // whereFragment = whereFragment.replace(new RegExp(`${tableAlias}`, 'g'), tableName)\n        }\n        return `DELETE\r\nFROM\r\n${fromFragment}${whereFragment}`;\n    }\n}\n//# sourceMappingURL=SQLDelete.js.map","import { SQLNoJoinQuery } from './SQLNoJoinQuery';\nimport { ClauseType } from './SQLWhereBase';\n/**\n * Created by Papa on 11/17/2016.\n */\nexport class SQLInsertValues extends SQLNoJoinQuery {\n    constructor(jsonInsertValues, dialect, airportDatabase, applicationUtils, entityStateManager, qMetadataUtils, qValidator, relationManager, sqlQueryAdapter, storeDriver, context\n    // repository?: IRepository\n    ) {\n        super(airportDatabase.applications[jsonInsertValues.II.si].currentVersion[0]\n            .applicationVersion.entities[jsonInsertValues.II.ti], dialect, airportDatabase, applicationUtils, entityStateManager, qMetadataUtils, relationManager, sqlQueryAdapter, storeDriver, context);\n        this.jsonInsertValues = jsonInsertValues;\n        this.qValidator = qValidator;\n    }\n    toSQL(context) {\n        if (!this.jsonInsertValues.II) {\n            throw new Error(`Expecting exactly one table in INSERT INTO clause`);\n        }\n        this.qValidator.validateInsertQEntity(this.dbEntity);\n        let tableFragment = this.getTableFragment(this.jsonInsertValues.II, context, false);\n        let columnsFragment = this.getColumnsFragment(this.dbEntity, this.jsonInsertValues.C);\n        let valuesFragment = this.getValuesFragment(this.jsonInsertValues.V, context);\n        return `INSERT INTO\r\n${tableFragment} ${columnsFragment}\r\nVALUES\r\n${valuesFragment}\r\n`;\n    }\n    getColumnsFragment(dbEntity, columns) {\n        if (!columns.length) {\n            return '';\n        }\n        const columnNames = columns.map(columnIndex => dbEntity.columns[columnIndex].name);\n        return `( ${columnNames.join(', \\n')} )`;\n    }\n    getValuesFragment(valuesClauseFragment, context) {\n        let allValuesFragment = valuesClauseFragment.map((valuesArray) => {\n            let valuesFragment = valuesArray.map((value) => {\n                if (value === null || ['number', 'string'].indexOf(typeof value) > -1) {\n                    this.parameterReferences.push(value);\n                    return this.sqlQueryAdapter.getParameterReference(this.parameterReferences, value);\n                }\n                else if (value === undefined) {\n                    throw new Error(`An 'undefined' value was provided when inserting into: ${this.dbEntity.applicationVersion.application.name}.${this.dbEntity.name}`);\n                }\n                else {\n                    const fieldValue = this.getFieldValue(value, ClauseType.WHERE_CLAUSE, null, context);\n                    return `\\n${fieldValue}\\n`;\n                }\n            });\n            return `(${valuesFragment.join(',')})`;\n        });\n        return allValuesFragment.join(',\\n');\n    }\n}\n//# sourceMappingURL=SQLInsertValues.js.map","import { EntityRelationType, SqlOperator } from '@airport/ground-control';\nimport { SQLWhereBase } from './SQLWhereBase';\n/**\n * Created by Papa on 8/20/2016.\n */\nexport var SQLDialect;\n(function (SQLDialect) {\n    SQLDialect[\"MYSQL\"] = \"MYSQL\";\n    SQLDialect[\"POSTGRESQL\"] = \"POSTGRESQL\";\n    SQLDialect[\"SQLITE\"] = \"SQLITE\";\n})(SQLDialect || (SQLDialect = {}));\nexport class EntityDefaults {\n    constructor() {\n        this.map = {};\n    }\n    getForAlias(alias) {\n        let defaultsForAlias = this.map[alias];\n        if (!defaultsForAlias) {\n            defaultsForAlias = {};\n            this.map[alias] = defaultsForAlias;\n        }\n        return defaultsForAlias;\n    }\n}\n/**\n * String based SQL query.\n */\nexport class SQLQuery extends SQLWhereBase {\n    constructor(jsonQuery, dbEntity, dialect, queryResultType, airportDatabase, applicationUtils, entityStateManager, qMetadataUtils, sqlQueryAdapter, storeDriver, context) {\n        super(dbEntity, dialect, airportDatabase, applicationUtils, entityStateManager, qMetadataUtils, sqlQueryAdapter, storeDriver, context);\n        this.jsonQuery = jsonQuery;\n        this.queryResultType = queryResultType;\n        this.entityDefaults = new EntityDefaults();\n    }\n    getFieldMap() {\n        return this.fieldMap;\n    }\n    getEntityApplicationRelationFromJoin(leftQEntity, rightQEntity, entityRelation, parentRelation, currentAlias, parentAlias, joinTypeString, errorPrefix, context) {\n        const allJoinOnColumns = [];\n        const leftDbEntity = leftQEntity.__driver__.dbEntity;\n        const rightDbEntity = rightQEntity.__driver__.dbEntity;\n        const dbRelation = leftDbEntity.relations[entityRelation.ri];\n        let relationColumns;\n        switch (dbRelation.relationType) {\n            case EntityRelationType.MANY_TO_ONE:\n                relationColumns = dbRelation.manyRelationColumns;\n                break;\n            case EntityRelationType.ONE_TO_MANY:\n                if (dbRelation.oneRelationColumns && dbRelation.oneRelationColumns.length) {\n                    relationColumns = dbRelation.oneRelationColumns;\n                }\n                else {\n                    const matchingRelations = dbRelation.relationEntity.relations.filter(manySideRelation => manySideRelation.relationEntity.id == leftDbEntity.id\n                        && manySideRelation.manyToOneElems\n                        && manySideRelation.manyToOneElems !== true\n                        && manySideRelation.manyToOneElems.mappedBy === dbRelation.property.name);\n                    if (matchingRelations.length) {\n                        relationColumns = matchingRelations[0].manyRelationColumns;\n                    }\n                }\n                break;\n            default:\n                throw new Error(`Unknown relation type ${dbRelation.relationType} \r\non '${leftDbEntity.applicationVersion.application.name}.${leftDbEntity.name}.${dbRelation.property.name}'.`);\n        }\n        for (const relationColumn of relationColumns) {\n            let ownColumnName;\n            let referencedColumnName;\n            switch (dbRelation.relationType) {\n                case EntityRelationType.MANY_TO_ONE:\n                    ownColumnName = relationColumn.manyColumn.name;\n                    referencedColumnName = relationColumn.oneColumn.name;\n                    break;\n                case EntityRelationType.ONE_TO_MANY:\n                    ownColumnName = relationColumn.oneColumn.name;\n                    referencedColumnName = relationColumn.manyColumn.name;\n                    break;\n                default:\n                    throw new Error(`Unknown relation type ${dbRelation.relationType} \r\non '${leftDbEntity.applicationVersion.application.name}.${leftDbEntity.name}.${dbRelation.property.name}'.`);\n            }\n            allJoinOnColumns.push({\n                leftColumn: ownColumnName,\n                rightColumn: referencedColumnName\n            });\n        }\n        let onClause = allJoinOnColumns.map(joinOnColumn => ` ${parentAlias}.${joinOnColumn.leftColumn} = ${currentAlias}.${joinOnColumn.rightColumn}`)\n            .join('\\n\\t\\t\\tAND');\n        if (entityRelation.joinWhereClause) {\n            const whereClause = this.getWHEREFragment(entityRelation.joinWhereClause, '\\t\\t', context);\n            const joinWhereOperator = entityRelation.joinWhereClauseOperator === SqlOperator.AND ? 'AND' : 'OR';\n            onClause = `${onClause}\r\n\t\t\t${joinWhereOperator} ${whereClause}`;\n        }\n        const tableName = this.storeDriver.getEntityTableName(rightDbEntity, context);\n        const fromFragment = `\\n\\t${joinTypeString} ${tableName} ${currentAlias}\\n\\t\\tON ${onClause}`;\n        return fromFragment;\n    }\n}\n//# sourceMappingURL=SQLQuery.js.map","import { JSONClauseObjectType } from '@airport/ground-control';\nimport { SQLNoJoinQuery } from './SQLNoJoinQuery';\nimport { ClauseType } from './SQLWhereBase';\n/**\n * Created by Papa on 10/2/2016.\n */\nexport class SQLUpdate extends SQLNoJoinQuery {\n    constructor(jsonUpdate, dialect, airportDatabase, applicationUtils, entityStateManager, qMetadataUtils, qValidator, relationManager, sqlQueryAdapter, storeDriver, context) {\n        super(airportDatabase.applications[jsonUpdate.U.si].currentVersion[0]\n            .applicationVersion.entities[jsonUpdate.U.ti], dialect, airportDatabase, applicationUtils, entityStateManager, qMetadataUtils, relationManager, sqlQueryAdapter, storeDriver, context);\n        this.jsonUpdate = jsonUpdate;\n        this.qValidator = qValidator;\n    }\n    toSQL(internalFragments, context) {\n        if (!this.jsonUpdate.U) {\n            throw new Error(`Expecting exactly one table in UPDATE clause`);\n        }\n        let updateFragment = this.getTableFragment(this.jsonUpdate.U, context);\n        let setFragment = this.getSetFragment(this.jsonUpdate.S, context);\n        if (internalFragments.SET && internalFragments.SET.length) {\n            setFragment += ',' + internalFragments.SET.map(internalSetFragment => `\r\n\t${internalSetFragment.column.name} = ${internalSetFragment.value}`)\n                .join(',');\n        }\n        let whereFragment = '';\n        let jsonQuery = this.jsonUpdate;\n        if (jsonQuery.W) {\n            whereFragment = this.getWHEREFragment(jsonQuery.W, '', context);\n            whereFragment = `WHERE\r\n${whereFragment}`;\n            // TODO: following might be needed for some RDBMS, does not work for SqLite\n            // Replace the root entity alias reference with the table name\n            // let tableAlias = this.relationManager.getAlias(this.jsonUpdate.U)\n            // let tableName  = this.storeDriver.getEntityTableName(this.qEntityMapByAlias[tableAlias].__driver__.dbEntity, context)\n            // whereFragment  = whereFragment.replace(new RegExp(`${tableAlias}`, 'g'), tableName)\n        }\n        return `UPDATE\r\n${updateFragment}\r\nSET\r\n${setFragment}\r\n${whereFragment}`;\n    }\n    getSetFragment(setClauseFragment, context) {\n        let setFragments = [];\n        for (let columnName in setClauseFragment) {\n            let value = setClauseFragment[columnName];\n            // Skip undefined values\n            if (value === undefined) {\n                continue;\n            }\n            this.qValidator.validateUpdateColumn(this.dbEntity.columnMap[columnName]);\n            this.addSetFragment(columnName, value, setFragments, context);\n        }\n        return setFragments.join(', \\n');\n    }\n    addSetFragment(columnName, value, setFragments, context) {\n        let fieldValue;\n        if (typeof value === 'number') {\n            this.parameterReferences.push(value);\n            fieldValue = this.sqlQueryAdapter.getParameterReference(this.parameterReferences, value);\n        }\n        else {\n            fieldValue = this.getFieldValue(value, ClauseType.WHERE_CLAUSE, null, context);\n        }\n        setFragments.push(`\\t${columnName} = ${fieldValue}`);\n    }\n    isManyToOneRelation(value) {\n        return typeof value === 'object'\n            && value.ot === JSONClauseObjectType.MANY_TO_ONE_RELATION;\n    }\n    addManyToOneMappings(parentMapping) {\n        let mappings = [];\n        const value = parentMapping.value;\n        if (typeof value === 'object' &&\n            (!value.ot\n                || value.ot === JSONClauseObjectType.MANY_TO_ONE_RELATION)) {\n            for (const key in value) {\n                if (key === 'ot'\n                    && value[key] === JSONClauseObjectType.MANY_TO_ONE_RELATION) {\n                    continue;\n                }\n                const mapping = {\n                    tableIndex: parentMapping.tableIndex,\n                    propertyChain: parentMapping.propertyChain.concat([key]),\n                    value: value[key]\n                };\n                const childMappings = this.addManyToOneMappings(mapping);\n                mappings = mappings.concat(childMappings);\n            }\n        }\n        else {\n            mappings.push(parentMapping);\n        }\n        return mappings;\n    }\n}\n//# sourceMappingURL=SQLUpdate.js.map","export class SqlFunctionField {\n    constructor(jsonClauseField) {\n        this.jsonClauseField = jsonClauseField;\n        // Test\n    }\n    getValue(sqlValueProvider, context) {\n        return sqlValueProvider.getFieldFunctionValue(this.jsonClauseField, null, context);\n    }\n}\n//# sourceMappingURL=SqlFunctionField.js.map","import { JoinTreeNode, QBooleanField, QDateField, QNumberField, QStringField, QTree, } from '@airport/air-traffic-control';\nimport { JoinType, JSONClauseObjectType, JSONRelationType, SortOrder, SQLDataType } from '@airport/ground-control';\nimport { SQLQuery } from './core/SQLQuery';\nimport { SqlFunctionField } from './SqlFunctionField';\n/**\n * Created by Papa on 10/28/2016.\n */\nexport class NonEntitySQLQuery extends SQLQuery {\n    constructor(jsonQuery, dialect, queryResultType, airportDatabase, applicationUtils, entityStateManager, qMetadataUtils, qValidator, relationManager, sqlQueryAdapter, storeDriver, subStatementQueryGenerator, context) {\n        super(jsonQuery, null, dialect, queryResultType, airportDatabase, applicationUtils, entityStateManager, qMetadataUtils, sqlQueryAdapter, storeDriver, context);\n        this.qValidator = qValidator;\n        this.relationManager = relationManager;\n        this.subStatementQueryGenerator = subStatementQueryGenerator;\n    }\n    addQEntityMapByAlias(sourceMap) {\n        for (let alias in sourceMap) {\n            this.qEntityMapByAlias[alias] = sourceMap[alias];\n        }\n    }\n    toSQL(internalFragments, context) {\n        let jsonQuery = this.jsonQuery;\n        let joinNodeMap = {};\n        this.joinTrees = this.buildFromJoinTree(jsonQuery.F, joinNodeMap, context);\n        let selectFragment = this.getSELECTFragment(false, jsonQuery.S, internalFragments, context);\n        let fromFragment = this.getFROMFragments(this.joinTrees, context);\n        let whereFragment = '';\n        if (jsonQuery.W) {\n            whereFragment = `\r\nWHERE\r\n\t${this.getWHEREFragment(jsonQuery.W, '', context)}`;\n        }\n        let groupByFragment = '';\n        if (jsonQuery.GB && jsonQuery.GB.length) {\n            groupByFragment = `\r\nGROUP BY\r\n\t${this.getGroupByFragment(jsonQuery.GB)}`;\n        }\n        let havingFragment = '';\n        if (jsonQuery.H) {\n            havingFragment = `\r\nHAVING\r\n\t${this.getWHEREFragment(jsonQuery.H, '', context)}`;\n        }\n        let orderByFragment = '';\n        if (jsonQuery.OB && jsonQuery.OB.length) {\n            orderByFragment = `\r\nORDER BY\r\n\t${this.orderByParser.getOrderByFragment(jsonQuery.S, jsonQuery.OB)}`;\n        }\n        let offsetFragment = '';\n        if (jsonQuery.O) {\n            offsetFragment = this.sqlQueryAdapter.getOffsetFragment(jsonQuery.O);\n        }\n        let limitFragment = '';\n        if (jsonQuery.L) {\n            offsetFragment = this.sqlQueryAdapter.getLimitFragment(jsonQuery.L);\n        }\n        return `SELECT\r\n\t${selectFragment}\r\nFROM\r\n${fromFragment}${whereFragment}${groupByFragment}${havingFragment}${orderByFragment}${offsetFragment}${limitFragment}`;\n    }\n    buildFromJoinTree(joinRelations, joinNodeMap, context) {\n        let jsonTrees = [];\n        let jsonTree;\n        // For entity queries it is possible to have a query with no from clause, in this case\n        // make the query entity the root tree node\n        if (joinRelations.length < 1) {\n            throw new Error(`FROM clause must have entries for non-Entity queries`);\n        }\n        let firstRelation = joinRelations[0];\n        switch (firstRelation.rt) {\n            case JSONRelationType.SUB_QUERY_ROOT:\n            case JSONRelationType.ENTITY_ROOT:\n                break;\n            default:\n                throw new Error(`First table in FROM clause cannot be joined`);\n        }\n        let alias = this.relationManager.getAlias(firstRelation);\n        this.qValidator.validateReadFromEntity(firstRelation);\n        let firstEntity = this.relationManager.createRelatedQEntity(firstRelation, context);\n        this.qEntityMapByAlias[alias] = firstEntity;\n        jsonTree = new JoinTreeNode(firstRelation, [], null);\n        jsonTrees.push(jsonTree);\n        joinNodeMap[alias] = jsonTree;\n        for (let i = 1; i < joinRelations.length; i++) {\n            let rightEntity;\n            let joinRelation = joinRelations[i];\n            if (!joinRelation.jt) {\n                throw new Error(`Table ${i + 1} in FROM clause is missing joinType`);\n            }\n            this.qValidator.validateReadFromEntity(joinRelation);\n            alias = this.relationManager.getAlias(joinRelation);\n            switch (joinRelation.rt) {\n                case JSONRelationType.SUB_QUERY_ROOT:\n                    let view = this.addFieldsToView(joinRelation, alias, context);\n                    this.qEntityMapByAlias[alias] = view;\n                    continue;\n                case JSONRelationType.ENTITY_ROOT:\n                    // Non-Joined table\n                    let nonJoinedEntity = this.relationManager.createRelatedQEntity(joinRelation, context);\n                    this.qEntityMapByAlias[alias] = nonJoinedEntity;\n                    let anotherTree = new JoinTreeNode(joinRelation, [], null);\n                    if (joinNodeMap[alias]) {\n                        throw new Error(`Alias '${alias}' used more than once in the FROM clause.`);\n                    }\n                    jsonTrees.push(anotherTree);\n                    joinNodeMap[alias] = anotherTree;\n                    continue;\n                case JSONRelationType.ENTITY_APPLICATION_RELATION:\n                    if (!joinRelation.ri) {\n                        throw new Error(`Table ${i + 1} in FROM clause is missing relationPropertyName`);\n                    }\n                    rightEntity = this.relationManager.createRelatedQEntity(joinRelation, context);\n                    break;\n                case JSONRelationType.SUB_QUERY_JOIN_ON:\n                    if (!joinRelation.joinWhereClause) {\n                        this.warn(`View ${i + 1} in FROM clause is missing joinWhereClause`);\n                    }\n                    rightEntity = this.addFieldsToView(joinRelation, alias, context);\n                    break;\n                case JSONRelationType.ENTITY_JOIN_ON:\n                    if (!joinRelation.joinWhereClause) {\n                        this.warn(`Table ${i + 1} in FROM clause is missing joinWhereClause`);\n                    }\n                    rightEntity = this.relationManager.createRelatedQEntity(joinRelation, context);\n                    break;\n                default:\n                    throw new Error(`Unknown JSONRelationType ${joinRelation.rt}`);\n            }\n            let parentAlias = this.relationManager.getParentAlias(joinRelation);\n            if (!joinNodeMap[parentAlias]) {\n                throw new Error(`Missing parent entity for alias ${parentAlias}, on table ${i + 1} in FROM clause. \r\n\t\t\t\t\tNOTE: sub-queries in FROM clause cannot reference parent FROM tables.`);\n            }\n            let leftNode = joinNodeMap[parentAlias];\n            let rightNode = new JoinTreeNode(joinRelation, [], leftNode);\n            leftNode.addChildNode(rightNode);\n            this.qValidator.validateReadFromEntity(joinRelation);\n            this.qEntityMapByAlias[alias] = rightEntity;\n            if (!rightEntity) {\n                throw new Error(`Could not find entity ${joinRelation.ti} for table ${i + 1} in FROM clause`);\n            }\n            if (joinNodeMap[alias]) {\n                throw new Error(`Alias '${alias}' used more than once in the FROM clause.`);\n            }\n            joinNodeMap[alias] = rightNode;\n        }\n        return jsonTrees;\n    }\n    addFieldsToView(viewJoinRelation, viewAlias, context) {\n        let view = new QTree(viewJoinRelation.fromClausePosition, null);\n        this.addFieldsToViewForSelect(view, viewAlias, viewJoinRelation.subQuery.S, 'f', null, context);\n        return view;\n    }\n    /**\n     * Just build the shell fields for the external API of the view, don't do anything else.\n     * @param view\n     * @param select\n     * @param fieldPrefix\n     */\n    addFieldsToViewForSelect(view, viewAlias, select, fieldPrefix, forFieldQueryAlias, context) {\n        let fieldIndex = 0;\n        let hasDistinctClause = false;\n        for (let fieldName in select) {\n            let alias = `${fieldPrefix}${++fieldIndex}`;\n            let fieldJson = select[fieldName];\n            // If its a nested select\n            if (!fieldJson.ot) {\n                this.addFieldsToViewForSelect(view, viewAlias, fieldJson, `${alias}_`, null, context);\n            }\n            else {\n                let aliasToSet = forFieldQueryAlias ? forFieldQueryAlias : alias;\n                hasDistinctClause = hasDistinctClause && this.addFieldToViewForSelect(view, viewAlias, fieldPrefix, fieldJson, aliasToSet, forFieldQueryAlias, context);\n            }\n        }\n        if (fieldIndex > 1) {\n            if (hasDistinctClause) {\n                throw new Error(`DISTINCT clause must be the only property at its level`);\n            }\n            if (forFieldQueryAlias) {\n                throw new Error(`Field queries can have only one field in SELECT clause`);\n            }\n        }\n    }\n    addFieldToViewForSelect(view, viewAlias, fieldPrefix, fieldJson, alias, forFieldQueryAlias = null, context) {\n        let hasDistinctClause = false;\n        let dbEntity;\n        let dbProperty;\n        let dbColumn;\n        switch (fieldJson.ot) {\n            case JSONClauseObjectType.FIELD_FUNCTION:\n                view[alias] = new SqlFunctionField(fieldJson);\n                throw new Error('Not implemented');\n            case JSONClauseObjectType.EXISTS_FUNCTION:\n                throw new Error(`Exists function cannot be used in SELECT clause.`);\n            case JSONClauseObjectType.FIELD:\n                dbEntity = this.airportDatabase.applications[fieldJson.si].currentVersion[0]\n                    .applicationVersion.entities[fieldJson.ti];\n                dbProperty = dbEntity.properties[fieldJson.pi];\n                dbColumn = dbEntity.columns[fieldJson.ci];\n                switch (fieldJson.dt) {\n                    case SQLDataType.BOOLEAN:\n                        view[alias] = new QBooleanField(dbColumn, dbProperty, view);\n                        break;\n                    case SQLDataType.DATE:\n                        view[alias] = new QDateField(dbColumn, dbProperty, view);\n                        break;\n                    case SQLDataType.NUMBER:\n                        view[alias] = new QNumberField(dbColumn, dbProperty, view);\n                        break;\n                    case SQLDataType.STRING:\n                        view[alias] = new QStringField(dbColumn, dbProperty, view);\n                        break;\n                    // case SQLDataType.ANY:\n                    // \tview[alias] = new QUntypedField(dbColumn, dbProperty,\n                    // \t\tview as IQEntityInternal<any>)\n                    // \tbreak\n                    default:\n                        throw new Error(`Unknown SQLDataType: ${fieldJson.dt}.`);\n                }\n                break;\n            case JSONClauseObjectType.FIELD_QUERY:\n                let fieldQuery = fieldJson;\n                this.addFieldToViewForSelect(view, viewAlias, fieldPrefix, fieldQuery.S, alias, alias, context);\n                break;\n            case JSONClauseObjectType.DISTINCT_FUNCTION:\n                this.addFieldsToViewForSelect(view, viewAlias, fieldJson.v, fieldPrefix, forFieldQueryAlias, context);\n                hasDistinctClause = true;\n                break;\n            case JSONClauseObjectType.MANY_TO_ONE_RELATION:\n                throw new Error(`@ManyToOne fields cannot be directly in a select clause.\r\n\t\t\t\t\tPlease select a non-relational field within the relation.`);\n            // let relation =\n            // <QField<any>><any>QMetadataUtils.getRelationByColumnIndex(this.dbFacade.getQEntityByIndex(fieldJson.ti),\n            // fieldJson.ci); view[alias] = relation.getInstance(view); break;\n            default:\n                throw new Error(`Unexpected type property on JSONClauseField: ${fieldJson.ot}.`);\n        }\n        return hasDistinctClause;\n    }\n    getFieldSelectFragment(value, clauseType, nestedObjectCallBack, fieldIndex, context) {\n        let columnSelectSqlFragment = this.getFieldValue(value, clauseType, \n        // Nested object processing\n        nestedObjectCallBack, context);\n        if (value.fa !== undefined) {\n            columnSelectSqlFragment += ` as ${value.fa}`;\n        }\n        if (fieldIndex === 0) {\n            return `\\n\\t${columnSelectSqlFragment}`;\n        }\n        else {\n            return `,\\n\\t${columnSelectSqlFragment}`;\n        }\n    }\n    getFROMFragments(joinTrees, context) {\n        return joinTrees.map(joinTree => this.getFROMFragment(null, joinTree, context))\n            .join('\\n');\n    }\n    getFROMFragment(parentTree, currentTree, context) {\n        let fromFragment = '\\t';\n        let currentRelation = currentTree.jsonRelation;\n        let currentAlias = this.relationManager.getAlias(currentRelation);\n        let qEntity = this.qEntityMapByAlias[currentAlias];\n        if (!parentTree) {\n            switch (currentRelation.rt) {\n                case JSONRelationType.ENTITY_ROOT:\n                    fromFragment += `${this.storeDriver.getEntityTableName(qEntity.__driver__.dbEntity, context)} ${currentAlias}`;\n                    break;\n                case JSONRelationType.SUB_QUERY_ROOT:\n                    let viewRelation = currentRelation;\n                    const { parameterReferences, subQuerySql } = this.subStatementSqlGenerator.getTreeQuerySql(viewRelation.subQuery, this.dialect, context);\n                    if (parameterReferences.length) {\n                        this.parameterReferences = this.parameterReferences.concat(parameterReferences);\n                    }\n                    fromFragment += `(${subQuerySql}) ${currentAlias}`;\n                    break;\n                default:\n                    throw new Error(`Top level FROM entries must be Entity or Sub-Query root`);\n            }\n        }\n        else {\n            let parentRelation = parentTree.jsonRelation;\n            let parentAlias = this.relationManager.getAlias(parentRelation);\n            let leftEntity = this.qEntityMapByAlias[parentAlias];\n            let rightEntity = this.qEntityMapByAlias[currentAlias];\n            let joinTypeString;\n            switch (currentRelation.jt) {\n                case JoinType.FULL_JOIN:\n                    joinTypeString = 'FULL JOIN';\n                    break;\n                case JoinType.INNER_JOIN:\n                    joinTypeString = 'INNER JOIN';\n                    break;\n                case JoinType.LEFT_JOIN:\n                    joinTypeString = 'LEFT JOIN';\n                    break;\n                case JoinType.RIGHT_JOIN:\n                    joinTypeString = 'RIGHT JOIN';\n                default:\n                    throw new Error(`Unsupported join type: ${currentRelation.jt}`);\n            }\n            let errorPrefix = 'Error building FROM: ';\n            let joinOnClause;\n            switch (currentRelation.rt) {\n                case JSONRelationType.ENTITY_JOIN_ON:\n                    let joinRelation = currentRelation;\n                    joinOnClause = this.getWHEREFragment(joinRelation.joinWhereClause, '\\t', context);\n                    fromFragment += `\\t${joinTypeString} ${this.storeDriver.getEntityTableName(qEntity.__driver__.dbEntity, context)} ${currentAlias} ON\\n${joinOnClause}`;\n                    break;\n                case JSONRelationType.ENTITY_APPLICATION_RELATION:\n                    fromFragment += this.getEntityApplicationRelationFromJoin(leftEntity, rightEntity, currentRelation, parentRelation, currentAlias, parentAlias, joinTypeString, errorPrefix, context);\n                    break;\n                case JSONRelationType.SUB_QUERY_JOIN_ON:\n                    let viewJoinRelation = currentRelation;\n                    const { parameterReferences, subQuerySql } = this.subStatementSqlGenerator.getTreeQuerySql(viewJoinRelation.subQuery, this.dialect, context);\n                    if (parameterReferences.length) {\n                        this.parameterReferences = this.parameterReferences.concat(parameterReferences);\n                    }\n                    joinOnClause = this.getWHEREFragment(viewJoinRelation.joinWhereClause, '\\t', context);\n                    fromFragment += `${joinTypeString} (${subQuerySql}) ${currentAlias} ON\\n${joinOnClause}`;\n                    break;\n                default:\n                    throw new Error(`Nested FROM entries must be Entity JOIN ON\r\n\t\t\t\t\tor Application Relation, or Sub-Query JOIN ON`);\n            }\n        }\n        for (let i = 0; i < currentTree.childNodes.length; i++) {\n            let childTreeNode = currentTree.childNodes[i];\n            fromFragment += this.getFROMFragment(currentTree, childTreeNode, context);\n        }\n        return fromFragment;\n    }\n    getGroupByFragment(groupBy) {\n        return groupBy.map((groupByField) => {\n            this.qValidator.validateAliasedFieldAccess(groupByField.fa);\n            return `${groupByField.fa}`;\n        })\n            .join(', ');\n    }\n    getOrderByFragment(orderBy) {\n        return orderBy.map((orderByField) => {\n            this.qValidator.validateAliasedFieldAccess(orderByField.fa);\n            switch (orderByField.so) {\n                case SortOrder.ASCENDING:\n                    return `${orderByField.fa} ASC`;\n                case SortOrder.DESCENDING:\n                    return `${orderByField.fa} DESC`;\n            }\n        })\n            .join(', ');\n    }\n}\n//# sourceMappingURL=NonEntitySQLQuery.js.map","import { JSONClauseObjectType, QueryResultType } from '@airport/ground-control';\nimport { ExactOrderByParser } from '../orderBy/ExactOrderByParser';\nimport { ClauseType } from './core/SQLWhereBase';\nimport { NonEntitySQLQuery } from './NonEntitySQLQuery';\n/**\n * Created by Papa on 10/29/2016.\n */\nexport class FieldSQLQuery extends NonEntitySQLQuery {\n    constructor(jsonQuery, dialect, airportDatabase, applicationUtils, entityStateManager, qMetadataUtils, qValidator, relationManager, sqlQueryAdapter, storeDriver, subStatementQueryGenerator, context) {\n        super(jsonQuery, dialect, QueryResultType.FIELD, airportDatabase, applicationUtils, entityStateManager, qMetadataUtils, qValidator, relationManager, sqlQueryAdapter, storeDriver, subStatementQueryGenerator, context);\n        this.orderByParser = new ExactOrderByParser(qValidator);\n    }\n    async parseQueryResults(results, internalFragments, queryResultType, context, bridgedQueryConfiguration) {\n        let parsedResults = [];\n        if (!results || !results.length) {\n            return parsedResults;\n        }\n        parsedResults = [];\n        let lastResult;\n        results.forEach((result) => {\n            let parsedResult = this.parseQueryResult(this.jsonQuery.S, result, [0]);\n            parsedResults.push(parsedResult);\n        });\n        return parsedResults;\n    }\n    getSELECTFragment(nested, selectClauseFragment, internalFragments, context) {\n        if (!selectClauseFragment) {\n            throw new Error(`SELECT clause is not defined for a Field Query`);\n        }\n        {\n            let distinctClause = selectClauseFragment;\n            if (distinctClause.ot == JSONClauseObjectType.DISTINCT_FUNCTION) {\n                let distinctSelect = this.getSELECTFragment(nested, distinctClause.appliedFunctions[0].p[0], internalFragments, context);\n                return `DISTINCT ${distinctSelect}`;\n            }\n        }\n        let field = selectClauseFragment;\n        let fieldIndex = 0;\n        let selectSqlFragment = this.getFieldSelectFragment(field, ClauseType.NON_MAPPED_SELECT_CLAUSE, null, fieldIndex++, context);\n        return selectSqlFragment;\n    }\n    parseQueryResult(selectClauseFragment, resultRow, nextFieldIndex) {\n        let field = selectClauseFragment;\n        let propertyValue = this.sqlQueryAdapter.getResultCellValue(resultRow, field.fa, nextFieldIndex[0], field.dt, null);\n        nextFieldIndex[0]++;\n        return propertyValue;\n    }\n}\n//# sourceMappingURL=FieldSQLQuery.js.map","import { AliasCache } from '@airport/air-traffic-control';\nimport { JSONClauseObjectType, QueryResultType } from '@airport/ground-control';\nimport { MappedOrderByParser } from '../orderBy/MappedOrderByParser';\nimport { TreeQueryResultParser } from '../result/TreeQueryResultParser';\nimport { ClauseType } from './core/SQLWhereBase';\nimport { NonEntitySQLQuery } from './NonEntitySQLQuery';\nimport { SqlFunctionField } from './SqlFunctionField';\n/**\n * Created by Papa on 10/28/2016.\n */\nexport class TreeSQLQuery extends NonEntitySQLQuery {\n    constructor(jsonQuery, dialect, airportDatabase, applicationUtils, entityStateManager, qMetadataUtils, qValidator, relationManager, sqlQueryAdapter, storeDriver, subStatementQueryGenerator, context) {\n        super(jsonQuery, dialect, QueryResultType.TREE, airportDatabase, applicationUtils, entityStateManager, qMetadataUtils, qValidator, relationManager, sqlQueryAdapter, storeDriver, subStatementQueryGenerator, context);\n        this.queryParser = new TreeQueryResultParser(applicationUtils, entityStateManager);\n        this.orderByParser = new MappedOrderByParser(qValidator);\n    }\n    /**\n     * Entities get merged if they are right next to each other in the result set.  If they\n     * are not, they are treated as separate entities - hence, your sort order matters.\n     *\n     * @param results\n     * @returns {any[]}\n     */\n    async parseQueryResults(results, internalFragments, queryResultType, context, bridgedQueryConfiguration) {\n        let parsedResults = [];\n        if (!results || !results.length) {\n            return parsedResults;\n        }\n        parsedResults = [];\n        let lastResult;\n        results.forEach((result) => {\n            let aliasCache = new AliasCache();\n            let parsedResult = this.parseQueryResult(this.jsonQuery.S, result, [0], aliasCache, aliasCache.getFollowingAlias());\n            if (!lastResult) {\n                parsedResults.push(parsedResult);\n            }\n            else if (lastResult !== parsedResult) {\n                lastResult = parsedResult;\n                parsedResults.push(parsedResult);\n            }\n            this.queryParser.flushRow();\n        });\n        return parsedResults;\n    }\n    getSELECTFragment(nested, selectClauseFragment, internalFragments, context) {\n        const distinctClause = selectClauseFragment;\n        if (distinctClause.ot == JSONClauseObjectType.DISTINCT_FUNCTION) {\n            if (nested) {\n                throw new Error(`Cannot have DISTINCT specified in a nested select clause`);\n            }\n            const distinctSelect = this.getSELECTFragment(nested, distinctClause.appliedFunctions[0].p[0], internalFragments, context);\n            return `DISTINCT ${distinctSelect}`;\n        }\n        let numProperties = 0;\n        for (let propertyName in selectClauseFragment) {\n            if (propertyName === '*') {\n                throw new Error(`'*' operator isn't yet implemented in mapped queries`);\n            }\n            numProperties++;\n        }\n        if (numProperties === 0) {\n            if (nested) {\n                throw new Error(`Mapped query must have fields in a nested-select clause`);\n            }\n            else {\n                return '*';\n            }\n        }\n        let fieldIndex = 0;\n        let selectSqlFragment = '';\n        for (let propertyName in selectClauseFragment) {\n            const value = selectClauseFragment[propertyName];\n            // Skip undefined values\n            if (value === undefined) {\n                continue;\n            }\n            if (value instanceof SqlFunctionField) {\n                selectSqlFragment += value.getValue(this, context);\n                continue;\n            }\n            selectSqlFragment += this.getFieldSelectFragment(value, ClauseType.MAPPED_SELECT_CLAUSE, () => {\n                return this.getSELECTFragment(true, value, internalFragments, context);\n            }, fieldIndex++, context);\n        }\n        return selectSqlFragment;\n    }\n    parseQueryResult(selectClauseFragment, resultRow, nextFieldIndex, aliasCache, entityAlias) {\n        // Return blanks, primitives and Dates directly\n        if (!resultRow || !(resultRow instanceof Object) || resultRow instanceof Date) {\n            return resultRow;\n        }\n        {\n            let distinctClause = selectClauseFragment;\n            if (distinctClause.ot == JSONClauseObjectType.DISTINCT_FUNCTION) {\n                return this.parseQueryResult(distinctClause.appliedFunctions[0].p[0], resultRow, nextFieldIndex, aliasCache, entityAlias);\n            }\n        }\n        let resultObject = this.queryParser.addEntity(entityAlias);\n        for (let propertyName in selectClauseFragment) {\n            if (selectClauseFragment[propertyName] === undefined) {\n                continue;\n            }\n            let jsonClauseField = selectClauseFragment[propertyName];\n            let dataType = jsonClauseField.dt;\n            // Must be a sub-query\n            if (!dataType) {\n                let childResultObject = this.parseQueryResult(jsonClauseField, resultRow, nextFieldIndex, aliasCache, aliasCache.getFollowingAlias());\n                this.queryParser.bufferOneToManyCollection(entityAlias, resultObject, propertyName, childResultObject);\n            }\n            else {\n                let propertyValue = this.sqlQueryAdapter.getResultCellValue(resultRow, jsonClauseField.fa, nextFieldIndex[0], dataType, null);\n                this.queryParser.addProperty(entityAlias, resultObject, dataType, propertyName, propertyValue);\n            }\n            nextFieldIndex[0]++;\n        }\n        return this.queryParser.flushEntity(entityAlias, resultObject);\n    }\n}\n//# sourceMappingURL=TreeSQLQuery.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { FieldSQLQuery } from '../FieldSQLQuery';\nimport { TreeSQLQuery } from '../TreeSQLQuery';\nlet SubStatementSqlGenerator = class SubStatementSqlGenerator {\n    getTreeQuerySql(jsonTreeQuery, dialect, context) {\n        let mappedSqlQuery = new TreeSQLQuery(jsonTreeQuery, dialect, this.airportDatabase, this.applicationUtils, this.entityStateManager, this.qMetadataUtils, this.qValidator, this.relationManager, this.sqlQueryAdapter, this.storeDriver, this.subStatementQueryGenerator, context);\n        const subQuerySql = mappedSqlQuery.toSQL({}, context);\n        const parameterReferences = mappedSqlQuery.parameterReferences;\n        return {\n            parameterReferences,\n            subQuerySql\n        };\n    }\n    getFieldQuerySql(jsonFieldSqlSubQuery, dialect, qEntityMapByAlias, context) {\n        let fieldSqlQuery = new FieldSQLQuery(jsonFieldSqlSubQuery, dialect, this.airportDatabase, this.applicationUtils, this.entityStateManager, this.qMetadataUtils, this.qValidator, this.relationManager, this.sqlQueryAdapter, this.storeDriver, this.subStatementQueryGenerator, context);\n        fieldSqlQuery.addQEntityMapByAlias(qEntityMapByAlias);\n        const subQuerySql = fieldSqlQuery.toSQL({}, context);\n        const parameterReferences = fieldSqlQuery.parameterReferences;\n        return {\n            parameterReferences,\n            subQuerySql\n        };\n    }\n};\n__decorate([\n    Inject()\n], SubStatementSqlGenerator.prototype, \"airportDatabase\", void 0);\n__decorate([\n    Inject()\n], SubStatementSqlGenerator.prototype, \"applicationUtils\", void 0);\n__decorate([\n    Inject()\n], SubStatementSqlGenerator.prototype, \"entityStateManager\", void 0);\n__decorate([\n    Inject()\n], SubStatementSqlGenerator.prototype, \"qMetadataUtils\", void 0);\n__decorate([\n    Inject()\n], SubStatementSqlGenerator.prototype, \"qValidator\", void 0);\n__decorate([\n    Inject()\n], SubStatementSqlGenerator.prototype, \"relationManager\", void 0);\n__decorate([\n    Inject()\n], SubStatementSqlGenerator.prototype, \"sqlQueryAdapter\", void 0);\n__decorate([\n    Inject()\n], SubStatementSqlGenerator.prototype, \"storeDriver\", void 0);\n__decorate([\n    Inject()\n], SubStatementSqlGenerator.prototype, \"subStatementQueryGenerator\", void 0);\nSubStatementSqlGenerator = __decorate([\n    Injected()\n], SubStatementSqlGenerator);\nexport { SubStatementSqlGenerator };\n//# sourceMappingURL=SubStatementSqlGenerator.js.map","import { AliasCache, isID, isN, isY, JoinTreeNode, objectExists, Y } from '@airport/air-traffic-control';\nimport { EntityRelationType, EntityState, JoinType, JSONRelationType } from '@airport/ground-control';\nimport { EntityOrderByParser } from '../orderBy/EntityOrderByParser';\nimport { SQLQuery } from './core/SQLQuery';\n/**\n * Created by Papa on 10/16/2016.\n */\n/**\n * Represents SQL String query with Entity tree Select clause.\n */\nexport class EntitySQLQuery extends SQLQuery {\n    constructor(jsonQuery, dbEntity, dialect, queryResultType, airportDatabase, applicationUtils, entityStateManager, objectResultParserFactory, qMetadataUtils, qValidator, relationManager, sqlQueryAdapter, storeDriver, context, graphQueryConfiguration) {\n        super(jsonQuery, dbEntity, dialect, queryResultType, airportDatabase, applicationUtils, entityStateManager, qMetadataUtils, sqlQueryAdapter, storeDriver, context);\n        this.objectResultParserFactory = objectResultParserFactory;\n        this.relationManager = relationManager;\n        this.graphQueryConfiguration = graphQueryConfiguration;\n        this.columnAliases = new AliasCache();\n        if (graphQueryConfiguration && this.graphQueryConfiguration.strict !== undefined) {\n            throw new Error(`\"strict\" configuration is not yet implemented for \r\n\t\t\tQueryResultType.ENTITY_GRAPH`);\n        }\n        this.finalSelectTree = this.setupSelectFields(this.jsonQuery.S, dbEntity, context);\n        this.orderByParser = new EntityOrderByParser(this.finalSelectTree, airportDatabase, qValidator, relationManager, jsonQuery.OB);\n    }\n    toSQL(internalFragments, context) {\n        let joinNodeMap = {};\n        this.joinTree = this.buildFromJoinTree(this.jsonQuery.F, joinNodeMap, context);\n        let selectFragment = this.getSELECTFragment(this.dbEntity, this.finalSelectTree, this.joinTree, context);\n        let fromFragment = this.getFROMFragment(null, this.joinTree, context);\n        let whereFragment = '';\n        let jsonQuery = this.jsonQuery;\n        if (jsonQuery.W) {\n            whereFragment = `\r\nWHERE\r\n${this.getWHEREFragment(jsonQuery.W, '', context)}`;\n        }\n        let orderByFragment = '';\n        if (jsonQuery.OB && jsonQuery.OB.length) {\n            orderByFragment = `\r\nORDER BY\r\n${this.orderByParser.getOrderByFragment(this.joinTree, this.qEntityMapByAlias, context)}`;\n        }\n        return `SELECT\r\n\t${selectFragment}\r\nFROM\r\n${fromFragment}${whereFragment}${orderByFragment}`;\n    }\n    /**\n     * If bridging is not applied:\n     *\n     * Entities get merged if they are right next to each other in the result set.  If they\n     * are not, they are treated as separate entities - hence, your sort order matters.\n     *\n     * If bridging is applied - all entities get merged - your sort order does not matter.\n     * Might as well disallow sort order for bridged queries (or re-sort in memory)?\n     *\n     * @param results\n     * @returns {any[]}\n     */\n    async parseQueryResults(results, internalFragments, queryResultType, context, bridgedQueryConfiguration) {\n        this.queryParser = this.objectResultParserFactory.getObjectResultParser(this.queryResultType, this.graphQueryConfiguration, this.dbEntity);\n        let parsedResults = [];\n        if (!results || !results.length) {\n            return parsedResults;\n        }\n        parsedResults = [];\n        let lastResult;\n        for (let i = 0; i < results.length; i++) {\n            let result = results[i];\n            let entityAlias = this.relationManager.getAlias(this.joinTree.jsonRelation);\n            this.columnAliases.reset();\n            let parsedResult = this.parseQueryResult(this.finalSelectTree, entityAlias, this.joinTree, result, [0], context);\n            if (!lastResult) {\n                parsedResults.push(parsedResult);\n            }\n            else if (lastResult !== parsedResult) {\n                parsedResults.push(parsedResult);\n            }\n            lastResult = parsedResult;\n            this.queryParser.flushRow();\n        }\n        return this.queryParser.bridge(parsedResults, this.jsonQuery.S, context);\n    }\n    buildFromJoinTree(joinRelations, joinNodeMap, context) {\n        let jsonTree;\n        // For entity queries it is possible to have a query with no from clause, in this case\n        // make the query entity the root tree node\n        if (joinRelations.length < 1) {\n            let onlyJsonRelation = {\n                currentChildIndex: 0,\n                ti: this.dbEntity.index,\n                fromClausePosition: [],\n                jt: null,\n                ri: null,\n                rt: JSONRelationType.ENTITY_ROOT,\n                rep: 'r_',\n                si: this.dbEntity.applicationVersion.id\n            };\n            joinRelations.push(onlyJsonRelation);\n        }\n        let firstRelation = joinRelations[0];\n        switch (firstRelation.rt) {\n            case JSONRelationType.ENTITY_ROOT:\n                break;\n            case JSONRelationType.SUB_QUERY_ROOT:\n            case JSONRelationType.SUB_QUERY_JOIN_ON:\n                throw new Error(`Entity query's FROM clause cannot contain sub-queries`);\n            case JSONRelationType.ENTITY_JOIN_ON:\n                throw new Error(`Entity queries cannot use JOIN ON`);\n            default:\n                throw new Error(`First table in FROM clause cannot be result of a join`);\n        }\n        // if (firstRelation.rt !== JSONRelationType.ENTITY_ROOT) {\n        // \tthrow new Error(`First table in FROM clause cannot be joined`)\n        // }\n        let alias = this.relationManager.getAlias(firstRelation);\n        let firstEntity = this.relationManager.createRelatedQEntity(firstRelation, context);\n        this.qEntityMapByAlias[alias] = firstEntity;\n        this.jsonRelationMapByAlias[alias] = firstRelation;\n        // In entity queries the first entity must always be the same as the query entity\n        const firstDbEntity = firstEntity.__driver__.dbEntity;\n        // if (firstEntity.constructor != this.rootQEntity.constructor) {\n        if (firstDbEntity.applicationVersion.application.index !== this.dbEntity.applicationVersion.application.index || firstDbEntity.index !== this.dbEntity.index) {\n            throw new Error(`ERROR: Unexpected first table in FROM clause: \r\n\t\t\t'${firstDbEntity.applicationVersion.application.name}.${firstDbEntity.name}',\r\n\t\t\texpecting:\r\n\t\t\t'${this.dbEntity.applicationVersion.application.name}.${this.dbEntity.name}'`);\n        }\n        jsonTree = new JoinTreeNode(firstRelation, [], null);\n        joinNodeMap[alias] = jsonTree;\n        for (let i = 1; i < joinRelations.length; i++) {\n            let joinRelation = joinRelations[i];\n            switch (joinRelation.rt) {\n                case JSONRelationType.ENTITY_ROOT:\n                    throw new Error(`All Entity query tables after the first must be joined`);\n                case JSONRelationType.SUB_QUERY_JOIN_ON:\n                    throw new Error(`Entity queries FROM clause cannot contain sub-queries`);\n                case JSONRelationType.ENTITY_JOIN_ON:\n                    throw new Error(`Entity queries cannot use JOIN ON`);\n                default:\n                    break;\n            }\n            if (!joinRelation.ri && joinRelation.ri !== 0) {\n                throw new Error(`Table ${i + 1} in FROM clause is missing \r\n\t\t\t\trelationPropertyName`);\n            }\n            let parentAlias = this.relationManager.getParentAlias(joinRelation);\n            if (!joinNodeMap[parentAlias]) {\n                throw new Error(`Missing parent entity for alias ${parentAlias}, \r\n\t\t\t\ton table ${i + 1} in FROM clause`);\n            }\n            let leftNode = joinNodeMap[parentAlias];\n            let rightNode = new JoinTreeNode(joinRelation, [], leftNode);\n            leftNode.addChildNode(rightNode);\n            alias = this.relationManager.getAlias(joinRelation);\n            let rightEntity = this.relationManager.createRelatedQEntity(joinRelation, context);\n            this.qEntityMapByAlias[alias] = rightEntity;\n            this.jsonRelationMapByAlias[alias] = firstRelation;\n            if (!rightEntity) {\n                throw new Error(`Could not find entity ${joinRelation.ti} for \r\n\t\t\t\ttable ${i + 1} in FROM clause`);\n            }\n            if (joinNodeMap[alias]) {\n                throw new Error(`Alias '${alias}' used more than once in the FROM clause.`);\n            }\n            joinNodeMap[alias] = rightNode;\n        }\n        return jsonTree;\n    }\n    parseQueryResult(selectClauseFragment, entityAlias, currentJoinNode, resultRow, nextColumnIndex, context) {\n        // Return blanks, primitives and Dates directly\n        if (!resultRow || !(resultRow instanceof Object) || resultRow instanceof Date) {\n            return resultRow;\n        }\n        let numNonNullColumns = 0;\n        let qEntity = this.qEntityMapByAlias[entityAlias];\n        const dbEntity = qEntity.__driver__.dbEntity;\n        let resultObject = this.queryParser.addEntity(entityAlias, dbEntity, context);\n        for (let propertyName in selectClauseFragment) {\n            const dbProperty = dbEntity.propertyMap[propertyName];\n            if (!dbProperty.relation || !dbProperty.relation.length) {\n                const columnAlias = this.columnAliases.getFollowingAlias();\n                const defaultValue = this.entityDefaults.getForAlias(entityAlias)[propertyName];\n                const dbColumn = dbProperty.propertyColumns[0].column;\n                const propertyValue = this.sqlQueryAdapter.getResultCellValue(resultRow, columnAlias, nextColumnIndex[0], dbColumn.type, defaultValue);\n                if (this.queryParser.addProperty(entityAlias, resultObject, dbColumn.type, propertyName, propertyValue)) {\n                    numNonNullColumns++;\n                }\n                nextColumnIndex[0]++;\n            }\n            else {\n                const childSelectClauseFragment = selectClauseFragment[propertyName];\n                const dbRelation = dbProperty.relation[0];\n                const childDbEntity = dbRelation.relationEntity;\n                if (childSelectClauseFragment === null || childSelectClauseFragment.__state__ === EntityState.STUB) {\n                    switch (dbRelation.relationType) {\n                        case EntityRelationType.MANY_TO_ONE:\n                            let haveRelationValues = false;\n                            let relationInfos = [];\n                            this.applicationUtils.forEachColumnTypeOfRelation(dbRelation, (dbColumn, propertyNameChains) => {\n                                const columnAlias = this.columnAliases.getFollowingAlias();\n                                let value = this.sqlQueryAdapter.getResultCellValue(resultRow, columnAlias, nextColumnIndex[0], dbColumn.type, null);\n                                relationInfos.push({\n                                    propertyNameChains: propertyNameChains,\n                                    sqlDataType: dbColumn.type,\n                                    value\n                                });\n                                if (objectExists(value)) {\n                                    haveRelationValues = true;\n                                    numNonNullColumns++;\n                                }\n                                nextColumnIndex[0]++;\n                            });\n                            if (haveRelationValues) {\n                                this.queryParser.bufferManyToOneStub(entityAlias, dbEntity, resultObject, propertyName, childDbEntity, relationInfos, context);\n                            }\n                            else {\n                                this.queryParser.bufferBlankManyToOneStub(entityAlias, resultObject, propertyName, relationInfos);\n                            }\n                            break;\n                        case EntityRelationType.ONE_TO_MANY:\n                            this.queryParser.bufferOneToManyStub(dbEntity, propertyName);\n                            break;\n                        default:\n                            throw new Error(`Unknown relation type '${dbRelation.relationType}' for \r\n\t\t\t\t\t\t\t\t'${dbEntity.name}.${dbProperty.name}'`);\n                    }\n                }\n                else {\n                    const childJoinNode = currentJoinNode.getEntityRelationChildNode(dbRelation);\n                    const childEntityAlias = this.relationManager.getAlias(childJoinNode.jsonRelation);\n                    const relationQEntity = this.qEntityMapByAlias[childEntityAlias];\n                    const relationDbEntity = relationQEntity.__driver__.dbEntity;\n                    let childResultObject = this.parseQueryResult(childSelectClauseFragment, childEntityAlias, childJoinNode, resultRow, nextColumnIndex, context);\n                    switch (dbRelation.relationType) {\n                        case EntityRelationType.MANY_TO_ONE:\n                            if (childResultObject) {\n                                this.queryParser.bufferManyToOneObject(entityAlias, dbEntity, resultObject, propertyName, relationDbEntity, childResultObject, context);\n                            }\n                            else {\n                                this.queryParser.bufferBlankManyToOneObject(entityAlias, resultObject, propertyName);\n                            }\n                            break;\n                        case EntityRelationType.ONE_TO_MANY:\n                            if (childResultObject) {\n                                this.queryParser.bufferOneToManyCollection(entityAlias, resultObject, dbEntity, propertyName, relationDbEntity, childResultObject, context);\n                            }\n                            else {\n                                this.queryParser.bufferBlankOneToMany(entityAlias, resultObject, dbEntity.name, propertyName, relationDbEntity, context);\n                            }\n                            break;\n                        default:\n                            throw new Error(`Unknown relation type '${dbRelation.relationType}' for \r\n\t\t\t\t\t\t\t\t'${dbEntity.name}.${dbProperty.name}'`);\n                    }\n                }\n            }\n        }\n        if (numNonNullColumns === 0) {\n            return null;\n        }\n        let idValue = this.applicationUtils.getIdKey(resultObject, dbEntity);\n        return this.queryParser.flushEntity(entityAlias, dbEntity, selectClauseFragment, idValue, resultObject, context);\n    }\n    /**\n     * Verify that the entity select clause is valid (has ids) and fill in clauses\n     * that are blank (defined as {}).\n     *\n     *\n     * {\n     *  id1: Y,\n     *  id2: {\n     *    subId1: Y\n     *  },\n     *  other1: Y\n     * }\n     *\n     * If no properties are specified all properties are included.\n     *\n     * @param selectClauseFragment\n     * @param {DbEntity} dbEntity\n     * @returns {any}\n     */\n    setupSelectFields(selectClauseFragment, dbEntity, context, parentDbProperty) {\n        let retrieveAllOwnFields = true;\n        let selectFragment;\n        if (!selectClauseFragment || selectClauseFragment instanceof Array) {\n            let ofProperty = '';\n            if (parentDbProperty) {\n                ofProperty = `(of '${parentDbProperty.entity.name}.${parentDbProperty.name}') `;\n            }\n            throw new Error(`'${dbEntity.name}' Entity SELECT clause ${ofProperty}must be specified as an Object.`);\n        }\n        else if (isID(selectFragment)) {\n            selectFragment = {};\n            retrieveAllOwnFields = false;\n        }\n        else {\n            selectFragment = { ...selectClauseFragment };\n        }\n        let allFieldsSpecified = false;\n        if (selectFragment.__allFields__ === true) {\n            allFieldsSpecified = true;\n            delete selectFragment.__allFields__;\n        }\n        const entityDefinitionHasIds = !!dbEntity.idColumns.length;\n        for (const propertyName in selectFragment) {\n            if (!allFieldsSpecified) {\n                retrieveAllOwnFields = false;\n            }\n            const dbProperty = dbEntity.propertyMap[propertyName];\n            if (!dbProperty) {\n                throw new Error(`Entity property '${dbEntity.name}.${propertyName}' does not exist.`);\n            }\n            const value = selectFragment[propertyName];\n            if (value === undefined || value === null || isN(value)) {\n                if (dbProperty.isId) {\n                    throw new Error(`@Id properties cannot be excluded from entity queries.`);\n                }\n                if (!entityDefinitionHasIds) {\n                    throw new Error(`Cannot exclude property '${propertyName}' from select clause \r\n\t\t\t\t\tfor '${dbEntity.name}' Entity - entity has no @Id so all properties must be included.`);\n                }\n                delete selectFragment[propertyName];\n                continue;\n            }\n            // Need to differentiate between properties that contain only\n            // foreign key ids and properties\n            if (dbProperty.relation && dbProperty.relation.length) {\n                selectFragment[propertyName] = this.setupSelectFields(value, dbProperty.relation[0].relationEntity, context, dbProperty);\n                // } else {\n                // \t//  At least one non-relational field is in the original select clause\n                // \tretrieveAllOwnFields = false\n            }\n            else if (!isY(value)) {\n                selectFragment[propertyName] = Y;\n            }\n        }\n        //  For {} select causes, entities with no @Id, retrieve the entire object.\n        // Otherwise make sure all @Id columns are specified.\n        for (const dbProperty of dbEntity.properties) {\n            if (entityDefinitionHasIds && !dbProperty.isId && !retrieveAllOwnFields) {\n                continue;\n            }\n            const allowDefaults = entityDefinitionHasIds && !dbProperty.isId;\n            if (dbProperty.relation && dbProperty.relation.length) {\n                const dbRelation = dbProperty.relation[0];\n                switch (dbRelation.relationType) {\n                    case EntityRelationType.ONE_TO_MANY:\n                        break;\n                    case EntityRelationType.MANY_TO_ONE:\n                        // If select fragment for the child entity is already defined, do not overwrite it\n                        if (selectFragment[dbProperty.name]) {\n                            break;\n                        }\n                        const manyToOneRelation = {};\n                        this.entityStateManager.markAsStub(manyToOneRelation);\n                        selectFragment[dbProperty.name] = manyToOneRelation;\n                        // applicationUtils.addRelationToEntitySelectClause(dbRelation, selectFragment,\n                        // allowDefaults)\n                        break;\n                    default:\n                        throw new Error(`Unknown relation type: '${dbRelation.relationType}' \r\n\t\t\t\t\t\ton '${dbEntity.name}.${dbProperty.name}'.`);\n                }\n            }\n            else {\n                const value = selectFragment[dbProperty.name];\n                if (value !== undefined && value !== null) {\n                    if (!allowDefaults && !isY(value)) {\n                        throw new Error(`${entityDefinitionHasIds ? '@Id properties' : 'Entities without @Id'} \r\n\t\t\t\t\t\tcannot have default SELECT values.`);\n                    }\n                }\n                else {\n                    selectFragment[dbProperty.name] = Y;\n                }\n            }\n        }\n        return selectFragment;\n    }\n    getSELECTFragment(dbEntity, selectClauseFragment, joinTree, context, parentProperty) {\n        const tableAlias = this.relationManager.getAlias(joinTree.jsonRelation);\n        let selectSqlFragments = [];\n        let isStubProperty = this.entityStateManager.isStub(selectClauseFragment);\n        const defaults = this.entityDefaults.getForAlias(tableAlias);\n        for (let propertyName in selectClauseFragment) {\n            if (propertyName === '__state__') {\n                continue;\n            }\n            const value = selectClauseFragment[propertyName];\n            if (!isY(value)) {\n                defaults[propertyName] = value;\n            }\n            const dbProperty = dbEntity.propertyMap[propertyName];\n            if (dbProperty.relation && dbProperty.relation.length) {\n                const dbRelation = dbProperty.relation[0];\n                if (this.entityStateManager.isStub(selectClauseFragment[propertyName])) {\n                    for (const relationColumn of dbRelation.manyRelationColumns) {\n                        const dbColumn = relationColumn.manyColumn;\n                        this.addFieldFromColumn(dbColumn);\n                        const columnSelect = this.getSimpleColumnFragment(tableAlias, dbColumn.name);\n                        selectSqlFragments.push(`${columnSelect} ${this.columnAliases.getFollowingAlias()}`);\n                    }\n                }\n                else {\n                    const subSelectFragments = this.getSELECTFragment(dbRelation.relationEntity, selectClauseFragment[propertyName], joinTree.getEntityRelationChildNode(dbRelation), context, dbProperty);\n                    selectSqlFragments = selectSqlFragments.concat(subSelectFragments);\n                }\n            }\n            else {\n                const dbColumn = dbProperty.propertyColumns[0].column;\n                this.addFieldFromColumn(dbColumn);\n                const columnSelect = this.getSimpleColumnFragment(tableAlias, dbColumn.name);\n                selectSqlFragments.push(`${columnSelect} ${this.columnAliases.getFollowingAlias()}`);\n            }\n        }\n        return selectSqlFragments;\n    }\n    getFROMFragment(parentTree, currentTree, context) {\n        let fromFragment = '\\t';\n        let currentRelation = currentTree.jsonRelation;\n        let currentAlias = this.relationManager.getAlias(currentRelation);\n        let qEntity = this.qEntityMapByAlias[currentAlias];\n        let tableName = this.storeDriver.getEntityTableName(qEntity.__driver__.dbEntity, context);\n        if (!parentTree) {\n            fromFragment += `${tableName} ${currentAlias}`;\n        }\n        else {\n            let parentRelation = parentTree.jsonRelation;\n            let parentAlias = this.relationManager.getAlias(parentRelation);\n            let leftEntity = this.qEntityMapByAlias[parentAlias];\n            let rightEntity = this.qEntityMapByAlias[currentAlias];\n            let joinTypeString;\n            switch (currentRelation.jt) {\n                case JoinType.FULL_JOIN:\n                    throw new Error(`Full Joins are not allowed in Entity queries.`);\n                case JoinType.INNER_JOIN:\n                    joinTypeString = 'INNER JOIN';\n                    break;\n                case JoinType.LEFT_JOIN:\n                    joinTypeString = 'LEFT JOIN';\n                    break;\n                case JoinType.RIGHT_JOIN:\n                    throw new Error(`Right Joins are not allowed in Entity queries.`);\n                default:\n                    throw new Error(`Unsupported join type: ${currentRelation.jt}`);\n            }\n            let errorPrefix = 'Error building FROM: ';\n            switch (currentRelation.rt) {\n                case JSONRelationType.ENTITY_APPLICATION_RELATION:\n                    fromFragment += this.getEntityApplicationRelationFromJoin(leftEntity, rightEntity, currentRelation, parentRelation, currentAlias, parentAlias, joinTypeString, errorPrefix, context);\n                    break;\n                default:\n                    throw new Error(`Only Entity application relations are allowed in Entity query FROM clause.`);\n            }\n        }\n        for (let i = 0; i < currentTree.childNodes.length; i++) {\n            let childTreeNode = currentTree.childNodes[i];\n            fromFragment += this.getFROMFragment(currentTree, childTreeNode, context);\n        }\n        return fromFragment;\n    }\n}\n//# sourceMappingURL=EntitySQLQuery.js.map","import { JSONClauseObjectType, QueryResultType } from '@airport/ground-control';\nimport { ExactOrderByParser } from '../orderBy/ExactOrderByParser';\nimport { ClauseType } from './core/SQLWhereBase';\nimport { NonEntitySQLQuery } from './NonEntitySQLQuery';\n/**\n * Created by Papa on 10/16/2016.\n */\n/**\n * Represents SQL String query with flat (aka traditional) Select clause.\n */\nexport class SheetSQLQuery extends NonEntitySQLQuery {\n    constructor(jsonQuery, dialect, airportDatabase, applicationUtils, entityStateManager, qMetadataUtils, qValidator, relationManager, sqlQueryAdapter, storeDriver, subStatementQueryGenerator, context) {\n        super(jsonQuery, dialect, QueryResultType.SHEET, airportDatabase, applicationUtils, entityStateManager, qMetadataUtils, qValidator, relationManager, sqlQueryAdapter, storeDriver, subStatementQueryGenerator, context);\n        this.orderByParser = new ExactOrderByParser(qValidator);\n    }\n    async parseQueryResults(results, internalFragments, queryResultType, context, bridgedQueryConfiguration) {\n        let parsedResults = [];\n        if (!results || !results.length) {\n            return parsedResults;\n        }\n        parsedResults = [];\n        let lastResult;\n        results.forEach((result) => {\n            let parsedResult = this.parseQueryResult(this.jsonQuery.S, result, [0], internalFragments);\n            parsedResults.push(parsedResult);\n        });\n        return parsedResults;\n    }\n    getSELECTFragment(nested, selectClauseFragment, internalFragments, context) {\n        if (!selectClauseFragment) {\n            throw new Error(`SELECT clause is not defined for a Flat Query`);\n        }\n        {\n            let distinctClause = selectClauseFragment;\n            if (distinctClause.ot == JSONClauseObjectType.DISTINCT_FUNCTION) {\n                let distinctSelect = this.getSELECTFragment(nested, distinctClause.appliedFunctions[0].p[0], internalFragments, context);\n                return `DISTINCT ${distinctSelect}`;\n            }\n        }\n        if (!(selectClauseFragment instanceof Array)) {\n            throw new Error(`SELECT clause for a Flat Query must be an Array`);\n        }\n        let fieldIndex = 0;\n        let selectSqlFragment = selectClauseFragment.map((field) => {\n            return this.getFieldSelectFragment(field, ClauseType.NON_MAPPED_SELECT_CLAUSE, null, fieldIndex++, context);\n        })\n            .join('');\n        const selectClause = internalFragments.SELECT;\n        if (selectClause && selectClause.length) {\n            if (fieldIndex) {\n                selectSqlFragment += '\\n\\t,';\n            }\n            selectSqlFragment += selectClause\n                .map(dbColumn => `${dbColumn.name}`)\n                .join('\\n\\t,');\n        }\n        return selectSqlFragment;\n    }\n    parseQueryResult(selectClauseFragment, resultRow, nextFieldIndex, internalFragments) {\n        const resultsFromSelect = selectClauseFragment.map((field) => {\n            let propertyValue = this.sqlQueryAdapter.getResultCellValue(resultRow, field.fa, nextFieldIndex[0], field.dt, null);\n            nextFieldIndex[0]++;\n            return propertyValue;\n        });\n        const selectClause = internalFragments.SELECT;\n        if (selectClause && selectClause.length) {\n            for (const dbColumn of selectClause) {\n                let propertyValue = this.sqlQueryAdapter.getResultCellValue(resultRow, dbColumn.name, nextFieldIndex[0], dbColumn.type, null);\n                resultsFromSelect.push(propertyValue);\n                nextFieldIndex[0]++;\n            }\n        }\n        return resultsFromSelect;\n    }\n}\n//# sourceMappingURL=SheetSQLQuery.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nlet ActiveQueries = class ActiveQueries {\n    constructor() {\n        this.queries = new Map();\n    }\n    add(portableQuery, cachedSqlQuery) {\n        this.queries.set(portableQuery, cachedSqlQuery);\n    }\n    remove(portableQuery) {\n        this.queries.delete(portableQuery);\n    }\n    markQueriesToRerun(applicationMap) {\n        this.queries.forEach((cachedSqlQuery) => {\n            if (applicationMap.intersects(cachedSqlQuery.sqlQuery.getFieldMap())) {\n                cachedSqlQuery.rerun = true;\n            }\n        });\n    }\n    rerunQueries( //\n    ) {\n        // Add a bit of a wait to let any query-subscribed screens that are closing after\n        // a mutation operation to un-subscribe from those queries.\n        setTimeout(() => {\n            this.queries.forEach((cachedSqlQuery) => {\n                if (cachedSqlQuery.rerun) {\n                    cachedSqlQuery.rerun = false;\n                    cachedSqlQuery.runQuery();\n                }\n            });\n        }, 100);\n    }\n};\nActiveQueries = __decorate([\n    Injected()\n], ActiveQueries);\nexport { ActiveQueries };\n//# sourceMappingURL=ActiveQueries.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { Q } from '@airport/holding-pattern-runtime';\n/**\n * Created by Papa on 9/2/2016.\n */\nlet IdGenerator = class IdGenerator {\n    constructor() {\n        this.transactionHistoryIdColumns = [];\n    }\n    async init() {\n        this.populateTransactionHistoryIdColumns().then();\n    }\n    populateTransactionHistoryIdColumns() {\n        return new Promise((resolve, _reject) => {\n            this.doPopulateTransactionHistoryIdColumns(resolve);\n        });\n    }\n    doPopulateTransactionHistoryIdColumns(resolve) {\n        if (Q.__dbApplication__ && Q.__dbApplication__.currentVersion) {\n            const transactionHistoryDbEntity = this.getHoldingPatternDbEntity('TransactionHistory');\n            const repoTransHistoryDbEntity = this.getHoldingPatternDbEntity('RepositoryTransactionHistory');\n            const operationHistoryDbEntity = this.getHoldingPatternDbEntity('OperationHistory');\n            const recordHistoryDbEntity = this.getHoldingPatternDbEntity('RecordHistory');\n            this.transactionHistoryIdColumns.push(transactionHistoryDbEntity.idColumns[0]);\n            this.transactionHistoryIdColumns.push(repoTransHistoryDbEntity.idColumns[0]);\n            this.transactionHistoryIdColumns.push(operationHistoryDbEntity.idColumns[0]);\n            this.transactionHistoryIdColumns.push(recordHistoryDbEntity.idColumns[0]);\n            resolve();\n        }\n        else {\n            setTimeout(() => {\n                this.doPopulateTransactionHistoryIdColumns(resolve);\n            }, 100);\n        }\n    }\n    async generateTransactionHistoryIds(numRepositoryTransHistories, numOperationTransHistories, numRecordHistories) {\n        let generatedSequenceNumbers = await this.sequenceGenerator\n            .generateSequenceNumbers(this.transactionHistoryIdColumns, [\n            1,\n            numRepositoryTransHistories,\n            numOperationTransHistories,\n            numRecordHistories\n        ]);\n        return {\n            operationHistoryIds: generatedSequenceNumbers[2],\n            recordHistoryIds: generatedSequenceNumbers[3],\n            repositoryHistoryIds: generatedSequenceNumbers[1],\n            transactionHistoryId: generatedSequenceNumbers[0][0]\n        };\n    }\n    async generateEntityIds() {\n    }\n    getHoldingPatternDbEntity(holdingPatternEntityName) {\n        return Q.__dbApplication__.currentVersion[0].applicationVersion\n            .entityMapByName[holdingPatternEntityName];\n    }\n};\n__decorate([\n    Inject()\n], IdGenerator.prototype, \"sequenceGenerator\", void 0);\nIdGenerator = __decorate([\n    Injected()\n], IdGenerator);\nexport { IdGenerator };\n//# sourceMappingURL=IdGenerator.js.map","/**\n * Created by Papa on 6/28/2016.\n */\nexport class RecordStateData {\n    constructor() {\n        this.accessed = {};\n        this.current = {};\n        this.initialized = {};\n        this.original = {};\n    }\n}\nexport var CurrentState;\n(function (CurrentState) {\n    CurrentState[\"CREATED\"] = \"CREATED\";\n    CurrentState[\"DELETED\"] = \"DELETED\";\n    CurrentState[\"UPDATED\"] = \"UPDATED\";\n})(CurrentState || (CurrentState = {}));\nexport class RecordState {\n    constructor() {\n        this.data = new RecordStateData();\n        this.initialized = false;\n        this.isDirty = false;\n        this.proxied = false;\n    }\n    create() {\n        this.currentState = CurrentState.CREATED;\n    }\n    delete() {\n        this.currentState = CurrentState.DELETED;\n    }\n    toJSON() {\n        // TODO: implement\n        return null;\n    }\n    update() {\n        this.currentState = CurrentState.UPDATED;\n    }\n}\n//# sourceMappingURL=RecordState.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { doEnsureContext } from '@airport/air-traffic-control';\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { getFullApplicationName, QueryResultType, SyncApplicationMap, } from '@airport/ground-control';\nimport { Subject } from 'rxjs';\nimport { SQLDelete } from '../sql/core/SQLDelete';\nimport { SQLInsertValues } from '../sql/core/SQLInsertValues';\nimport { SQLUpdate } from '../sql/core/SQLUpdate';\nimport { EntitySQLQuery } from '../sql/EntitySQLQuery';\nimport { FieldSQLQuery } from '../sql/FieldSQLQuery';\nimport { SheetSQLQuery } from '../sql/SheetSQLQuery';\nimport { TreeSQLQuery } from '../sql/TreeSQLQuery';\n/**\n * Created by Papa on 9/9/2016.\n */\nlet SqlDriver = class SqlDriver {\n    supportsLocalTransactions(context) {\n        return true;\n    }\n    getEntityTableName(dbEntity, context) {\n        return this.getTableName(dbEntity.applicationVersion.application, dbEntity, context);\n    }\n    getTableName(application, table, context) {\n        let theTableName = table.name;\n        if (table.tableConfig && table.tableConfig.name) {\n            theTableName = table.tableConfig.name;\n        }\n        let fullApplicationName;\n        if (application.fullName) {\n            fullApplicationName = application.fullName;\n        }\n        else {\n            fullApplicationName = getFullApplicationName(application);\n        }\n        return this.composeTableName(fullApplicationName, theTableName, context);\n    }\n    async internalSetupTransaction(transaction, context) {\n        await this.ensureContext(context);\n    }\n    async tearDownTransaction(transaction, context) {\n        if (transaction.childTransaction) {\n            this.tearDownTransaction(transaction.childTransaction, context);\n        }\n        if (transaction.parentTransaction) {\n            transaction.parentTransaction.childTransaction = null;\n            transaction.parentTransaction = null;\n        }\n    }\n    async startTransaction(transaction, context) {\n        await this.ensureContext(context);\n        try {\n            await this.internalStartTransaction(transaction);\n        }\n        catch (e) {\n            await this.tearDownTransaction(transaction, context);\n            console.error(e);\n            throw e;\n        }\n    }\n    async commit(transaction, context) {\n        await this.ensureContext(context);\n        try {\n            await this.internalCommit(transaction);\n        }\n        catch (e) {\n            console.error(e);\n            try {\n                await this.internalRollback(transaction);\n            }\n            catch (rollbackError) {\n                console.error(rollbackError);\n            }\n            throw e;\n        }\n        finally {\n            await this.tearDownTransaction(transaction, context);\n        }\n    }\n    async rollback(transaction, context) {\n        await this.ensureContext(context);\n        try {\n            await this.internalRollback(transaction);\n        }\n        catch (e) {\n            console.error(e);\n            // Do not re-throw the exception, rollback is final (at least for now)\n        }\n        finally {\n            await this.tearDownTransaction(transaction, context);\n        }\n    }\n    async insertValues(portableQuery, context, cachedSqlQueryId) {\n        const splitValues = this.splitValues(portableQuery.jsonQuery.V, context);\n        let numVals = 0;\n        for (const V of splitValues) {\n            let sqlInsertValues = new SQLInsertValues({\n                ...portableQuery.jsonQuery,\n                V\n            }, this.getDialect(context), this.airportDatabase, this.applicationUtils, this.entityStateManager, this.qMetadataUtils, this.qValidator, this.relationManager, this.sqlQueryAdapter, this, context);\n            let sql = sqlInsertValues.toSQL(context);\n            let parameters = sqlInsertValues.getParameters(portableQuery.parameterMap, context);\n            numVals += await this.executeNative(sql, parameters, context);\n        }\n        return numVals;\n    }\n    async deleteWhere(portableQuery, context) {\n        let fieldMap = new SyncApplicationMap();\n        let sqlDelete = new SQLDelete(portableQuery.jsonQuery, this.getDialect(context), this.airportDatabase, this.applicationUtils, this.entityStateManager, this.qMetadataUtils, this.relationManager, this.sqlQueryAdapter, this, context);\n        let sql = sqlDelete.toSQL(context);\n        let parameters = sqlDelete.getParameters(portableQuery.parameterMap, context);\n        let numberOfAffectedRecords = await this.executeNative(sql, parameters, context);\n        this.activeQueries.markQueriesToRerun(fieldMap);\n        return numberOfAffectedRecords;\n    }\n    async updateWhere(portableQuery, internalFragments, context) {\n        let sqlUpdate = new SQLUpdate(portableQuery.jsonQuery, this.getDialect(context), this.airportDatabase, this.applicationUtils, this.entityStateManager, this.qMetadataUtils, this.qValidator, this.relationManager, this.sqlQueryAdapter, this, context);\n        let sql = sqlUpdate.toSQL(internalFragments, context);\n        let parameters = sqlUpdate.getParameters(portableQuery.parameterMap, context);\n        return await this.executeNative(sql, parameters, context);\n    }\n    async find(portableQuery, internalFragments, context, cachedSqlQueryId) {\n        if (context.transaction) {\n            return await context.transaction.find(portableQuery, internalFragments, context, cachedSqlQueryId);\n        }\n        context = await this.ensureContext(context);\n        const sqlQuery = this.getSQLQuery(portableQuery, context);\n        const sql = sqlQuery.toSQL(internalFragments, context);\n        const parameters = sqlQuery.getParameters(portableQuery.parameterMap, context);\n        let results = await this.findNative(sql, parameters, context);\n        results = await sqlQuery.parseQueryResults(results, internalFragments, portableQuery.queryResultType, context);\n        // FIXME: convert to MappedEntityArray if needed\n        return results;\n    }\n    getSQLQuery(portableQuery, context) {\n        let jsonQuery = portableQuery.jsonQuery;\n        let dialect = this.getDialect(context);\n        let resultType = portableQuery.queryResultType;\n        const QueryResType = QueryResultType;\n        switch (resultType) {\n            case QueryResType.ENTITY_GRAPH:\n            case QueryResType.ENTITY_TREE:\n            case QueryResType.MAPPED_ENTITY_GRAPH:\n            case QueryResType.MAPPED_ENTITY_TREE:\n                const dbEntity = this.airportDatabase.applications[portableQuery.applicationIndex]\n                    .currentVersion[0].applicationVersion.entities[portableQuery.tableIndex];\n                return new EntitySQLQuery(jsonQuery, dbEntity, dialect, resultType, this.airportDatabase, this.applicationUtils, this.entityStateManager, this.objectResultParserFactory, this.qMetadataUtils, this.qValidator, this.relationManager, this.sqlQueryAdapter, this, context);\n            case QueryResType.FIELD:\n                return new FieldSQLQuery(jsonQuery, dialect, this.airportDatabase, this.applicationUtils, this.entityStateManager, this.qMetadataUtils, this.qValidator, this.relationManager, this.sqlQueryAdapter, this, this.subStatementQueryGenerator, context);\n            case QueryResType.SHEET:\n                return new SheetSQLQuery(jsonQuery, dialect, this.airportDatabase, this.applicationUtils, this.entityStateManager, this.qMetadataUtils, this.qValidator, this.relationManager, this.sqlQueryAdapter, this, this.subStatementQueryGenerator, context);\n            case QueryResType.TREE:\n                return new TreeSQLQuery(jsonQuery, dialect, this.airportDatabase, this.applicationUtils, this.entityStateManager, this.qMetadataUtils, this.qValidator, this.relationManager, this.sqlQueryAdapter, this, this.subStatementQueryGenerator, context);\n            case QueryResType.RAW:\n            default:\n                throw new Error(`Unknown QueryResultType: ${resultType}`);\n        }\n    }\n    async findOne(portableQuery, internalFragments, context, cachedSqlQueryId) {\n        let results = await this.find(portableQuery, internalFragments, context);\n        if (results.length > 1) {\n            throw new Error(`Expecting a single result, got ${results.length}`);\n        }\n        if (results.length == 1) {\n            return results[0];\n        }\n        return null;\n    }\n    search(portableQuery, internalFragments, context, cachedSqlQueryId) {\n        let resultsSubject = new Subject();\n        // TODO: Remove the query for the list of cached queries, that are checked every\n        //    time a mutation operation is run\n        // let resultsSubject                 = new Subject<EntityArray>(() => {\n        // \tif (resultsSubject.subscriptions.length < 1) {\n        // \t\t\t\t\t// Remove the query for the list of cached queries, that are checked every\n        // \t\t\t\t\t// time a mutation operation is run\n        // \t\t\t\t\tthis.activeQueries.remove(portableQuery)\n        // \t}\n        // })\n        let cachedSqlQuery = {\n            resultsSubject: resultsSubject,\n            runQuery: () => {\n                this.find(portableQuery, internalFragments, context)\n                    .then((results) => {\n                    // FIXME: convert to MappedEntityArray if needed\n                    resultsSubject.next(results);\n                });\n            }\n        };\n        // this.queries.add(portableQuery, cachedSqlQuery);\n        cachedSqlQuery.runQuery();\n        return resultsSubject;\n    }\n    searchOne(portableQuery, internalFragments, context, cachedSqlQueryId) {\n        let resultsSubject = new Subject();\n        // TODO: Remove the query for the list of cached queries, that are checked every\n        //       time a mutation operation is run\n        // let resultsSubject                 = new Subject<E>(() => {\n        // \tif (resultsSubject.subscriptions.length < 1) {\n        // \t\t\t\t\t// Remove the query for the list of cached queries, that are checked every\n        // \t\t\t\t\t// time a mutation operation is run\n        // \t\t\t\t\tthis.activeQueries.remove(portableQuery)\n        // \t}\n        // });\n        let cachedSqlQuery = {\n            resultsSubject: resultsSubject,\n            runQuery: () => {\n                this.findOne(portableQuery, internalFragments, context)\n                    .then((result) => {\n                    resultsSubject.next(result);\n                });\n            }\n        };\n        // this.queries.add(portableQuery, cachedSqlQuery);\n        cachedSqlQuery.runQuery();\n        return resultsSubject;\n    }\n    warn(message) {\n        console.log(message);\n    }\n    splitValues(values, context) {\n        const valuesInRow = values[0].length;\n        const numValues = values.length * valuesInRow;\n        if (numValues <= this.maxValues) {\n            return [values];\n        }\n        let numRowsPerBatch = Math.floor(this.maxValues / valuesInRow);\n        const splitValues = [];\n        for (let i = 0; i < values.length; i += numRowsPerBatch) {\n            const aSplitValues = values.slice(i, i + numRowsPerBatch);\n            splitValues.push(aSplitValues);\n        }\n        return splitValues;\n    }\n    async ensureContext(context) {\n        context = doEnsureContext(context);\n        await this.operationContextLoader.ensure(context);\n        return context;\n    }\n};\n__decorate([\n    Inject()\n], SqlDriver.prototype, \"activeQueries\", void 0);\n__decorate([\n    Inject()\n], SqlDriver.prototype, \"airportDatabase\", void 0);\n__decorate([\n    Inject()\n], SqlDriver.prototype, \"applicationUtils\", void 0);\n__decorate([\n    Inject()\n], SqlDriver.prototype, \"entityStateManager\", void 0);\n__decorate([\n    Inject()\n], SqlDriver.prototype, \"objectResultParserFactory\", void 0);\n__decorate([\n    Inject()\n], SqlDriver.prototype, \"operationContextLoader\", void 0);\n__decorate([\n    Inject()\n], SqlDriver.prototype, \"qMetadataUtils\", void 0);\n__decorate([\n    Inject()\n], SqlDriver.prototype, \"qValidator\", void 0);\n__decorate([\n    Inject()\n], SqlDriver.prototype, \"relationManager\", void 0);\n__decorate([\n    Inject()\n], SqlDriver.prototype, \"transactionManager\", void 0);\n__decorate([\n    Inject()\n], SqlDriver.prototype, \"sqlQueryAdapter\", void 0);\n__decorate([\n    Inject()\n], SqlDriver.prototype, \"subStatementQueryGenerator\", void 0);\nSqlDriver = __decorate([\n    Injected()\n], SqlDriver);\nexport { SqlDriver };\n//# sourceMappingURL=SqlDriver.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nlet QValidator = class QValidator {\n    validateInsertQEntity(dbEntity) {\n    }\n    validateReadFromEntity(relation) {\n    }\n    validateReadProperty(dbColumn) {\n    }\n    validateUpdateProperty(propertyName, dbEntity) {\n    }\n    validateUpdateColumn(dbColumn) {\n    }\n    validateReadQEntityProperty(applicationIndex, tableIndex, columnIndex) {\n    }\n    validateReadQEntityManyToOneRelation(applicationIndex, tableIndex, columnIndex) {\n    }\n    addFunctionAlias(functionAlias) {\n    }\n    addSubQueryAlias(subQueryAlias) {\n    }\n    validateAliasedFieldAccess(fieldAlias) {\n    }\n};\nQValidator = __decorate([\n    Injected()\n], QValidator);\nexport { QValidator };\n//# sourceMappingURL=Validator.js.map","import { lib } from '@airport/direction-indicator';\nimport { SubStatementSqlGenerator } from './sql/core/SubStatementSqlGenerator';\nimport { ObjectResultParserFactory } from './result/entity/ObjectResultParserFactory';\nimport { ActiveQueries } from './store/ActiveQueries';\nimport { IdGenerator } from './store/IdGenerator';\nimport { QValidator } from './validation/Validator';\nimport { SqlDriver } from './store/SqlDriver';\nimport { STORE_DRIVER, TRANSACTION_MANAGER } from '@airport/terminal-map';\nimport { ENTITY_STATE_MANAGER, OPERATION_CONTEXT_LOADER } from '@airport/ground-control';\nimport { SEQUENCE_GENERATOR } from '@airport/check-in';\nimport { SQLWhereBase } from './sql/core/SQLWhereBase';\nimport { AIRPORT_DATABASE, APPLICATION_UTILS, Q_METADATA_UTILS, RELATION_MANAGER } from '@airport/air-traffic-control';\nconst fuelHydrantSystem = lib('fuel-hydrant-system');\nexport const ACTIVE_QUERIES = fuelHydrantSystem.token({\n    class: ActiveQueries,\n    interface: 'IActiveQueries',\n    token: 'ACTIVE_QUERIES'\n});\nexport const SUB_STATEMENT_SQL_GENERATOR = fuelHydrantSystem.token({\n    class: SubStatementSqlGenerator,\n    interface: 'ISubStatementSqlGenerator',\n    token: 'SUB_STATEMENT_SQL_GENERATOR'\n});\nexport const ID_GENERATOR = fuelHydrantSystem.token({\n    class: IdGenerator,\n    interface: 'IIdGenerator',\n    token: 'ID_GENERATOR'\n});\nexport const OBJECT_RESULT_PARSER_FACTORY = fuelHydrantSystem.token({\n    class: ObjectResultParserFactory,\n    interface: 'IObjectResultParserFactory',\n    token: 'OBJECT_RESULT_PARSER_FACTORY'\n});\nexport const Q_VALIDATOR = fuelHydrantSystem.token({\n    class: QValidator,\n    interface: 'IValidator',\n    token: 'Q_VALIDATOR'\n});\nexport const SQL_QUERY_ADAPTOR = fuelHydrantSystem.token({\n    class: null,\n    interface: 'ISQLQueryAdaptor',\n    token: 'SQL_QUERY_ADAPTOR'\n});\nexport const ABSTRACT_SQL_DRIVER = fuelHydrantSystem.token({\n    class: SqlDriver,\n    interface: 'class SqlDriver',\n    token: 'ABSTRACT_SQL_DRIVER'\n});\nexport const SQL_WHERE_BASE = fuelHydrantSystem.token({\n    class: SQLWhereBase,\n    interface: 'class SQLWhereBase',\n    token: 'SQL_WHERE_BASE'\n});\nID_GENERATOR.setDependencies({\n    sequenceGenerator: SEQUENCE_GENERATOR\n});\nOBJECT_RESULT_PARSER_FACTORY.setDependencies({\n    applicationUtils: APPLICATION_UTILS,\n    entityStateManager: ENTITY_STATE_MANAGER,\n});\nABSTRACT_SQL_DRIVER.setDependencies({\n    activeQueries: ACTIVE_QUERIES,\n    airportDatabase: AIRPORT_DATABASE,\n    applicationUtils: APPLICATION_UTILS,\n    entityStateManager: ENTITY_STATE_MANAGER,\n    objectResultParserFactory: OBJECT_RESULT_PARSER_FACTORY,\n    operationContextLoader: OPERATION_CONTEXT_LOADER,\n    qMetadataUtils: Q_METADATA_UTILS,\n    qValidator: Q_VALIDATOR,\n    relationManager: RELATION_MANAGER,\n    transactionManager: TRANSACTION_MANAGER,\n    sqlQueryAdapter: SQL_QUERY_ADAPTOR,\n    subStatementQueryGenerator: SUB_STATEMENT_SQL_GENERATOR,\n});\nSQL_WHERE_BASE.setDependencies({\n    qValidator: Q_VALIDATOR,\n    subStatementSqlGenerator: SUB_STATEMENT_SQL_GENERATOR\n});\nSUB_STATEMENT_SQL_GENERATOR.setDependencies({\n    airportDatabase: AIRPORT_DATABASE,\n    applicationUtils: APPLICATION_UTILS,\n    entityStateManager: ENTITY_STATE_MANAGER,\n    operationContextLoader: OPERATION_CONTEXT_LOADER,\n    qMetadataUtils: Q_METADATA_UTILS,\n    qValidator: Q_VALIDATOR,\n    relationManager: RELATION_MANAGER,\n    sqlQueryAdapter: SQL_QUERY_ADAPTOR,\n    storeDriver: STORE_DRIVER,\n    subStatementQueryGenerator: SUB_STATEMENT_SQL_GENERATOR,\n});\n//# sourceMappingURL=tokens.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet DebugSynchronizationAdapter = class DebugSynchronizationAdapter {\n    async getTransactionsForRepository(repositorySource, repositoryUuId, sinceSyncTimestamp) {\n        const response = await this.nonhubClient.getRepositoryTransactions(repositorySource, repositoryUuId, sinceSyncTimestamp);\n        const messages = [];\n        // NOTE: syncTimestamp is populated here because file sharing mechanisms\n        // (IPFS) won't be able to modify the messages themselves\n        for (const fragment of response) {\n            if (fragment.repositoryUuId !== repositoryUuId) {\n                console.error(`Got a reponse fragment for repository ${fragment.repositoryUuId}.\r\n    Expecting message fragments for repository: ${repositoryUuId}`);\n                continue;\n            }\n            for (const message of fragment.messages) {\n                message.syncTimestamp = fragment.syncTimestamp;\n                messages.push(message);\n            }\n        }\n        return messages;\n    }\n    async sendTransactions(repositorySource, messagesByRepository) {\n        let allSent = true;\n        for (const [repositoryUuid, messages] of messagesByRepository) {\n            try {\n                if (!await this.sendTransactionsForRepository(repositorySource, repositoryUuid, messages)) {\n                    allSent = false;\n                }\n            }\n            catch (e) {\n                console.error(e);\n                allSent = false;\n            }\n        }\n        return allSent;\n    }\n    async sendTransactionsForRepository(repositorySource, repositoryUuId, messages) {\n        if (!messages || !messages.length) {\n            return false;\n        }\n        const syncTimestamp = await this.nonhubClient.sendRepositoryTransactions(repositorySource, repositoryUuId, messages);\n        if (!syncTimestamp) {\n            return false;\n        }\n        for (const message of messages) {\n            message.syncTimestamp = syncTimestamp;\n        }\n        return true;\n    }\n};\n__decorate([\n    Inject()\n], DebugSynchronizationAdapter.prototype, \"nonhubClient\", void 0);\nDebugSynchronizationAdapter = __decorate([\n    Injected()\n], DebugSynchronizationAdapter);\nexport { DebugSynchronizationAdapter };\n//# sourceMappingURL=DebugSynchronizationAdapter.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet SynchronizationAdapterLoader = class SynchronizationAdapterLoader {\n    async load(synchronizationSource) {\n        switch (synchronizationSource) {\n            case 'IPFS': {\n                throw new Error(`Not Implemented`);\n            }\n            case 'localhost:9000': {\n                return this.debugSynchronizationAdapter;\n            }\n            default:\n                throw new Error(`Unexpected synchronization source: ${synchronizationSource}`);\n        }\n    }\n};\n__decorate([\n    Inject()\n], SynchronizationAdapterLoader.prototype, \"debugSynchronizationAdapter\", void 0);\nSynchronizationAdapterLoader = __decorate([\n    Injected()\n], SynchronizationAdapterLoader);\nexport { SynchronizationAdapterLoader };\n//# sourceMappingURL=SynchronizationAdapterLoader.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet SyncInActorChecker = class SyncInActorChecker {\n    async ensureActors(message) {\n        try {\n            let actorUuids = [];\n            let messageActorIndexMap = new Map();\n            for (let i = 0; i < message.actors.length; i++) {\n                const actor = message.actors[i];\n                if (typeof actor.uuId !== 'string' || actor.uuId.length !== 36) {\n                    throw new Error(`Invalid 'terminal.uuid'`);\n                }\n                this.checkActorApplication(actor, message);\n                this.checkActorTerminal(actor, message);\n                this.checkActorUser(actor, message);\n                actorUuids.push(actor.uuId);\n                messageActorIndexMap.set(actor.uuId, i);\n                // Make sure id field is not in the input\n                delete actor.id;\n            }\n            const actors = await this.actorDao.findByUuIds(actorUuids);\n            for (const actor of actors) {\n                const messageUserIndex = messageActorIndexMap.get(actor.uuId);\n                message.actors[messageUserIndex] = actor;\n            }\n            const missingActors = message.actors\n                .filter(messageActor => !messageActor.id);\n            if (missingActors.length) {\n                await this.actorDao.insert(missingActors);\n            }\n        }\n        catch (e) {\n            console.error(e);\n            return false;\n        }\n        return true;\n    }\n    checkActorApplication(actor, message) {\n        if (typeof actor.application !== 'number') {\n            throw new Error(`Expecting \"in-message index\" (number)\r\n\t\t\tin 'actor.terminal'`);\n        }\n        const application = message.applications[actor.application];\n        if (!application) {\n            throw new Error(`Did not find actor.application with \"in-message index\" ${actor.application}`);\n        }\n        actor.application = application;\n    }\n    checkActorTerminal(actor, message) {\n        if (typeof actor.terminal !== 'number') {\n            throw new Error(`Expecting \"in-message index\" (number)\r\n\t\t\tin 'actor.terminal'`);\n        }\n        const terminal = message.terminals[actor.terminal];\n        if (!terminal) {\n            throw new Error(`Did not find actor.terminal with \"in-message index\" ${actor.terminal}`);\n        }\n        actor.terminal = terminal;\n    }\n    checkActorUser(actor, message) {\n        if (typeof actor.user !== 'number') {\n            throw new Error(`Expecting \"in-message index\" (number)\r\n\t\t\tin 'actor.user'`);\n        }\n        const user = message.users[actor.user];\n        if (!user) {\n            throw new Error(`Did not find actor.user with \"in-message index\" ${actor.user}`);\n        }\n        actor.user = user;\n    }\n};\n__decorate([\n    Inject()\n], SyncInActorChecker.prototype, \"actorDao\", void 0);\nSyncInActorChecker = __decorate([\n    Injected()\n], SyncInActorChecker);\nexport { SyncInActorChecker };\n//# sourceMappingURL=SyncInActorChecker.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ApplicationStatus } from '@airport/ground-control';\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet SyncInApplicationChecker = class SyncInApplicationChecker {\n    async ensureApplications(message) {\n        try {\n            let applicationCheckMap = await this.checkApplicationsAndDomains(message);\n            for (let i = 0; i < message.applications.length; i++) {\n                let application = message.applications[i];\n                message.applications[i] = applicationCheckMap\n                    .get(application.domain.name).get(application.name)\n                    .application;\n            }\n        }\n        catch (e) {\n            console.error(e);\n            return false;\n        }\n        return true;\n    }\n    async checkApplicationsAndDomains(message) {\n        const { allApplicationNames, domainCheckMap, domainNames, applicationCheckMap } = this.getNames(message);\n        const applications = await this.applicationDao\n            .findByDomainNamesAndApplicationNames(domainNames, allApplicationNames);\n        for (let application of applications) {\n            let domainName = application.domain.name;\n            let applicationName = application.name;\n            for (let [_, applicationCheck] of applicationCheckMap.get(domainName)) {\n                if (applicationCheck.applicationName === applicationName) {\n                    let domainCheck = domainCheckMap.get(domainName);\n                    domainCheck.found = true;\n                    domainCheck.domain = application.domain;\n                    applicationCheck.found = true;\n                    applicationCheck.application = application;\n                }\n            }\n        }\n        let domainsToCreate = [];\n        for (let [name, domainCheck] of domainCheckMap) {\n            if (domainCheck.found) {\n                continue;\n            }\n            let domain = {\n                id: null,\n                name\n            };\n            domainCheck.domain = domain;\n            domainsToCreate.push(domain);\n        }\n        if (domainsToCreate.length) {\n            await this.domainDao.insert(domainsToCreate);\n        }\n        let applicationsToCreate = [];\n        for (let [domainName, applicationChecksByName] of applicationCheckMap) {\n            for (let [name, applicationCheck] of applicationChecksByName) {\n                if (applicationCheck.found) {\n                    continue;\n                }\n                let domain = domainCheckMap.get(domainName).domain;\n                let application = {\n                    domain,\n                    index: null,\n                    name,\n                    scope: 'private',\n                    status: ApplicationStatus.STUB,\n                    signature: 'localhost'\n                };\n                applicationCheck.application = application;\n                applicationsToCreate.push(application);\n            }\n        }\n        if (applicationsToCreate.length) {\n            await this.applicationDao.insert(applicationsToCreate);\n        }\n        return applicationCheckMap;\n    }\n    getNames(message) {\n        if (!message.applications || !(message.applications instanceof Array)) {\n            throw new Error(`Did not find applications in RepositorySynchronizationMessage.`);\n        }\n        const domainCheckMap = new Map();\n        const applicationCheckMap = new Map();\n        for (let application of message.applications) {\n            if (typeof application !== 'object') {\n                throw new Error(`Invalid ApplicationVersion.application`);\n            }\n            if (!application.name || typeof application.name !== 'string') {\n                throw new Error(`Invalid ApplicationVersion.Application.name`);\n            }\n            const domain = application.domain;\n            if (typeof domain !== 'object') {\n                throw new Error(`Invalid ApplicationVersion.Application.Domain`);\n            }\n            if (!domain.name || typeof domain.name !== 'string') {\n                throw new Error(`Invalid ApplicationVersion.Application.Domain.name`);\n            }\n            let applicationChecksForDomain = applicationCheckMap.get(domain.name);\n            if (!applicationChecksForDomain) {\n                applicationChecksForDomain = new Map();\n                applicationCheckMap.set(domain.name, applicationChecksForDomain);\n            }\n            if (!applicationChecksForDomain.has(application.name)) {\n                applicationChecksForDomain.set(application.name, {\n                    applicationName: application.name,\n                });\n            }\n            let domainCheck = domainCheckMap.get(domain.name);\n            if (!domainCheck) {\n                domainCheckMap.set(domain.name, {\n                    domainName: domain.name\n                });\n            }\n        }\n        const domainNames = [];\n        const allApplicationNames = [];\n        for (const [domainName, applicationChecksForDomainMap] of applicationCheckMap) {\n            domainNames.push(domainName);\n            for (let [applicationName, _] of applicationChecksForDomainMap) {\n                allApplicationNames.push(applicationName);\n            }\n        }\n        return {\n            allApplicationNames,\n            domainCheckMap,\n            domainNames,\n            applicationCheckMap\n        };\n    }\n};\n__decorate([\n    Inject()\n], SyncInApplicationChecker.prototype, \"applicationDao\", void 0);\n__decorate([\n    Inject()\n], SyncInApplicationChecker.prototype, \"domainDao\", void 0);\nSyncInApplicationChecker = __decorate([\n    Injected()\n], SyncInApplicationChecker);\nexport { SyncInApplicationChecker };\n//# sourceMappingURL=SyncInApplicationChecker.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet SyncInApplicationVersionChecker = class SyncInApplicationVersionChecker {\n    async ensureApplicationVersions(message) {\n        try {\n            let applicationCheckMap = await this.checkVersionsApplicationsDomains(message);\n            for (let i = 0; i < message.applicationVersions.length; i++) {\n                const applicationVersion = message.applicationVersions[i];\n                message.applicationVersions[i] = applicationCheckMap\n                    .get(applicationVersion.application.domain.name).get(applicationVersion.application.name)\n                    .applicationVersion;\n            }\n        }\n        catch (e) {\n            console.error(e);\n            return false;\n        }\n        return true;\n    }\n    async checkVersionsApplicationsDomains(message) {\n        const { allApplicationNames, domainNames, applicationVersionCheckMap } = this.getNames(message);\n        const applicationVersions = await this.applicationVersionDao.findByDomainNamesAndApplicationNames(domainNames, allApplicationNames);\n        let lastDomainName;\n        let lastApplicationName;\n        for (let applicationVersion of applicationVersions) {\n            let domainName = applicationVersion.application.domain.name;\n            let applicationName = applicationVersion.application.name;\n            if (lastDomainName !== domainName\n                && lastApplicationName !== applicationName) {\n                let applicationVersionNumber = applicationVersion.integerVersion;\n                for (let [_, applicationCheck] of applicationVersionCheckMap.get(domainName)) {\n                    if (applicationCheck.applicationName === applicationName) {\n                        applicationCheck.found = true;\n                        if (applicationCheck.applicationVersionNumber > applicationVersionNumber) {\n                            throw new Error(`Installed application ${applicationName} for domain ${domainName}\r\n\tis at a lower version ${applicationVersionNumber} than needed in message ${applicationCheck.applicationVersionNumber}.`);\n                        }\n                        applicationCheck.applicationVersion = applicationVersion;\n                    }\n                }\n                lastDomainName = domainName;\n                lastApplicationName = applicationName;\n            }\n        }\n        for (const [domainName, applicationChecks] of applicationVersionCheckMap) {\n            for (let [_, applicationCheck] of applicationChecks) {\n                if (!applicationCheck.found) {\n                    // TODO: download and install the application\n                    throw new Error(`Application ${applicationCheck.applicationName} for domain ${domainName} is not installed.`);\n                }\n            }\n        }\n        return applicationVersionCheckMap;\n    }\n    getNames(message) {\n        if (!message.applicationVersions || !(message.applicationVersions instanceof Array)) {\n            throw new Error(`Did not find applicationVersions in RepositorySynchronizationMessage.`);\n        }\n        const applicationVersionCheckMap = new Map();\n        for (let applicationVersion of message.applicationVersions) {\n            if (!applicationVersion.integerVersion || typeof applicationVersion.integerVersion !== 'number') {\n                throw new Error(`Invalid ApplicationVersion.integerVersion.`);\n            }\n            const application = message.applications[applicationVersion.application];\n            if (typeof application !== 'object') {\n                throw new Error(`Invalid ApplicationVersion.application`);\n            }\n            applicationVersion.application = application;\n            const domain = application.domain;\n            let applicationChecksForDomain = applicationVersionCheckMap.get(domain.name);\n            if (!applicationChecksForDomain) {\n                applicationChecksForDomain = new Map();\n                applicationVersionCheckMap.set(domain.name, applicationChecksForDomain);\n            }\n            if (!applicationChecksForDomain.has(application.name)) {\n                applicationChecksForDomain.set(application.name, {\n                    applicationName: application.name,\n                    applicationVersionNumber: applicationVersion.integerVersion\n                });\n            }\n        }\n        const domainNames = [];\n        const allApplicationNames = [];\n        for (const [domainName, applicationChecksForDomainMap] of applicationVersionCheckMap) {\n            domainNames.push(domainName);\n            for (let [applicationName, _] of applicationChecksForDomainMap) {\n                allApplicationNames.push(applicationName);\n            }\n        }\n        return {\n            allApplicationNames,\n            domainNames,\n            applicationVersionCheckMap\n        };\n    }\n};\n__decorate([\n    Inject()\n], SyncInApplicationVersionChecker.prototype, \"applicationVersionDao\", void 0);\nSyncInApplicationVersionChecker = __decorate([\n    Injected()\n], SyncInApplicationVersionChecker);\nexport { SyncInApplicationVersionChecker };\n//# sourceMappingURL=SyncInApplicationVersionChecker.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet SyncInChecker = class SyncInChecker {\n    /**\n     * Check the message and load all required auxiliary entities.\n     */\n    async checkMessage(message) {\n        // FIXME: replace as many DB lookups as possible with Terminal State lookups\n        if (!await this.syncInUserChecker.ensureUsers(message)) {\n            return false;\n        }\n        if (!await this.syncInTerminalChecker.ensureTerminals(message)) {\n            return false;\n        }\n        if (!await this.syncInApplicationChecker.ensureApplications(message)) {\n            return false;\n        }\n        if (!await this.syncInActorChecker.ensureActors(message)) {\n            return false;\n        }\n        if (!await this.syncInRepositoryChecker.ensureRepositories(message)) {\n            return false;\n        }\n        if (!await this.syncInApplicationVersionChecker.ensureApplicationVersions(message)) {\n            return false;\n        }\n        if (!await this.syncInDataChecker.checkData(message)) {\n            return false;\n        }\n        return true;\n    }\n};\n__decorate([\n    Inject()\n], SyncInChecker.prototype, \"syncInActorChecker\", void 0);\n__decorate([\n    Inject()\n], SyncInChecker.prototype, \"syncInApplicationChecker\", void 0);\n__decorate([\n    Inject()\n], SyncInChecker.prototype, \"syncInApplicationVersionChecker\", void 0);\n__decorate([\n    Inject()\n], SyncInChecker.prototype, \"syncInDataChecker\", void 0);\n__decorate([\n    Inject()\n], SyncInChecker.prototype, \"syncInRepositoryChecker\", void 0);\n__decorate([\n    Inject()\n], SyncInChecker.prototype, \"syncInTerminalChecker\", void 0);\n__decorate([\n    Inject()\n], SyncInChecker.prototype, \"syncInUserChecker\", void 0);\nSyncInChecker = __decorate([\n    Injected()\n], SyncInChecker);\nexport { SyncInChecker };\n//# sourceMappingURL=SyncInChecker.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChangeType, repositoryEntity } from '@airport/ground-control';\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { getSysWideOpIds } from '@airport/check-in';\nimport { RepositoryTransactionType } from '@airport/holding-pattern-runtime';\nlet SyncInDataChecker = class SyncInDataChecker {\n    /**\n     * Every dataMessage.data.repoTransHistories array must be sorted before entering\n     * this method.\n     *\n     * @param {IDataToTM[]} dataMessagesWithCompatibleApplications\n     * @returns {DataCheckResults}\n     */\n    async checkData(message) {\n        const history = message.history;\n        try {\n            if (!history || typeof history !== 'object') {\n                throw new Error(`Invalid RepositorySynchronizationMessage.history`);\n            }\n            if (typeof history.uuId !== 'string' || history.uuId.length !== 36) {\n                return false;\n            }\n            if (!history.operationHistory || !(history.operationHistory instanceof Array)) {\n                return false;\n            }\n            if (!history.saveTimestamp || typeof history.saveTimestamp !== 'number') {\n                throw new Error(`Invalid RepositorySynchronizationMessage.history.saveTimestamp`);\n            }\n            if (history.transactionHistory) {\n                throw new Error(`RepositorySynchronizationMessage.history.transactionHistory cannot be specified`);\n            }\n            if (history.repositoryTransactionType) {\n                throw new Error(`RepositorySynchronizationMessage.history.repositoryTransactionType cannot be specified`);\n            }\n            if (history.syncTimestamp) {\n                throw new Error(`RepositorySynchronizationMessage.history.syncTimestamp cannot be specified`);\n            }\n            // Repository is already set in SyncInRepositoryChecker\n            history.repositoryTransactionType = RepositoryTransactionType.REMOTE;\n            history.syncTimestamp = message.syncTimestamp;\n            delete history.id;\n            const applicationEntityMap = await this.populateApplicationEntityMap(message);\n            await this.checkOperationHistories(message, applicationEntityMap);\n        }\n        catch (e) {\n            console.error(e);\n            return false;\n        }\n        return true;\n    }\n    async populateApplicationEntityMap(message) {\n        const applicationVersionsByIds = this.terminalStore.getAllApplicationVersionsByIds();\n        const applicationEntityMap = new Map();\n        for (const messageApplicationVersion of message.applicationVersions) {\n            const applicationVersion = applicationVersionsByIds[messageApplicationVersion.id];\n            for (const applicationEntity of applicationVersion.entities) {\n                let entitiesForDomain = applicationEntityMap.get(applicationVersion.application.domain.name);\n                if (!entitiesForDomain) {\n                    entitiesForDomain = new Map();\n                    applicationEntityMap.set(applicationVersion.application.domain.name, entitiesForDomain);\n                }\n                let entitiesForApplication = entitiesForDomain.get(applicationVersion.application.name);\n                if (!entitiesForApplication) {\n                    entitiesForApplication = new Map();\n                    entitiesForDomain.set(applicationVersion.application.name, entitiesForApplication);\n                }\n                entitiesForApplication.set(applicationEntity.index, applicationEntity);\n            }\n        }\n        return applicationEntityMap;\n    }\n    async checkOperationHistories(message, applicationEntityMap) {\n        const history = message.history;\n        if (!(history.operationHistory instanceof Array) || !history.operationHistory.length) {\n            throw new Error(`Invalid RepositorySynchronizationMessage.history.operationHistory`);\n        }\n        const systemWideOperationIds = getSysWideOpIds(history.operationHistory.length, this.airportDatabase, this.sequenceGenerator);\n        let orderNumber = 0;\n        for (let i = 0; i < history.operationHistory.length; i++) {\n            const operationHistory = history.operationHistory[i];\n            if (typeof operationHistory !== 'object') {\n                throw new Error(`Invalid operationHistory`);\n            }\n            if (operationHistory.orderNumber) {\n                throw new Error(`RepositorySynchronizationMessage.history -> operationHistory.orderNumber cannot be specified,\r\n\t\t\t\tthe position of orderHistory record determines it's order`);\n            }\n            operationHistory.orderNumber = ++orderNumber;\n            switch (operationHistory.changeType) {\n                case ChangeType.DELETE_ROWS:\n                case ChangeType.INSERT_VALUES:\n                case ChangeType.UPDATE_ROWS:\n                    break;\n                default:\n                    throw new Error(`Invalid operationHistory.changeType: ${operationHistory.changeType}`);\n            }\n            if (typeof operationHistory.entity !== 'object') {\n                throw new Error(`Invalid operationHistory.entity`);\n            }\n            if (typeof operationHistory.entity.applicationVersion !== 'number') {\n                throw new Error(`Expecting \"in-message index\" (number)\r\n\t\t\t\t\tin 'operationHistory.entity.applicationVersion'`);\n            }\n            const actor = message.actors[operationHistory.actor];\n            if (!actor) {\n                throw new Error(`Cannot find Actor for \"in-message id\" RepositorySynchronizationMessage.history.actor`);\n            }\n            operationHistory.actor = actor;\n            const applicationVersion = message.applicationVersions[operationHistory.entity.applicationVersion];\n            if (!applicationVersion) {\n                throw new Error(`Invalid index into message.applicationVersions [${operationHistory.entity.applicationVersion}],\r\n\t\t\t\tin operationHistory.entity.applicationVersion`);\n            }\n            const applicationEntity = applicationEntityMap.get(applicationVersion.application.domain.name)\n                .get(applicationVersion.application.name).get(operationHistory.entity.index);\n            if (!applicationEntity) {\n                throw new Error(`Invalid operationHistory.entity.index: ${operationHistory.entity.index}`);\n            }\n            operationHistory.entity = applicationEntity;\n            if (operationHistory.repositoryTransactionHistory) {\n                throw new Error(`RepositorySynchronizationMessage.history -> operationHistory.repositoryTransactionHistory cannot be specified`);\n            }\n            operationHistory.repositoryTransactionHistory = history;\n            if (operationHistory.systemWideOperationId) {\n                throw new Error(`RepositorySynchronizationMessage.history -> operationHistory.systemWideOperationId cannot be specified`);\n            }\n            operationHistory.systemWideOperationId = systemWideOperationIds[i];\n            delete operationHistory.id;\n            let originalRepositoryColumnIndex;\n            let originalActorColumnIndex;\n            let actorIdColumnMapByIndex = new Map();\n            let repositoryIdColumnMapByIndex = new Map();\n            for (const column of operationHistory.entity.columns) {\n                switch (column.name) {\n                    case repositoryEntity.ORIGINAL_ACTOR_ID:\n                        actorIdColumnMapByIndex.set(column.index, column);\n                        originalActorColumnIndex = column.index;\n                        break;\n                    case repositoryEntity.ORIGINAL_REPOSITORY_ID:\n                        repositoryIdColumnMapByIndex.set(column.index, column);\n                        originalRepositoryColumnIndex = column.index;\n                        break;\n                }\n                if (/.*_AID_[\\d]+$/.test(column.name)\n                    && column.manyRelationColumns.length) {\n                    actorIdColumnMapByIndex.set(column.index, column);\n                }\n                if (/.*_RID_[\\d]+$/.test(column.name)\n                    && column.manyRelationColumns.length) {\n                    repositoryIdColumnMapByIndex.set(column.index, column);\n                }\n            }\n            await this.checkRecordHistories(operationHistory, actorIdColumnMapByIndex, repositoryIdColumnMapByIndex, message);\n        }\n    }\n    async checkRecordHistories(operationHistory, actorIdColumnMapByIndex, repositoryIdColumnMapByIndex, message) {\n        const recordHistories = operationHistory.recordHistory;\n        if (!(recordHistories instanceof Array) || !recordHistories.length) {\n            throw new Error(`Inalid RepositorySynchronizationMessage.history -> operationHistory.recordHistory`);\n        }\n        for (const recordHistory of recordHistories) {\n            if (!recordHistory.actorRecordId || typeof recordHistory.actorRecordId !== 'number') {\n                throw new Error(`Invalid RepositorySynchronizationMessage.history -> operationHistory.recordHistory.actorRecordId`);\n            }\n            switch (operationHistory.changeType) {\n                case ChangeType.INSERT_VALUES:\n                    if (recordHistory.actor) {\n                        throw new Error(`Cannot specify RepositorySynchronizationMessage.history -> operationHistory.recordHistory.actor\r\nfor ChangeType.INSERT_VALUES`);\n                    }\n                    recordHistory.actor = operationHistory.actor;\n                    break;\n                case ChangeType.DELETE_ROWS:\n                case ChangeType.UPDATE_ROWS: {\n                    // If no actor is present on record level its the same actor that created the repositoryTransactionHistory\n                    if (recordHistory.actor === undefined) {\n                        recordHistory.actor = operationHistory.actor;\n                    }\n                    else {\n                        const actor = message.actors[recordHistory.actor];\n                        if (!actor) {\n                            throw new Error(`Did find Actor for \"in-message id\" in RepositorySynchronizationMessage.history -> operationHistory.actor`);\n                        }\n                        recordHistory.actor = actor;\n                    }\n                    break;\n                }\n            }\n            if (recordHistory.operationHistory) {\n                throw new Error(`RepositorySynchronizationMessage.history -> operationHistory.recordHistory.operationHistory cannot be specified`);\n            }\n            this.checkNewValues(recordHistory, actorIdColumnMapByIndex, repositoryIdColumnMapByIndex, operationHistory, message);\n            this.checkOldValues(recordHistory, actorIdColumnMapByIndex, repositoryIdColumnMapByIndex, operationHistory, message);\n            recordHistory.operationHistory = operationHistory;\n            delete recordHistory.id;\n        }\n    }\n    checkNewValues(recordHistory, actorIdColumnMapByIndex, repositoryIdColumnMapByIndex, operationHistory, message) {\n        switch (operationHistory.changeType) {\n            case ChangeType.DELETE_ROWS:\n                if (recordHistory.newValues) {\n                    throw new Error(`Cannot specify RepositorySynchronizationMessage.history -> operationHistory.recordHistory.newValues\r\nfor ChangeType.DELETE_ROWS`);\n                }\n                return;\n            case ChangeType.INSERT_VALUES:\n            case ChangeType.UPDATE_ROWS:\n                if (!(recordHistory.newValues instanceof Array) || !recordHistory.newValues.length) {\n                    throw new Error(`Must specify RepositorySynchronizationMessage.history -> operationHistory.recordHistory.newValues\r\nfor ChangeType.INSERT_VALUES|UPDATE_ROWS`);\n                }\n                break;\n        }\n        for (const newValue of recordHistory.newValues) {\n            if (newValue.recordHistory) {\n                throw new Error(`Cannot specify RepositorySynchronizationMessage.history -> operationHistory.recordHistory.newValues.recordHistory`);\n            }\n            newValue.recordHistory = recordHistory;\n            if (typeof newValue.columnIndex !== 'number') {\n                throw new Error(`Invalid RepositorySynchronizationMessage.history -> operationHistory.recordHistory.newValues.columnIndex`);\n            }\n            if (typeof newValue.newValue === undefined) {\n                throw new Error(`Invalid RepositorySynchronizationMessage.history -> operationHistory.recordHistory.newValues.newValue`);\n            }\n        }\n        for (const newValue of recordHistory.newValues) {\n            const actorIdColumn = actorIdColumnMapByIndex.get(newValue.columnIndex);\n            if (actorIdColumn) {\n                const originalActor = message.actors[newValue.newValue];\n                if (!originalActor) {\n                    throw new Error(`Invalid RepositorySynchronizationMessage.history -> operationHistory.recordHistory.newValues.newValue\r\nValue is for ${actorIdColumn.name} and could find RepositorySynchronizationMessage.actors[${newValue.newValue}]`);\n                }\n                newValue.newValue = originalActor.id;\n            }\n            const repositoryIdColumn = repositoryIdColumnMapByIndex.get(newValue.columnIndex);\n            if (repositoryIdColumn) {\n                if (newValue.newValue === -1) {\n                    newValue.newValue = message.history.repository.id;\n                }\n                else {\n                    const originalRepository = message.referencedRepositories[newValue.newValue];\n                    if (!originalRepository) {\n                        throw new Error(`Invalid RepositorySynchronizationMessage.history -> operationHistory.recordHistory.newValues.newValue\r\n\tValue is for ${repositoryIdColumn.name} and could find RepositorySynchronizationMessage.referencedRepositories[${newValue.newValue}]`);\n                    }\n                    newValue.newValue = originalRepository.id;\n                }\n            }\n        }\n    }\n    checkOldValues(recordHistory, actorIdColumnMapByIndex, repositoryIdColumnMapByIndex, operationHistory, message) {\n        switch (operationHistory.changeType) {\n            case ChangeType.DELETE_ROWS:\n            case ChangeType.INSERT_VALUES:\n                if (recordHistory.oldValues) {\n                    throw new Error(`Cannot specify RepositorySynchronizationMessage.history -> operationHistory.recordHistory.oldValues\r\nfor ChangeType.DELETE_ROWS|INSERT_VALUES`);\n                }\n                return;\n            case ChangeType.UPDATE_ROWS:\n                if (!(recordHistory.newValues instanceof Array) || !recordHistory.oldValues.length) {\n                    throw new Error(`Must specify RepositorySynchronizationMessage.history -> operationHistory.recordHistory.oldValues\r\nfor ChangeType.UPDATE_ROWS`);\n                }\n                break;\n        }\n        for (const oldValue of recordHistory.oldValues) {\n            if (oldValue.recordHistory) {\n                throw new Error(`Cannot specify RepositorySynchronizationMessage.history -> operationHistory.recordHistory.newValues.recordHistory`);\n            }\n            oldValue.recordHistory = recordHistory;\n            if (typeof oldValue.columnIndex !== 'number') {\n                throw new Error(`Invalid RepositorySynchronizationMessage.history -> operationHistory.recordHistory.oldValues.columnIndex`);\n            }\n            if (typeof oldValue.oldValue === undefined) {\n                throw new Error(`Invalid RepositorySynchronizationMessage.history -> operationHistory.recordHistory.oldValues.oldValue`);\n            }\n        }\n        for (const oldValue of recordHistory.oldValues) {\n            const actorIdColumn = actorIdColumnMapByIndex.get(oldValue.columnIndex);\n            if (actorIdColumn) {\n                const originalActor = message.actors[oldValue.oldValue];\n                if (!originalActor) {\n                    throw new Error(`Invalid RepositorySynchronizationMessage.history -> operationHistory.recordHistory.oldValues.oldValue\r\nValue is for ORIGINAL_ACTOR_ID and could find RepositorySynchronizationMessage.actors[${oldValue.oldValue}]`);\n                }\n                oldValue.oldValue = originalActor.id;\n            }\n            const repositoryIdColumn = repositoryIdColumnMapByIndex.get(oldValue.columnIndex);\n            if (repositoryIdColumn) {\n                const originalRepository = message.referencedRepositories[oldValue.oldValue];\n                if (!originalRepository) {\n                    throw new Error(`Invalid RepositorySynchronizationMessage.history -> operationHistory.recordHistory.oldValues.oldValue\r\nValue is for ORIGINAL_REPOSITORY_ID and could find RepositorySynchronizationMessage.referencedRepositories[${oldValue.oldValue}]`);\n                }\n                oldValue.oldValue = originalRepository.id;\n            }\n        }\n    }\n};\n__decorate([\n    Inject()\n], SyncInDataChecker.prototype, \"airportDatabase\", void 0);\n__decorate([\n    Inject()\n], SyncInDataChecker.prototype, \"sequenceGenerator\", void 0);\n__decorate([\n    Inject()\n], SyncInDataChecker.prototype, \"terminalStore\", void 0);\nSyncInDataChecker = __decorate([\n    Injected()\n], SyncInDataChecker);\nexport { SyncInDataChecker };\n//# sourceMappingURL=SyncInDataChecker.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet SyncInRepositoryChecker = class SyncInRepositoryChecker {\n    async ensureRepositories(message) {\n        try {\n            let repositoryUuids = [];\n            let messageRepositoryIndexMap = new Map();\n            for (let i = 0; i < message.referencedRepositories.length; i++) {\n                this.checkRepository(message.referencedRepositories[i], i, repositoryUuids, messageRepositoryIndexMap, message);\n            }\n            const history = message.history;\n            if (history.isRepositoryCreation) {\n                if (typeof history.repository !== 'object') {\n                    throw new Error(`Serialized RepositorySynchronizationMessage.history.repository should be an object\r\n\tif RepositorySynchronizationMessage.history.isRepositoryCreation === true`);\n                }\n                this.checkRepository(history.repository, null, repositoryUuids, messageRepositoryIndexMap, message);\n            }\n            else {\n                if (typeof history.repository !== 'string') {\n                    throw new Error(`Serialized RepositorySynchronizationMessage.history.repository should be a string\r\n\tif RepositorySynchronizationMessage.history.isRepositoryCreation === false`);\n                }\n                repositoryUuids.push(history.repository);\n            }\n            const repositories = await this.repositoryDao.findByUuIds(repositoryUuids);\n            for (const repository of repositories) {\n                const messageUserIndex = messageRepositoryIndexMap.get(repository.uuId);\n                if (messageUserIndex || messageUserIndex === 0) {\n                    message.referencedRepositories[messageUserIndex] = repository;\n                }\n                else {\n                    // Populating ahead of potential insert is OK, object\n                    // gets modified with required state on an insert\n                    history.repository = repository;\n                }\n            }\n            const missingRepositories = message.referencedRepositories\n                .filter(messageRepository => !messageRepository.id);\n            if (typeof history.repository !== 'object') {\n                throw new Error(`Repository with UuId ${history.repository} is not\r\n\t\t\t\t\tpresent and cannot be synced\r\n\tThis RepositorySynchronizationMessage is for an existing repository and that\r\n\trepository must already be loaded in this database for this message to be\r\n\tprocessed.`);\n            }\n            else if (!history.repository.id) {\n                missingRepositories.push(history.repository);\n            }\n            if (missingRepositories.length) {\n                await this.repositoryDao.insert(missingRepositories);\n            }\n        }\n        catch (e) {\n            console.error(e);\n            return false;\n        }\n        return true;\n    }\n    checkRepository(repository, repositoryIndex, repositoryUuids, messageRepositoryIndexMap, message) {\n        if (typeof repository.ageSuitability !== 'number') {\n            throw new Error(`Invalid 'repository.ageSuitability'`);\n        }\n        if (!repository.createdAt || typeof repository.createdAt !== 'string') {\n            throw new Error(`Invalid 'repository.createdAt'`);\n        }\n        repository.createdAt = new Date(repository.createdAt);\n        if (typeof repository.immutable !== 'boolean') {\n            throw new Error(`Invalid 'repository.immutable'`);\n        }\n        if (!repository.source || typeof repository.source !== 'string') {\n            throw new Error(`Invalid 'repository.source'`);\n        }\n        if (typeof repository.uuId !== 'string' || repository.uuId.length !== 36) {\n            throw new Error(`Invalid 'repository.uuid'`);\n        }\n        if (typeof repository.owner !== 'number') {\n            throw new Error(`Expecting \"in-message index\" (number)\r\n\t\t\t\tin 'repository.owner'`);\n        }\n        const user = message.users[repository.owner];\n        if (!user) {\n            throw new Error(`Did not find repository.owner (User) with \"in-message index\" ${repository.owner}`);\n        }\n        repository.owner = user;\n        repositoryUuids.push(repository.uuId);\n        if (typeof repositoryIndex === 'number') {\n            messageRepositoryIndexMap.set(repository.uuId, repositoryIndex);\n        }\n        // Make sure id field is not in the input\n        delete repository.id;\n    }\n};\n__decorate([\n    Inject()\n], SyncInRepositoryChecker.prototype, \"repositoryDao\", void 0);\nSyncInRepositoryChecker = __decorate([\n    Injected()\n], SyncInRepositoryChecker);\nexport { SyncInRepositoryChecker };\n//# sourceMappingURL=SyncInRepositoryChecker.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet SyncInTerminalChecker = class SyncInTerminalChecker {\n    async ensureTerminals(message) {\n        try {\n            let terminalUuids = [];\n            let messageTerminalIndexMap = new Map();\n            for (let i = 0; i < message.terminals.length; i++) {\n                const terminal = message.terminals[i];\n                if (typeof terminal.owner !== 'number') {\n                    throw new Error(`Expecting \"in-message index\" (number)\r\n\t\t\t\t\tin 'terminal.owner' of RepositorySynchronizationMessage.terminals`);\n                }\n                if (typeof terminal.uuId !== 'string' || terminal.uuId.length !== 36) {\n                    throw new Error(`Invalid 'terminal.uuid' in RepositorySynchronizationMessage.terminals`);\n                }\n                if (terminal.isLocal !== undefined) {\n                    throw new Error(`'terminal.isLocal' cannot defined in RepositorySynchronizationMessage.terminals`);\n                }\n                terminal.isLocal = false;\n                const owner = message.users[terminal.owner];\n                if (!owner) {\n                    throw new Error(`Did not find user for terminal.owner with \"in-message index\" ${terminal.owner}\r\n\t\t\t\t\t\tfor RepositorySynchronizationMessage.terminals`);\n                }\n                terminal.owner = owner;\n                terminalUuids.push(terminal.uuId);\n                messageTerminalIndexMap.set(terminal.uuId, i);\n                // Make sure id field is not in the input\n                delete terminal.id;\n            }\n            const terminals = await this.terminalDao.findByUuIds(terminalUuids);\n            for (const terminal of terminals) {\n                const messageUserIndex = messageTerminalIndexMap.get(terminal.uuId);\n                message.terminals[messageUserIndex] = terminal;\n            }\n            const missingTerminals = message.terminals\n                .filter(messageTerminal => !messageTerminal.id);\n            if (missingTerminals.length) {\n                await this.addMissingTerminals(missingTerminals);\n            }\n        }\n        catch (e) {\n            console.error(e);\n            return false;\n        }\n        return true;\n    }\n    async addMissingTerminals(missingTerminals) {\n        for (const terminal of missingTerminals) {\n            terminal.isLocal = false;\n        }\n        await this.terminalDao.insert(missingTerminals);\n    }\n};\n__decorate([\n    Inject()\n], SyncInTerminalChecker.prototype, \"terminalDao\", void 0);\nSyncInTerminalChecker = __decorate([\n    Injected()\n], SyncInTerminalChecker);\nexport { SyncInTerminalChecker };\n//# sourceMappingURL=SyncInTerminalChecker.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet SyncInUserChecker = class SyncInUserChecker {\n    async ensureUsers(message) {\n        try {\n            let userUuids = [];\n            let messageUserIndexMap = new Map();\n            for (let i = 0; i < message.users.length; i++) {\n                const user = message.users[i];\n                if (typeof user.uuId !== 'string' || user.uuId.length !== 36) {\n                    throw new Error(`Invalid 'user.uuid'`);\n                }\n                if (typeof user.username !== 'string' || user.username.length < 3) {\n                    throw new Error(`Invalid 'user.username'`);\n                }\n                userUuids.push(user.uuId);\n                messageUserIndexMap.set(user.uuId, i);\n                // Make sure id field is not in the input\n                delete user.id;\n            }\n            const users = await this.userDao.findByUuIds(userUuids);\n            for (const user of users) {\n                const messageUserIndex = messageUserIndexMap.get(user.uuId);\n                message.users[messageUserIndex] = user;\n            }\n            const missingUsers = message.users.filter(messageUser => !messageUser.id);\n            if (missingUsers.length) {\n                await this.addMissingUsers(missingUsers);\n            }\n        }\n        catch (e) {\n            console.error(e);\n            return false;\n        }\n        return true;\n    }\n    async addMissingUsers(missingUsers) {\n        for (const user of missingUsers) {\n            if (!user.username || typeof user.username !== 'string') {\n                throw new Error(`Invalid User.username ${user.username}`);\n            }\n        }\n        await this.userDao.insert(missingUsers);\n    }\n};\n__decorate([\n    Inject()\n], SyncInUserChecker.prototype, \"userDao\", void 0);\nSyncInUserChecker = __decorate([\n    Injected()\n], SyncInUserChecker);\nexport { SyncInUserChecker };\n//# sourceMappingURL=SyncInUserChecker.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DbBoolean, DbNumber, DbString, Entity, GeneratedValue, Id, JoinColumn, ManyToOne, OneToMany, Table } from \"@airport/air-traffic-control\";\nlet SynchronizationConflict = class SynchronizationConflict {\n};\n__decorate([\n    GeneratedValue(),\n    Id(),\n    DbNumber()\n], SynchronizationConflict.prototype, \"id\", void 0);\n__decorate([\n    DbString()\n], SynchronizationConflict.prototype, \"type\", void 0);\n__decorate([\n    DbBoolean()\n], SynchronizationConflict.prototype, \"acknowledged\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({ name: \"REPOSITORY_ID\", referencedColumnName: \"ID\" })\n], SynchronizationConflict.prototype, \"repository\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({ name: \"OVERWRITTEN_RECORD_HISTORY_ID\", referencedColumnName: \"ID\" })\n], SynchronizationConflict.prototype, \"overwrittenRecordHistory\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({ name: \"OVERWRITING_RECORD_HISTORY_ID\", referencedColumnName: \"ID\" })\n], SynchronizationConflict.prototype, \"overwritingRecordHistory\", void 0);\n__decorate([\n    OneToMany({ mappedBy: \"SYNCHRONIZATION_CONFLICT_ID\" })\n], SynchronizationConflict.prototype, \"values\", void 0);\nSynchronizationConflict = __decorate([\n    Entity(),\n    Table({ name: \"SYNCHRONIZATION_CONFLICT\" })\n], SynchronizationConflict);\nexport { SynchronizationConflict };\n//# sourceMappingURL=SynchronizationConflict.js.map","export var SynchronizationConflict_Type;\n(function (SynchronizationConflict_Type) {\n    SynchronizationConflict_Type[\"LOCAL_UPDATE_REMOTELY_DELETED\"] = \"LOCAL_UPDATE_REMOTELY_DELETED\";\n    SynchronizationConflict_Type[\"REMOTE_CREATE_REMOTELY_DELETED\"] = \"REMOTE_CREATE_REMOTELY_DELETED\";\n    SynchronizationConflict_Type[\"REMOTE_UPDATE_LOCALLY_DELETED\"] = \"REMOTE_UPDATE_LOCALLY_DELETED\";\n    SynchronizationConflict_Type[\"REMOTE_UPDATE_LOCALLY_UPDATED\"] = \"REMOTE_UPDATE_LOCALLY_UPDATED\";\n})(SynchronizationConflict_Type || (SynchronizationConflict_Type = {}));\n//# sourceMappingURL=SynchronizationConflictType.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DbNumber, Entity, Id, JoinColumn, ManyToOne, Table } from '@airport/air-traffic-control';\nlet SynchronizationConflictValues = class SynchronizationConflictValues {\n};\n__decorate([\n    Id(),\n    ManyToOne(),\n    JoinColumn({ name: 'SYNCHRONIZATION_CONFLICT_ID', referencedColumnName: 'ID' })\n], SynchronizationConflictValues.prototype, \"synchronizationConflict\", void 0);\n__decorate([\n    Id(),\n    DbNumber()\n], SynchronizationConflictValues.prototype, \"columnIndex\", void 0);\nSynchronizationConflictValues = __decorate([\n    Entity(),\n    Table({ name: 'SYNCHRONIZATION_CONFLICT_VALUES' })\n], SynchronizationConflictValues);\nexport { SynchronizationConflictValues };\n//# sourceMappingURL=SynchronizationConflictValues.js.map","export var DataOrigin;\n(function (DataOrigin) {\n    DataOrigin[\"LOCAL\"] = \"LOCAL\";\n    DataOrigin[\"REMOTE\"] = \"REMOTE\";\n})(DataOrigin || (DataOrigin = {}));\n//# sourceMappingURL=DataOrigin.js.map","export var ApplicationChangeStatus;\n(function (ApplicationChangeStatus) {\n    ApplicationChangeStatus[\"CHANGE_NEEDED\"] = \"CHANGE_NEEDED\";\n    ApplicationChangeStatus[\"CHANGE_COMPLETED\"] = \"CHANGE_COMPLETED\";\n})(ApplicationChangeStatus || (ApplicationChangeStatus = {}));\n//# sourceMappingURL=ApplicationChangeStatus.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbNumber, Entity, GeneratedValue, Id, JoinColumn, ManyToOne, Table } from '@airport/air-traffic-control';\n/**\n * Used to temporarily store updates during application remotely synced updates\n * to the local terminal.  Values are deleted right after the remote sync updates\n * are applied.\n */\nlet RecordUpdateStage = class RecordUpdateStage {\n};\n__decorate([\n    Id(),\n    GeneratedValue()\n], RecordUpdateStage.prototype, \"id\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({ name: 'APPLICATION_VERSION_ID', referencedColumnName: 'ID' })\n], RecordUpdateStage.prototype, \"applicationVersion\", void 0);\n__decorate([\n    ManyToOne()\n    // FIXME: verify that these records don't make it into serialized\n    // repository ledger (and hence, that using local ids is safe)\n    ,\n    JoinColumn({ name: 'APPLICATION_ENTITY_ID', referencedColumnName: 'ID' })\n], RecordUpdateStage.prototype, \"entity\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({ name: 'REPOSITORY_ID', referencedColumnName: 'ID' })\n], RecordUpdateStage.prototype, \"repository\", void 0);\n__decorate([\n    ManyToOne(),\n    JoinColumn({ name: 'ACTOR_ID', referencedColumnName: 'ID' })\n], RecordUpdateStage.prototype, \"actor\", void 0);\n__decorate([\n    Column({ name: 'ACTOR_RECORD_ID' }),\n    DbNumber()\n], RecordUpdateStage.prototype, \"actorRecordId\", void 0);\n__decorate([\n    ManyToOne()\n    // FIXME: verify that these records don't make it into serialized\n    // repository ledger (and hence, that using local ids is safe)\n    ,\n    JoinColumn({ name: 'APPLICATION_COLUMN_ID', referencedColumnName: 'ID' })\n], RecordUpdateStage.prototype, \"column\", void 0);\n__decorate([\n    Column({ name: 'UPDATED_VALUE' })\n], RecordUpdateStage.prototype, \"updatedValue\", void 0);\nRecordUpdateStage = __decorate([\n    Entity(),\n    Table({ name: 'RECORD_UPDATE_STAGE' })\n], RecordUpdateStage);\nexport { RecordUpdateStage };\n//# sourceMappingURL=RecordUpdateStage.js.map","import { AIRPORT_DATABASE } from '@airport/air-traffic-control';\nimport { diSet as dS, duoDiSet as ddS } from '@airport/check-in';\nimport { DEPENDENCY_INJECTION } from '@airport/direction-indicator';\nimport { getFullApplicationName } from '@airport/ground-control';\nimport { RecordUpdateStage, SynchronizationConflict, SynchronizationConflictValues } from '../ddl/ddl';\nconst __constructors__ = {\n    RecordUpdateStage: RecordUpdateStage,\n    SynchronizationConflict: SynchronizationConflict,\n    SynchronizationConflictValues: SynchronizationConflictValues\n};\nexport const Q_APPLICATION = {\n    __constructors__,\n    domain: 'air',\n    name: '@airport/moving-walkway'\n};\nexport const Q = Q_APPLICATION;\nexport function diSet(dbEntityId) {\n    return dS(Q.__dbApplication__, dbEntityId);\n}\nexport function duoDiSet(dbEntityId) {\n    return ddS(Q.__dbApplication__, dbEntityId);\n}\nDEPENDENCY_INJECTION.db().eventuallyGet(AIRPORT_DATABASE).then((airDb) => {\n    airDb.QM[getFullApplicationName(Q_APPLICATION)] = Q;\n});\n//# sourceMappingURL=qApplication.js.map","import { Dao, DaoQueryDecorators, } from '@airport/check-in';\nimport { Q, duoDiSet, } from './qApplication';\n// Application Q object Dependency Injection readiness detection Dao\nexport class SQDIDao extends Dao {\n    constructor(dbEntityId) {\n        super(dbEntityId, Q);\n    }\n}\nexport class BaseRecordUpdateStageDao extends SQDIDao {\n    constructor() {\n        super(2);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(2);\n    }\n}\nBaseRecordUpdateStageDao.Find = new DaoQueryDecorators();\nBaseRecordUpdateStageDao.FindOne = new DaoQueryDecorators();\nBaseRecordUpdateStageDao.Search = new DaoQueryDecorators();\nBaseRecordUpdateStageDao.SearchOne = new DaoQueryDecorators();\nexport class BaseSynchronizationConflictDao extends SQDIDao {\n    constructor() {\n        super(1);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(1);\n    }\n}\nBaseSynchronizationConflictDao.Find = new DaoQueryDecorators();\nBaseSynchronizationConflictDao.FindOne = new DaoQueryDecorators();\nBaseSynchronizationConflictDao.Search = new DaoQueryDecorators();\nBaseSynchronizationConflictDao.SearchOne = new DaoQueryDecorators();\nexport class BaseSynchronizationConflictValuesDao extends SQDIDao {\n    constructor() {\n        super(0);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(0);\n    }\n}\nBaseSynchronizationConflictValuesDao.Find = new DaoQueryDecorators();\nBaseSynchronizationConflictValuesDao.FindOne = new DaoQueryDecorators();\nBaseSynchronizationConflictValuesDao.Search = new DaoQueryDecorators();\nBaseSynchronizationConflictValuesDao.SearchOne = new DaoQueryDecorators();\n//# sourceMappingURL=baseDaos.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { BaseSynchronizationConflictDao, Q } from '../../generated/generated';\nlet SynchronizationConflictDao = class SynchronizationConflictDao extends BaseSynchronizationConflictDao {\n    async insert(synchronizationConflicts) {\n        let sc;\n        const values = [];\n        for (const synchronizationConflict of synchronizationConflicts) {\n            values.push([\n                synchronizationConflict.type,\n                synchronizationConflict.acknowledged,\n                synchronizationConflict.repository.id,\n                synchronizationConflict.overwrittenRecordHistory.id,\n                synchronizationConflict.overwritingRecordHistory.id\n            ]);\n        }\n        const ids = await this.db.insertValuesGenerateIds({\n            insertInto: sc = Q.SynchronizationConflict,\n            columns: [\n                sc.type,\n                sc.acknowledged,\n                sc.repository.id,\n                sc.overwrittenRecordHistory.id,\n                sc.overwritingRecordHistory.id\n            ],\n            values\n        });\n        for (let i = 0; i < synchronizationConflicts.length; i++) {\n            let synchronizationConflict = synchronizationConflicts[i];\n            synchronizationConflict.id = ids[i][0];\n        }\n    }\n};\nSynchronizationConflictDao = __decorate([\n    Injected()\n], SynchronizationConflictDao);\nexport { SynchronizationConflictDao };\n//# sourceMappingURL=SynchronizationConflictDao.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { BaseSynchronizationConflictValuesDao, Q } from '../../generated/generated';\nlet SynchronizationConflictValuesDao = class SynchronizationConflictValuesDao extends BaseSynchronizationConflictValuesDao {\n    async insert(synchronizationConflictValues) {\n        let scv;\n        const values = [];\n        for (const synchronizationConflictValue of synchronizationConflictValues) {\n            values.push([\n                synchronizationConflictValue.synchronizationConflict.id,\n                synchronizationConflictValue.columnIndex\n            ]);\n        }\n        await this.db.insertValues({\n            insertInto: scv = Q.SynchronizationConflictValues,\n            columns: [\n                scv.synchronizationConflict.id,\n                scv.columnIndex\n            ],\n            values\n        });\n    }\n};\nSynchronizationConflictValuesDao = __decorate([\n    Injected()\n], SynchronizationConflictValuesDao);\nexport { SynchronizationConflictValuesDao };\n//# sourceMappingURL=SynchronizationConflictValuesDao.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { and, field, or } from '@airport/air-traffic-control';\nimport { Injected } from '@airport/direction-indicator';\nimport { BaseRecordUpdateStageDao, Q } from '../generated/generated';\nlet RecordUpdateStageDao = class RecordUpdateStageDao extends BaseRecordUpdateStageDao {\n    async insertValues(values) {\n        const rus = Q.RecordUpdateStage;\n        const columns = [\n            rus.applicationVersion.id,\n            rus.entity.id,\n            rus.repository.id,\n            rus.actor.id,\n            rus.actorRecordId,\n            rus.column.id,\n            rus.updatedValue\n        ];\n        return await this.db.insertValuesGenerateIds({\n            insertInto: rus,\n            columns,\n            values\n        }, {\n            generateOnSync: true\n        });\n    }\n    async updateEntityWhereIds(applicationIndex, applicationVersionId, tableIndex, idMap, updatedColumnIndexes) {\n        const dbEntity = this.airportDatabase.applications[applicationIndex].currentVersion[0]\n            .applicationVersion.entities[tableIndex];\n        const qEntity = this.airportDatabase.qApplications[applicationIndex][dbEntity.name];\n        const repositoryEquals = [];\n        for (const [repositoryId, idsForRepository] of idMap) {\n            const actorEquals = [];\n            for (const [actorId, idsForActor] of idsForRepository) {\n                actorEquals.push(and(qEntity['actor'].id.equals(actorId), qEntity['actorRecordId'].in(Array.from(idsForActor))));\n            }\n            repositoryEquals.push(and(qEntity['repository'].id.equals(repositoryId), or(...actorEquals)));\n        }\n        const setClause = {};\n        for (const columnIndex of updatedColumnIndexes) {\n            const column = dbEntity.columns[columnIndex];\n            let columnRus = Q.RecordUpdateStage;\n            let columnSetClause = field({\n                from: [\n                    columnRus\n                ],\n                select: columnRus.updatedValue,\n                where: and(columnRus.applicationVersion.id.equals(applicationVersionId), columnRus.entity.id.equals(dbEntity.index), columnRus.repository.id.equals(qEntity.repository.id), columnRus.actor.id.equals(qEntity.actor.id), columnRus.actorRecordId.equals(qEntity.actorRecordId), columnRus.column.id.equals(column.index))\n            });\n            setClause[column.name] = columnSetClause;\n        }\n        await this.db.updateColumnsWhere({\n            update: qEntity,\n            set: setClause,\n            where: or(...repositoryEquals)\n        });\n    }\n    async delete( //\n    ) {\n        return await this.db.deleteWhere({\n            deleteFrom: Q.RecordUpdateStage\n        });\n    }\n};\nRecordUpdateStageDao = __decorate([\n    Injected()\n], RecordUpdateStageDao);\nexport { RecordUpdateStageDao };\n//# sourceMappingURL=RecordUpdateStageDao.js.map","import { lib } from '@airport/direction-indicator';\nimport { SynchronizationConflictDao } from \"./dao/conflict/SynchronizationConflictDao\";\nimport { SynchronizationConflictValuesDao } from \"./dao/conflict/SynchronizationConflictValuesDao\";\nimport { RecordUpdateStageDao } from \"./dao/RecordUpdateStageDao\";\nconst movingWalkway = lib('moving-walkway');\nexport const RECORD_UPDATE_STAGE_DAO = movingWalkway.token({\n    class: RecordUpdateStageDao,\n    interface: 'IRecordUpdateStageDao',\n    token: 'RECORD_UPDATE_STAGE_DAO'\n});\nexport const SYNCHRONIZATION_CONFLICT_DAO = movingWalkway.token({\n    class: SynchronizationConflictDao,\n    interface: 'ISynchronizationConflictDao',\n    token: 'SYNCHRONIZATION_CONFLICT_DAO'\n});\nexport const SYNCHRONIZATION_CONFLICT_VALUES_DAO = movingWalkway.token({\n    class: SynchronizationConflictValuesDao,\n    interface: 'ISynchronizationConflictValuesDao',\n    token: 'SYNCHRONIZATION_CONFLICT_VALUES_DAO'\n});\n//# sourceMappingURL=tokens.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { getSysWideOpIds } from '@airport/check-in';\nimport { ChangeType, ensureChildArray, ensureChildJsMap, ensureChildJsSet } from '@airport/ground-control';\nimport { SynchronizationConflict_Type } from '@airport/moving-walkway';\nlet Stage1SyncedInDataProcessor = class Stage1SyncedInDataProcessor {\n    /**\n     * In stage one:\n     *\n     *  1)  Unique create/update/delete statement datastructures are generated\n     *  2)  Synchronization conflict datastructure is generated\n     *\n     * @param {Map<RepositoryId, ISyncRepoTransHistory[]>} repositoryTransactionHistoryMapByRepositoryId\n     * @param {Map<Actor_Id, IActor>} actorMayById\n     * @returns {Promise<void>}\n     */\n    async performStage1DataProcessing(repositoryTransactionHistoryMapByRepositoryId, actorMayById) {\n        await this.populateSystemWideOperationIds(repositoryTransactionHistoryMapByRepositoryId);\n        const changedRecordIds = new Map();\n        // query for all local operations on records in a repository (since the earliest\n        // received change time).  Get the\n        // changes by repository ids or by the actual tables and records in those tables\n        // that will be updated or deleted.\n        for (const [repositoryId, repoTransHistoriesForRepo] of repositoryTransactionHistoryMapByRepositoryId) {\n            const changedRecordsForRepo = {\n                ids: new Map(),\n                firstChangeTime: new Date().getTime() + 10000000000\n            };\n            changedRecordIds.set(repositoryId, changedRecordsForRepo);\n            for (const repoTransHistory of repoTransHistoriesForRepo) {\n                // determine the earliest change time of incoming history records\n                const saveMillis = repoTransHistory.saveTimestamp;\n                if (saveMillis\n                    < changedRecordsForRepo.firstChangeTime) {\n                    changedRecordsForRepo.firstChangeTime = repoTransHistory.saveTimestamp;\n                }\n                for (const operationHistory of repoTransHistory.operationHistory) {\n                    // Collect the Actor related ids\n                    const idsForEntity = ensureChildJsMap(changedRecordsForRepo.ids, operationHistory.entity.id);\n                    for (const recordHistory of operationHistory.recordHistory) {\n                        // Collect the Actor related ids\n                        ensureChildJsSet(idsForEntity, recordHistory.actor.id)\n                            .add(recordHistory.actorRecordId);\n                        // add a map of new values\n                        const newValueMap = new Map();\n                        recordHistory.newValueMap = newValueMap;\n                        for (const newValue of recordHistory.newValues) {\n                            newValueMap.set(newValue.columnIndex, newValue);\n                        }\n                    }\n                }\n            }\n        }\n        const allRepoTransHistoryMapByRepoId = new Map();\n        const allRemoteRecordDeletions = this.getDeletedRecordIdsAndPopulateAllHistoryMap(allRepoTransHistoryMapByRepoId, repositoryTransactionHistoryMapByRepositoryId);\n        // find local history for the matching repositories and corresponding time period\n        const localRepoTransHistoryMapByRepositoryId = await this.repositoryTransactionHistoryDao\n            .findAllLocalChangesForRecordIds(changedRecordIds);\n        const allLocalRecordDeletions = this.getDeletedRecordIdsAndPopulateAllHistoryMap(allRepoTransHistoryMapByRepoId, localRepoTransHistoryMapByRepositoryId, true);\n        // Find all actors that modified the locally recorded history, which are not already\n        // in the actorMapById collect actors not already in cache\n        const newlyFoundActorSet = new Set();\n        for (const [repositoryId, repositoryTransactionHistoriesForRepository] of localRepoTransHistoryMapByRepositoryId) {\n            for (const repositoryTransactionHistory of repositoryTransactionHistoriesForRepository) {\n                for (const operationHistory of repositoryTransactionHistory.operationHistory) {\n                    const actorId = operationHistory.actor.id;\n                    if (actorMayById.get(actorId) === undefined) {\n                        newlyFoundActorSet.add(actorId);\n                    }\n                }\n            }\n        }\n        if (newlyFoundActorSet.size) {\n            // cache remaining actors\n            const newActors = await this.actorDao.findWithDetailsAndGlobalIdsByIds(Array.from(newlyFoundActorSet));\n            for (const newActor of newActors) {\n                actorMayById.set(newActor.id, newActor);\n            }\n        }\n        // sort all repository histories in processing order\n        for (const [repositoryId, repoTransHistoriesForRepository] of allRepoTransHistoryMapByRepoId) {\n            this.repositoryTransactionHistoryDuo\n                .sortRepoTransHistories(repoTransHistoriesForRepository, actorMayById);\n        }\n        const recordCreations = new Map();\n        const recordUpdates = new Map();\n        const recordDeletions = new Map();\n        const syncConflictMapByRepoId = new Map();\n        // FIXME: add code to ensure that remote records coming in are performed only\n        // by the actors that claim the operation AND that the records created are\n        // created only by the actors that perform the operation (actorIds match)\n        for (const [repositoryId, repoTransHistoriesForRepo] of allRepoTransHistoryMapByRepoId) {\n            for (const repoTransHistory of repoTransHistoriesForRepo) {\n                for (const operationHistory of repoTransHistory.operationHistory) {\n                    switch (operationHistory.changeType) {\n                        case ChangeType.INSERT_VALUES:\n                            this.processCreation(repositoryId, operationHistory, repoTransHistory.isLocal, recordCreations, recordUpdates, recordDeletions, allRemoteRecordDeletions, allLocalRecordDeletions, syncConflictMapByRepoId);\n                            break;\n                        case ChangeType.UPDATE_ROWS:\n                            this.processUpdate(repositoryId, operationHistory, repoTransHistory.isLocal, recordCreations, recordUpdates, allRemoteRecordDeletions, allLocalRecordDeletions, syncConflictMapByRepoId);\n                            break;\n                        case ChangeType.DELETE_ROWS:\n                            this.processDeletion(repositoryId, operationHistory, recordCreations, recordUpdates, recordDeletions, allLocalRecordDeletions);\n                            break;\n                    }\n                }\n            }\n        }\n        return {\n            recordCreations,\n            recordDeletions,\n            recordUpdates,\n            syncConflictMapByRepoId\n        };\n    }\n    async populateSystemWideOperationIds(repositoryTransactionHistoryMapByRepositoryId) {\n        let numSystemWideOperationIds = 0;\n        for (const [_, repoTransHistoriesForRepo] of repositoryTransactionHistoryMapByRepositoryId) {\n            for (const repositoryTransactionHistory of repoTransHistoriesForRepo) {\n                numSystemWideOperationIds += repositoryTransactionHistory\n                    .operationHistory.length;\n            }\n        }\n        const systemWideOperationIds = await getSysWideOpIds(numSystemWideOperationIds, this.airportDatabase, this.sequenceGenerator);\n        let i = 0;\n        for (const [_, repoTransHistoriesForRepo] of repositoryTransactionHistoryMapByRepositoryId) {\n            for (const repositoryTransactionHistory of repoTransHistoriesForRepo) {\n                for (const operationHistory of repositoryTransactionHistory.operationHistory) {\n                    operationHistory.systemWideOperationId = systemWideOperationIds[i];\n                    i++;\n                }\n            }\n        }\n    }\n    ensureRecordHistoryId(recordHistory, actorRecordIdSetByActor, actorRecordId = recordHistory.actorRecordId) {\n        ensureChildJsMap(actorRecordIdSetByActor, recordHistory.actor.id)\n            .set(actorRecordId, recordHistory.id);\n    }\n    getDeletedRecordIdsAndPopulateAllHistoryMap(allRepoTransHistoryMapByRepoId, repositoryTransactionHistoryMapByRepoId, isLocal = false) {\n        const recordDeletions = new Map();\n        for (const [repositoryId, repoTransHistories] of repositoryTransactionHistoryMapByRepoId) {\n            this.mergeArraysInMap(allRepoTransHistoryMapByRepoId, repositoryId, repoTransHistories);\n            for (const repoTransHistory of repoTransHistories) {\n                repoTransHistory.isLocal = isLocal;\n                for (const operationHistory of repoTransHistory.operationHistory) {\n                    switch (operationHistory.changeType) {\n                        case ChangeType.DELETE_ROWS:\n                            for (const recordHistory of operationHistory.recordHistory) {\n                                this.ensureRecordHistoryId(recordHistory, this.syncInUtils\n                                    .ensureRecordMapForRepoInTable(repositoryId, operationHistory, recordDeletions));\n                            }\n                            break;\n                    }\n                }\n            }\n        }\n        return recordDeletions;\n    }\n    mergeArraysInMap(map, key, array) {\n        let targetArray = map.get(key);\n        if (!targetArray) {\n            targetArray = array;\n        }\n        else {\n            targetArray = targetArray.concat(array);\n        }\n        map.set(key, targetArray);\n    }\n    /*\n    NOTE: local creates are not inputted into this processing.\n     */\n    processCreation(repositoryId, operationHistory, isLocal, recordCreations, recordUpdates, recordDeletions, allRemoteRecordDeletions, allLocalRecordDeletions, syncConflictMapByRepoId) {\n        const recordUpdatesForRepoInTable = this.getRecordsForRepoInTable(repositoryId, operationHistory, recordUpdates);\n        const recordDeletesForRepoInTable = this.getRecordsForRepoInTable(repositoryId, operationHistory, recordDeletions);\n        const allRemoteRecordDeletesForRepoInTable = this.getRecordsForRepoInTable(repositoryId, operationHistory, allRemoteRecordDeletions);\n        const allLocalRecordDeletesForRepoInTable = this.getRecordsForRepoInTable(repositoryId, operationHistory, allLocalRecordDeletions);\n        const insertsForEntityInRepo = this.syncInUtils.ensureRecordMapForRepoInTable(repositoryId, operationHistory, recordCreations);\n        for (const recordHistory of operationHistory.recordHistory) {\n            if (this.getRecord(recordHistory, insertsForEntityInRepo)) {\n                throw new Error(`A record is being created more than once.\r\n\t\t\t\t\t${this.getRecordInfo(repositoryId, operationHistory, recordHistory)}\r\n\t\t\t\t\tThis is not possible if every remote change is only processed once.\r\n\t\t\t\t\t`);\n            }\n            if (isLocal) {\n                throw new Error(`Remotely mutated record is being created locally.\r\n\t\t\t\t\t${this.getRecordInfo(repositoryId, operationHistory, recordHistory)}\r\n\t\t\t\t\tThis is not possible if changes are never sent to originating TMs.\r\n\t\t\t\t\t`);\n            }\n            if (this.hasRecordId(recordHistory, recordDeletesForRepoInTable)) {\n                throw new Error(`\r\n\t\t\t\tRemotely created record is being deleted remotely before it's been created.\r\n\t\t\t\t\t${this.getRecordInfo(repositoryId, operationHistory, recordHistory)}\r\n\t\t\t\t\tThis is not possible if all server clocks are synced.\r\n\t\t\t\t\t`);\n            }\n            if (this.getRecordHistoryId(recordHistory, allLocalRecordDeletesForRepoInTable)) {\n                throw new Error(`Remotely created record is being deleted locally.\r\n\t\t\t\t\t${this.getRecordInfo(repositoryId, operationHistory, recordHistory)}\r\n\t\t\t\t\tThis is not possible if every remote change is only processed once.\r\n\t\t\t\t\t`);\n            }\n            const remoteDeleteRecordHistoryId = this.getRecordHistoryId(recordHistory, allRemoteRecordDeletesForRepoInTable);\n            if (remoteDeleteRecordHistoryId) {\n                // remotely created record has been remotely deleted\n                this.addSyncConflict(SynchronizationConflict_Type.REMOTE_CREATE_REMOTELY_DELETED, repositoryId, recordHistory, {\n                    id: remoteDeleteRecordHistoryId\n                }, syncConflictMapByRepoId);\n                // If the record has been deleted, do not process the create\n                continue;\n            }\n            const createdRecord = this.ensureColumnValueMap(recordHistory, insertsForEntityInRepo);\n            if (this.getRecord(recordHistory, recordUpdatesForRepoInTable)) {\n                throw new Error(`Remotely created record is being updated BEFORE it is created.\r\n\t\t\t\t\t${this.getRecordInfo(repositoryId, operationHistory, recordHistory)}\r\n\t\t\t\t\tThis is not possible if all server clocks are synced.\r\n\t\t\t\t\t`);\n            }\n            // Record the creation of the record\n            for (const newValue of recordHistory.newValues) {\n                createdRecord.set(newValue.columnIndex, newValue.newValue);\n            }\n        }\n    }\n    /*\n    NOTE: local updates to records NOT in incoming changes do not get inputted into\n    this processing.\n     */\n    processUpdate(repositoryId, operationHistory, isLocal, recordCreations, recordUpdates, allRemoteRecordDeletions, allLocalRecordDeletions, syncConflictMapByRepoId) {\n        const recordCreationsForRepoInTable = this.getRecordsForRepoInTable(repositoryId, operationHistory, recordCreations);\n        const allRemoteRecordDeletesForRepoInTable = this.getRecordsForRepoInTable(repositoryId, operationHistory, allRemoteRecordDeletions);\n        const allLocalRecordDeletesForRepoInTable = this.getRecordsForRepoInTable(repositoryId, operationHistory, allLocalRecordDeletions);\n        const updatesForEntityInRepo = this.syncInUtils.ensureRecordMapForRepoInTable(repositoryId, operationHistory, recordUpdates);\n        for (const recordHistory of operationHistory.recordHistory) {\n            const localDeleteRecordHistoryId = this.getRecordHistoryId(recordHistory, allLocalRecordDeletesForRepoInTable);\n            if (localDeleteRecordHistoryId) {\n                if (!isLocal) {\n                    // A remote update to a record has been locally deleted\n                    this.addSyncConflict(SynchronizationConflict_Type.REMOTE_UPDATE_LOCALLY_DELETED, repositoryId, recordHistory, {\n                        id: localDeleteRecordHistoryId\n                    }, syncConflictMapByRepoId);\n                }\n                // else {a local update to a record has been locally deleted - nothing to do}\n                // If the record has been deleted, do not process the update\n                continue;\n            }\n            const remoteDeleteRecordHistoryId = this.getRecordHistoryId(recordHistory, allRemoteRecordDeletesForRepoInTable);\n            if (remoteDeleteRecordHistoryId) {\n                if (isLocal) {\n                    // A local update for a record that has been deleted remotely\n                    this.addSyncConflict(SynchronizationConflict_Type.LOCAL_UPDATE_REMOTELY_DELETED, repositoryId, recordHistory, {\n                        id: remoteDeleteRecordHistoryId\n                    }, syncConflictMapByRepoId);\n                }\n                // else {remote deletions do not cause conflicts for remotely updated records}\n                // If the record has been deleted, do not process the update\n                continue;\n            }\n            // If the record has been created, update the creation record instead\n            let createdRecord = this.getRecord(recordHistory, recordCreationsForRepoInTable);\n            if (createdRecord) {\n                if (isLocal) {\n                    throw new Error(`Remotely created records are being updated locally.\r\n\t\t\t\t\t${this.getRecordInfo(repositoryId, operationHistory, recordHistory)}\r\n\t\t\t\t\tThis is not possible if every remote change is only processed once.\r\n\t\t\t\t\t`);\n                }\n                else {\n                    // remotely created record is being updated remotely - normal flow\n                    for (const newValue of recordHistory.newValues) {\n                        createdRecord.set(newValue.columnIndex, newValue.newValue);\n                    }\n                }\n                // No need to record updates, already taken into account in the create\n                continue;\n            }\n            // record update\n            let updatedRecord = this.ensureRecord(recordHistory, updatesForEntityInRepo);\n            let synchronizationConflict;\n            for (const newValue of recordHistory.newValues) {\n                if (isLocal) {\n                    const columnIndex = newValue.columnIndex;\n                    const recordUpdate = updatedRecord.get(columnIndex);\n                    if (recordUpdate) {\n                        // remotely updated record value is being updated locally\n                        if (!synchronizationConflict) {\n                            synchronizationConflict = this.addSyncConflict(SynchronizationConflict_Type.REMOTE_UPDATE_LOCALLY_UPDATED, repositoryId, {\n                                id: recordUpdate.recordHistoryId,\n                            }, {\n                                id: remoteDeleteRecordHistoryId\n                            }, syncConflictMapByRepoId);\n                            synchronizationConflict.values = [];\n                        }\n                        synchronizationConflict.values.push({\n                            columnIndex,\n                            synchronizationConflict\n                        });\n                        // no need to update since the value is already there\n                        // Remove the update\n                        updatedRecord.delete(newValue.columnIndex);\n                    }\n                }\n                else {\n                    // remotely updated record value is being updated remotely - normal flow\n                    // replace the older update with the newer one\n                    updatedRecord.set(newValue.columnIndex, {\n                        newValue: newValue.newValue,\n                        recordHistoryId: recordHistory.id\n                    });\n                }\n            }\n        }\n    }\n    /*\n    NOTE: local deletes of records NOT in incoming changes do not get inputted into\n    this processing.\n     */\n    processDeletion(repositoryId, operationHistory, recordCreations, recordUpdates, recordDeletions, allLocalRecordDeletions) {\n        const recordCreationsForRepoInTable = this.getRecordsForRepoInTable(repositoryId, operationHistory, recordCreations);\n        const recordUpdatesForRepoInTable = this.getRecordsForRepoInTable(repositoryId, operationHistory, recordUpdates);\n        const allLocalRecordDeletesForRepoInTable = this.getRecordsForRepoInTable(repositoryId, operationHistory, allLocalRecordDeletions);\n        const deletesForEntityInRepo = this.syncInUtils.ensureRecordMapForRepoInTable(repositoryId, operationHistory, recordDeletions);\n        for (const recordHistory of operationHistory.recordHistory) {\n            let recordCreationsForActorInRepoInTable = this.getRecordsForActor(recordHistory, recordCreationsForRepoInTable);\n            // If a remotely deleted record was also created remotely\n            if (recordCreationsForActorInRepoInTable\n                && recordCreationsForActorInRepoInTable.get(recordHistory.actorRecordId)) {\n                // remote deletions do not cause conflicts for remotely created records\n                // Remove the creation of the record\n                recordCreationsForActorInRepoInTable.delete(recordHistory.actorRecordId);\n                // No need to record a deletion for a record that was also created (remotely)\n                continue;\n            }\n            let recordUpdatesForActorInRepoInTable = this.getRecordsForActor(recordHistory, recordUpdatesForRepoInTable);\n            // If a remotely deleted record has been updated (remotely)\n            if (recordUpdatesForActorInRepoInTable\n                && recordUpdatesForActorInRepoInTable.get(recordHistory.actorRecordId)) {\n                // remote deletions do not cause conflicts for remotely updated records\n                // Remove record updates for deleted records\n                recordUpdatesForActorInRepoInTable.delete(recordHistory.actorRecordId);\n            }\n            if (this.getRecordHistoryId(recordHistory, allLocalRecordDeletesForRepoInTable)) {\n                // If the record has been deleted locally, no need to add another delete operation\n                continue;\n            }\n            // record deletion\n            ensureChildJsSet(deletesForEntityInRepo, recordHistory.actor.id)\n                .add(recordHistory.actorRecordId);\n        }\n    }\n    getRecordsForRepoInTable(repositoryId, operationHistory, recordMapByApplicationTableAndRepository) {\n        const recordMapForApplication = recordMapByApplicationTableAndRepository\n            .get(operationHistory.entity.applicationVersion.id);\n        let recordMapForTable;\n        if (recordMapForApplication) {\n            recordMapForTable = recordMapForApplication.get(operationHistory.entity.id);\n        }\n        let recordMapForRepoInTable;\n        if (recordMapForTable) {\n            recordMapForRepoInTable = recordMapForTable.get(repositoryId);\n        }\n        return recordMapForRepoInTable;\n    }\n    getRecord(recordHistory, recordMapByActor) {\n        let recordsForActor = this.getRecordsForActor(recordHistory, recordMapByActor);\n        if (!recordsForActor) {\n            return null;\n        }\n        return recordsForActor.get(recordHistory.actorRecordId);\n    }\n    hasRecordId(recordHistory, actorRecordIdSetByActor) {\n        let actorRecordIdsForActor = this.getRecordsForActor(recordHistory, actorRecordIdSetByActor);\n        if (!actorRecordIdsForActor) {\n            return false;\n        }\n        return actorRecordIdsForActor.has(recordHistory.actorRecordId);\n    }\n    getRecordHistoryId(recordHistory, actorRecordIdSetByActor) {\n        let actorRecordIdsForActor = this.getRecordsForActor(recordHistory, actorRecordIdSetByActor);\n        if (!actorRecordIdsForActor) {\n            return null;\n        }\n        return actorRecordIdsForActor.get(recordHistory.actorRecordId);\n    }\n    getRecordsForActor(recordHistory, recordMapByActor) {\n        let recordsForActor;\n        if (recordMapByActor) {\n            recordsForActor = recordMapByActor.get(recordHistory.actor.id);\n        }\n        return recordsForActor;\n    }\n    getRecordInfo(repositoryId, operationHistory, recordHistory) {\n        return `\r\n\t\tApplication Version ID: ${operationHistory.entity.applicationVersion.id}\r\n\t\tEntity ID:         ${operationHistory.entity.id}\r\n\t\tRepository ID:     ${repositoryId}\r\n\t\tActor ID:          ${recordHistory.actor.id}\r\n\t\tActor Record ID:   ${recordHistory.actorRecordId}\r\n\t\t`;\n    }\n    addSyncConflict(synchronizationConflictType, repositoryId, overwrittenRecordHistory, overwritingRecordHistory, syncConflictMapByRepoId) {\n        const syncConflict = this.createSynchronizationConflict(synchronizationConflictType, repositoryId, overwrittenRecordHistory, overwritingRecordHistory);\n        ensureChildArray(syncConflictMapByRepoId, repositoryId).push(syncConflict);\n        return syncConflict;\n    }\n    createSynchronizationConflict(synchronizationConflictType, repositoryId, overwrittenRecordHistory, overwritingRecordHistory) {\n        return {\n            id: null,\n            overwrittenRecordHistory,\n            overwritingRecordHistory,\n            repository: {\n                id: repositoryId\n            },\n            type: synchronizationConflictType\n        };\n    }\n    ensureColumnValueMap(recordHistory, dataMap) {\n        return ensureChildJsMap(ensureChildJsMap(dataMap, recordHistory.actor.id), recordHistory.actorRecordId);\n    }\n    ensureRecord(recordHistory, recordMapByActor) {\n        return ensureChildJsMap(ensureChildJsMap(recordMapByActor, recordHistory.actor.id), recordHistory.actorRecordId);\n    }\n};\n__decorate([\n    Inject()\n], Stage1SyncedInDataProcessor.prototype, \"actorDao\", void 0);\n__decorate([\n    Inject()\n], Stage1SyncedInDataProcessor.prototype, \"airportDatabase\", void 0);\n__decorate([\n    Inject()\n], Stage1SyncedInDataProcessor.prototype, \"repositoryTransactionHistoryDao\", void 0);\n__decorate([\n    Inject()\n], Stage1SyncedInDataProcessor.prototype, \"repositoryTransactionHistoryDuo\", void 0);\n__decorate([\n    Inject()\n], Stage1SyncedInDataProcessor.prototype, \"sequenceGenerator\", void 0);\n__decorate([\n    Inject()\n], Stage1SyncedInDataProcessor.prototype, \"syncInUtils\", void 0);\nStage1SyncedInDataProcessor = __decorate([\n    Injected()\n], Stage1SyncedInDataProcessor);\nexport { Stage1SyncedInDataProcessor };\n//# sourceMappingURL=Stage1SyncedInDataProcessor.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { and, compareNumbers, or } from '@airport/air-traffic-control';\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { ensureChildJsMap, ensureChildJsSet, repositoryEntity } from '@airport/ground-control';\nlet Stage2SyncedInDataProcessor = class Stage2SyncedInDataProcessor {\n    async applyChangesToDb(stage1Result, applicationsByApplicationVersionIdMap) {\n        const context = {};\n        await this.performCreates(stage1Result.recordCreations, applicationsByApplicationVersionIdMap, context);\n        await this.performUpdates(stage1Result.recordUpdates, applicationsByApplicationVersionIdMap, context);\n        await this.performDeletes(stage1Result.recordDeletions, applicationsByApplicationVersionIdMap, context);\n    }\n    /**\n     * Remote changes come in with ApplicationVersionIds not ApplicationIndexes, so it makes\n     * sense to keep this structure.  NOTE: only one version of a given application is\n     * processed at one time:\n     *\n     *  Changes for a application version below the one in this Terminal must first be upgraded.\n     *  Terminal itself must first be upgraded to newer application versions, before changes\n     *  for that application version are processed.\n     *\n     *  To tie in a given ApplicationVersionId to its ApplicationIndex an additional mapping data\n     *  structure is passed in.\n     */\n    async performCreates(recordCreations, applicationsByApplicationVersionIdMap, context) {\n        for (const [applicationVersionId, creationInApplicationMap] of recordCreations) {\n            for (const [tableIndex, creationInTableMap] of creationInApplicationMap) {\n                const applicationIndex = applicationsByApplicationVersionIdMap\n                    .get(applicationVersionId).index;\n                const dbEntity = this.airportDatabase.applications[applicationIndex].currentVersion[0]\n                    .applicationVersion.entities[tableIndex];\n                const qEntity = this.airportDatabase.qApplications[applicationIndex][dbEntity.name];\n                const columns = [\n                    qEntity.repository.id,\n                    qEntity.actor.id,\n                    qEntity.actorRecordId\n                ];\n                const nonIdColumns = this.getNonIdColumnsInIndexOrder(dbEntity);\n                let creatingColumns = true;\n                let numInserts = 0;\n                const values = [];\n                for (const [repositoryId, creationForRepositoryMap] of creationInTableMap) {\n                    for (const [actorId, creationForActorMap] of creationForRepositoryMap) {\n                        for (const [actorRecordId, creationOfRowMap] of creationForActorMap) {\n                            const rowValues = [\n                                repositoryId,\n                                actorId,\n                                actorRecordId\n                            ];\n                            const columnIndexedValues = [];\n                            for (const [columnIndex, columnValue] of creationOfRowMap) {\n                                columnIndexedValues.push([columnIndex, columnValue]);\n                            }\n                            if (columnIndexedValues.length) {\n                                numInserts++;\n                            }\n                            columnIndexedValues.sort((col1IndexAndValue, col2IndexAndValue) => {\n                                return compareNumbers(col1IndexAndValue[0], col2IndexAndValue[0]);\n                            });\n                            let currentNonIdColumnArrayIndex = 0;\n                            for (const [columnIndex, columnValue] of columnIndexedValues) {\n                                let nonIdColumn = nonIdColumns[currentNonIdColumnArrayIndex];\n                                while (nonIdColumn.index < columnIndex) {\n                                    if (creatingColumns) {\n                                        columns.push(qEntity.__driver__.allColumns[nonIdColumn.index]);\n                                    }\n                                    rowValues.push(null);\n                                    currentNonIdColumnArrayIndex++;\n                                    nonIdColumn = nonIdColumns[currentNonIdColumnArrayIndex];\n                                }\n                                if (creatingColumns) {\n                                    columns.push(qEntity.__driver__.allColumns[columnIndex]);\n                                }\n                                rowValues.push(columnValue);\n                                currentNonIdColumnArrayIndex++;\n                            }\n                            if (columnIndexedValues.length) {\n                                values.push(rowValues);\n                            }\n                            creatingColumns = false;\n                        }\n                    }\n                }\n                if (numInserts) {\n                    const previousDbEntity = context.dbEntity;\n                    context.dbEntity = qEntity\n                        .__driver__.dbEntity;\n                    try {\n                        await this.databaseFacade.insertValues({\n                            insertInto: qEntity,\n                            columns,\n                            values\n                        }, context);\n                    }\n                    finally {\n                        context.dbEntity = previousDbEntity;\n                    }\n                }\n            }\n        }\n    }\n    getNonIdColumnsInIndexOrder(dbEntity) {\n        const nonIdColumns = [];\n        for (const column of dbEntity.columns) {\n            switch (column.name) {\n                case repositoryEntity.ACTOR_ID:\n                case repositoryEntity.ACTOR_RECORD_ID:\n                case repositoryEntity.REPOSITORY_ID:\n                    continue;\n            }\n            nonIdColumns.push(column);\n        }\n        nonIdColumns.sort((column1, column2) => {\n            return compareNumbers(column1.index, column2.index);\n        });\n        return nonIdColumns;\n    }\n    async performUpdates(recordUpdates, applicationsByApplicationVersionIdMap, context) {\n        const finalUpdateMap = new Map();\n        const recordUpdateStage = [];\n        // Build the final update data structure\n        for (const [applicationVersionId, applicationUpdateMap] of recordUpdates) {\n            const finalApplicationUpdateMap = ensureChildJsMap(finalUpdateMap, applicationVersionId);\n            for (const [tableIndex, tableUpdateMap] of applicationUpdateMap) {\n                const finalTableUpdateMap = ensureChildJsMap(finalApplicationUpdateMap, tableIndex);\n                for (const [repositoryId, repositoryUpdateMap] of tableUpdateMap) {\n                    for (const [actorId, actorUpdates] of repositoryUpdateMap) {\n                        for (const [actorRecordId, recordUpdateMap] of actorUpdates) {\n                            const recordKeyMap = this.getRecordKeyMap(recordUpdateMap, finalTableUpdateMap);\n                            ensureChildJsSet(ensureChildJsMap(recordKeyMap, repositoryId), actorId)\n                                .add(actorRecordId);\n                            for (const [columnIndex, columnUpdate] of recordUpdateMap) {\n                                recordUpdateStage.push([\n                                    applicationVersionId,\n                                    tableIndex,\n                                    repositoryId,\n                                    actorId,\n                                    actorRecordId,\n                                    columnIndex,\n                                    columnUpdate.newValue\n                                ]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!recordUpdateStage.length) {\n            return;\n        }\n        await this.recordUpdateStageDao.insertValues(recordUpdateStage);\n        // Perform the updates\n        for (const [applicationVersionId, updateMapForApplication] of finalUpdateMap) {\n            const application = applicationsByApplicationVersionIdMap.get(applicationVersionId);\n            for (const [tableIndex, updateMapForTable] of updateMapForApplication) {\n                await this.runUpdatesForTable(application.index, applicationVersionId, tableIndex, updateMapForTable);\n            }\n        }\n        await this.recordUpdateStageDao.delete();\n    }\n    async performDeletes(recordDeletions, applicationsByApplicationVersionIdMap, context) {\n        for (const [applicationVersionId, deletionInApplicationMap] of recordDeletions) {\n            const application = applicationsByApplicationVersionIdMap.get(applicationVersionId);\n            for (const [tableIndex, deletionInTableMap] of deletionInApplicationMap) {\n                const dbEntity = this.airportDatabase.applications[application.index].currentVersion[0]\n                    .applicationVersion.entities[tableIndex];\n                const qEntity = this.airportDatabase.qApplications[application.index][dbEntity.name];\n                let numClauses = 0;\n                let repositoryWhereFragments = [];\n                for (const [repositoryId, deletionForRepositoryMap] of deletionInTableMap) {\n                    let actorWhereFragments = [];\n                    for (const [actorId, actorRecordIdSet] of deletionForRepositoryMap) {\n                        numClauses++;\n                        actorWhereFragments.push(and(qEntity.actorRecordId.in(Array.from(actorRecordIdSet)), qEntity.actor.id.equals(actorId)));\n                    }\n                    repositoryWhereFragments.push(and(qEntity.repository.id.equals(repositoryId), or(...actorWhereFragments)));\n                }\n                if (numClauses) {\n                    const previousDbEntity = context.dbEntity;\n                    context.dbEntity = qEntity\n                        .__driver__.dbEntity;\n                    try {\n                        await this.databaseFacade.deleteWhere({\n                            deleteFrom: qEntity,\n                            where: or(...repositoryWhereFragments)\n                        }, context);\n                    }\n                    finally {\n                        context.dbEntity = previousDbEntity;\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Get the record key map (RecordKeyMap = RepositoryId -> Actor_Id\n     * -> RepositoryEntity_ActorRecordId) for the recordUpdateMap (the specified combination\n     * of columns/values being updated)\n     * @param {Map<ColumnIndex, RecordUpdate>} recordUpdateMap\n     * @param {ColumnUpdateKeyMap} finalTableUpdarecordKeyMapteMap\n     * @returns {RecordKeyMap}\n     */\n    getRecordKeyMap(recordUpdateMap, // combination of columns/values\n    // being updated\n    finalTableUpdateMap) {\n        const updatedColumns = [];\n        for (const columnIndex of recordUpdateMap.keys()) {\n            updatedColumns.push(columnIndex);\n        }\n        // Sort the updated columns by column index, to ensure that all records with the\n        // same combination of updated columns are grouped\n        updatedColumns.sort(compareNumbers);\n        // Navigate down the table UpdateKeyMap to find the matching combination of\n        // columns being updated\n        let columnValueUpdate;\n        let updateKeyMap = finalTableUpdateMap;\n        for (const columnIndex of updatedColumns) {\n            columnValueUpdate = updateKeyMap.get(columnIndex);\n            // If no update statements with the specified combination of columns exist yet\n            if (!columnValueUpdate) {\n                columnValueUpdate = {\n                    childColumnUpdateKeyMap: new Map(),\n                    recordKeyMap: new Map(),\n                    updatedColumns: null,\n                };\n                updateKeyMap.set(columnIndex, columnValueUpdate);\n            }\n            // Navigate down\n            updateKeyMap = columnValueUpdate.childColumnUpdateKeyMap;\n        }\n        columnValueUpdate.updatedColumns = updatedColumns;\n        // Return the map of the records for the update statement of the specified combination\n        // of columns/values\n        return columnValueUpdate.recordKeyMap;\n    }\n    /**\n     * Run all updates for a particular table.  One update per updated column combination\n     * is run.\n     *\n     * @param {ApplicationIndex} applicationIndex\n     * @param {TableIndex} tableIndex\n     * @param {ColumnUpdateKeyMap} updateKeyMap\n     * @returns {Promise<void>}\n     */\n    async runUpdatesForTable(applicationIndex, applicationVersionId, tableIndex, updateKeyMap) {\n        for (const columnValueUpdate of updateKeyMap.values()) {\n            const updatedColumns = columnValueUpdate.updatedColumns;\n            if (updatedColumns) {\n                await this.recordUpdateStageDao.updateEntityWhereIds(applicationIndex, applicationVersionId, tableIndex, columnValueUpdate.recordKeyMap, updatedColumns);\n            }\n            // Traverse down into nested column update combinations\n            await this.runUpdatesForTable(applicationIndex, applicationVersionId, tableIndex, columnValueUpdate.childColumnUpdateKeyMap);\n        }\n    }\n};\n__decorate([\n    Inject()\n], Stage2SyncedInDataProcessor.prototype, \"airportDatabase\", void 0);\n__decorate([\n    Inject()\n], Stage2SyncedInDataProcessor.prototype, \"databaseFacade\", void 0);\n__decorate([\n    Inject()\n], Stage2SyncedInDataProcessor.prototype, \"recordUpdateStageDao\", void 0);\nStage2SyncedInDataProcessor = __decorate([\n    Injected()\n], Stage2SyncedInDataProcessor);\nexport { Stage2SyncedInDataProcessor };\n//# sourceMappingURL=Stage2SyncedInDataProcessor.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\n/**\n * Synchronization in Manager implementation.\n */\nlet SynchronizationInManager = class SynchronizationInManager {\n    async receiveMessages(messageMapByUuId, context) {\n        const syncTimestamp = new Date().getTime();\n        const existingRepositoryTransactionHistories = await this.repositoryTransactionHistoryDao\n            .findWhereUuIdsIn([...messageMapByUuId.keys()]);\n        for (const existingRepositoryTransactionHistory of existingRepositoryTransactionHistories) {\n            messageMapByUuId.delete(existingRepositoryTransactionHistory.uuId);\n        }\n        if (!messageMapByUuId.size) {\n            return;\n        }\n        let messagesToProcess = [];\n        const orderedMessages = this.timeOrderMessages(messageMapByUuId);\n        // Split up messages by type\n        for (const message of orderedMessages) {\n            if (!this.isValidLastChangeTime(syncTimestamp, message.syncTimestamp, 'Sync Timestamp')) {\n                continue;\n            }\n            if (!this.isValidLastChangeTime(message.syncTimestamp, message.history.saveTimestamp, 'Sync Timestamp', 'Save Timestamp')) {\n                continue;\n            }\n            let processMessage = true;\n            await this.transactionManager.transactInternal(async (transaction) => {\n                if (!await this.syncInChecker.checkMessage(message)) {\n                    transaction.rollback(null, context);\n                    processMessage = false;\n                    return;\n                }\n            }, context);\n            if (processMessage) {\n                messagesToProcess.push(message);\n            }\n        }\n        await this.transactionManager.transactInternal(async (transaction) => {\n            transaction.isSync = true;\n            await this.twoStageSyncedInDataProcessor.syncMessages(messagesToProcess, transaction);\n        }, context);\n    }\n    timeOrderMessages(messageMapByUuId) {\n        const messages = [...messageMapByUuId.values()];\n        messages.sort((message1, message2) => {\n            if (message1.syncTimestamp < message2.syncTimestamp) {\n                return -1;\n            }\n            if (message1.syncTimestamp > message2.syncTimestamp) {\n                return 1;\n            }\n            let history1 = message1.history;\n            let history2 = message2.history;\n            if (history1.saveTimestamp < history2.saveTimestamp) {\n                return -1;\n            }\n            if (history1.saveTimestamp > history2.saveTimestamp) {\n                return 1;\n            }\n            return 0;\n        });\n        return messages;\n    }\n    isValidLastChangeTime(syncTimestamp, remoteTimestamp, remoteFieldName, syncFieldName = 'Reception Time:') {\n        if (syncTimestamp < remoteTimestamp) {\n            console.error(`Message ${syncFieldName} is less than\r\n\t\t\tthe ${remoteFieldName} in received message:\r\n\t\t\t\t${syncFieldName}:               ${syncTimestamp}\r\n\t\t\t\t${remoteFieldName}:           ${remoteTimestamp}\r\n\t\t\t`);\n            return false;\n        }\n        return true;\n    }\n};\n__decorate([\n    Inject()\n], SynchronizationInManager.prototype, \"repositoryTransactionHistoryDao\", void 0);\n__decorate([\n    Inject()\n], SynchronizationInManager.prototype, \"syncInChecker\", void 0);\n__decorate([\n    Inject()\n], SynchronizationInManager.prototype, \"transactionManager\", void 0);\n__decorate([\n    Inject()\n], SynchronizationInManager.prototype, \"twoStageSyncedInDataProcessor\", void 0);\nSynchronizationInManager = __decorate([\n    Injected()\n], SynchronizationInManager);\nexport { SynchronizationInManager };\n//# sourceMappingURL=SynchronizationInManager.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { ensureChildJsMap } from '@airport/ground-control';\n/**\n * Result of comparing to versions of a given application.\n */\nexport var ApplicationComparisonResult;\n(function (ApplicationComparisonResult) {\n    // Version specified in the message is lower than it's version in the receiving\n    // Terminal (TM)\n    ApplicationComparisonResult[ApplicationComparisonResult[\"MESSAGE_APPLICATION_VERSION_IS_LOWER\"] = -1] = \"MESSAGE_APPLICATION_VERSION_IS_LOWER\";\n    // Version of the application used i the message is the same as that in the receiving\n    // Terminal (TM)\n    ApplicationComparisonResult[ApplicationComparisonResult[\"MESSAGE_APPLICATION_VERSION_IS_EQUAL\"] = 0] = \"MESSAGE_APPLICATION_VERSION_IS_EQUAL\";\n    // Version specified in the message in higher than it's version in the receiving\n    // Terminal (TM)\n    ApplicationComparisonResult[ApplicationComparisonResult[\"MESSAGE_APPLICATION_VERSION_IS_HIGHER\"] = 1] = \"MESSAGE_APPLICATION_VERSION_IS_HIGHER\";\n})(ApplicationComparisonResult || (ApplicationComparisonResult = {}));\nlet SyncInUtils = class SyncInUtils {\n    ensureRecordMapForRepoInTable(repositoryId, operationHistory, recordMapByApplicationTableAndRepository) {\n        return ensureChildJsMap(ensureChildJsMap(ensureChildJsMap(recordMapByApplicationTableAndRepository, operationHistory.entity.applicationVersion.id), operationHistory.entity.index), repositoryId);\n    }\n};\nSyncInUtils = __decorate([\n    Injected()\n], SyncInUtils);\nexport { SyncInUtils };\n//# sourceMappingURL=SyncInUtils.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { TransactionType } from '@airport/ground-control';\nimport { RepositoryTransactionType } from '@airport/holding-pattern-runtime';\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet TwoStageSyncedInDataProcessor = class TwoStageSyncedInDataProcessor {\n    /**\n     * Synchronize the data messages coming to Terminal (new data for this TM)\n     */\n    async syncMessages(messages, transaction) {\n        this.aggregateHistoryRecords(messages, transaction);\n        const { actorMapById, repositoryTransactionHistoryMapByRepositoryId, applicationsByApplicationVersionIdMap } = await this.getDataStructures(messages);\n        await this.updateLocalData(repositoryTransactionHistoryMapByRepositoryId, actorMapById, applicationsByApplicationVersionIdMap);\n    }\n    aggregateHistoryRecords(messages, transaction) {\n        const transactionHistory = transaction.transactionHistory;\n        transactionHistory.transactionType = TransactionType.REMOTE_SYNC;\n        // split messages by repository and record actor information\n        for (const message of messages) {\n            const repositoryTransactionHistory = message.history;\n            transactionHistory.repositoryTransactionHistories.push(repositoryTransactionHistory);\n            repositoryTransactionHistory.repositoryTransactionType = RepositoryTransactionType.REMOTE;\n            transactionHistory.allOperationHistory = transactionHistory\n                .allOperationHistory.concat(repositoryTransactionHistory.operationHistory);\n            repositoryTransactionHistory.operationHistory.forEach((operationHistory) => {\n                transactionHistory.allRecordHistory = transactionHistory\n                    .allRecordHistory.concat(operationHistory.recordHistory);\n                operationHistory.recordHistory.forEach((recordHistory) => {\n                    if (recordHistory.newValues && recordHistory.newValues.length) {\n                        transactionHistory.allRecordHistoryNewValues = transactionHistory\n                            .allRecordHistoryNewValues.concat(recordHistory.newValues);\n                    }\n                    if (recordHistory.oldValues && recordHistory.oldValues.length) {\n                        transactionHistory.allRecordHistoryOldValues = transactionHistory\n                            .allRecordHistoryOldValues.concat(recordHistory.oldValues);\n                    }\n                });\n            });\n        }\n    }\n    async getDataStructures(messages) {\n        const repositoryTransactionHistoryMapByRepositoryId = new Map();\n        const applicationsByApplicationVersionIdMap = new Map();\n        const actorMapById = new Map();\n        const repoTransHistories = [];\n        for (const message of messages) {\n            repoTransHistories.push(message.history);\n            repositoryTransactionHistoryMapByRepositoryId.set(message.history.repository.id, repoTransHistories);\n            for (const actor of message.actors) {\n                actorMapById.set(actor.id, actor);\n            }\n            for (const applicationVersion of message.applicationVersions) {\n                applicationsByApplicationVersionIdMap.set(applicationVersion.id, applicationVersion.application);\n            }\n        }\n        for (const [_, repoTransHistories] of repositoryTransactionHistoryMapByRepositoryId) {\n            this.repositoryTransactionHistoryDuo\n                .sortRepoTransHistories(repoTransHistories, actorMapById);\n        }\n        return {\n            actorMapById,\n            repositoryTransactionHistoryMapByRepositoryId,\n            applicationsByApplicationVersionIdMap\n        };\n    }\n    async updateLocalData(repositoryTransactionHistoryMapByRepositoryId, actorMayById, applicationsByApplicationVersionIdMap) {\n        const stage1Result = await this.stage1SyncedInDataProcessor.performStage1DataProcessing(repositoryTransactionHistoryMapByRepositoryId, actorMayById);\n        let allSyncConflicts = [];\n        let allSyncConflictValues = [];\n        for (const [_, synchronizationConflicts] of stage1Result.syncConflictMapByRepoId) {\n            allSyncConflicts = allSyncConflicts.concat(synchronizationConflicts);\n            for (const synchronizationConflict of synchronizationConflicts) {\n                if (synchronizationConflict.values.length) {\n                    allSyncConflictValues = allSyncConflictValues.concat(synchronizationConflict.values);\n                }\n            }\n        }\n        await this.stage2SyncedInDataProcessor.applyChangesToDb(stage1Result, applicationsByApplicationVersionIdMap);\n        if (allSyncConflicts.length) {\n            await this.synchronizationConflictDao.insert(allSyncConflicts);\n        }\n        if (allSyncConflictValues.length) {\n            await this.synchronizationConflictValuesDao.insert(allSyncConflictValues);\n        }\n    }\n};\n__decorate([\n    Inject()\n], TwoStageSyncedInDataProcessor.prototype, \"repositoryTransactionHistoryDuo\", void 0);\n__decorate([\n    Inject()\n], TwoStageSyncedInDataProcessor.prototype, \"stage1SyncedInDataProcessor\", void 0);\n__decorate([\n    Inject()\n], TwoStageSyncedInDataProcessor.prototype, \"stage2SyncedInDataProcessor\", void 0);\n__decorate([\n    Inject()\n], TwoStageSyncedInDataProcessor.prototype, \"synchronizationConflictDao\", void 0);\n__decorate([\n    Inject()\n], TwoStageSyncedInDataProcessor.prototype, \"synchronizationConflictValuesDao\", void 0);\nTwoStageSyncedInDataProcessor = __decorate([\n    Injected()\n], TwoStageSyncedInDataProcessor);\nexport { TwoStageSyncedInDataProcessor };\n//# sourceMappingURL=TwoStageSyncedInDataProcessor.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { repositoryEntity } from \"@airport/ground-control\";\nimport { RepositoryTransactionType } from \"@airport/holding-pattern-runtime\";\nexport const WITH_ID = {};\nexport const WITH_RECORD_HISTORY = {};\nexport const WITH_INDEX = {};\nlet SyncOutDataSerializer = class SyncOutDataSerializer {\n    async serialize(repositoryTransactionHistories) {\n        let historiesToSend = [];\n        const messages = [];\n        for (const repositoryTransactionHistory of repositoryTransactionHistories) {\n            if (repositoryTransactionHistory.repositoryTransactionType !== RepositoryTransactionType.LOCAL) {\n                continue;\n            }\n            const message = await this.serializeMessage(repositoryTransactionHistory);\n            historiesToSend.push(repositoryTransactionHistory);\n            messages.push(message);\n        }\n        return {\n            historiesToSend,\n            messages\n        };\n    }\n    async serializeMessage(repositoryTransactionHistory) {\n        const lookups = {\n            actorInMessageIndexesById: new Map(),\n            applicationVersionInMessageIndexesById: new Map(),\n            applicationVersions: [],\n            lastInMessageActorIndex: -1,\n            lastInMessageApplicationVersionIndex: -1,\n            lastInMessageRepositoryIndex: -1,\n            messageRepository: repositoryTransactionHistory.repository,\n            repositoryInMessageIndexesById: new Map()\n        };\n        const inMessageUserLookup = {\n            inMessageIndexesById: new Map(),\n            lastInMessageIndex: -1\n        };\n        const message = {\n            actors: [],\n            applicationVersions: [],\n            applications: [],\n            history: null,\n            // Repositories may reference records in other repositories\n            referencedRepositories: [],\n            users: [],\n            terminals: []\n        };\n        message.history = this.serializeRepositoryTransactionHistory(repositoryTransactionHistory, message, lookups, inMessageUserLookup);\n        // TODO: replace db lookups with TerminalState lookups where possible\n        await this.serializeRepositories(repositoryTransactionHistory, message, lookups, inMessageUserLookup);\n        const inMessageApplicationLookup = await this.serializeActorsUsersAndTerminals(message, lookups, inMessageUserLookup);\n        await this.serializeApplicationsAndVersions(message, inMessageApplicationLookup, lookups);\n        return message;\n    }\n    async serializeActorsUsersAndTerminals(message, lookups, inMessageUserLookup) {\n        let actorIdsToFindBy = [];\n        for (let actorId of lookups.actorInMessageIndexesById.keys()) {\n            actorIdsToFindBy.push(actorId);\n        }\n        const actors = await this.actorDao.findWithDetailsAndGlobalIdsByIds(actorIdsToFindBy);\n        this.serializeUsers(actors, message, inMessageUserLookup);\n        const terminalInMessageIndexesById = this.serializeTerminals(actors, message, inMessageUserLookup);\n        const inMessageApplicationLookup = {\n            lastInMessageIndex: -1,\n            inMessageIndexesById: new Map()\n        };\n        for (const actor of actors) {\n            const applicationInMessageIndex = this.serializeApplication(actor.application, inMessageApplicationLookup, message);\n            const actorInMessageIndex = lookups.actorInMessageIndexesById.get(actor.id);\n            message.actors[actorInMessageIndex] = {\n                ...WITH_ID,\n                application: applicationInMessageIndex,\n                terminal: terminalInMessageIndexesById.get(actor.terminal.id),\n                user: inMessageUserLookup.inMessageIndexesById.get(actor.user.id),\n                uuId: actor.uuId\n            };\n        }\n        return inMessageApplicationLookup;\n    }\n    serializeTerminals(actors, message, inMessageUserLookup) {\n        let lastInMessageTerminalIndex = -1;\n        const terminalInMessageIndexesById = new Map();\n        for (const actor of actors) {\n            let terminal = actor.terminal;\n            if (terminalInMessageIndexesById.has(terminal.id)) {\n                continue;\n            }\n            const terminalInMessageIndex = ++lastInMessageTerminalIndex;\n            terminalInMessageIndexesById.set(terminal.id, terminalInMessageIndex);\n            message.terminals[terminalInMessageIndex] = {\n                ...WITH_ID,\n                uuId: terminal.uuId,\n                owner: inMessageUserLookup.inMessageIndexesById.get(terminal.owner.id)\n            };\n        }\n        return terminalInMessageIndexesById;\n    }\n    serializeUsers(actors, message, inMessageUserLookup) {\n        for (const actor of actors) {\n            this.addUserToMessage(actor.user, message, inMessageUserLookup);\n            this.addUserToMessage(actor.terminal.owner, message, inMessageUserLookup);\n        }\n    }\n    addUserToMessage(user, message, inMessageUserLookup) {\n        let userInMessageIndex = this.getUserInMessageIndex(user, inMessageUserLookup);\n        message.users[userInMessageIndex] = {\n            ...WITH_ID,\n            username: user.username,\n            uuId: user.uuId\n        };\n        return userInMessageIndex;\n    }\n    getUserInMessageIndex(user, inMessageUserLookup) {\n        if (inMessageUserLookup.inMessageIndexesById.has(user.id)) {\n            return inMessageUserLookup.inMessageIndexesById.get(user.id);\n        }\n        let userInMessageIndex = ++inMessageUserLookup.lastInMessageIndex;\n        inMessageUserLookup.inMessageIndexesById.set(user.id, userInMessageIndex);\n        return userInMessageIndex;\n    }\n    async serializeRepositories(repositoryTransactionHistory, message, lookups, inMessageUserLookup) {\n        let repositoryIdsToFindBy = [];\n        for (let repositoryId of lookups.repositoryInMessageIndexesById.keys()) {\n            repositoryIdsToFindBy.push(repositoryId);\n        }\n        repositoryIdsToFindBy.push(repositoryTransactionHistory.id);\n        const repositories = await this.repositoryDao.findByIds(repositoryIdsToFindBy);\n        for (const repository of repositories) {\n            let userInMessageIndex = this.getUserInMessageIndex(repository.owner, inMessageUserLookup);\n            if (lookups.repositoryInMessageIndexesById.has(repository.id)) {\n                const repositoryInMessageIndex = lookups.repositoryInMessageIndexesById.get(repository.id);\n                message.referencedRepositories[repositoryInMessageIndex] =\n                    this.serializeRepository(repository, userInMessageIndex);\n            }\n            else {\n                message.history.repository.owner = userInMessageIndex;\n                message.history.repository.id = repository.id;\n            }\n        }\n    }\n    serializeApplicationsAndVersions(message, inMessageApplicationLookup, lookups) {\n        for (let i = 0; i < lookups.applicationVersions.length; i++) {\n            const applicationVersion = lookups.applicationVersions[i];\n            const applicationInMessageIndex = this.serializeApplication(applicationVersion.application, inMessageApplicationLookup, message);\n            message.applicationVersions[i] = {\n                ...WITH_ID,\n                application: applicationInMessageIndex,\n                integerVersion: applicationVersion.integerVersion\n            };\n        }\n    }\n    serializeApplication(application, inMessageApplicationLookup, message) {\n        let applicationInMessageIndex;\n        if (inMessageApplicationLookup.inMessageIndexesById.has(application.index)) {\n            applicationInMessageIndex = inMessageApplicationLookup\n                .inMessageIndexesById.get(application.index);\n        }\n        else {\n            applicationInMessageIndex = ++inMessageApplicationLookup.lastInMessageIndex;\n            inMessageApplicationLookup.inMessageIndexesById\n                .set(application.index, applicationInMessageIndex);\n            message.applications[applicationInMessageIndex] = {\n                ...WITH_INDEX,\n                domain: {\n                    ...WITH_ID,\n                    name: application.domain.name\n                },\n                name: application.name\n            };\n        }\n        return applicationInMessageIndex;\n    }\n    serializeRepositoryTransactionHistory(repositoryTransactionHistory, message, lookups, inMessageUserLookup) {\n        repositoryTransactionHistory.operationHistory.sort((operationHistory1, operationHistory2) => {\n            if (operationHistory1.orderNumber < operationHistory2.orderNumber) {\n                return -1;\n            }\n            if (operationHistory1.orderNumber > operationHistory2.orderNumber) {\n                return 1;\n            }\n            return 0;\n        });\n        const serializedOperationHistory = [];\n        for (const operationHistory of repositoryTransactionHistory.operationHistory) {\n            serializedOperationHistory.push(this.serializeOperationHistory(operationHistory, lookups));\n        }\n        return {\n            ...WITH_ID,\n            isRepositoryCreation: repositoryTransactionHistory.isRepositoryCreation,\n            repository: this.serializeHistoryRepository(repositoryTransactionHistory, message, inMessageUserLookup),\n            operationHistory: serializedOperationHistory,\n            saveTimestamp: repositoryTransactionHistory.saveTimestamp,\n            uuId: repositoryTransactionHistory.uuId\n        };\n    }\n    serializeHistoryRepository(repositoryTransactionHistory, message, inMessageUserLookup) {\n        if (repositoryTransactionHistory.isRepositoryCreation) {\n            const repository = repositoryTransactionHistory.repository;\n            let userInMessageIndex = this.addUserToMessage(repository.owner, message, inMessageUserLookup);\n            return this.serializeRepository(repository, userInMessageIndex);\n        }\n        else {\n            // When this repositoryTransactionHistory processed at sync-in \n            // the repository should already be loaded in the target database\n            // if it's not then it's missing the repositoryTransactionHistory\n            // with isRepositoryCreation === true\n            return repositoryTransactionHistory.repository.uuId;\n        }\n    }\n    serializeOperationHistory(operationHistory, lookups) {\n        const dbEntity = operationHistory.entity;\n        const serializedRecordHistory = [];\n        for (const recordHistory of operationHistory.recordHistory) {\n            serializedRecordHistory.push(this.serializeRecordHistory(operationHistory, recordHistory, dbEntity, lookups));\n        }\n        const entity = operationHistory.entity;\n        // Should be populated - coming from TerminalStore\n        // if (typeof entity !== 'object') {\n        // \tthrow new Error(`OperationHistory.entity must be populated`)\n        // }\n        // if (typeof entity.index !== 'number') {\n        // \tthrow new Error(`OperationHistory.entity.index must be present`)\n        // }\n        const applicationVersion = entity.applicationVersion;\n        // Should be populated - coming from TerminalStore\n        // if (typeof applicationVersion !== 'object') {\n        // \tthrow new Error(`OperationHistory.entity.applicationVersion must be populated`)\n        // }\n        // if (typeof applicationVersion.id !== 'number') {\n        // \tthrow new Error(`OperationHistory.entity.applicationVersion.id must be present`)\n        // }\n        let applicationVersionInMessageIndex;\n        if (lookups.applicationVersionInMessageIndexesById.has(applicationVersion.id)) {\n            applicationVersionInMessageIndex = lookups.applicationVersionInMessageIndexesById.get(applicationVersion.id);\n        }\n        else {\n            applicationVersionInMessageIndex = ++lookups.lastInMessageApplicationVersionIndex;\n            lookups.applicationVersionInMessageIndexesById.set(applicationVersion.id, applicationVersionInMessageIndex);\n        }\n        lookups.applicationVersions[applicationVersionInMessageIndex] = applicationVersion;\n        return {\n            ...WITH_ID,\n            actor: this.getActorInMessageIndex(operationHistory.actor, lookups),\n            changeType: operationHistory.changeType,\n            entity: {\n                ...WITH_ID,\n                applicationVersion: applicationVersionInMessageIndex,\n                index: operationHistory.entity.index\n            },\n            recordHistory: serializedRecordHistory\n        };\n    }\n    serializeRecordHistory(operationHistory, recordHistory, dbEntity, lookups) {\n        const dbColumMapByIndex = new Map();\n        for (const dbColumn of dbEntity.columns) {\n            dbColumMapByIndex.set(dbColumn.index, dbColumn);\n        }\n        const newValues = [];\n        for (const newValue of recordHistory.newValues) {\n            const dbColumn = dbColumMapByIndex.get(newValue.columnIndex);\n            newValues.push(this.serializeNewValue(newValue, dbColumn, lookups));\n        }\n        const oldValues = [];\n        for (const oldValue of recordHistory.oldValues) {\n            const dbColumn = dbColumMapByIndex.get(oldValue.columnIndex);\n            oldValues.push(this.serializeOldValue(oldValue, dbColumn, lookups));\n        }\n        const actor = recordHistory.actor;\n        // Actor may be null if it's the same actor as for RepositoryTransactionHistory\n        // if (typeof actor !== 'object') {\n        // \tthrow new Error(`RecordHistory.actor must be populated`)\n        // }\n        const baseObject = {\n            ...WITH_ID,\n        };\n        if (actor.id !== operationHistory.actor.id) {\n            baseObject.actor = this.getActorInMessageIndex(actor, lookups);\n        }\n        if (newValues.length) {\n            baseObject.newValues = newValues;\n        }\n        if (oldValues.length) {\n            baseObject.oldValues = oldValues;\n        }\n        return {\n            ...baseObject,\n            actorRecordId: recordHistory.actorRecordId,\n        };\n    }\n    getActorInMessageIndex(actor, lookups) {\n        if (!actor) {\n            return null;\n        }\n        return this.getActorInMessageIndexById(actor.id, lookups);\n    }\n    getActorInMessageIndexById(actorId, lookups) {\n        let actorInMessageIndex;\n        if (lookups.actorInMessageIndexesById.has(actorId)) {\n            actorInMessageIndex = lookups.actorInMessageIndexesById.get(actorId);\n        }\n        else {\n            actorInMessageIndex = ++lookups.lastInMessageActorIndex;\n            lookups.actorInMessageIndexesById.set(actorId, actorInMessageIndex);\n        }\n        return actorInMessageIndex;\n    }\n    serializeNewValue(newValue, dbColumn, lookups) {\n        return this.serializeValue(newValue, dbColumn, lookups, 'newValue');\n    }\n    serializeOldValue(oldValue, dbColumn, lookups) {\n        return this.serializeValue(oldValue, dbColumn, lookups, 'oldValue');\n    }\n    serializeValue(valueRecord, dbColumn, lookups, valueFieldName) {\n        let value = valueRecord[valueFieldName];\n        let serailizedValue = value;\n        switch (dbColumn.name) {\n            case repositoryEntity.ORIGINAL_ACTOR_ID: {\n                serailizedValue = this.getActorInMessageIndexById(value, lookups);\n                break;\n            }\n            case repositoryEntity.ORIGINAL_REPOSITORY_ID: {\n                serailizedValue = this.getSerializedRepositoryId(value, lookups);\n                break;\n            }\n        }\n        if (/.*_AID_[\\d]+$/.test(dbColumn.name)\n            && dbColumn.manyRelationColumns.length) {\n            serailizedValue = this.getActorInMessageIndexById(value, lookups);\n        }\n        if (/.*_RID_[\\d]+$/.test(dbColumn.name)\n            && dbColumn.manyRelationColumns.length) {\n            serailizedValue = this.getSerializedRepositoryId(value, lookups);\n        }\n        return {\n            ...WITH_RECORD_HISTORY,\n            columnIndex: valueRecord.columnIndex,\n            [valueFieldName]: serailizedValue\n        };\n    }\n    getSerializedRepositoryId(value, lookups) {\n        if (value === lookups.messageRepository.id) {\n            return -1;\n        }\n        let serailizedValue = lookups.repositoryInMessageIndexesById.get(value);\n        if (serailizedValue === undefined) {\n            lookups.lastInMessageRepositoryIndex++;\n            serailizedValue = lookups.lastInMessageRepositoryIndex;\n            lookups.repositoryInMessageIndexesById.set(value, serailizedValue);\n        }\n        return serailizedValue;\n    }\n    serializeRepository(repository, owner) {\n        return {\n            ...WITH_ID,\n            ageSuitability: repository.ageSuitability,\n            createdAt: repository.createdAt,\n            immutable: repository.immutable,\n            owner,\n            source: repository.source,\n            uuId: repository.uuId\n        };\n    }\n};\n__decorate([\n    Inject()\n], SyncOutDataSerializer.prototype, \"actorDao\", void 0);\n__decorate([\n    Inject()\n], SyncOutDataSerializer.prototype, \"repositoryDao\", void 0);\nSyncOutDataSerializer = __decorate([\n    Injected()\n], SyncOutDataSerializer);\nexport { SyncOutDataSerializer };\n//# sourceMappingURL=SyncOutDataSerializer.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { ensureChildArray, ensureChildJsMap } from '@airport/ground-control';\nlet SynchronizationOutManager = class SynchronizationOutManager {\n    async synchronizeOut(repositoryTransactionHistories) {\n        await this.loadHistoryRepositories(repositoryTransactionHistories);\n        const { historiesToSend, messages } = await this.syncOutDataSerializer.serialize(repositoryTransactionHistories);\n        // await this.ensureGlobalRepositoryIdentifiers(repositoryTransactionHistories, messages)\n        const groupMessageMap = this.groupMessagesBySourceAndRepository(messages, historiesToSend);\n        for (const [repositorySource, messageMapForSource] of groupMessageMap) {\n            const synchronizationAdapter = await this.synchronizationAdapterLoader.load(repositorySource);\n            await synchronizationAdapter.sendTransactions(repositorySource, messageMapForSource);\n        }\n        await this.updateRepositoryTransactionHistories(messages, historiesToSend);\n    }\n    async loadHistoryRepositories(repositoryTransactionHistories) {\n        const repositoryIdsToLookup = new Set();\n        const repositoryMapById = new Map();\n        for (const repositoryTransactionHistory of repositoryTransactionHistories) {\n            repositoryIdsToLookup.add(repositoryTransactionHistory.repository.id);\n        }\n        if (!repositoryIdsToLookup.size) {\n            return;\n        }\n        const repositories = await this.repositoryDao.findByIds([\n            ...repositoryIdsToLookup.values()\n        ]);\n        for (const repository of repositories) {\n            repositoryMapById.set(repository.id, repository);\n        }\n        for (const repositoryTransactionHistory of repositoryTransactionHistories) {\n            repositoryTransactionHistory.repository =\n                repositoryMapById.get(repositoryTransactionHistory.repository.id);\n        }\n    }\n    async ensureGlobalRepositoryIdentifiers(repositoryTransactionHistories, messages) {\n        const repositoryIdsToLookup = new Set();\n        const repositoryMapById = new Map();\n        for (const repositoryTransactionHistory of repositoryTransactionHistories) {\n            const repository = repositoryTransactionHistory.repository;\n            if (!repository.source || !repository.uuId) {\n                repositoryIdsToLookup.add(repository.id);\n            }\n            else {\n                repositoryMapById.set(repository.id, repository);\n            }\n        }\n        if (!repositoryIdsToLookup.size) {\n            return;\n        }\n        const repositories = await this.repositoryDao.findByIds([\n            ...repositoryIdsToLookup.values()\n        ]);\n        for (const repository of repositories) {\n            repositoryMapById.set(repository.id, repository);\n        }\n        for (const message of messages) {\n            const repository = message.history.repository;\n            if (!repository.source || !repository.uuId) {\n                const foundRepository = repositoryMapById.get(repository.id);\n                repository.source = foundRepository.source;\n                repository.uuId = foundRepository.uuId;\n                delete repository.id;\n            }\n        }\n    }\n    groupMessagesBySourceAndRepository(messages, historiesToSend) {\n        const groupMessageMap = new Map();\n        for (let i = 0; i < messages.length; i++) {\n            const repository = historiesToSend[i].repository;\n            ensureChildArray(ensureChildJsMap(groupMessageMap, repository.source), repository.uuId).push(messages[i]);\n        }\n        return groupMessageMap;\n    }\n    async updateRepositoryTransactionHistories(messages, repositoryTransactionHistories) {\n        for (let i = 0; i < messages.length; i++) {\n            const message = messages[i];\n            const repositoryTransactionHistory = repositoryTransactionHistories[i];\n            if (message.syncTimestamp) {\n                repositoryTransactionHistory.syncTimestamp = message.syncTimestamp;\n                await this.repositoryTransactionHistoryDao.updateSyncTimestamp(repositoryTransactionHistory);\n            }\n        }\n    }\n};\n__decorate([\n    Inject()\n], SynchronizationOutManager.prototype, \"repositoryDao\", void 0);\n__decorate([\n    Inject()\n], SynchronizationOutManager.prototype, \"repositoryTransactionHistoryDao\", void 0);\n__decorate([\n    Inject()\n], SynchronizationOutManager.prototype, \"synchronizationAdapterLoader\", void 0);\n__decorate([\n    Inject()\n], SynchronizationOutManager.prototype, \"syncOutDataSerializer\", void 0);\nSynchronizationOutManager = __decorate([\n    Injected()\n], SynchronizationOutManager);\nexport { SynchronizationOutManager };\n//# sourceMappingURL=SynchronizationOutManager.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nlet NonhubClient = class NonhubClient {\n    constructor() {\n        // encryptionKey = process.env.ENCRYPTION_KEY\n        this.serverLocationProtocol = 'http://';\n    }\n    async getRepositoryTransactions(location, repositoryUuId, sinceSyncTimestamp = null) {\n        try {\n            const response = await this.sendMessage(location + '/read', {\n                repositoryUuId,\n                syncTimestamp: sinceSyncTimestamp\n            });\n            if (response.error) {\n                console.error(response.error);\n                return [];\n            }\n            return response.fragments;\n        }\n        catch (e) {\n            console.error(e);\n            return [];\n        }\n    }\n    async sendRepositoryTransactions(location, repositoryUuId, messages) {\n        try {\n            const response = await this.sendMessage(location + '/write', {\n                messages,\n                repositoryUuId\n            });\n            if (response.error) {\n                console.error(response.error);\n                return 0;\n            }\n            return response.syncTimestamp;\n        }\n        catch (e) {\n            console.error(e);\n            return 0;\n        }\n    }\n    async sendMessage(location, request) {\n        let packagedMessage = JSON.stringify(request);\n        // if (this.encryptionKey) {\n        //     packagedMessage = await encryptString(\n        //         packagedMessage, this.encryptionKey)\n        // }\n        const response = await fetch(this.serverLocationProtocol + location, {\n            method: 'PUT',\n            mode: 'cors',\n            // cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n            // credentials: 'same-origin',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            // redirect: 'follow', // manual, *follow, error\n            // referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n            body: packagedMessage // body data type must match \"Content-Type\" header\n        });\n        // let unpackagedMessage = response.text()\n        // if (this.encryptionKey) {\n        //     unpackagedMessage = await decryptString(unpackagedMessage, this.encryptionKey)\n        // }\n        // return JSON.parse(unpackagedMessage)\n        return response.json();\n    }\n};\nNonhubClient = __decorate([\n    Injected()\n], NonhubClient);\nexport { NonhubClient };\n//# sourceMappingURL=NonhubClient.js.map","import { lib } from '@airport/direction-indicator';\nimport { NonhubClient } from './NonhubClient';\n// import {\n//     decryptString,\n//     encryptString,\n// } from \"string-cipher\";\nconst nonhubClient = lib('nonhub-client');\nexport const NONHUB_CLIENT = nonhubClient.token({\n    class: NonhubClient,\n    interface: 'INonhubClient',\n    token: 'INonhubClient'\n});\n//# sourceMappingURL=tokens.js.map","import { lib } from '@airport/direction-indicator';\nimport { SyncInActorChecker } from './synchronization/in/checker/SyncInActorChecker';\nimport { SyncInChecker } from './synchronization/in/checker/SyncInChecker';\nimport { SyncInDataChecker } from './synchronization/in/checker/SyncInDataChecker';\nimport { SyncInRepositoryChecker } from './synchronization/in/checker/SyncInRepositoryChecker';\nimport { SyncInApplicationChecker } from './synchronization/in/checker/SyncInApplicationChecker';\nimport { SyncInApplicationVersionChecker } from './synchronization/in/checker/SyncInApplicationVersionChecker';\nimport { SyncInTerminalChecker } from './synchronization/in/checker/SyncInTerminalChecker';\nimport { SyncInUserChecker } from './synchronization/in/checker/SyncInUserChecker';\nimport { Stage1SyncedInDataProcessor } from './synchronization/in/Stage1SyncedInDataProcessor';\nimport { Stage2SyncedInDataProcessor } from './synchronization/in/Stage2SyncedInDataProcessor';\nimport { SynchronizationInManager } from './synchronization/in/SynchronizationInManager';\nimport { SyncInUtils } from './synchronization/in/SyncInUtils';\nimport { TwoStageSyncedInDataProcessor } from './synchronization/in/TwoStageSyncedInDataProcessor';\nimport { SynchronizationOutManager } from './synchronization/out/SynchronizationOutManager';\nimport { SynchronizationAdapterLoader } from './adapters/SynchronizationAdapterLoader';\nimport { SyncOutDataSerializer } from './synchronization/out/converter/SyncOutDataSerializer';\nimport { AIRPORT_DATABASE, DATABASE_FACADE } from '@airport/air-traffic-control';\nimport { SEQUENCE_GENERATOR } from '@airport/check-in';\nimport { TERMINAL_STORE, TRANSACTION_MANAGER } from '@airport/terminal-map';\nimport { TERMINAL_DAO, USER_DAO } from '@airport/travel-document-checkpoint-runtime';\nimport { APPLICATION_DAO, APPLICATION_VERSION_DAO, DOMAIN_DAO } from '@airport/airspace';\nimport { ACTOR_DAO, REPOSITORY_DAO, REPOSITORY_TRANSACTION_HISTORY_DAO, REPOSITORY_TRANSACTION_HISTORY_DUO } from '@airport/holding-pattern-runtime';\nimport { RECORD_UPDATE_STAGE_DAO, SYNCHRONIZATION_CONFLICT_DAO, SYNCHRONIZATION_CONFLICT_VALUES_DAO } from '@airport/moving-walkway';\nimport { DebugSynchronizationAdapter } from './adapters/DebugSynchronizationAdapter';\nimport { NONHUB_CLIENT } from '@airport/nonhub-client';\nconst groundTransport = lib('ground-transport');\nexport const STAGE1_SYNCED_IN_DATA_PROCESSOR = groundTransport.token({\n    class: Stage1SyncedInDataProcessor,\n    interface: 'IStage1SyncedInDataProcessor',\n    token: 'STAGE1_SYNCED_IN_DATA_PROCESSOR'\n});\nexport const STAGE2_SYNCED_IN_DATA_PROCESSOR = groundTransport.token({\n    class: Stage2SyncedInDataProcessor,\n    interface: 'IStage2SyncedInDataProcessor',\n    token: 'STAGE2_SYNCED_IN_DATA_PROCESSOR'\n});\nexport const SYNC_IN_ACTOR_CHECKER = groundTransport.token({\n    class: SyncInActorChecker,\n    interface: 'ISyncInActorChecker',\n    token: 'SYNC_IN_ACTOR_CHECKER'\n});\nexport const SYNC_IN_CHECKER = groundTransport.token({\n    class: SyncInChecker,\n    interface: 'ISyncInChecker',\n    token: 'SYNC_IN_CHECKER'\n});\nexport const SYNC_IN_DATA_CHECKER = groundTransport.token({\n    class: SyncInDataChecker,\n    interface: 'ISyncInDataChecker',\n    token: 'SYNC_IN_DATA_CHECKER'\n});\nexport const SYNC_IN_TERMINAL_CHECKER = groundTransport.token({\n    class: SyncInTerminalChecker,\n    interface: 'ISyncInTerminalChecker',\n    token: 'SYNC_IN_TERMINAL_CHECKER'\n});\nexport const SYNC_IN_REPOSITORY_CHECKER = groundTransport.token({\n    class: SyncInRepositoryChecker,\n    interface: 'ISyncInRepositoryChecker',\n    token: 'SYNC_IN_REPOSITORY_CHECKER'\n});\nexport const SYNC_IN_APPLICATION_CHECKER = groundTransport.token({\n    class: SyncInApplicationChecker,\n    interface: 'ISyncInApplicationChecker',\n    token: 'SYNC_IN_APPLICATION_CHECKER'\n});\nexport const SYNC_IN_APPLICATION_VERSION_CHECKER = groundTransport.token({\n    class: SyncInApplicationVersionChecker,\n    interface: 'ISyncInApplicationVersionChecker',\n    token: 'SYNC_IN_APPLICATION_VERSION_CHECKER'\n});\nexport const SYNC_IN_USER_CHECKER = groundTransport.token({\n    class: SyncInUserChecker,\n    interface: 'ISyncInUserChecker',\n    token: 'SYNC_IN_USER_CHECKER'\n});\nexport const SYNC_IN_UTILS = groundTransport.token({\n    class: SyncInUtils,\n    interface: 'ISyncInUtils',\n    token: 'SYNC_IN_UTILS'\n});\nexport const SYNCHRONIZATION_IN_MANAGER = groundTransport.token({\n    class: SynchronizationInManager,\n    interface: 'ISynchronizationInManager',\n    token: 'SYNCHRONIZATION_IN_MANAGER'\n});\nexport const SYNCHRONIZATION_OUT_MANAGER = groundTransport.token({\n    class: SynchronizationOutManager,\n    interface: 'ISynchronizationOutManager',\n    token: 'SYNCHRONIZATION_OUT_MANAGER'\n});\nexport const SYNC_OUT_DATA_SERIALIZER = groundTransport.token({\n    class: SyncOutDataSerializer,\n    interface: 'ISyncOutDataSerializer',\n    token: 'SYNC_OUT_DATA_SERIALIZER'\n});\nexport const TWO_STAGE_SYNCED_IN_DATA_PROCESSOR = groundTransport.token({\n    class: TwoStageSyncedInDataProcessor,\n    interface: 'ITwoStageSyncedInDataProcessor',\n    token: 'TWO_STAGE_SYNCED_IN_DATA_PROCESSOR'\n});\nexport const DEBUG_SYNCHRONIZATION_ADAPTER = groundTransport.token({\n    class: DebugSynchronizationAdapter,\n    interface: 'ISynchronizationAdapter',\n    token: 'DEBUG_SYNCHRONIZATION_ADAPTER'\n});\nexport const SYNCHRONIZATION_ADAPTER_LOADER = groundTransport.token({\n    class: SynchronizationAdapterLoader,\n    interface: 'ISynchronizationAdapterLoader',\n    token: 'SYNCHRONIZATION_ADAPTER_LOADER'\n});\nDEBUG_SYNCHRONIZATION_ADAPTER.setDependencies({\n    nonhubClient: NONHUB_CLIENT\n});\nSTAGE1_SYNCED_IN_DATA_PROCESSOR.setDependencies({\n    actorDao: ACTOR_DAO,\n    airportDatabase: AIRPORT_DATABASE,\n    repositoryTransactionHistoryDao: REPOSITORY_TRANSACTION_HISTORY_DAO,\n    repositoryTransactionHistoryDuo: REPOSITORY_TRANSACTION_HISTORY_DUO,\n    sequenceGenerator: SEQUENCE_GENERATOR,\n    syncInUtils: SYNC_IN_UTILS\n});\nSTAGE2_SYNCED_IN_DATA_PROCESSOR.setDependencies({\n    airportDatabase: AIRPORT_DATABASE,\n    databaseFacade: DATABASE_FACADE,\n    recordUpdateStageDao: RECORD_UPDATE_STAGE_DAO\n});\nSYNC_IN_ACTOR_CHECKER.setDependencies({\n    actorDao: ACTOR_DAO,\n});\nSYNC_IN_APPLICATION_CHECKER.setDependencies({\n    applicationDao: APPLICATION_DAO,\n    domainDao: DOMAIN_DAO\n});\nSYNC_IN_APPLICATION_VERSION_CHECKER.setDependencies({\n    applicationVersionDao: APPLICATION_VERSION_DAO\n});\nSYNC_IN_CHECKER.setDependencies({\n    syncInActorChecker: SYNC_IN_ACTOR_CHECKER,\n    syncInApplicationChecker: SYNC_IN_APPLICATION_CHECKER,\n    syncInApplicationVersionChecker: SYNC_IN_APPLICATION_VERSION_CHECKER,\n    syncInDataChecker: SYNC_IN_DATA_CHECKER,\n    syncInRepositoryChecker: SYNC_IN_REPOSITORY_CHECKER,\n    syncInTerminalChecker: SYNC_IN_TERMINAL_CHECKER,\n    syncInUserChecker: SYNC_IN_USER_CHECKER\n});\nSYNC_IN_DATA_CHECKER.setDependencies({\n    airportDatabase: AIRPORT_DATABASE,\n    sequenceGenerator: SEQUENCE_GENERATOR,\n    terminalStore: TERMINAL_STORE\n});\nSYNC_IN_REPOSITORY_CHECKER.setDependencies({\n    repositoryDao: REPOSITORY_DAO,\n});\nSYNC_IN_TERMINAL_CHECKER.setDependencies({\n    terminalDao: TERMINAL_DAO\n});\nSYNC_IN_USER_CHECKER.setDependencies({\n    userDao: USER_DAO\n});\nSYNC_OUT_DATA_SERIALIZER.setDependencies({\n    repositoryDao: REPOSITORY_DAO,\n});\nSYNCHRONIZATION_ADAPTER_LOADER.setDependencies({\n    debugSynchronizationAdapter: DEBUG_SYNCHRONIZATION_ADAPTER\n});\nSYNCHRONIZATION_IN_MANAGER.setDependencies({\n    repositoryTransactionHistoryDao: REPOSITORY_TRANSACTION_HISTORY_DAO,\n    syncInChecker: SYNC_IN_CHECKER,\n    transactionManager: TRANSACTION_MANAGER,\n    twoStageSyncedInDataProcessor: TWO_STAGE_SYNCED_IN_DATA_PROCESSOR\n});\nSYNCHRONIZATION_OUT_MANAGER.setDependencies({\n    repositoryDao: REPOSITORY_DAO,\n    repositoryTransactionHistoryDao: REPOSITORY_TRANSACTION_HISTORY_DAO,\n    synchronizationAdapterLoader: SYNCHRONIZATION_ADAPTER_LOADER,\n    syncOutDataSerializer: SYNC_OUT_DATA_SERIALIZER\n});\nTWO_STAGE_SYNCED_IN_DATA_PROCESSOR.setDependencies({\n    repositoryTransactionHistoryDuo: REPOSITORY_TRANSACTION_HISTORY_DUO,\n    stage1SyncedInDataProcessor: STAGE1_SYNCED_IN_DATA_PROCESSOR,\n    stage2SyncedInDataProcessor: STAGE2_SYNCED_IN_DATA_PROCESSOR,\n    synchronizationConflictDao: SYNCHRONIZATION_CONFLICT_DAO,\n    synchronizationConflictValuesDao: SYNCHRONIZATION_CONFLICT_VALUES_DAO\n});\n//# sourceMappingURL=tokens.js.map","import { AIRPORT_DATABASE, APPLICATION_UTILS, FIELD_UTILS, QUERY_FACADE, QUERY_UTILS, Q_METADATA_UTILS, RELATION_MANAGER, REPOSITORY_LOADER } from '@airport/air-traffic-control';\nimport { APPLICATION_DAO, DOMAIN_DAO } from '@airport/airspace';\nimport { CLIENT_QUERY_MANAGER, QUERY_PARAMETER_DESERIALIZER, QUERY_RESULTS_SERIALIZER, SEQUENCE_GENERATOR } from '@airport/check-in';\nimport { lib } from '@airport/direction-indicator';\nimport { ACTIVE_QUERIES, ID_GENERATOR } from '@airport/fuel-hydrant-system';\nimport { ENTITY_STATE_MANAGER, OPERATION_CONTEXT_LOADER, TRANSACTIONAL_CONNECTOR } from '@airport/ground-control';\nimport { SYNCHRONIZATION_ADAPTER_LOADER, SYNCHRONIZATION_IN_MANAGER, SYNCHRONIZATION_OUT_MANAGER } from '@airport/ground-transport';\nimport { ACTOR_DAO, OPERATION_HISTORY_DUO, RECORD_HISTORY_DUO, REPOSITORY_DAO, REPOSITORY_TRANSACTION_HISTORY_DAO, REPOSITORY_TRANSACTION_HISTORY_DUO, TRANSACTION_HISTORY_DUO } from '@airport/holding-pattern-runtime';\nimport { APPLICATION_INITIALIZER, STORE_DRIVER, TERMINAL_STORE, TRANSACTIONAL_RECEIVER, TRANSACTIONAL_SERVER, TRANSACTION_MANAGER } from '@airport/terminal-map';\nimport { ClientQueryManager } from './ClientQueryManager';\nimport { RepositoryLoader } from './core/repository/RepositoryLoader';\nimport { RepositoryManager } from './core/repository/RepositoryManager';\nimport { InternalRecordManager } from './data/InternalRecordManager';\nimport { InternalTransactionalConnector } from './net/InternalTransactionalConnector';\nimport { OnlineManager } from './net/OnlineManager';\nimport { TransactionalReceiver } from './net/TransactionalReceiver';\nimport { TransactionalServer } from './net/TransactionalServer';\nimport { AbstractMutationManager } from './orchestration/AbstractMutationManager';\nimport { DatabaseManager } from './orchestration/DatabaseManager';\nimport { DeleteManager } from './orchestration/DeleteManager';\nimport { HistoryManager } from './orchestration/HistoryManager';\nimport { InsertManager } from './orchestration/InsertManager';\nimport { QueryManager } from './orchestration/QueryManager';\nimport { TransactionManager } from './orchestration/TransactionManager';\nimport { UpdateManager } from './orchestration/UpdateManager';\nimport { CascadeGraphVerifier } from './processing/CascadeGraphVerifier';\nimport { DependencyGraphResolver } from './processing/DependencyGraphResolver';\nimport { EntityGraphReconstructor } from './processing/EntityGraphReconstructor';\nimport { OperationContextLoader } from './processing/OperationContext';\nimport { OperationManager } from './processing/OperationManager';\nimport { StructuralEntityValidator } from './processing/StructuralEntityValidator';\nimport { QueryParameterDeserializer } from './serialize/QueryParameterDeserializer';\nimport { QueryResultsSerializer } from './serialize/QueryResultsSerializer';\nconst terminal = lib('terminal');\nCLIENT_QUERY_MANAGER.setClass(ClientQueryManager);\nREPOSITORY_LOADER.setClass(RepositoryLoader);\nTRANSACTIONAL_CONNECTOR.setClass(InternalTransactionalConnector);\nTRANSACTIONAL_CONNECTOR.setDependencies({\n    terminalStore: TERMINAL_STORE,\n    transactionalServer: TRANSACTIONAL_SERVER\n});\nTRANSACTIONAL_SERVER.setClass(TransactionalServer);\nTRANSACTION_MANAGER.setClass(TransactionManager);\nOPERATION_CONTEXT_LOADER.setClass(OperationContextLoader);\nQUERY_PARAMETER_DESERIALIZER.setClass(QueryParameterDeserializer);\nQUERY_RESULTS_SERIALIZER.setClass(QueryResultsSerializer);\nexport const ABSTRACT_MUTATION_MANAGER = terminal.token({\n    class: AbstractMutationManager,\n    interface: 'class AbstractMutationManager',\n    token: 'ABSTRACT_MUTATION_MANAGER'\n});\nexport const ABSTRACT_TRANSACTIONAL_RECIEVER = terminal.token({\n    class: TransactionalReceiver,\n    interface: 'class TransactionalReceiver',\n    token: 'ABSTRACT_TRANSACTIONAL_RECIEVER'\n});\nexport const CASCADE_GRAPH_VERIFIER = terminal.token({\n    class: CascadeGraphVerifier,\n    interface: 'ICascadeGraphVerifier',\n    token: 'CASCADE_GRAPH_VERIFIER'\n});\nexport const DATABASE_MANAGER = terminal.token({\n    class: DatabaseManager,\n    interface: 'IDatabaseManager',\n    token: 'DATABASE_MANAGER'\n});\nexport const DELETE_MANAGER = terminal.token({\n    class: DeleteManager,\n    interface: 'IDeleteManager',\n    token: 'DELETE_MANAGER'\n});\nexport const DEPENDENCY_GRAPH_RESOLVER = terminal.token({\n    class: DependencyGraphResolver,\n    interface: 'IDependencyGraphResolver',\n    token: 'DEPENDENCY_GRAPH_RESOLVER'\n});\nexport const ENTITY_GRAPH_RECONSTRUCTOR = terminal.token({\n    class: EntityGraphReconstructor,\n    interface: 'IEntityGraphReconstructor',\n    token: 'ENTITY_GRAPH_RECONSTRUCTOR'\n});\nexport const HISTORY_MANAGER = terminal.token({\n    class: HistoryManager,\n    interface: 'IHistoryManager',\n    token: 'HISTORY_MANAGER'\n});\nexport const INSERT_MANAGER = terminal.token({\n    class: InsertManager,\n    interface: 'IInsertManager',\n    token: 'INSERT_MANAGER'\n});\nexport const INTERNAL_RECORD_MANAGER = terminal.token({\n    class: InternalRecordManager,\n    interface: 'IInternalRecordManager',\n    token: 'INTERNAL_RECORD_MANAGER'\n});\nexport const ONLINE_MANAGER = terminal.token({\n    class: OnlineManager,\n    interface: 'IOnlineManager',\n    token: 'ONLINE_MANAGER'\n});\nexport const OPERATION_MANAGER = terminal.token({\n    class: OperationManager,\n    interface: 'IOperationManager',\n    token: 'OPERATION_MANAGER'\n});\nexport const QUERY_MANAGER = terminal.token({\n    class: QueryManager,\n    interface: 'IQueryManager',\n    token: 'QUERY_MANAGER'\n});\nexport const REPOSITORY_MANAGER = terminal.token({\n    class: RepositoryManager,\n    interface: 'IRepositoryManager',\n    token: 'REPOSITORY_MANAGER'\n});\nexport const STRUCTURAL_ENTITY_VALIDATOR = terminal.token({\n    class: StructuralEntityValidator,\n    interface: 'IStructuralEntityValidator',\n    token: 'STRUCTURAL_ENTITY_VALIDATOR'\n});\nexport const UPDATE_MANAGER = terminal.token({\n    class: UpdateManager,\n    interface: 'IUpdateManager',\n    token: 'UPDATE_MANAGER'\n});\nABSTRACT_MUTATION_MANAGER.setDependencies({\n    applicationUtils: APPLICATION_UTILS,\n    fieldUtils: FIELD_UTILS,\n    queryUtils: QUERY_UTILS,\n    relationManager: RELATION_MANAGER\n});\nABSTRACT_TRANSACTIONAL_RECIEVER.setDependencies({\n    terminalStore: TERMINAL_STORE,\n    transactionalServer: TRANSACTIONAL_SERVER\n});\nDATABASE_MANAGER.setDependencies({\n    applicationDao: APPLICATION_DAO,\n    applicationInitializer: APPLICATION_INITIALIZER,\n    internalRecordManager: INTERNAL_RECORD_MANAGER,\n    storeDriver: STORE_DRIVER,\n    transactionalServer: TRANSACTIONAL_SERVER\n});\nDELETE_MANAGER.setDependencies({\n    airportDatabase: AIRPORT_DATABASE,\n    applicationUtils: APPLICATION_UTILS,\n    historyManager: HISTORY_MANAGER,\n    operationHistoryDuo: OPERATION_HISTORY_DUO,\n    recordHistoryDuo: RECORD_HISTORY_DUO,\n    repositoryTransactionHistoryDuo: REPOSITORY_TRANSACTION_HISTORY_DUO,\n    sequenceGenerator: SEQUENCE_GENERATOR\n});\nDEPENDENCY_GRAPH_RESOLVER.setDependencies({\n    entityStateManager: ENTITY_STATE_MANAGER\n});\nENTITY_GRAPH_RECONSTRUCTOR.setDependencies({\n    entityStateManager: ENTITY_STATE_MANAGER\n});\nHISTORY_MANAGER.setDependencies({\n    transactionHistoryDuo: TRANSACTION_HISTORY_DUO,\n});\nINSERT_MANAGER.setDependencies({\n    airportDatabase: AIRPORT_DATABASE,\n    historyManager: HISTORY_MANAGER,\n    operationHistoryDuo: OPERATION_HISTORY_DUO,\n    recordHistoryDuo: RECORD_HISTORY_DUO,\n    repositoryTransactionHistoryDuo: REPOSITORY_TRANSACTION_HISTORY_DUO,\n});\nINTERNAL_RECORD_MANAGER.setDependencies({\n    actorDao: ACTOR_DAO,\n    applicationDao: APPLICATION_DAO,\n    domainDao: DOMAIN_DAO,\n    entityStateManager: ENTITY_STATE_MANAGER,\n    terminalStore: TERMINAL_STORE,\n    transactionManager: TRANSACTION_MANAGER\n});\nONLINE_MANAGER.setDependencies({\n    repositoryDao: REPOSITORY_DAO,\n    repositoryManager: REPOSITORY_MANAGER,\n    repositoryTransactionHistoryDao: REPOSITORY_TRANSACTION_HISTORY_DAO,\n    transactionManager: TRANSACTION_MANAGER\n});\nOPERATION_MANAGER.setDependencies({\n    airportDatabase: AIRPORT_DATABASE,\n    applicationUtils: APPLICATION_UTILS,\n    cascadeGraphVerifier: CASCADE_GRAPH_VERIFIER,\n    deleteManager: DELETE_MANAGER,\n    dependencyGraphResolver: DEPENDENCY_GRAPH_RESOLVER,\n    entityGraphReconstructor: ENTITY_GRAPH_RECONSTRUCTOR,\n    entityStateManager: ENTITY_STATE_MANAGER,\n    insertManager: INSERT_MANAGER,\n    qMetadataUtils: Q_METADATA_UTILS,\n    queryFacade: QUERY_FACADE,\n    structuralEntityValidator: STRUCTURAL_ENTITY_VALIDATOR,\n    updateManager: UPDATE_MANAGER\n});\nQUERY_MANAGER.setDependencies({\n    repositoryLoader: REPOSITORY_LOADER,\n    storeDriver: STORE_DRIVER\n});\nREPOSITORY_LOADER.setDependencies({\n    repositoryDao: REPOSITORY_DAO,\n    synchronizationAdapterLoader: SYNCHRONIZATION_ADAPTER_LOADER,\n    synchronizationInManager: SYNCHRONIZATION_IN_MANAGER\n});\nREPOSITORY_MANAGER.setDependencies({\n    repositoryDao: REPOSITORY_DAO,\n});\nSTRUCTURAL_ENTITY_VALIDATOR.setDependencies({\n    applicationUtils: APPLICATION_UTILS,\n    entityStateManager: ENTITY_STATE_MANAGER,\n    repositoryManager: REPOSITORY_MANAGER,\n});\nTRANSACTION_MANAGER.setDependencies({\n    activeQueries: ACTIVE_QUERIES,\n    idGenerator: ID_GENERATOR,\n    synchronizationOutManager: SYNCHRONIZATION_OUT_MANAGER,\n    transactionHistoryDuo: TRANSACTION_HISTORY_DUO,\n});\nTRANSACTIONAL_RECEIVER.setDependencies({\n    databaseManager: DATABASE_MANAGER,\n    internalRecordManager: INTERNAL_RECORD_MANAGER\n});\nTRANSACTIONAL_SERVER.setDependencies({\n    deleteManager: DELETE_MANAGER,\n    insertManager: INSERT_MANAGER,\n    operationContextLoader: OPERATION_CONTEXT_LOADER,\n    operationManager: OPERATION_MANAGER,\n    queryManager: QUERY_MANAGER,\n    repositoryManager: REPOSITORY_MANAGER,\n    updateManager: UPDATE_MANAGER\n});\nUPDATE_MANAGER.setDependencies({\n    airportDatabase: AIRPORT_DATABASE,\n    applicationUtils: APPLICATION_UTILS,\n    fieldUtils: FIELD_UTILS,\n    historyManager: HISTORY_MANAGER,\n    operationHistoryDuo: OPERATION_HISTORY_DUO,\n    queryFacade: QUERY_FACADE,\n    queryUtils: QUERY_UTILS,\n    recordHistoryDuo: RECORD_HISTORY_DUO,\n    relationManager: RELATION_MANAGER,\n    repositoryTransactionHistoryDuo: REPOSITORY_TRANSACTION_HISTORY_DUO,\n    sequenceGenerator: SEQUENCE_GENERATOR,\n});\n//# sourceMappingURL=tokens.js.map","import { DEPENDENCY_INJECTION } from '@airport/direction-indicator';\nexport * from './core/repository/RepositoryLoader';\nexport * from './core/repository/RepositoryManager';\nexport * from './data/InternalRecordManager';\nexport * from './net/InternalTransactionalConnector';\nexport * from './net/OnlineManager';\nexport * from './net/TransactionalReceiver';\nexport * from './net/TransactionalServer';\nexport * from './orchestration/AbstractMutationManager';\nexport * from './orchestration/DatabaseManager';\nexport * from './orchestration/DeleteManager';\nexport * from './orchestration/HistoryManager';\nexport * from './orchestration/InsertManager';\nexport * from './orchestration/QueryManager';\nexport * from './orchestration/TransactionManager';\nexport * from './orchestration/UpdateManager';\nexport * from './processing/CascadeGraphVerifier';\nexport * from './processing/DependencyGraphResolver';\nexport * from './processing/EntityGraphReconstructor';\nexport * from './processing/OperationContext';\nexport * from './processing/OperationManager';\nexport * from './processing/StructuralEntityValidator';\nexport * from './serialize/QueryParameterDeserializer';\nexport * from './serialize/QueryResultsSerializer';\nexport * from './shared/logic/DatabaseLogic';\nexport * from './shared/DateUtils';\nexport * from './shared/PlatformUtils';\nexport * from './ClientQueryManager';\n// export * from './Constants'\nexport * from './tokens';\nDEPENDENCY_INJECTION.isFramework = true;\n//# sourceMappingURL=index.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { container } from \"@airport/direction-indicator\";\nimport { Injected } from '@airport/direction-indicator';\nlet ApiRegistry = class ApiRegistry {\n    initialize(\n    // installedApi: InstalledApi\n    applicationApi) {\n        // this.installedApi = installedApi\n        this.applicationApi = applicationApi;\n    }\n    async findApiObjectAndOperation(domainName, applicationName, apiObjectName, methodName) {\n        const apiObjectDefinition = this.applicationApi.apiObjectMap[apiObjectName];\n        if (!apiObjectDefinition) {\n            throw new Error(`Could not find API object for\r\n        Domain:\r\n            ${domainName}\r\n        Application:\r\n            ${applicationName}\r\n        Token:\r\n            ${apiObjectName}`);\n        }\n        const apiOperation = apiObjectDefinition.operationMap[methodName];\n        if (!apiOperation) {\n            throw new Error(`Could not find API object method for \r\n        Domain:\r\n            ${domainName}\r\n        Application:\r\n            ${applicationName}\r\n        Token:\r\n            ${apiObjectName}\r\n        Method name:\r\n            ${methodName}`);\n        }\n        const apiObject = await container(this)\n            .getByNames(domainName, applicationName, apiObjectName);\n        return {\n            apiObject,\n            apiOperation\n        };\n    }\n};\nApiRegistry = __decorate([\n    Injected()\n], ApiRegistry);\nexport { ApiRegistry };\n//# sourceMappingURL=ApiRegistry.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nlet ApiValidator = class ApiValidator {\n    validate(operation, parameters) {\n        // FIXME: implement (eventually)\n    }\n};\nApiValidator = __decorate([\n    Injected()\n], ApiValidator);\nexport { ApiValidator };\n//# sourceMappingURL=ApiValidator.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet LocalAPIServer = class LocalAPIServer {\n    async handleRequest(request) {\n        let payload;\n        let errorMessage;\n        try {\n            const { apiObject, apiOperation } = await this.apiRegistry.findApiObjectAndOperation(request.domain, request.application, request.objectName, request.methodName);\n            const result = apiObject[request.methodName].apply(apiObject, request.args);\n            if (apiOperation.isAsync) {\n                payload = await result;\n            }\n            else {\n                payload = result;\n            }\n        }\n        catch (e) {\n            errorMessage = e.message;\n            console.error(e);\n        }\n        const response = {\n            application: request.application,\n            category: 'ToClient',\n            domain: request.domain,\n            errorMessage,\n            id: request.id,\n            methodName: request.methodName,\n            objectName: request.objectName,\n            protocol: request.protocol,\n            payload,\n        };\n        return response;\n    }\n};\n__decorate([\n    Inject()\n], LocalAPIServer.prototype, \"apiRegistry\", void 0);\nLocalAPIServer = __decorate([\n    Injected()\n], LocalAPIServer);\nexport { LocalAPIServer };\n//# sourceMappingURL=LocalApiServer.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { EntityRelationType, EntityState, SQLDataType } from \"@airport/ground-control\";\n// TODO: figure out if this is needed - originally written for deserializing\n// Client-side operation entities.  Since then moved to Isolates and generic\n// API calls.  Probably should be used in go-tower to deserialize all of the\n// method argiments passed it (and won't be tied to a query of any kind, API\n// interface is generic, unless already known to contain entity objects.)\nlet OperationDeserializer = class OperationDeserializer {\n    deserialize(entity, dbEntity, entityStateManager, applicationUtils) {\n        const operation = {\n            lookupTable: [],\n        };\n        let deserializedEntity;\n        if (entity instanceof Array) {\n            deserializedEntity = entity.map(anEntity => this.doDeserialize(anEntity, dbEntity, operation, entityStateManager, applicationUtils));\n        }\n        else {\n            deserializedEntity = this.doDeserialize(entity, dbEntity, operation, entityStateManager, applicationUtils);\n        }\n        return deserializedEntity;\n    }\n    doDeserialize(entity, dbEntity, operation, entityStateManager, applicationUtils) {\n        let state = entityStateManager.getEntityState(entity);\n        let operationUniqueId = entityStateManager.getOperationUniqueId(entity);\n        if (!operationUniqueId || typeof operationUniqueId !== 'number'\n            || operationUniqueId < 1 || operationUniqueId % 1 === 0) {\n            throw new Error(`Invalid or missing ${entityStateManager.getUniqueIdFieldName()} field.`);\n        }\n        let alreadyDeserializedEntity = operation.lookupTable[operationUniqueId];\n        switch (state) {\n            case EntityState.STUB: {\n                let alreadyDeserializedEntity = operation.lookupTable[operationUniqueId];\n                if (!alreadyDeserializedEntity) {\n                    throw new Error(`Could not find an already present entity for\r\n\t\t\t\t\t${entityStateManager.getUniqueIdFieldName()} of ${operationUniqueId}`);\n                }\n                return alreadyDeserializedEntity;\n            }\n            default:\n                if (alreadyDeserializedEntity) {\n                    throw new Error(`Entity appears more than once for\r\n\t\t\t\t\t${entityStateManager.getUniqueIdFieldName()} of ${operationUniqueId}`);\n                }\n        }\n        let deserializedEntity = {};\n        operation.lookupTable[operationUniqueId] = deserializedEntity;\n        deserializedEntity[entityStateManager.getStateFieldName()] = state;\n        for (const dbProperty of dbEntity.properties) {\n            let value = entity[dbProperty.name];\n            if (applicationUtils.isEmpty(value)) {\n                continue;\n            }\n            let propertyCopy;\n            if (dbProperty.relation) {\n                const dbRelation = dbProperty.relation[0];\n                switch (dbRelation.relationType) {\n                    case EntityRelationType.ONE_TO_MANY:\n                        if (!(value instanceof Array)) {\n                            throw new Error(`Expecting @OneToMany for an array entity relation`);\n                        }\n                        propertyCopy = value.map(aProperty => this.doDeserialize(aProperty, dbRelation.entity, operation, entityStateManager, applicationUtils));\n                        break;\n                    case EntityRelationType.MANY_TO_ONE:\n                        if (!(value instanceof Object) || value instanceof Array) {\n                            throw new Error(`Expecting @ManyToOne for a non-array entity relation`);\n                        }\n                        propertyCopy = this.doDeserialize(value, dbRelation.entity, operation, entityStateManager, applicationUtils);\n                        break;\n                    default:\n                        throw new Error(`Unknown relation type: ${dbRelation.relationType}`);\n                }\n            }\n            else {\n                const dbColumn = dbProperty.propertyColumns[0].column;\n                switch (dbColumn.type) {\n                    case SQLDataType.JSON:\n                        // propertyCopy = this.cleanJsonObject(value, dbProperty, entityStateManager)\n                        throw new Error('Json properties cannot be deserialized');\n                        break;\n                    case SQLDataType.DATE:\n                        if (!(value instanceof Object)\n                            || value[entityStateManager.getStateFieldName()] !== EntityState.DATE\n                            || !value.value) {\n                            throw new Error(`Invalid Serialized Date format for ${dbEntity.name}.${dbProperty.name}`);\n                        }\n                        try {\n                            propertyCopy = new Date(value);\n                        }\n                        catch (e) {\n                            throw new Error(`Invalid Serialized Date format for ${dbEntity.name}.${dbProperty.name}`);\n                        }\n                        break;\n                    case SQLDataType.ANY:\n                    case SQLDataType.BOOLEAN:\n                    case SQLDataType.NUMBER:\n                    case SQLDataType.STRING:\n                        propertyCopy = value;\n                        break;\n                    default:\n                        throw new Error(`Unexpected data type for ${dbEntity.name}.${dbProperty.name}`);\n                }\n            }\n            deserializedEntity[dbProperty.name] = propertyCopy;\n        }\n        return deserializedEntity;\n    }\n    cleanJsonObject(value, dbProperty, entityStateManager) {\n        let valueCopy;\n        if (value instanceof Object) {\n            if (value instanceof Array) {\n                valueCopy = value.map(aValue => this.cleanJsonObject(aValue, dbProperty, entityStateManager));\n            }\n            else {\n                valueCopy = {};\n                if (value[entityStateManager.getStateFieldName()] === EntityState.STUB) {\n                    throw new Error(`Interlinked object graphs are not supported in @Json() columns \r\n                    ${dbProperty.entity.name}.${dbProperty.name}`);\n                }\n                delete value[entityStateManager.getStateFieldName()];\n                delete value[entityStateManager.getUniqueIdFieldName()];\n                for (const propertyName in value) {\n                    const property = value[propertyName];\n                    valueCopy[propertyName] = this.\n                        cleanJsonObject(property, dbProperty, entityStateManager);\n                }\n            }\n        }\n        else {\n            valueCopy = value;\n        }\n        return valueCopy;\n    }\n};\nOperationDeserializer = __decorate([\n    Injected()\n], OperationDeserializer);\nexport { OperationDeserializer };\n//# sourceMappingURL=OperationDeserializer.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nlet EntityCopier = class EntityCopier {\n    copyEntityForProcessing(entity, dbEntity, entityStateManager, context) {\n        const operation = {\n            processedEntityMap: new Map(),\n            sequence: context.lastOUID ? context.lastOUID : 0,\n        };\n        const copy = this.doCopyEntityForProcessing(entity, dbEntity, entityStateManager, operation);\n        context.lastOUID = operation.sequence;\n        return copy;\n    }\n    doCopyEntityForProcessing(entity, dbEntity, entityStateManager, operation) {\n        if (entity instanceof Array) {\n            return entity.map(anEntity => this.doCopyEntityForProcessing(anEntity, dbEntity, entityStateManager, operation));\n        }\n        else {\n            let entityCopy = {};\n            if (operation.processedEntityMap.has(entity)) {\n                return operation.processedEntityMap.get(entity);\n            }\n            operation.processedEntityMap.set(entity, entityCopy);\n            const operationUniqueId = ++operation.sequence;\n            entityCopy[entityStateManager.getUniqueIdFieldName()] = operationUniqueId;\n            entity[entityStateManager.getUniqueIdFieldName()] = operationUniqueId;\n            entityStateManager.setOriginalValues(entityStateManager.getOriginalValues(entity), entityCopy);\n            for (let dbProperty of dbEntity.properties) {\n                const property = entity[dbProperty.name];\n                if (dbProperty.relation && dbProperty.relation.length && property) {\n                    entityCopy[dbProperty.name] = this.doCopyEntityForProcessing(property, dbProperty.relation[0].relationEntity, entityStateManager, operation);\n                }\n                else {\n                    // No need to clone dates or JSON objects - they\n                    // won't be modified by the save process\n                    entityCopy[dbProperty.name] = property;\n                }\n            }\n            entityCopy[entityStateManager.getStateFieldName()]\n                = entity[entityStateManager.getStateFieldName()];\n            return entityCopy;\n        }\n    }\n};\nEntityCopier = __decorate([\n    Injected()\n], EntityCopier);\nexport { EntityCopier };\n//# sourceMappingURL=EntityCopier.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { EntityRelationType, EntityState, SQLDataType } from \"@airport/ground-control\";\nlet UpdateCacheManager = class UpdateCacheManager {\n    saveOriginalValues(entity, dbEntity) {\n        if (entity instanceof Array) {\n            for (let i = 0; i < entity.length; i++) {\n                this.saveOriginalValues(entity[i], dbEntity);\n            }\n            return;\n        }\n        if (!entity) {\n            return;\n        }\n        const originalValuesObject = {};\n        this.entityStateManager.setOriginalValues(originalValuesObject, entity);\n        for (let dbProperty of dbEntity.properties) {\n            const property = entity[dbProperty.name];\n            if (dbProperty.relation && dbProperty.relation.length) {\n                if (!property) {\n                    continue;\n                }\n                if (dbProperty.relation[0].relationType === EntityRelationType.MANY_TO_ONE) {\n                    // Save the nested child object Ids in the original values of this object\n                    // in case the object behind this relation is changed\n                    this.applicationUtils.forEachColumnTypeOfRelation(dbProperty.relation[0], (_dbColumn, propertyNameChains) => {\n                        for (let propertyNameChain of propertyNameChains) {\n                            let nestedProperty = entity;\n                            let currentPropertyOriginalValue = originalValuesObject;\n                            for (let i = 0; i < propertyNameChain.length; i++) {\n                                const propertyName = propertyNameChain[i];\n                                if (nestedProperty instanceof Object) {\n                                    nestedProperty = nestedProperty[propertyName];\n                                    let originalValue;\n                                    // Nested object continues\n                                    if (i === propertyNameChain.length - 1) {\n                                        originalValue = nestedProperty;\n                                    }\n                                    else {\n                                        originalValue = {};\n                                    }\n                                    currentPropertyOriginalValue[propertyName] = originalValue;\n                                    currentPropertyOriginalValue = currentPropertyOriginalValue[propertyName];\n                                }\n                                else {\n                                    // This is the actual value\n                                    currentPropertyOriginalValue[propertyName] = nestedProperty;\n                                }\n                            }\n                        }\n                    });\n                }\n                this.saveOriginalValues(property, dbProperty.relation[0].relationEntity);\n            }\n            else {\n                originalValuesObject[dbProperty.name] = entity[dbProperty.name];\n            }\n        }\n    }\n    setOperationState(entityCopy, dbEntity, processedEntities) {\n        if (entityCopy instanceof Array) {\n            for (var i = 0; i < entityCopy.length; i++) {\n                this.setOperationState(entityCopy[i], dbEntity, processedEntities);\n            }\n            return;\n        }\n        if (processedEntities.has(entityCopy)) {\n            return;\n        }\n        processedEntities.add(entityCopy);\n        const originalValuesObject = this.entityStateManager\n            .getOriginalValues(entityCopy);\n        let entityState = entityCopy[this.entityStateManager.getStateFieldName()];\n        let hasId = true;\n        let hasGeneratedIds = false;\n        for (const dbProperty of dbEntity.properties) {\n            if (!dbProperty.isId) {\n                continue;\n            }\n            for (const propertyColumn of dbProperty.propertyColumns) {\n                if (propertyColumn.column.isGenerated) {\n                    hasGeneratedIds = true;\n                }\n            }\n            if (dbProperty.relation && dbProperty.relation.length) {\n                this.applicationUtils.forEachColumnTypeOfRelation(dbProperty.relation[0], (_dbColumn, propertyNameChains) => {\n                    for (let propertyNameChain of propertyNameChains) {\n                        let nestedProperty = entityCopy;\n                        for (let i = 0; i < propertyNameChain.length; i++) {\n                            const propertyName = propertyNameChain[i];\n                            if (nestedProperty) {\n                                nestedProperty = nestedProperty[propertyName];\n                            }\n                        }\n                        if (!nestedProperty) {\n                            if (entityState === EntityState.DELETE) {\n                                throw new Error(`Entity is marked for deletion but does not have an @Id() property:\r\n            ${propertyNameChain.join('.')}\r\n                                    `);\n                            }\n                            else {\n                                entityState = EntityState.CREATE;\n                                hasId = false;\n                                return true;\n                            }\n                        }\n                    }\n                });\n            }\n            else if (!entityCopy[dbProperty.name] && entityCopy[dbProperty.name] !== 0) {\n                hasId = false;\n            }\n        }\n        if (originalValuesObject) {\n            for (const dbProperty of dbEntity.properties) {\n                const property = entityCopy[dbProperty.name];\n                if (dbProperty.relation && dbProperty.relation.length) {\n                    if (!property) {\n                        continue;\n                    }\n                    const dbRelation = dbProperty.relation[0];\n                    const propertyOriginalValuesObject = this.entityStateManager\n                        .getOriginalValues(property);\n                    this.applicationUtils.forEachColumnTypeOfRelation(dbRelation, (_dbColumn, propertyNameChains) => {\n                        const propertyOriginalValuesObject = this.entityStateManager\n                            .getOriginalValues(property);\n                        // const firstPropertyNameChain = propertyNameChains[0];\n                        for (const propertyNameChain of propertyNameChains) {\n                            let value = entityCopy;\n                            let originalValue = propertyOriginalValuesObject;\n                            for (let i = 0; i < propertyNameChain.length; i++) {\n                                const propertyName = propertyNameChain[i];\n                                value = value[propertyName];\n                                // Skip the property itself since the original values object\n                                // belongs to the property and not the checked object\n                                // (in the case of relations only)\n                                if (i !== 0) {\n                                    originalValue = originalValue[propertyName];\n                                }\n                                let noValue = value === null || value === undefined;\n                                let noOriginalValue = originalValue === null\n                                    || originalValue === undefined;\n                                if (noValue) {\n                                    if (originalValue) {\n                                        entityState = EntityState.UPDATE;\n                                        return true;\n                                    }\n                                    break;\n                                }\n                                if (noOriginalValue) {\n                                    if (value) {\n                                        entityState = EntityState.UPDATE;\n                                        return true;\n                                    }\n                                    break;\n                                }\n                                // If it's a nested object\n                                if (typeof value === 'object') {\n                                    // If original isn't a nested object\n                                    if (typeof originalValue !== 'object') {\n                                        entityState = EntityState.UPDATE;\n                                        return true;\n                                    }\n                                    // Values should not be dates or json objects, only\n                                    // nested object references to eventual Ids\n                                }\n                                else if (typeof originalValue === 'object') {\n                                    // value is not a nested object but originalValue is\n                                    entityState = EntityState.UPDATE;\n                                    return true;\n                                }\n                                else {\n                                    // Both values are primitives (nested ids)\n                                    if (value !== originalValue) {\n                                        entityState = EntityState.UPDATE;\n                                        return true;\n                                    }\n                                }\n                            }\n                        }\n                    });\n                }\n                else {\n                    if (entityState) {\n                        continue;\n                    }\n                    let originalValue = originalValuesObject[dbProperty.name];\n                    let propertyValue;\n                    switch (dbProperty.propertyColumns[0].column.type) {\n                        case SQLDataType.DATE:\n                            if (originalValue) {\n                                originalValue = originalValue.getTime();\n                            }\n                            if (property) {\n                                propertyValue = property.getTime();\n                            }\n                            break;\n                        case SQLDataType.JSON:\n                            if (originalValue) {\n                                originalValue = JSON.stringify(originalValue);\n                            }\n                            if (property) {\n                                propertyValue = JSON.stringify(property);\n                            }\n                            break;\n                        default:\n                            propertyValue = property;\n                            break;\n                    }\n                    if (propertyValue !== originalValue) {\n                        entityState = EntityState.UPDATE;\n                    }\n                }\n            }\n        }\n        for (const dbProperty of dbEntity.properties) {\n            const property = entityCopy[dbProperty.name];\n            if (property && dbProperty.relation && dbProperty.relation.length) {\n                this.setOperationState(property, dbProperty.relation[0].relationEntity, processedEntities);\n            }\n        }\n        if (!entityState) {\n            if ((hasId && hasGeneratedIds) || originalValuesObject) {\n                entityState = EntityState.PASS_THROUGH;\n            }\n            else {\n                entityState = EntityState.CREATE;\n            }\n        }\n        entityCopy[this.entityStateManager.getStateFieldName()] = entityState;\n    }\n    afterSaveModifications(entity, dbEntity, saveResult, processedEntities) {\n        this.updateOriginalValuesAfterSave(entity, dbEntity, saveResult, new Set());\n        this.removeDeletedEntities(entity, dbEntity, saveResult, processedEntities);\n    }\n    updateOriginalValuesAfterSave(entity, dbEntity, saveResult, processedEntities) {\n        if (entity instanceof Array) {\n            for (let i = 0; i < entity.length; i++) {\n                this.updateOriginalValuesAfterSave(entity[i], dbEntity, saveResult, processedEntities);\n            }\n        }\n        else {\n            if (processedEntities.has(entity)) {\n                return;\n            }\n            processedEntities.add(entity);\n            let operationUniqueId = this.entityStateManager.getOperationUniqueId(entity, false, dbEntity);\n            let originalValuesObject = {};\n            if (operationUniqueId) {\n                originalValuesObject = this.doUpdateOriginalValuesAfterSave(entity, dbEntity, saveResult, processedEntities, operationUniqueId);\n            }\n            this.entityStateManager.setOriginalValues(originalValuesObject, entity);\n        }\n    }\n    doUpdateOriginalValuesAfterSave(entity, dbEntity, saveResult, processedEntities, operationUniqueId) {\n        let createdRecord = saveResult.created[operationUniqueId];\n        if (createdRecord) {\n            if (createdRecord !== true) {\n                for (const generatedPropertyName in createdRecord) {\n                    entity[generatedPropertyName] = createdRecord[generatedPropertyName];\n                }\n                if (dbEntity.isRepositoryEntity) {\n                    let repositoryEntity = entity;\n                    if (!repositoryEntity.repository || !repositoryEntity.repository.id) {\n                        repositoryEntity.repository = saveResult.newRepository;\n                    }\n                    repositoryEntity.actor = saveResult.actor;\n                }\n            }\n        }\n        else if (saveResult.deleted[operationUniqueId]) {\n            this.entityStateManager.setIsDeleted(true, entity);\n            this.entityStateManager.setOriginalValues(null, entity);\n            return;\n        }\n        let originalValuesObject = {};\n        for (const dbProperty of dbEntity.properties) {\n            const property = entity[dbProperty.name];\n            if (property && dbProperty.relation && dbProperty.relation.length) {\n                if (dbProperty.relation[0].relationType === EntityRelationType.MANY_TO_ONE) {\n                    // Save the nested child object Ids in the original values of this object\n                    // in case the object behind this relation is changed\n                    this.applicationUtils.forEachColumnTypeOfRelation(dbProperty.relation[0], (_dbColumn, propertyNameChains) => {\n                        for (let propertyNameChain of propertyNameChains) {\n                            let nestedProperty = entity;\n                            let currentPropertyOriginalValue = originalValuesObject;\n                            for (let i = 0; i < propertyNameChain.length; i++) {\n                                const propertyName = propertyNameChain[i];\n                                if (nestedProperty instanceof Object) {\n                                    nestedProperty = nestedProperty[propertyName];\n                                    let originalValue;\n                                    // Nested object continues\n                                    if (i === propertyNameChain.length - 1) {\n                                        originalValue = nestedProperty;\n                                    }\n                                    else {\n                                        originalValue = {};\n                                    }\n                                    currentPropertyOriginalValue[propertyName] = originalValue;\n                                    currentPropertyOriginalValue = currentPropertyOriginalValue[propertyName];\n                                }\n                                else {\n                                    // This is the actual value\n                                    currentPropertyOriginalValue[propertyName] = nestedProperty;\n                                }\n                            }\n                        }\n                    });\n                }\n                this.updateOriginalValuesAfterSave(property, dbProperty.relation[0].relationEntity, saveResult, processedEntities);\n            }\n            else {\n                originalValuesObject[dbProperty.name] = property;\n            }\n        }\n        return originalValuesObject;\n    }\n    removeDeletedEntities(entity, dbEntity, saveResult, processedEntities) {\n        if (entity instanceof Array) {\n            for (let i = entity.length - 1; i >= 0; i--) {\n                if (this.removeDeletedEntities(entity[i], dbEntity, saveResult, processedEntities)) {\n                    entity.splice(i, 1);\n                }\n            }\n            return !entity.length;\n        }\n        else {\n            if (processedEntities.has(entity)) {\n                return this.entityStateManager.isDeleted(entity);\n            }\n            processedEntities.add(entity);\n            for (const dbRelation of dbEntity.relations) {\n                const dbRelationProperty = dbRelation.property;\n                const property = entity[dbRelationProperty.name];\n                if (!property) {\n                    continue;\n                }\n                switch (dbRelation.relationType) {\n                    case EntityRelationType.MANY_TO_ONE:\n                        if (this.removeDeletedEntities(property, dbRelation.relationEntity, saveResult, processedEntities)) {\n                            entity[dbRelationProperty.name] = null;\n                        }\n                        break;\n                    case EntityRelationType.ONE_TO_MANY:\n                        this.removeDeletedEntities(property, dbRelation.relationEntity, saveResult, processedEntities);\n                        break;\n                }\n            }\n            return this.entityStateManager.isDeleted(entity);\n        }\n    }\n};\n__decorate([\n    Inject()\n], UpdateCacheManager.prototype, \"entityStateManager\", void 0);\n__decorate([\n    Inject()\n], UpdateCacheManager.prototype, \"applicationUtils\", void 0);\nUpdateCacheManager = __decorate([\n    Injected()\n], UpdateCacheManager);\nexport { UpdateCacheManager };\n//# sourceMappingURL=UpdateCacheManager.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar EntityStateManager_1;\nimport { Injected } from '@airport/direction-indicator';\nimport { EntityState } from '@airport/ground-control';\nlet EntityStateManager = EntityStateManager_1 = class EntityStateManager {\n    isStub(entity) {\n        return this.getEntityState(entity) === EntityState.STUB;\n    }\n    isParentId(entity) {\n        return this.getEntityState(entity) === EntityState.PARENT_ID;\n    }\n    markForDeletion(entity) {\n        entity[EntityStateManager_1.STATE_FIELD] = EntityState.DELETE;\n    }\n    markToCreate(entity) {\n        entity[EntityStateManager_1.STATE_FIELD] = EntityState.CREATE;\n    }\n    markToUpdate(entity) {\n        entity[EntityStateManager_1.STATE_FIELD] = EntityState.UPDATE;\n    }\n    getEntityState(entity) {\n        return entity[EntityStateManager_1.STATE_FIELD];\n    }\n    getOriginalValues(entity) {\n        return entity[EntityStateManager_1.ORIGINAL_VALUES_PROPERTY];\n    }\n    setOriginalValues(originalValues, entity) {\n        entity[EntityStateManager_1.ORIGINAL_VALUES_PROPERTY] = originalValues;\n    }\n    copyEntityState(fromEntity, toEntity) {\n        toEntity[EntityStateManager_1.STATE_FIELD]\n            = fromEntity[EntityStateManager_1.STATE_FIELD];\n        toEntity[EntityStateManager_1.ORIGINAL_VALUES_PROPERTY]\n            = fromEntity[EntityStateManager_1.ORIGINAL_VALUES_PROPERTY];\n    }\n    getStateFieldName() {\n        return EntityStateManager_1.STATE_FIELD;\n    }\n    getEntityStateTypeAsFlags(entity, dbEntity) {\n        let isCreate, isDelete, isParentId, isPassThrough, isResult, isResultDate, isResultJson, isStub, isUpdate;\n        const entityState = this.getEntityState(entity);\n        switch (entityState) {\n            case EntityState.CREATE:\n                isCreate = true;\n                break;\n            case EntityState.DELETE:\n                isDelete = true;\n                break;\n            case EntityState.PARENT_ID:\n                isParentId = true;\n                break;\n            case EntityState.PASS_THROUGH:\n                isPassThrough = true;\n                break;\n            // case EntityState.RESULT:\n            // \tisResult = true\n            // \tbreak\n            case EntityState.DATE:\n                isResultDate = true;\n                break;\n            // case EntityState.RESULT_JSON:\n            // \tisResultJson = true\n            // \tbreak\n            case EntityState.STUB:\n                isStub = true;\n                break;\n            case EntityState.UPDATE:\n                isUpdate = true;\n                break;\n            default:\n                throw new Error(`Unexpected entity state\r\n\"${this.getStateFieldName()}\" for ${dbEntity.name}: ${entityState}`);\n        }\n        return {\n            isCreate,\n            isDelete,\n            isParentId,\n            isPassThrough,\n            // isResult,\n            isResultDate,\n            isStub,\n            isUpdate,\n        };\n    }\n    setIsDeleted(isDeleted, entity) {\n        entity[EntityStateManager_1.STATE_FIELD] = EntityState.DELETE;\n    }\n    isDeleted(entity) {\n        return entity[EntityStateManager_1.STATE_FIELD] === EntityState.DELETE;\n    }\n    getOperationUniqueId(entity, throwIfNotFound = true, dbEntity = null) {\n        const operationUniqueId = entity[EntityStateManager_1.OPERATION_UNIQUE_ID_FIELD];\n        if (!operationUniqueId || typeof operationUniqueId !== 'number' || operationUniqueId < 1) {\n            if (throwIfNotFound) {\n                let entityDescription;\n                if (dbEntity) {\n                    entityDescription = dbEntity.applicationVersion.application.name + '.' + dbEntity.name;\n                }\n                else {\n                    entityDescription = JSON.stringify(entity);\n                }\n                throw new Error(`Could not find \"${EntityStateManager_1.OPERATION_UNIQUE_ID_FIELD}\" property on DTO:\r\n        \r\n        ${entityDescription}`);\n            }\n        }\n        return operationUniqueId;\n    }\n    copyOperationUniqueId(entity, entityCopy) {\n        const operationUniqueId = entity[EntityStateManager_1.OPERATION_UNIQUE_ID_FIELD];\n        entityCopy[EntityStateManager_1.OPERATION_UNIQUE_ID_FIELD] = operationUniqueId;\n    }\n    markAsStub(entity) {\n        entity[EntityStateManager_1.STATE_FIELD] = EntityState.STUB;\n    }\n    getUniqueIdFieldName() {\n        return EntityStateManager_1.OPERATION_UNIQUE_ID_FIELD;\n    }\n};\nEntityStateManager.DELETED_PROPERTY = '__deleted__';\nEntityStateManager.ORIGINAL_VALUES_PROPERTY = '__originalValues__';\nEntityStateManager.STATE_FIELD = '__state__';\nEntityStateManager.OPERATION_UNIQUE_ID_FIELD = '__OUID__';\nEntityStateManager = EntityStateManager_1 = __decorate([\n    Injected()\n], EntityStateManager);\nexport { EntityStateManager };\nexport function injectEntityStateManager() {\n    console.log('inject EntityStateManager');\n}\n//# sourceMappingURL=EntityStateManager.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Delete, InsertColumnValues, InsertValues, UpdateColumns, UpdateProperties, } from '@airport/air-traffic-control';\nimport { Inject, Injected } from '@airport/direction-indicator';\n/**\n * Created by Papa on 5/23/2016.\n */\nlet DatabaseFacade = class DatabaseFacade {\n    async addRepository(\n    // url: string = null,\n    // platform: PlatformType = PlatformType.GOOGLE_DOCS,\n    // platformConfig: string = null,\n    // distributionStrategy: DistributionStrategy = DistributionStrategy.S3_DISTIBUTED_PUSH,\n    context) {\n        // TODO: figure out how addRepository will work\n        return await this.transactionalConnector.addRepository(\n        // url, platform, platformConfig, distributionStrategy, \n        context);\n    }\n    async insertColumnValues(rawInsertColumnValues, context) {\n        if (!rawInsertColumnValues) {\n            return 0;\n        }\n        if (rawInsertColumnValues instanceof Function) {\n            rawInsertColumnValues = rawInsertColumnValues();\n        }\n        const insertColumnValues = new InsertColumnValues(rawInsertColumnValues);\n        const queryContext = await this.ensureQueryContext(context);\n        const portableQuery = this.queryFacade.getPortableQuery(insertColumnValues, null, queryContext);\n        return await this.transactionalConnector.insertValues(portableQuery, context);\n    }\n    async insertValues(rawInsertValues, context) {\n        if (!rawInsertValues) {\n            return 0;\n        }\n        if (rawInsertValues instanceof Function) {\n            rawInsertValues = rawInsertValues();\n        }\n        const insertValues = new InsertValues(rawInsertValues);\n        const queryContext = await this.ensureQueryContext(context);\n        const portableQuery = this.queryFacade.getPortableQuery(insertValues, null, queryContext);\n        return await this.transactionalConnector.insertValues(portableQuery, context);\n    }\n    async insertColumnValuesGenerateIds(rawInsertColumnValues, context) {\n        if (!rawInsertColumnValues) {\n            return [];\n        }\n        if (rawInsertColumnValues instanceof Function) {\n            rawInsertColumnValues = rawInsertColumnValues();\n        }\n        const insertValues = new InsertColumnValues(rawInsertColumnValues);\n        const queryContext = await this.ensureQueryContext(context);\n        const portableQuery = this.queryFacade.getPortableQuery(insertValues, null, queryContext);\n        return await this.transactionalConnector.insertValuesGetIds(portableQuery, context);\n    }\n    async insertValuesGenerateIds(rawInsertValues, context) {\n        if (!rawInsertValues) {\n            return [];\n        }\n        if (rawInsertValues instanceof Function) {\n            rawInsertValues = rawInsertValues();\n        }\n        const insertValues = new InsertValues(rawInsertValues);\n        const queryContext = await this.ensureQueryContext(context);\n        const portableQuery = this.queryFacade.getPortableQuery(insertValues, null, queryContext);\n        return await this.transactionalConnector.insertValuesGetIds(portableQuery, context);\n    }\n    async deleteWhere(rawDelete, context) {\n        if (!rawDelete) {\n            return 0;\n        }\n        if (rawDelete instanceof Function) {\n            rawDelete = rawDelete();\n        }\n        let deleteWhere = new Delete(rawDelete);\n        const queryContext = await this.ensureQueryContext(context);\n        let portableQuery = this.queryFacade.getPortableQuery(deleteWhere, null, queryContext);\n        return await this.transactionalConnector.deleteWhere(portableQuery, context);\n    }\n    async save(entity, context) {\n        if (!entity) {\n            return null;\n        }\n        const entityCopy = await this.preSaveOperations(entity, context);\n        const saveResult = await this.transactionalConnector.save(entityCopy, context);\n        this.updateCacheManager.afterSaveModifications(entity, context.dbEntity, saveResult, new Set());\n        return saveResult;\n    }\n    async saveToDestination(repositoryDestination, entity, context) {\n        if (!entity) {\n            return null;\n        }\n        const entityCopy = await this.preSaveOperations(entity, context);\n        const saveResult = await this.transactionalConnector\n            .saveToDestination(repositoryDestination, entityCopy, context);\n        this.updateCacheManager.afterSaveModifications(entity, context.dbEntity, saveResult, new Set());\n        return saveResult;\n    }\n    async preSaveOperations(entity, context) {\n        if (!entity) {\n            return null;\n        }\n        const dbEntity = context.dbEntity;\n        const entityCopy = this.entityCopier\n            .copyEntityForProcessing(entity, dbEntity, this.entityStateManager, context);\n        this.updateCacheManager.setOperationState(entityCopy, dbEntity, new Set());\n        return entityCopy;\n    }\n    /**\n     * Updates an entity with a where clause, using a column based set clause\n     * - internal API.  Use the API provided by the IEntityDatabaseFacade.\n     *\n     * @return Number of records updated\n     */\n    async updateColumnsWhere(rawUpdate, context) {\n        if (!rawUpdate) {\n            return 0;\n        }\n        if (rawUpdate instanceof Function) {\n            rawUpdate = rawUpdate();\n        }\n        let updateColumns = new UpdateColumns(rawUpdate);\n        const queryContext = await this.ensureQueryContext(context);\n        const portableQuery = this.queryFacade.getPortableQuery(updateColumns, null, queryContext);\n        return await this.transactionalConnector.updateValues(portableQuery, context);\n    }\n    async updateWhere(rawUpdate, context) {\n        if (!rawUpdate) {\n            return 0;\n        }\n        if (rawUpdate instanceof Function) {\n            rawUpdate = rawUpdate();\n        }\n        let update = new UpdateProperties(rawUpdate);\n        const queryContext = await this.ensureQueryContext(context);\n        const portableQuery = this.queryFacade.getPortableQuery(update, null, queryContext);\n        return await this.transactionalConnector.updateValues(portableQuery, context);\n    }\n    prepare(queryFunction) {\n        return new FunctionWrapper(queryFunction);\n    }\n    async ensureQueryContext(context) {\n        const queryContext = context;\n        return queryContext;\n    }\n};\n__decorate([\n    Inject()\n], DatabaseFacade.prototype, \"entityCopier\", void 0);\n__decorate([\n    Inject()\n], DatabaseFacade.prototype, \"entityStateManager\", void 0);\n__decorate([\n    Inject()\n], DatabaseFacade.prototype, \"queryFacade\", void 0);\n__decorate([\n    Inject()\n], DatabaseFacade.prototype, \"transactionalConnector\", void 0);\n__decorate([\n    Inject()\n], DatabaseFacade.prototype, \"updateCacheManager\", void 0);\nDatabaseFacade = __decorate([\n    Injected()\n], DatabaseFacade);\nexport { DatabaseFacade };\nexport class FunctionWrapper {\n    constructor(queryFunction) {\n        throw new Error('Not Implemented');\n    }\n    find(...params) {\n    }\n}\n//# sourceMappingURL=DatabaseFacade.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet QueryFacade = class QueryFacade {\n    async find(query, queryResultType, context) {\n        await this.ensureContext(context);\n        const result = await this.transactionalConnector.find(this.getPortableQuery(query, queryResultType, context), context);\n        return result;\n    }\n    async findOne(query, queryResultType, context) {\n        await this.ensureContext(context);\n        const result = await this.transactionalConnector.findOne(this.getPortableQuery(query, queryResultType, context), context);\n        return result;\n    }\n    getPortableQuery(query, queryResultType, context) {\n        return {\n            jsonQuery: query.toJSON(this.queryUtils, this.fieldUtils, this.relationManager),\n            parameterMap: query.getParameters(),\n            queryResultType,\n            applicationIndex: context.dbEntity.applicationVersion.application.index,\n            tableIndex: context.dbEntity.index,\n            // values: query.values\n        };\n    }\n    // FIXME: merge update caches on the client\n    async search(query, queryResultType, context) {\n        await this.ensureContext(context);\n        let observable = await this.transactionalConnector.search(this.getPortableQuery(query, queryResultType, context), context);\n        return observable;\n    }\n    async searchOne(query, queryResultType, context) {\n        await this.ensureContext(context);\n        let observable = await this.transactionalConnector.searchOne(this.getPortableQuery(query, queryResultType, context), context);\n        return observable;\n    }\n    async ensureContext(context) {\n    }\n};\n__decorate([\n    Inject()\n], QueryFacade.prototype, \"fieldUtils\", void 0);\n__decorate([\n    Inject()\n], QueryFacade.prototype, \"queryUtils\", void 0);\n__decorate([\n    Inject()\n], QueryFacade.prototype, \"relationManager\", void 0);\n__decorate([\n    Inject()\n], QueryFacade.prototype, \"transactionalConnector\", void 0);\nQueryFacade = __decorate([\n    Injected()\n], QueryFacade);\nexport { QueryFacade };\n//# sourceMappingURL=QueryFacade.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nclass EntityAccumulator {\n    constructor(applicationDomain, applicationName, entityMap) {\n        this.applicationDomain = applicationDomain;\n        this.applicationName = applicationName;\n        this.entityMap = entityMap;\n    }\n    add(clazz, index) {\n        this.entityMap.set(clazz, {\n            entity: {\n                index,\n                name: clazz.name,\n            },\n            application: {\n                domain: this.applicationDomain,\n                name: this.applicationName,\n            },\n        });\n    }\n}\nlet AirportDatabase = class AirportDatabase {\n    get entityMap() {\n        return this.databaseStore.entityMap;\n    }\n    ;\n    get F() {\n        return this.databaseStore.functions;\n    }\n    get functions() {\n        return this.databaseStore.functions;\n    }\n    get A() {\n        return this.databaseStore.applications;\n    }\n    get applications() {\n        return this.databaseStore.applications;\n    }\n    get qApplications() {\n        return this.databaseStore.qApplications;\n    }\n    get Q() {\n        return this.databaseStore.qApplications;\n    }\n    get QM() {\n        return this.databaseStore.QM;\n    }\n    getAccumulator(applicationDomain, applicationName) {\n        return new EntityAccumulator(applicationDomain, applicationName, this.entityMap);\n    }\n    async addRepository(\n    // url: string,\n    // platform: PlatformType,\n    // platformConfig: string,\n    // distributionStrategy: DistributionStrategy,\n    context) {\n        return await this.databaseFacade.addRepository(\n        // url, platform, platformConfig, distributionStrategy, \n        context);\n    }\n    async insertColumnValues(rawInsertValues, context) {\n        return await this.databaseFacade.insertColumnValues(rawInsertValues, context);\n    }\n    async insertValues(rawInsertValues, context) {\n        return await this.databaseFacade.insertValues(rawInsertValues, context);\n    }\n    async insertColumnValuesGenerateIds(rawInsertValues, context) {\n        return await this.databaseFacade.insertColumnValuesGenerateIds(rawInsertValues, context);\n    }\n    async insertValuesGenerateIds(rawInsertValues, context) {\n        return await this.databaseFacade.insertValuesGenerateIds(rawInsertValues, context);\n    }\n    /**\n     * Creates an entity with a where clause - internal API.  Use the\n     *  API provided by the IEntityDatabaseFacade.\n     *\n     * @return Number of records deleted\n     */\n    async deleteWhere(rawDelete, context) {\n        return await this.databaseFacade.deleteWhere(rawDelete, context);\n    }\n    /**\n     * Ether creates or updates an entity - internal API.  Use the\n     *  API provided by the IEntityDatabaseFacade.\n     *\n     * @return Number of records saved (1 or 0)\n     */\n    async save(entity, context, operationName) {\n        return await this.databaseFacade.save(entity, context);\n    }\n    /**\n     * Updates an entity with a where clause, using a column based set clause\n     * - internal API.  Use the API provided by the IEntityDatabaseFacade.\n     *\n     * @return Number of records updated\n     */\n    async updateColumnsWhere(rawUpdateColumns, context) {\n        return await this.databaseFacade.updateColumnsWhere(rawUpdateColumns, context);\n    }\n    /**\n     * Updates an entity with a where clause, using a property based set clause\n     * - internal API.  Use the API provided by the IEntityDatabaseFacade.\n     *\n     * @return Number of records updated\n     */\n    async updateWhere(rawUpdate, context) {\n        return await this.databaseFacade.updateWhere(rawUpdate, context);\n    }\n};\n__decorate([\n    Inject()\n], AirportDatabase.prototype, \"databaseFacade\", void 0);\n__decorate([\n    Inject()\n], AirportDatabase.prototype, \"databaseStore\", void 0);\n__decorate([\n    Inject()\n], AirportDatabase.prototype, \"find\", void 0);\n__decorate([\n    Inject()\n], AirportDatabase.prototype, \"findOne\", void 0);\n__decorate([\n    Inject()\n], AirportDatabase.prototype, \"search\", void 0);\n__decorate([\n    Inject()\n], AirportDatabase.prototype, \"searchOne\", void 0);\nAirportDatabase = __decorate([\n    Injected()\n], AirportDatabase);\nexport { AirportDatabase };\nexport function injectAirportDatabase() {\n    console.log('Injecting AirportDatabase');\n}\n//# sourceMappingURL=AirportDatabase.js.map","import { AIRPORT_DATABASE, DATABASE_FACADE, QUERY_FACADE, UPDATE_CACHE_MANAGER } from '@airport/air-traffic-control';\nimport { API_REGISTRY, API_VALIDATOR, OPERATION_DESERIALIZER } from '@airport/check-in';\nimport { lib } from '@airport/direction-indicator';\nimport { ENTITY_STATE_MANAGER } from '@airport/ground-control';\nimport { LOCAL_API_SERVER } from '@airport/apron';\nimport { AirportDatabase } from './AirportDatabase';\nimport { ApiRegistry } from './core/api/ApiRegistry';\nimport { ApiValidator } from './core/api/ApiValidator';\nimport { LocalAPIServer } from './core/api/LocalApiServer';\nimport { OperationDeserializer } from './core/api/OperationDeserializer';\nimport { EntityCopier } from './core/data/EntityCopier';\nimport { UpdateCacheManager } from './core/data/UpdateCacheManager';\nimport { EntityStateManager } from './core/EntityStateManager';\nimport { DatabaseFacade } from './facade/DatabaseFacade';\nimport { QueryFacade } from './facade/QueryFacade';\nconst tower = lib('tower');\nexport const ENTITY_COPIER = tower.token({\n    class: EntityCopier,\n    interface: 'IEntityCopier',\n    token: 'ENTITY_COPIER'\n});\nAIRPORT_DATABASE.setClass(AirportDatabase);\nENTITY_STATE_MANAGER.setClass(EntityStateManager);\nAPI_REGISTRY.setClass(ApiRegistry);\nAPI_VALIDATOR.setClass(ApiValidator);\nLOCAL_API_SERVER.setClass(LocalAPIServer);\nOPERATION_DESERIALIZER.setClass(OperationDeserializer);\nUPDATE_CACHE_MANAGER.setClass(UpdateCacheManager);\nDATABASE_FACADE.setClass(DatabaseFacade);\nDATABASE_FACADE.setDependencies({\n    entityCopier: ENTITY_COPIER,\n    queryFacade: QUERY_FACADE\n});\nQUERY_FACADE.setClass(QueryFacade);\n//# sourceMappingURL=tokens.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isNode = exports.PROMISE_RESOLVED_VOID = exports.PROMISE_RESOLVED_TRUE = exports.PROMISE_RESOLVED_FALSE = void 0;\nexports.isPromise = isPromise;\nexports.microSeconds = microSeconds;\nexports.randomInt = randomInt;\nexports.randomToken = randomToken;\nexports.sleep = sleep;\n\n/**\n * returns true if the given object is a promise\n */\nfunction isPromise(obj) {\n  if (obj && typeof obj.then === 'function') {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nvar PROMISE_RESOLVED_FALSE = Promise.resolve(false);\nexports.PROMISE_RESOLVED_FALSE = PROMISE_RESOLVED_FALSE;\nvar PROMISE_RESOLVED_TRUE = Promise.resolve(true);\nexports.PROMISE_RESOLVED_TRUE = PROMISE_RESOLVED_TRUE;\nvar PROMISE_RESOLVED_VOID = Promise.resolve();\nexports.PROMISE_RESOLVED_VOID = PROMISE_RESOLVED_VOID;\n\nfunction sleep(time, resolveWith) {\n  if (!time) time = 0;\n  return new Promise(function (res) {\n    return setTimeout(function () {\n      return res(resolveWith);\n    }, time);\n  });\n}\n\nfunction randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n/**\n * https://stackoverflow.com/a/8084248\n */\n\n\nfunction randomToken() {\n  return Math.random().toString(36).substring(2);\n}\n\nvar lastMs = 0;\nvar additional = 0;\n/**\n * returns the current time in micro-seconds,\n * WARNING: This is a pseudo-function\n * Performance.now is not reliable in webworkers, so we just make sure to never return the same time.\n * This is enough in browsers, and this function will not be used in nodejs.\n * The main reason for this hack is to ensure that BroadcastChannel behaves equal to production when it is used in fast-running unit tests.\n */\n\nfunction microSeconds() {\n  var ms = new Date().getTime();\n\n  if (ms === lastMs) {\n    additional++;\n    return ms * 1000 + additional;\n  } else {\n    lastMs = ms;\n    additional = 0;\n    return ms * 1000;\n  }\n}\n/**\n * copied from the 'detect-node' npm module\n * We cannot use the module directly because it causes problems with rollup\n * @link https://github.com/iliakan/detect-node/blob/master/index.js\n */\n\n\nvar isNode = Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\nexports.isNode = isNode;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\n\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.averageResponseTime = averageResponseTime;\nexports.canBeUsed = canBeUsed;\nexports.close = close;\nexports.create = create;\nexports.microSeconds = exports[\"default\"] = void 0;\nexports.onMessage = onMessage;\nexports.postMessage = postMessage;\nexports.type = void 0;\n\nvar _util = require(\"../util\");\n\nvar microSeconds = _util.microSeconds;\nexports.microSeconds = microSeconds;\nvar type = 'native';\nexports.type = type;\n\nfunction create(channelName) {\n  var state = {\n    messagesCallback: null,\n    bc: new BroadcastChannel(channelName),\n    subFns: [] // subscriberFunctions\n\n  };\n\n  state.bc.onmessage = function (msg) {\n    if (state.messagesCallback) {\n      state.messagesCallback(msg.data);\n    }\n  };\n\n  return state;\n}\n\nfunction close(channelState) {\n  channelState.bc.close();\n  channelState.subFns = [];\n}\n\nfunction postMessage(channelState, messageJson) {\n  try {\n    channelState.bc.postMessage(messageJson, false);\n    return _util.PROMISE_RESOLVED_VOID;\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\n\nfunction onMessage(channelState, fn) {\n  channelState.messagesCallback = fn;\n}\n\nfunction canBeUsed() {\n  /**\n   * in the electron-renderer, isNode will be true even if we are in browser-context\n   * so we also check if window is undefined\n   */\n  if (_util.isNode && typeof window === 'undefined') return false;\n\n  if (typeof BroadcastChannel === 'function') {\n    if (BroadcastChannel._pubkey) {\n      throw new Error('BroadcastChannel: Do not overwrite window.BroadcastChannel with this module, this is not a polyfill');\n    }\n\n    return true;\n  } else return false;\n}\n\nfunction averageResponseTime() {\n  return 150;\n}\n\nvar _default = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};\nexports[\"default\"] = _default;","/**\n * this is a set which automatically forgets\n * a given entry when a new entry is set and the ttl\n * of the old one is over\n */\nvar ObliviousSet = /** @class */ (function () {\n    function ObliviousSet(ttl) {\n        this.ttl = ttl;\n        this.set = new Set();\n        this.timeMap = new Map();\n    }\n    ObliviousSet.prototype.has = function (value) {\n        return this.set.has(value);\n    };\n    ObliviousSet.prototype.add = function (value) {\n        var _this = this;\n        this.timeMap.set(value, now());\n        this.set.add(value);\n        /**\n         * When a new value is added,\n         * start the cleanup at the next tick\n         * to not block the cpu for more important stuff\n         * that might happen.\n         */\n        setTimeout(function () {\n            removeTooOldValues(_this);\n        }, 0);\n    };\n    ObliviousSet.prototype.clear = function () {\n        this.set.clear();\n        this.timeMap.clear();\n    };\n    return ObliviousSet;\n}());\nexport { ObliviousSet };\n/**\n * Removes all entries from the set\n * where the TTL has expired\n */\nexport function removeTooOldValues(obliviousSet) {\n    var olderThen = now() - obliviousSet.ttl;\n    var iterator = obliviousSet.set[Symbol.iterator]();\n    /**\n     * Because we can assume the new values are added at the bottom,\n     * we start from the top and stop as soon as we reach a non-too-old value.\n     */\n    while (true) {\n        var value = iterator.next().value;\n        if (!value) {\n            return; // no more elements\n        }\n        var time = obliviousSet.timeMap.get(value);\n        if (time < olderThen) {\n            obliviousSet.timeMap.delete(value);\n            obliviousSet.set.delete(value);\n        }\n        else {\n            // We reached a value that is not old enough\n            return;\n        }\n    }\n}\nexport function now() {\n    return new Date().getTime();\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fillOptionsWithDefaults = fillOptionsWithDefaults;\n\nfunction fillOptionsWithDefaults() {\n  var originalOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var options = JSON.parse(JSON.stringify(originalOptions)); // main\n\n  if (typeof options.webWorkerSupport === 'undefined') options.webWorkerSupport = true; // indexed-db\n\n  if (!options.idb) options.idb = {}; //  after this time the messages get deleted\n\n  if (!options.idb.ttl) options.idb.ttl = 1000 * 45;\n  if (!options.idb.fallbackInterval) options.idb.fallbackInterval = 150; //  handles abrupt db onclose events.\n\n  if (originalOptions.idb && typeof originalOptions.idb.onclose === 'function') options.idb.onclose = originalOptions.idb.onclose; // localstorage\n\n  if (!options.localstorage) options.localstorage = {};\n  if (!options.localstorage.removeTimeout) options.localstorage.removeTimeout = 1000 * 60; // custom methods\n\n  if (originalOptions.methods) options.methods = originalOptions.methods; // node\n\n  if (!options.node) options.node = {};\n  if (!options.node.ttl) options.node.ttl = 1000 * 60 * 2; // 2 minutes;\n\n  /**\n   * On linux use 'ulimit -Hn' to get the limit of open files.\n   * On ubuntu this was 4096 for me, so we use half of that as maxParallelWrites default.\n   */\n\n  if (!options.node.maxParallelWrites) options.node.maxParallelWrites = 2048;\n  if (typeof options.node.useFastPath === 'undefined') options.node.useFastPath = true;\n  return options;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.averageResponseTime = averageResponseTime;\nexports.canBeUsed = canBeUsed;\nexports.cleanOldMessages = cleanOldMessages;\nexports.close = close;\nexports.create = create;\nexports.createDatabase = createDatabase;\nexports[\"default\"] = void 0;\nexports.getAllMessages = getAllMessages;\nexports.getIdb = getIdb;\nexports.getMessagesHigherThan = getMessagesHigherThan;\nexports.getOldMessages = getOldMessages;\nexports.microSeconds = void 0;\nexports.onMessage = onMessage;\nexports.postMessage = postMessage;\nexports.removeMessageById = removeMessageById;\nexports.type = void 0;\nexports.writeMessage = writeMessage;\n\nvar _util = require(\"../util.js\");\n\nvar _obliviousSet = require(\"oblivious-set\");\n\nvar _options = require(\"../options\");\n\n/**\n * this method uses indexeddb to store the messages\n * There is currently no observerAPI for idb\n * @link https://github.com/w3c/IndexedDB/issues/51\n */\nvar microSeconds = _util.microSeconds;\nexports.microSeconds = microSeconds;\nvar DB_PREFIX = 'pubkey.broadcast-channel-0-';\nvar OBJECT_STORE_ID = 'messages';\nvar type = 'idb';\nexports.type = type;\n\nfunction getIdb() {\n  if (typeof indexedDB !== 'undefined') return indexedDB;\n\n  if (typeof window !== 'undefined') {\n    if (typeof window.mozIndexedDB !== 'undefined') return window.mozIndexedDB;\n    if (typeof window.webkitIndexedDB !== 'undefined') return window.webkitIndexedDB;\n    if (typeof window.msIndexedDB !== 'undefined') return window.msIndexedDB;\n  }\n\n  return false;\n}\n\nfunction createDatabase(channelName) {\n  var IndexedDB = getIdb(); // create table\n\n  var dbName = DB_PREFIX + channelName;\n  var openRequest = IndexedDB.open(dbName, 1);\n\n  openRequest.onupgradeneeded = function (ev) {\n    var db = ev.target.result;\n    db.createObjectStore(OBJECT_STORE_ID, {\n      keyPath: 'id',\n      autoIncrement: true\n    });\n  };\n\n  var dbPromise = new Promise(function (res, rej) {\n    openRequest.onerror = function (ev) {\n      return rej(ev);\n    };\n\n    openRequest.onsuccess = function () {\n      res(openRequest.result);\n    };\n  });\n  return dbPromise;\n}\n/**\n * writes the new message to the database\n * so other readers can find it\n */\n\n\nfunction writeMessage(db, readerUuid, messageJson) {\n  var time = new Date().getTime();\n  var writeObject = {\n    uuid: readerUuid,\n    time: time,\n    data: messageJson\n  };\n  var transaction = db.transaction([OBJECT_STORE_ID], 'readwrite');\n  return new Promise(function (res, rej) {\n    transaction.oncomplete = function () {\n      return res();\n    };\n\n    transaction.onerror = function (ev) {\n      return rej(ev);\n    };\n\n    var objectStore = transaction.objectStore(OBJECT_STORE_ID);\n    objectStore.add(writeObject);\n  });\n}\n\nfunction getAllMessages(db) {\n  var objectStore = db.transaction(OBJECT_STORE_ID).objectStore(OBJECT_STORE_ID);\n  var ret = [];\n  return new Promise(function (res) {\n    objectStore.openCursor().onsuccess = function (ev) {\n      var cursor = ev.target.result;\n\n      if (cursor) {\n        ret.push(cursor.value); //alert(\"Name for SSN \" + cursor.key + \" is \" + cursor.value.name);\n\n        cursor[\"continue\"]();\n      } else {\n        res(ret);\n      }\n    };\n  });\n}\n\nfunction getMessagesHigherThan(db, lastCursorId) {\n  var objectStore = db.transaction(OBJECT_STORE_ID).objectStore(OBJECT_STORE_ID);\n  var ret = [];\n\n  function openCursor() {\n    // Occasionally Safari will fail on IDBKeyRange.bound, this\n    // catches that error, having it open the cursor to the first\n    // item. When it gets data it will advance to the desired key.\n    try {\n      var keyRangeValue = IDBKeyRange.bound(lastCursorId + 1, Infinity);\n      return objectStore.openCursor(keyRangeValue);\n    } catch (e) {\n      return objectStore.openCursor();\n    }\n  }\n\n  return new Promise(function (res) {\n    openCursor().onsuccess = function (ev) {\n      var cursor = ev.target.result;\n\n      if (cursor) {\n        if (cursor.value.id < lastCursorId + 1) {\n          cursor[\"continue\"](lastCursorId + 1);\n        } else {\n          ret.push(cursor.value);\n          cursor[\"continue\"]();\n        }\n      } else {\n        res(ret);\n      }\n    };\n  });\n}\n\nfunction removeMessageById(db, id) {\n  var request = db.transaction([OBJECT_STORE_ID], 'readwrite').objectStore(OBJECT_STORE_ID)[\"delete\"](id);\n  return new Promise(function (res) {\n    request.onsuccess = function () {\n      return res();\n    };\n  });\n}\n\nfunction getOldMessages(db, ttl) {\n  var olderThen = new Date().getTime() - ttl;\n  var objectStore = db.transaction(OBJECT_STORE_ID).objectStore(OBJECT_STORE_ID);\n  var ret = [];\n  return new Promise(function (res) {\n    objectStore.openCursor().onsuccess = function (ev) {\n      var cursor = ev.target.result;\n\n      if (cursor) {\n        var msgObk = cursor.value;\n\n        if (msgObk.time < olderThen) {\n          ret.push(msgObk); //alert(\"Name for SSN \" + cursor.key + \" is \" + cursor.value.name);\n\n          cursor[\"continue\"]();\n        } else {\n          // no more old messages,\n          res(ret);\n          return;\n        }\n      } else {\n        res(ret);\n      }\n    };\n  });\n}\n\nfunction cleanOldMessages(db, ttl) {\n  return getOldMessages(db, ttl).then(function (tooOld) {\n    return Promise.all(tooOld.map(function (msgObj) {\n      return removeMessageById(db, msgObj.id);\n    }));\n  });\n}\n\nfunction create(channelName, options) {\n  options = (0, _options.fillOptionsWithDefaults)(options);\n  return createDatabase(channelName).then(function (db) {\n    var state = {\n      closed: false,\n      lastCursorId: 0,\n      channelName: channelName,\n      options: options,\n      uuid: (0, _util.randomToken)(),\n\n      /**\n       * emittedMessagesIds\n       * contains all messages that have been emitted before\n       * @type {ObliviousSet}\n       */\n      eMIs: new _obliviousSet.ObliviousSet(options.idb.ttl * 2),\n      // ensures we do not read messages in parrallel\n      writeBlockPromise: _util.PROMISE_RESOLVED_VOID,\n      messagesCallback: null,\n      readQueuePromises: [],\n      db: db\n    };\n    /**\n     * Handle abrupt closes that do not originate from db.close().\n     * This could happen, for example, if the underlying storage is\n     * removed or if the user clears the database in the browser's\n     * history preferences.\n     */\n\n    db.onclose = function () {\n      state.closed = true;\n      if (options.idb.onclose) options.idb.onclose();\n    };\n    /**\n     * if service-workers are used,\n     * we have no 'storage'-event if they post a message,\n     * therefore we also have to set an interval\n     */\n\n\n    _readLoop(state);\n\n    return state;\n  });\n}\n\nfunction _readLoop(state) {\n  if (state.closed) return;\n  readNewMessages(state).then(function () {\n    return (0, _util.sleep)(state.options.idb.fallbackInterval);\n  }).then(function () {\n    return _readLoop(state);\n  });\n}\n\nfunction _filterMessage(msgObj, state) {\n  if (msgObj.uuid === state.uuid) return false; // send by own\n\n  if (state.eMIs.has(msgObj.id)) return false; // already emitted\n\n  if (msgObj.data.time < state.messagesCallbackTime) return false; // older then onMessageCallback\n\n  return true;\n}\n/**\n * reads all new messages from the database and emits them\n */\n\n\nfunction readNewMessages(state) {\n  // channel already closed\n  if (state.closed) return _util.PROMISE_RESOLVED_VOID; // if no one is listening, we do not need to scan for new messages\n\n  if (!state.messagesCallback) return _util.PROMISE_RESOLVED_VOID;\n  return getMessagesHigherThan(state.db, state.lastCursorId).then(function (newerMessages) {\n    var useMessages = newerMessages\n    /**\n     * there is a bug in iOS where the msgObj can be undefined some times\n     * so we filter them out\n     * @link https://github.com/pubkey/broadcast-channel/issues/19\n     */\n    .filter(function (msgObj) {\n      return !!msgObj;\n    }).map(function (msgObj) {\n      if (msgObj.id > state.lastCursorId) {\n        state.lastCursorId = msgObj.id;\n      }\n\n      return msgObj;\n    }).filter(function (msgObj) {\n      return _filterMessage(msgObj, state);\n    }).sort(function (msgObjA, msgObjB) {\n      return msgObjA.time - msgObjB.time;\n    }); // sort by time\n\n    useMessages.forEach(function (msgObj) {\n      if (state.messagesCallback) {\n        state.eMIs.add(msgObj.id);\n        state.messagesCallback(msgObj.data);\n      }\n    });\n    return _util.PROMISE_RESOLVED_VOID;\n  });\n}\n\nfunction close(channelState) {\n  channelState.closed = true;\n  channelState.db.close();\n}\n\nfunction postMessage(channelState, messageJson) {\n  channelState.writeBlockPromise = channelState.writeBlockPromise.then(function () {\n    return writeMessage(channelState.db, channelState.uuid, messageJson);\n  }).then(function () {\n    if ((0, _util.randomInt)(0, 10) === 0) {\n      /* await (do not await) */\n      cleanOldMessages(channelState.db, channelState.options.idb.ttl);\n    }\n  });\n  return channelState.writeBlockPromise;\n}\n\nfunction onMessage(channelState, fn, time) {\n  channelState.messagesCallbackTime = time;\n  channelState.messagesCallback = fn;\n  readNewMessages(channelState);\n}\n\nfunction canBeUsed() {\n  if (_util.isNode) return false;\n  var idb = getIdb();\n  if (!idb) return false;\n  return true;\n}\n\nfunction averageResponseTime(options) {\n  return options.idb.fallbackInterval * 2;\n}\n\nvar _default = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};\nexports[\"default\"] = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addStorageEventListener = addStorageEventListener;\nexports.averageResponseTime = averageResponseTime;\nexports.canBeUsed = canBeUsed;\nexports.close = close;\nexports.create = create;\nexports[\"default\"] = void 0;\nexports.getLocalStorage = getLocalStorage;\nexports.microSeconds = void 0;\nexports.onMessage = onMessage;\nexports.postMessage = postMessage;\nexports.removeStorageEventListener = removeStorageEventListener;\nexports.storageKey = storageKey;\nexports.type = void 0;\n\nvar _obliviousSet = require(\"oblivious-set\");\n\nvar _options = require(\"../options\");\n\nvar _util = require(\"../util\");\n\n/**\n * A localStorage-only method which uses localstorage and its 'storage'-event\n * This does not work inside of webworkers because they have no access to locastorage\n * This is basically implemented to support IE9 or your grandmothers toaster.\n * @link https://caniuse.com/#feat=namevalue-storage\n * @link https://caniuse.com/#feat=indexeddb\n */\nvar microSeconds = _util.microSeconds;\nexports.microSeconds = microSeconds;\nvar KEY_PREFIX = 'pubkey.broadcastChannel-';\nvar type = 'localstorage';\n/**\n * copied from crosstab\n * @link https://github.com/tejacques/crosstab/blob/master/src/crosstab.js#L32\n */\n\nexports.type = type;\n\nfunction getLocalStorage() {\n  var localStorage;\n  if (typeof window === 'undefined') return null;\n\n  try {\n    localStorage = window.localStorage;\n    localStorage = window['ie8-eventlistener/storage'] || window.localStorage;\n  } catch (e) {// New versions of Firefox throw a Security exception\n    // if cookies are disabled. See\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1028153\n  }\n\n  return localStorage;\n}\n\nfunction storageKey(channelName) {\n  return KEY_PREFIX + channelName;\n}\n/**\n* writes the new message to the storage\n* and fires the storage-event so other readers can find it\n*/\n\n\nfunction postMessage(channelState, messageJson) {\n  return new Promise(function (res) {\n    (0, _util.sleep)().then(function () {\n      var key = storageKey(channelState.channelName);\n      var writeObj = {\n        token: (0, _util.randomToken)(),\n        time: new Date().getTime(),\n        data: messageJson,\n        uuid: channelState.uuid\n      };\n      var value = JSON.stringify(writeObj);\n      getLocalStorage().setItem(key, value);\n      /**\n       * StorageEvent does not fire the 'storage' event\n       * in the window that changes the state of the local storage.\n       * So we fire it manually\n       */\n\n      var ev = document.createEvent('Event');\n      ev.initEvent('storage', true, true);\n      ev.key = key;\n      ev.newValue = value;\n      window.dispatchEvent(ev);\n      res();\n    });\n  });\n}\n\nfunction addStorageEventListener(channelName, fn) {\n  var key = storageKey(channelName);\n\n  var listener = function listener(ev) {\n    if (ev.key === key) {\n      fn(JSON.parse(ev.newValue));\n    }\n  };\n\n  window.addEventListener('storage', listener);\n  return listener;\n}\n\nfunction removeStorageEventListener(listener) {\n  window.removeEventListener('storage', listener);\n}\n\nfunction create(channelName, options) {\n  options = (0, _options.fillOptionsWithDefaults)(options);\n\n  if (!canBeUsed()) {\n    throw new Error('BroadcastChannel: localstorage cannot be used');\n  }\n\n  var uuid = (0, _util.randomToken)();\n  /**\n   * eMIs\n   * contains all messages that have been emitted before\n   * @type {ObliviousSet}\n   */\n\n  var eMIs = new _obliviousSet.ObliviousSet(options.localstorage.removeTimeout);\n  var state = {\n    channelName: channelName,\n    uuid: uuid,\n    eMIs: eMIs // emittedMessagesIds\n\n  };\n  state.listener = addStorageEventListener(channelName, function (msgObj) {\n    if (!state.messagesCallback) return; // no listener\n\n    if (msgObj.uuid === uuid) return; // own message\n\n    if (!msgObj.token || eMIs.has(msgObj.token)) return; // already emitted\n\n    if (msgObj.data.time && msgObj.data.time < state.messagesCallbackTime) return; // too old\n\n    eMIs.add(msgObj.token);\n    state.messagesCallback(msgObj.data);\n  });\n  return state;\n}\n\nfunction close(channelState) {\n  removeStorageEventListener(channelState.listener);\n}\n\nfunction onMessage(channelState, fn, time) {\n  channelState.messagesCallbackTime = time;\n  channelState.messagesCallback = fn;\n}\n\nfunction canBeUsed() {\n  if (_util.isNode) return false;\n  var ls = getLocalStorage();\n  if (!ls) return false;\n\n  try {\n    var key = '__broadcastchannel_check';\n    ls.setItem(key, 'works');\n    ls.removeItem(key);\n  } catch (e) {\n    // Safari 10 in private mode will not allow write access to local\n    // storage and fail with a QuotaExceededError. See\n    // https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API#Private_Browsing_Incognito_modes\n    return false;\n  }\n\n  return true;\n}\n\nfunction averageResponseTime() {\n  var defaultTime = 120;\n  var userAgent = navigator.userAgent.toLowerCase();\n\n  if (userAgent.includes('safari') && !userAgent.includes('chrome')) {\n    // safari is much slower so this time is higher\n    return defaultTime * 2;\n  }\n\n  return defaultTime;\n}\n\nvar _default = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};\nexports[\"default\"] = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.averageResponseTime = averageResponseTime;\nexports.canBeUsed = canBeUsed;\nexports.close = close;\nexports.create = create;\nexports.microSeconds = exports[\"default\"] = void 0;\nexports.onMessage = onMessage;\nexports.postMessage = postMessage;\nexports.type = void 0;\n\nvar _util = require(\"../util\");\n\nvar microSeconds = _util.microSeconds;\nexports.microSeconds = microSeconds;\nvar type = 'simulate';\nexports.type = type;\nvar SIMULATE_CHANNELS = new Set();\n\nfunction create(channelName) {\n  var state = {\n    name: channelName,\n    messagesCallback: null\n  };\n  SIMULATE_CHANNELS.add(state);\n  return state;\n}\n\nfunction close(channelState) {\n  SIMULATE_CHANNELS[\"delete\"](channelState);\n}\n\nfunction postMessage(channelState, messageJson) {\n  return new Promise(function (res) {\n    return setTimeout(function () {\n      var channelArray = Array.from(SIMULATE_CHANNELS);\n      channelArray.filter(function (channel) {\n        return channel.name === channelState.name;\n      }).filter(function (channel) {\n        return channel !== channelState;\n      }).filter(function (channel) {\n        return !!channel.messagesCallback;\n      }).forEach(function (channel) {\n        return channel.messagesCallback(messageJson);\n      });\n      res();\n    }, 5);\n  });\n}\n\nfunction onMessage(channelState, fn) {\n  channelState.messagesCallback = fn;\n}\n\nfunction canBeUsed() {\n  return true;\n}\n\nfunction averageResponseTime() {\n  return 5;\n}\n\nvar _default = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};\nexports[\"default\"] = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.chooseMethod = chooseMethod;\n\nvar _native = _interopRequireDefault(require(\"./methods/native.js\"));\n\nvar _indexedDb = _interopRequireDefault(require(\"./methods/indexed-db.js\"));\n\nvar _localstorage = _interopRequireDefault(require(\"./methods/localstorage.js\"));\n\nvar _simulate = _interopRequireDefault(require(\"./methods/simulate.js\"));\n\n\n\nvar _util = require(\"./util\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n// the line below will be removed from es5/browser builds\n// order is important\nvar METHODS = [_native[\"default\"], // fastest\n_indexedDb[\"default\"], _localstorage[\"default\"]];\n\nfunction chooseMethod(options) {\n  var chooseMethods = [].concat(options.methods, METHODS).filter(Boolean); // the line below will be removed from es5/browser builds\n\n\n\n  if (options.type) {\n    if (options.type === 'simulate') {\n      // only use simulate-method if directly chosen\n      return _simulate[\"default\"];\n    }\n\n    var ret = chooseMethods.find(function (m) {\n      return m.type === options.type;\n    });\n    if (!ret) throw new Error('method-type ' + options.type + ' not found');else return ret;\n  }\n  /**\n   * if no webworker support is needed,\n   * remove idb from the list so that localstorage is been chosen\n   */\n\n\n  if (!options.webWorkerSupport && !_util.isNode) {\n    chooseMethods = chooseMethods.filter(function (m) {\n      return m.type !== 'idb';\n    });\n  }\n\n  var useMethod = chooseMethods.find(function (method) {\n    return method.canBeUsed();\n  });\n  if (!useMethod) throw new Error(\"No useable method found in \" + JSON.stringify(METHODS.map(function (m) {\n    return m.type;\n  })));else return useMethod;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OPEN_BROADCAST_CHANNELS = exports.BroadcastChannel = void 0;\nexports.clearNodeFolder = clearNodeFolder;\nexports.enforceOptions = enforceOptions;\n\nvar _util = require(\"./util.js\");\n\nvar _methodChooser = require(\"./method-chooser.js\");\n\nvar _options = require(\"./options.js\");\n\n/**\n * Contains all open channels,\n * used in tests to ensure everything is closed.\n */\nvar OPEN_BROADCAST_CHANNELS = new Set();\nexports.OPEN_BROADCAST_CHANNELS = OPEN_BROADCAST_CHANNELS;\nvar lastId = 0;\n\nvar BroadcastChannel = function BroadcastChannel(name, options) {\n  // identifier of the channel to debug stuff\n  this.id = lastId++;\n  OPEN_BROADCAST_CHANNELS.add(this);\n  this.name = name;\n\n  if (ENFORCED_OPTIONS) {\n    options = ENFORCED_OPTIONS;\n  }\n\n  this.options = (0, _options.fillOptionsWithDefaults)(options);\n  this.method = (0, _methodChooser.chooseMethod)(this.options); // isListening\n\n  this._iL = false;\n  /**\n   * _onMessageListener\n   * setting onmessage twice,\n   * will overwrite the first listener\n   */\n\n  this._onML = null;\n  /**\n   * _addEventListeners\n   */\n\n  this._addEL = {\n    message: [],\n    internal: []\n  };\n  /**\n   * Unsend message promises\n   * where the sending is still in progress\n   * @type {Set<Promise>}\n   */\n\n  this._uMP = new Set();\n  /**\n   * _beforeClose\n   * array of promises that will be awaited\n   * before the channel is closed\n   */\n\n  this._befC = [];\n  /**\n   * _preparePromise\n   */\n\n  this._prepP = null;\n\n  _prepareChannel(this);\n}; // STATICS\n\n/**\n * used to identify if someone overwrites\n * window.BroadcastChannel with this\n * See methods/native.js\n */\n\n\nexports.BroadcastChannel = BroadcastChannel;\nBroadcastChannel._pubkey = true;\n/**\n * clears the tmp-folder if is node\n * @return {Promise<boolean>} true if has run, false if not node\n */\n\nfunction clearNodeFolder(options) {\n  options = (0, _options.fillOptionsWithDefaults)(options);\n  var method = (0, _methodChooser.chooseMethod)(options);\n\n  if (method.type === 'node') {\n    return method.clearNodeFolder().then(function () {\n      return true;\n    });\n  } else {\n    return _util.PROMISE_RESOLVED_FALSE;\n  }\n}\n/**\n * if set, this method is enforced,\n * no mather what the options are\n */\n\n\nvar ENFORCED_OPTIONS;\n\nfunction enforceOptions(options) {\n  ENFORCED_OPTIONS = options;\n} // PROTOTYPE\n\n\nBroadcastChannel.prototype = {\n  postMessage: function postMessage(msg) {\n    if (this.closed) {\n      throw new Error('BroadcastChannel.postMessage(): ' + 'Cannot post message after channel has closed ' +\n      /**\n       * In the past when this error appeared, it was realy hard to debug.\n       * So now we log the msg together with the error so it at least\n       * gives some clue about where in your application this happens.\n       */\n      JSON.stringify(msg));\n    }\n\n    return _post(this, 'message', msg);\n  },\n  postInternal: function postInternal(msg) {\n    return _post(this, 'internal', msg);\n  },\n\n  set onmessage(fn) {\n    var time = this.method.microSeconds();\n    var listenObj = {\n      time: time,\n      fn: fn\n    };\n\n    _removeListenerObject(this, 'message', this._onML);\n\n    if (fn && typeof fn === 'function') {\n      this._onML = listenObj;\n\n      _addListenerObject(this, 'message', listenObj);\n    } else {\n      this._onML = null;\n    }\n  },\n\n  addEventListener: function addEventListener(type, fn) {\n    var time = this.method.microSeconds();\n    var listenObj = {\n      time: time,\n      fn: fn\n    };\n\n    _addListenerObject(this, type, listenObj);\n  },\n  removeEventListener: function removeEventListener(type, fn) {\n    var obj = this._addEL[type].find(function (obj) {\n      return obj.fn === fn;\n    });\n\n    _removeListenerObject(this, type, obj);\n  },\n  close: function close() {\n    var _this = this;\n\n    if (this.closed) {\n      return;\n    }\n\n    OPEN_BROADCAST_CHANNELS[\"delete\"](this);\n    this.closed = true;\n    var awaitPrepare = this._prepP ? this._prepP : _util.PROMISE_RESOLVED_VOID;\n    this._onML = null;\n    this._addEL.message = [];\n    return awaitPrepare // wait until all current sending are processed\n    .then(function () {\n      return Promise.all(Array.from(_this._uMP));\n    }) // run before-close hooks\n    .then(function () {\n      return Promise.all(_this._befC.map(function (fn) {\n        return fn();\n      }));\n    }) // close the channel\n    .then(function () {\n      return _this.method.close(_this._state);\n    });\n  },\n\n  get type() {\n    return this.method.type;\n  },\n\n  get isClosed() {\n    return this.closed;\n  }\n\n};\n/**\n * Post a message over the channel\n * @returns {Promise} that resolved when the message sending is done\n */\n\nfunction _post(broadcastChannel, type, msg) {\n  var time = broadcastChannel.method.microSeconds();\n  var msgObj = {\n    time: time,\n    type: type,\n    data: msg\n  };\n  var awaitPrepare = broadcastChannel._prepP ? broadcastChannel._prepP : _util.PROMISE_RESOLVED_VOID;\n  return awaitPrepare.then(function () {\n    var sendPromise = broadcastChannel.method.postMessage(broadcastChannel._state, msgObj); // add/remove to unsend messages list\n\n    broadcastChannel._uMP.add(sendPromise);\n\n    sendPromise[\"catch\"]().then(function () {\n      return broadcastChannel._uMP[\"delete\"](sendPromise);\n    });\n    return sendPromise;\n  });\n}\n\nfunction _prepareChannel(channel) {\n  var maybePromise = channel.method.create(channel.name, channel.options);\n\n  if ((0, _util.isPromise)(maybePromise)) {\n    channel._prepP = maybePromise;\n    maybePromise.then(function (s) {\n      // used in tests to simulate slow runtime\n\n      /*if (channel.options.prepareDelay) {\n           await new Promise(res => setTimeout(res, this.options.prepareDelay));\n      }*/\n      channel._state = s;\n    });\n  } else {\n    channel._state = maybePromise;\n  }\n}\n\nfunction _hasMessageListeners(channel) {\n  if (channel._addEL.message.length > 0) return true;\n  if (channel._addEL.internal.length > 0) return true;\n  return false;\n}\n\nfunction _addListenerObject(channel, type, obj) {\n  channel._addEL[type].push(obj);\n\n  _startListening(channel);\n}\n\nfunction _removeListenerObject(channel, type, obj) {\n  channel._addEL[type] = channel._addEL[type].filter(function (o) {\n    return o !== obj;\n  });\n\n  _stopListening(channel);\n}\n\nfunction _startListening(channel) {\n  if (!channel._iL && _hasMessageListeners(channel)) {\n    // someone is listening, start subscribing\n    var listenerFn = function listenerFn(msgObj) {\n      channel._addEL[msgObj.type].forEach(function (listenerObject) {\n        /**\n         * Getting the current time in JavaScript has no good precision.\n         * So instead of only listening to events that happend 'after' the listener\n         * was added, we also listen to events that happended 100ms before it.\n         * This ensures that when another process, like a WebWorker, sends events\n         * we do not miss them out because their timestamp is a bit off compared to the main process.\n         * Not doing this would make messages missing when we send data directly after subscribing and awaiting a response.\n         * @link https://johnresig.com/blog/accuracy-of-javascript-time/\n         */\n        var hundredMsInMicro = 100 * 1000;\n        var minMessageTime = listenerObject.time - hundredMsInMicro;\n\n        if (msgObj.time >= minMessageTime) {\n          listenerObject.fn(msgObj.data);\n        }\n      });\n    };\n\n    var time = channel.method.microSeconds();\n\n    if (channel._prepP) {\n      channel._prepP.then(function () {\n        channel._iL = true;\n        channel.method.onMessage(channel._state, listenerFn, time);\n      });\n    } else {\n      channel._iL = true;\n      channel.method.onMessage(channel._state, listenerFn, time);\n    }\n  }\n}\n\nfunction _stopListening(channel) {\n  if (channel._iL && !_hasMessageListeners(channel)) {\n    // noone is listening, stop subscribing\n    channel._iL = false;\n    var time = channel.method.microSeconds();\n    channel.method.onMessage(channel._state, null, time);\n  }\n}","/* global WorkerGlobalScope */\nfunction add(fn) {\n  if (typeof WorkerGlobalScope === 'function' && self instanceof WorkerGlobalScope) {// this is run inside of a webworker\n  } else {\n    /**\n     * if we are on react-native, there is no window.addEventListener\n     * @link https://github.com/pubkey/unload/issues/6\n     */\n    if (typeof window.addEventListener !== 'function') return;\n    /**\n     * for normal browser-windows, we use the beforeunload-event\n     */\n\n    window.addEventListener('beforeunload', function () {\n      fn();\n    }, true);\n    /**\n     * for iframes, we have to use the unload-event\n     * @link https://stackoverflow.com/q/47533670/3443137\n     */\n\n    window.addEventListener('unload', function () {\n      fn();\n    }, true);\n  }\n  /**\n   * TODO add fallback for safari-mobile\n   * @link https://stackoverflow.com/a/26193516/3443137\n   */\n\n}\n\nexport default {\n  add: add\n};","import isNode from 'detect-node';\nimport BrowserMethod from './browser.js';\nimport NodeMethod from './node.js';\nvar USE_METHOD = isNode ? NodeMethod : BrowserMethod;\nvar LISTENERS = new Set();\nvar startedListening = false;\n\nfunction startListening() {\n  if (startedListening) return;\n  startedListening = true;\n  USE_METHOD.add(runAll);\n}\n\nexport function add(fn) {\n  startListening();\n  if (typeof fn !== 'function') throw new Error('Listener is no function');\n  LISTENERS.add(fn);\n  var addReturn = {\n    remove: function remove() {\n      return LISTENERS[\"delete\"](fn);\n    },\n    run: function run() {\n      LISTENERS[\"delete\"](fn);\n      return fn();\n    }\n  };\n  return addReturn;\n}\nexport function runAll() {\n  var promises = [];\n  LISTENERS.forEach(function (fn) {\n    promises.push(fn());\n    LISTENERS[\"delete\"](fn);\n  });\n  return Promise.all(promises);\n}\nexport function removeAll() {\n  LISTENERS.clear();\n}\nexport function getSize() {\n  return LISTENERS.size;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.beLeader = beLeader;\nexports.createLeaderElection = createLeaderElection;\n\nvar _util = require(\"./util.js\");\n\nvar _unload = require(\"unload\");\n\nvar LeaderElection = function LeaderElection(broadcastChannel, options) {\n  var _this = this;\n\n  this.broadcastChannel = broadcastChannel;\n  this._options = options;\n  this.isLeader = false;\n  this.hasLeader = false;\n  this.isDead = false;\n  this.token = (0, _util.randomToken)();\n  /**\n   * Apply Queue,\n   * used to ensure we do not run applyOnce()\n   * in parallel.\n   */\n\n  this._aplQ = _util.PROMISE_RESOLVED_VOID; // amount of unfinished applyOnce() calls\n\n  this._aplQC = 0; // things to clean up\n\n  this._unl = []; // _unloads\n\n  this._lstns = []; // _listeners\n\n  this._dpL = function () {}; // onduplicate listener\n\n\n  this._dpLC = false; // true when onduplicate called\n\n  /**\n   * Even when the own instance is not applying,\n   * we still listen to messages to ensure the hasLeader flag\n   * is set correctly.\n   */\n\n  var hasLeaderListener = function hasLeaderListener(msg) {\n    if (msg.context === 'leader') {\n      if (msg.action === 'death') {\n        _this.hasLeader = false;\n      }\n\n      if (msg.action === 'tell') {\n        _this.hasLeader = true;\n      }\n    }\n  };\n\n  this.broadcastChannel.addEventListener('internal', hasLeaderListener);\n\n  this._lstns.push(hasLeaderListener);\n};\n\nLeaderElection.prototype = {\n  /**\n   * Returns true if the instance is leader,\n   * false if not.\n   * @async\n   */\n  applyOnce: function applyOnce( // true if the applyOnce() call came from the fallbackInterval cycle\n  isFromFallbackInterval) {\n    var _this2 = this;\n\n    if (this.isLeader) {\n      return (0, _util.sleep)(0, true);\n    }\n\n    if (this.isDead) {\n      return (0, _util.sleep)(0, false);\n    }\n    /**\n     * Already applying more then once,\n     * -> wait for the apply queue to be finished.\n     */\n\n\n    if (this._aplQC > 1) {\n      return this._aplQ;\n    }\n    /**\n     * Add a new apply-run\n     */\n\n\n    var applyRun = function applyRun() {\n      /**\n       * Optimization shortcuts.\n       * Directly return if a previous run\n       * has already elected a leader.\n       */\n      if (_this2.isLeader) {\n        return _util.PROMISE_RESOLVED_TRUE;\n      }\n\n      var stopCriteria = false;\n      var stopCriteriaPromiseResolve;\n      /**\n       * Resolves when a stop criteria is reached.\n       * Uses as a performance shortcut so we do not\n       * have to await the responseTime when it is already clear\n       * that the election failed.\n       */\n\n      var stopCriteriaPromise = new Promise(function (res) {\n        stopCriteriaPromiseResolve = function stopCriteriaPromiseResolve() {\n          stopCriteria = true;\n          res();\n        };\n      });\n      var recieved = [];\n\n      var handleMessage = function handleMessage(msg) {\n        if (msg.context === 'leader' && msg.token != _this2.token) {\n          recieved.push(msg);\n\n          if (msg.action === 'apply') {\n            // other is applying\n            if (msg.token > _this2.token) {\n              /**\n               * other has higher token\n               * -> stop applying and let other become leader.\n               */\n              stopCriteriaPromiseResolve();\n            }\n          }\n\n          if (msg.action === 'tell') {\n            // other is already leader\n            stopCriteriaPromiseResolve();\n            _this2.hasLeader = true;\n          }\n        }\n      };\n\n      _this2.broadcastChannel.addEventListener('internal', handleMessage);\n      /**\n       * If the applyOnce() call came from the fallbackInterval,\n       * we can assume that the election runs in the background and\n       * not critical process is waiting for it.\n       * When this is true, we give the other intances\n       * more time to answer to messages in the election cycle.\n       * This makes it less likely to elect duplicate leaders.\n       * But also it takes longer which is not a problem because we anyway\n       * run in the background.\n       */\n\n\n      var waitForAnswerTime = isFromFallbackInterval ? _this2._options.responseTime * 4 : _this2._options.responseTime;\n\n      var applyPromise = _sendMessage(_this2, 'apply') // send out that this one is applying\n      .then(function () {\n        return Promise.race([(0, _util.sleep)(waitForAnswerTime), stopCriteriaPromise.then(function () {\n          return Promise.reject(new Error());\n        })]);\n      }) // send again in case another instance was just created\n      .then(function () {\n        return _sendMessage(_this2, 'apply');\n      }) // let others time to respond\n      .then(function () {\n        return Promise.race([(0, _util.sleep)(waitForAnswerTime), stopCriteriaPromise.then(function () {\n          return Promise.reject(new Error());\n        })]);\n      })[\"catch\"](function () {}).then(function () {\n        _this2.broadcastChannel.removeEventListener('internal', handleMessage);\n\n        if (!stopCriteria) {\n          // no stop criteria -> own is leader\n          return beLeader(_this2).then(function () {\n            return true;\n          });\n        } else {\n          // other is leader\n          return false;\n        }\n      });\n\n      return applyPromise;\n    };\n\n    this._aplQC = this._aplQC + 1;\n    this._aplQ = this._aplQ.then(function () {\n      return applyRun();\n    }).then(function () {\n      _this2._aplQC = _this2._aplQC - 1;\n    });\n    return this._aplQ.then(function () {\n      return _this2.isLeader;\n    });\n  },\n  awaitLeadership: function awaitLeadership() {\n    if (\n    /* _awaitLeadershipPromise */\n    !this._aLP) {\n      this._aLP = _awaitLeadershipOnce(this);\n    }\n\n    return this._aLP;\n  },\n\n  set onduplicate(fn) {\n    this._dpL = fn;\n  },\n\n  die: function die() {\n    var _this3 = this;\n\n    this._lstns.forEach(function (listener) {\n      return _this3.broadcastChannel.removeEventListener('internal', listener);\n    });\n\n    this._lstns = [];\n\n    this._unl.forEach(function (uFn) {\n      return uFn.remove();\n    });\n\n    this._unl = [];\n\n    if (this.isLeader) {\n      this.hasLeader = false;\n      this.isLeader = false;\n    }\n\n    this.isDead = true;\n    return _sendMessage(this, 'death');\n  }\n};\n/**\n * @param leaderElector {LeaderElector}\n */\n\nfunction _awaitLeadershipOnce(leaderElector) {\n  if (leaderElector.isLeader) {\n    return _util.PROMISE_RESOLVED_VOID;\n  }\n\n  return new Promise(function (res) {\n    var resolved = false;\n\n    function finish() {\n      if (resolved) {\n        return;\n      }\n\n      resolved = true;\n      leaderElector.broadcastChannel.removeEventListener('internal', whenDeathListener);\n      res(true);\n    } // try once now\n\n\n    leaderElector.applyOnce().then(function () {\n      if (leaderElector.isLeader) {\n        finish();\n      }\n    });\n    /**\n     * Try on fallbackInterval\n     * @recursive\n     */\n\n    var tryOnFallBack = function tryOnFallBack() {\n      return (0, _util.sleep)(leaderElector._options.fallbackInterval).then(function () {\n        if (leaderElector.isDead || resolved) {\n          return;\n        }\n\n        if (leaderElector.isLeader) {\n          finish();\n        } else {\n          return leaderElector.applyOnce(true).then(function () {\n            if (leaderElector.isLeader) {\n              finish();\n            } else {\n              tryOnFallBack();\n            }\n          });\n        }\n      });\n    };\n\n    tryOnFallBack(); // try when other leader dies\n\n    var whenDeathListener = function whenDeathListener(msg) {\n      if (msg.context === 'leader' && msg.action === 'death') {\n        leaderElector.hasLeader = false;\n        leaderElector.applyOnce().then(function () {\n          if (leaderElector.isLeader) {\n            finish();\n          }\n        });\n      }\n    };\n\n    leaderElector.broadcastChannel.addEventListener('internal', whenDeathListener);\n\n    leaderElector._lstns.push(whenDeathListener);\n  });\n}\n/**\n * sends and internal message over the broadcast-channel\n */\n\n\nfunction _sendMessage(leaderElector, action) {\n  var msgJson = {\n    context: 'leader',\n    action: action,\n    token: leaderElector.token\n  };\n  return leaderElector.broadcastChannel.postInternal(msgJson);\n}\n\nfunction beLeader(leaderElector) {\n  leaderElector.isLeader = true;\n  leaderElector.hasLeader = true;\n  var unloadFn = (0, _unload.add)(function () {\n    return leaderElector.die();\n  });\n\n  leaderElector._unl.push(unloadFn);\n\n  var isLeaderListener = function isLeaderListener(msg) {\n    if (msg.context === 'leader' && msg.action === 'apply') {\n      _sendMessage(leaderElector, 'tell');\n    }\n\n    if (msg.context === 'leader' && msg.action === 'tell' && !leaderElector._dpLC) {\n      /**\n       * another instance is also leader!\n       * This can happen on rare events\n       * like when the CPU is at 100% for long time\n       * or the tabs are open very long and the browser throttles them.\n       * @link https://github.com/pubkey/broadcast-channel/issues/414\n       * @link https://github.com/pubkey/broadcast-channel/issues/385\n       */\n      leaderElector._dpLC = true;\n\n      leaderElector._dpL(); // message the lib user so the app can handle the problem\n\n\n      _sendMessage(leaderElector, 'tell'); // ensure other leader also knows the problem\n\n    }\n  };\n\n  leaderElector.broadcastChannel.addEventListener('internal', isLeaderListener);\n\n  leaderElector._lstns.push(isLeaderListener);\n\n  return _sendMessage(leaderElector, 'tell');\n}\n\nfunction fillOptionsWithDefaults(options, channel) {\n  if (!options) options = {};\n  options = JSON.parse(JSON.stringify(options));\n\n  if (!options.fallbackInterval) {\n    options.fallbackInterval = 3000;\n  }\n\n  if (!options.responseTime) {\n    options.responseTime = channel.method.averageResponseTime(channel.options);\n  }\n\n  return options;\n}\n\nfunction createLeaderElection(channel, options) {\n  if (channel._leaderElector) {\n    throw new Error('BroadcastChannel already has a leader-elector');\n  }\n\n  options = fillOptionsWithDefaults(options, channel);\n  var elector = new LeaderElection(channel, options);\n\n  channel._befC.push(function () {\n    return elector.die();\n  });\n\n  channel._leaderElector = elector;\n  return elector;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"BroadcastChannel\", {\n  enumerable: true,\n  get: function get() {\n    return _broadcastChannel.BroadcastChannel;\n  }\n});\nObject.defineProperty(exports, \"OPEN_BROADCAST_CHANNELS\", {\n  enumerable: true,\n  get: function get() {\n    return _broadcastChannel.OPEN_BROADCAST_CHANNELS;\n  }\n});\nObject.defineProperty(exports, \"beLeader\", {\n  enumerable: true,\n  get: function get() {\n    return _leaderElection.beLeader;\n  }\n});\nObject.defineProperty(exports, \"clearNodeFolder\", {\n  enumerable: true,\n  get: function get() {\n    return _broadcastChannel.clearNodeFolder;\n  }\n});\nObject.defineProperty(exports, \"createLeaderElection\", {\n  enumerable: true,\n  get: function get() {\n    return _leaderElection.createLeaderElection;\n  }\n});\nObject.defineProperty(exports, \"enforceOptions\", {\n  enumerable: true,\n  get: function get() {\n    return _broadcastChannel.enforceOptions;\n  }\n});\n\nvar _broadcastChannel = require(\"./broadcast-channel\");\n\nvar _leaderElection = require(\"./leader-election\");","\"use strict\";\n\nvar _index = require(\"./index.js\");\n\n/**\n * because babel can only export on default-attribute,\n * we use this for the non-module-build\n * this ensures that users do not have to use\n * var BroadcastChannel = require('broadcast-channel').default;\n * but\n * var BroadcastChannel = require('broadcast-channel');\n */\nmodule.exports = {\n  BroadcastChannel: _index.BroadcastChannel,\n  createLeaderElection: _index.createLeaderElection,\n  clearNodeFolder: _index.clearNodeFolder,\n  enforceOptions: _index.enforceOptions,\n  beLeader: _index.beLeader\n};","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { IOC } from \"@airport/direction-indicator\";\nimport { TERMINAL_STORE } from \"@airport/terminal-map\";\nimport { BroadcastChannel as SoftBroadcastChannel } from '../node_modules/broadcast-channel/dist/lib/index.es5';\nlet WebMesageReceiver = class WebMesageReceiver {\n    constructor() {\n        this.isNativeBroadcastChannel = typeof BroadcastChannel === 'function';\n        const createChannel = () => {\n            this.communicationChannel = new SoftBroadcastChannel('clientCommunication', {\n                idb: {\n                    onclose: () => {\n                        // the onclose event is just the IndexedDB closing.\n                        // you should also close the channel before creating\n                        // a new one.\n                        this.communicationChannel.close();\n                        createChannel();\n                    },\n                },\n            });\n            this.communicationChannel.onmessage = (message) => {\n                this.transactionalReceiver.handleClientRequest(message);\n            };\n        };\n        createChannel();\n        window.addEventListener(\"message\", event => {\n            const message = event.data;\n            this.transactionalReceiver.handleAppRequest(message, event.origin, event.source);\n        }, false);\n    }\n    needMessageSerialization() {\n        return !this.isNativeBroadcastChannel;\n    }\n    sendMessageToClient(message) {\n        this.communicationChannel.postMessage(message);\n    }\n    sendMessageToApp() {\n    }\n};\n__decorate([\n    Inject()\n], WebMesageReceiver.prototype, \"terminalStore\", void 0);\n__decorate([\n    Inject()\n], WebMesageReceiver.prototype, \"transactionalReceiver\", void 0);\nWebMesageReceiver = __decorate([\n    Injected()\n], WebMesageReceiver);\nexport { WebMesageReceiver };\nexport function injectWebReceiver() {\n    const terminalStore = IOC.getSync(TERMINAL_STORE);\n    const webReciever = terminalStore.getWebReceiver();\n    webReciever.localDomain = 'localhost:31717';\n}\n//# sourceMappingURL=WebMessageReceiver.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nlet DomainRetriever = class DomainRetriever {\n    async retrieveDomain(domainName, domainNameMapByName, allDomains, newDomains) {\n        return domainNameMapByName.get(domainName);\n    }\n};\nDomainRetriever = __decorate([\n    Injected()\n], DomainRetriever);\nexport { DomainRetriever };\n//# sourceMappingURL=DomainRetriever.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { EntityRelationType, getFullApplicationNameFromDomainAndName, QueryType, } from '@airport/ground-control';\nlet SqlApplicationBuilder = class SqlApplicationBuilder {\n    async build(jsonApplication, existingApplicationMap, newJsonApplicationMap, context) {\n        await this.createApplication(jsonApplication, context);\n        for (const jsonEntity of jsonApplication.versions[jsonApplication.versions.length - 1].entities) {\n            await this.buildTable(jsonApplication, jsonEntity, existingApplicationMap, context);\n        }\n        const relatedJsonApplicationMap = new Map();\n        for (const jsonEntity of jsonApplication.versions[jsonApplication.versions.length - 1].entities) {\n            await this.buildForeignKeys(jsonApplication, jsonEntity, existingApplicationMap, newJsonApplicationMap, relatedJsonApplicationMap, context);\n        }\n    }\n    async buildTable(jsonApplication, jsonEntity, existingApplicationMap, context) {\n        const primaryKeyColumnNames = [];\n        const tableColumnsDdl = jsonEntity.columns.map((jsonColumn) => {\n            let columnDdl = `${jsonColumn.name} ${this.getColumnSuffix(jsonApplication, jsonEntity, jsonColumn)}`;\n            if (this.isPrimaryKeyColumn(jsonEntity, jsonColumn)) {\n                primaryKeyColumnNames.push(jsonColumn.name);\n            }\n            return columnDdl;\n        });\n        const createTableSuffix = this.getCreateTableSuffix(jsonApplication, jsonEntity);\n        const tableName = this.storeDriver.getTableName(jsonApplication, jsonEntity, context);\n        let primaryKeySubStatement = ``;\n        if (primaryKeyColumnNames.length) {\n            primaryKeySubStatement = this.getPrimaryKeyStatement(primaryKeyColumnNames);\n        }\n        const createTableDdl = `CREATE TABLE ${tableName} (\r\n\t\t${tableColumnsDdl.join(',\\n')}${primaryKeySubStatement}\r\n\t\t)${createTableSuffix}`;\n        await this.storeDriver.query(QueryType.DDL, createTableDdl, [], context, false);\n        let indexNumber = 0;\n        if (jsonEntity.tableConfig.columnIndexes) {\n            for (const indexConfig of jsonEntity.tableConfig.columnIndexes) {\n                const createIndexDdl = this.getIndexSql('idx_' + tableName + '_' + (++indexNumber), tableName, indexConfig.columnList, indexConfig.unique);\n                await this.storeDriver.query(QueryType.DDL, createIndexDdl, [], context, false);\n            }\n        }\n        if (jsonEntity.tableConfig.propertyIndexes) {\n            for (const indexConfig of jsonEntity.tableConfig.propertyIndexes) {\n                const columnNameList = [];\n                for (const jsonColumn of jsonEntity.columns) {\n                    for (const propertyRef of jsonColumn.propertyRefs) {\n                        if (propertyRef.index === indexConfig.propertyIndex) {\n                            columnNameList.push(jsonColumn.name);\n                            break;\n                        }\n                    }\n                }\n                const createIndexDdl = this.getIndexSql('idx_' + tableName + '_' + (++indexNumber), tableName, columnNameList, indexConfig.unique);\n                await this.storeDriver.query(QueryType.DDL, createIndexDdl, [], context, false);\n            }\n        }\n        //\n    }\n    async buildForeignKeys(jsonApplication, jsonEntity, existingApplicationMap, newJsonApplicationMap, relatedJsonApplicationMap, context) {\n        if (!jsonEntity.relations || !jsonEntity.relations.length) {\n            return;\n        }\n        const applicationVersion = jsonApplication.versions[jsonApplication.versions.length - 1];\n        const tableName = this.storeDriver.getTableName(jsonApplication, jsonEntity, context);\n        let foreignKeyNumber = 0;\n        for (const jsonRelation of jsonEntity.relations) {\n            if (jsonRelation.relationType !== EntityRelationType.MANY_TO_ONE) {\n                continue;\n            }\n            let relatedJsonApplication;\n            let relatedJsonEntity;\n            if (jsonRelation.relationTableApplicationIndex\n                || jsonRelation.relationTableApplicationIndex === 0) {\n                const referencedApplication = applicationVersion\n                    .referencedApplications[jsonRelation.relationTableApplicationIndex];\n                let relatedFullApplicationName = getFullApplicationNameFromDomainAndName(referencedApplication.domain, referencedApplication.name);\n                relatedJsonApplication = relatedJsonApplicationMap.get(relatedFullApplicationName);\n                if (!relatedJsonApplication) {\n                    const relatedApplication = existingApplicationMap.get(relatedFullApplicationName);\n                    if (relatedApplication) {\n                        // FIXME: this should be looked up though currentVersion - make sure it's populated\n                        // relatedJsonApplication = relatedApplication.currentVersion[0].applicationVersion.jsonApplication\n                        relatedJsonApplication = relatedApplication.versions[0].jsonApplication;\n                    }\n                    else {\n                        relatedJsonApplication = newJsonApplicationMap.get(relatedFullApplicationName);\n                    }\n                    if (!relatedJsonApplication) {\n                        throw new Error(`Could not find related application ${relatedFullApplicationName}\r\n            in either existing applications or newly installing applications.`);\n                    }\n                    relatedJsonApplicationMap.set(relatedFullApplicationName, relatedJsonApplication);\n                }\n                const relatedApplicationVersion = relatedJsonApplication\n                    .versions[relatedJsonApplication.versions.length - 1];\n                relatedJsonEntity = relatedApplicationVersion.entities[jsonRelation.relationTableIndex];\n            }\n            else {\n                relatedJsonApplication = jsonApplication;\n                relatedJsonEntity = applicationVersion.entities[jsonRelation.relationTableIndex];\n            }\n            let foreignKeyColumnNames = [];\n            for (const jsonColumn of jsonEntity.columns) {\n                for (const propertyRef of jsonColumn.propertyRefs) {\n                    if (propertyRef.index === jsonRelation.propertyRef.index) {\n                        foreignKeyColumnNames.push(jsonColumn.name);\n                        break;\n                    }\n                }\n            }\n            const referencedTableName = this.storeDriver\n                .getTableName(relatedJsonApplication, relatedJsonEntity, context);\n            let referencedColumnNames = [];\n            for (const relatedIdColumnRef of relatedJsonEntity.idColumnRefs) {\n                referencedColumnNames.push(relatedJsonEntity.columns[relatedIdColumnRef.index].name);\n            }\n            const foreignKeySql = this.getForeignKeySql(tableName, 'fk_' + tableName + '_foreignKeyNumber', foreignKeyColumnNames, referencedTableName, referencedColumnNames);\n            if (foreignKeySql) {\n                await this.storeDriver.query(QueryType.DDL, foreignKeySql, [], context, false);\n            }\n        }\n    }\n    async buildForeignKeysForTable() {\n    }\n    isPrimaryKeyColumn(jsonEntity, jsonColumn) {\n        return jsonColumn.propertyRefs.some((propertyRef) => {\n            const jsonProperty = jsonEntity.properties[propertyRef.index];\n            if (jsonProperty.isId) {\n                return true;\n            }\n        });\n    }\n    /*\n    protected abstract isForeignKey(\n      jsonEntity: JsonApplicationEntity,\n      jsonColumn: JsonApplicationColumn\n    ): boolean\n    */\n    getPrimaryKeyStatement(columnNames) {\n        return `,\r\n\t\t\tPRIMARY KEY (\r\n\t\t\t${columnNames.join(',\\n')}\r\n\t\t\t)`;\n    }\n};\n__decorate([\n    Inject()\n], SqlApplicationBuilder.prototype, \"airportDatabase\", void 0);\n__decorate([\n    Inject()\n], SqlApplicationBuilder.prototype, \"sequenceDao\", void 0);\n__decorate([\n    Inject()\n], SqlApplicationBuilder.prototype, \"storeDriver\", void 0);\nSqlApplicationBuilder = __decorate([\n    Injected()\n], SqlApplicationBuilder);\nexport { SqlApplicationBuilder };\n//# sourceMappingURL=SqlApplicationBuilder.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ensureChildJsMap, getFullApplicationName, } from '@airport/ground-control';\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet ApplicationChecker = class ApplicationChecker {\n    async check(jsonApplication) {\n        if (!jsonApplication) {\n            throw new Error(`Json Application not provided`);\n        }\n        if (!(jsonApplication.versions instanceof Array)) {\n            throw new Error('application.versions is not an array');\n        }\n        if (jsonApplication.versions.length !== 1) {\n            // FIXME: add support for application versioning\n            throw new Error('Currently only 1 version of application is supported');\n        }\n        await this.checkDomain(jsonApplication);\n    }\n    async checkDomain(jsonApplication) {\n        // TODO: implement domain checking\n    }\n    async checkDependencies(jsonApplications) {\n        const allReferencedApplicationMap = new Map();\n        const referencedApplicationMapByApplication = new Map();\n        for (const jsonApplication of jsonApplications) {\n            const lastJsonApplicationVersion = jsonApplication.versions[jsonApplication.versions.length - 1];\n            const referencedApplicationMapForApplication = ensureChildJsMap(ensureChildJsMap(referencedApplicationMapByApplication, jsonApplication.domain), jsonApplication.name);\n            for (const jsonReferencedApplication of lastJsonApplicationVersion.referencedApplications) {\n                ensureChildJsMap(allReferencedApplicationMap, jsonReferencedApplication.domain).set(jsonReferencedApplication.name, jsonReferencedApplication);\n                ensureChildJsMap(referencedApplicationMapForApplication, jsonReferencedApplication.domain).set(jsonReferencedApplication.name, jsonReferencedApplication);\n            }\n        }\n        this.pruneInGroupReferences(jsonApplications, allReferencedApplicationMap, referencedApplicationMapByApplication);\n        await this.pruneReferencesToExistingApplications(jsonApplications, allReferencedApplicationMap, referencedApplicationMapByApplication);\n        const applicationsWithValidDependencies = [];\n        const applicationsInNeedOfAdditionalDependencies = [];\n        const neededDependencies = [];\n        for (const dependenciesForDomain of allReferencedApplicationMap.values()) {\n            for (const dependency of dependenciesForDomain.values()) {\n                neededDependencies.push(dependency);\n            }\n        }\n        for (const jsonApplication of jsonApplications) {\n            const referencedApplicationMapForApplication = referencedApplicationMapByApplication.get(jsonApplication.domain).get(jsonApplication.name);\n            if (this.hasReferences(referencedApplicationMapForApplication)) {\n                applicationsInNeedOfAdditionalDependencies.push(jsonApplication);\n            }\n            else {\n                applicationsWithValidDependencies.push(jsonApplication);\n            }\n        }\n        return {\n            applicationsWithValidDependencies,\n            applicationsInNeedOfAdditionalDependencies,\n            neededDependencies\n        };\n    }\n    pruneInGroupReferences(jsonApplications, allReferencedApplicationMap, referencedApplicationMapByApplication) {\n        for (const jsonApplication of jsonApplications) {\n            // Remove every in-group reference for this application\n            for (const [_domainName, referenceMapForApplicationsOfDomain] of referencedApplicationMapByApplication) {\n                for (const [_applicationName, applicationsReferencedByAGivenApplication] of referenceMapForApplicationsOfDomain) {\n                    const applicationReferencesForDomain = applicationsReferencedByAGivenApplication.get(jsonApplication.domain);\n                    if (applicationReferencesForDomain) {\n                        applicationReferencesForDomain.delete(jsonApplication.name);\n                    }\n                }\n            }\n            const allApplicationReferencesForDomain = allReferencedApplicationMap.get(jsonApplication.domain);\n            if (allApplicationReferencesForDomain) {\n                allApplicationReferencesForDomain.delete(jsonApplication.name);\n            }\n        }\n    }\n    async pruneReferencesToExistingApplications(jsonApplications, allReferencedApplicationMap, referencedApplicationMapByApplication) {\n        const existingApplicationInfo = await this.findExistingApplications(allReferencedApplicationMap);\n        for (const applicationName of existingApplicationInfo.existingApplicationMapByName.keys()) {\n            const coreDomainAndApplicationNames = existingApplicationInfo.coreDomainAndApplicationNamesByApplicationName.get(applicationName);\n            // Remove every reference for this existing application\n            for (const referenceMapForApplicationsOfDomain of referencedApplicationMapByApplication.values()) {\n                for (const applicationsReferencedByAGivenApplication of referenceMapForApplicationsOfDomain.values()) {\n                    const applicationReferencesForDomain = applicationsReferencedByAGivenApplication.get(coreDomainAndApplicationNames.domain);\n                    if (applicationReferencesForDomain) {\n                        applicationReferencesForDomain.delete(coreDomainAndApplicationNames.application);\n                    }\n                }\n            }\n            const allApplicationReferencesForDomain = allReferencedApplicationMap.get(coreDomainAndApplicationNames.domain);\n            if (allApplicationReferencesForDomain) {\n                allApplicationReferencesForDomain.delete(coreDomainAndApplicationNames.application);\n            }\n        }\n    }\n    async findExistingApplications(allReferencedApplicationMap) {\n        const fullApplicationNames = [];\n        const coreDomainAndApplicationNamesByApplicationName = new Map();\n        for (const [domainName, allReferencedApplicationsForDomain] of allReferencedApplicationMap) {\n            for (const [coreApplicationName, referencedApplication] of allReferencedApplicationsForDomain) {\n                const fullApplicationName = getFullApplicationName(referencedApplication);\n                fullApplicationNames.push(fullApplicationName);\n                coreDomainAndApplicationNamesByApplicationName.set(fullApplicationName, {\n                    domain: domainName,\n                    application: coreApplicationName\n                });\n            }\n        }\n        let existingApplicationMapByName;\n        if (!fullApplicationNames.length) {\n            existingApplicationMapByName = new Map();\n        }\n        else {\n            existingApplicationMapByName = await this.applicationDao.findMapByFullNames(fullApplicationNames);\n        }\n        return {\n            coreDomainAndApplicationNamesByApplicationName,\n            existingApplicationMapByName\n        };\n    }\n    hasReferences(referencedApplicationMap) {\n        for (const referencesForDomain of referencedApplicationMap.values()) {\n            for (const _ of referencesForDomain) {\n                return true;\n            }\n        }\n        return false;\n    }\n};\n__decorate([\n    Inject()\n], ApplicationChecker.prototype, \"applicationDao\", void 0);\nApplicationChecker = __decorate([\n    Injected()\n], ApplicationChecker);\nexport { ApplicationChecker };\n//# sourceMappingURL=ApplicationChecker.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { getFullApplicationNameFromDomainAndName } from '@airport/ground-control';\nimport { Injected } from '@airport/direction-indicator';\nlet ApplicationLocator = class ApplicationLocator {\n    // private terminalStore: ITerminalStore\n    locateExistingApplicationVersionRecord(jsonApplication, terminalStore) {\n        const applicationVersionsForDomainName = terminalStore\n            .getLatestApplicationVersionMapByNames().get(jsonApplication.domain);\n        if (!applicationVersionsForDomainName) {\n            return null;\n        }\n        const fullApplicationName = getFullApplicationNameFromDomainAndName(jsonApplication.domain, jsonApplication.name);\n        const latestApplicationVersionForApplication = applicationVersionsForDomainName.get(fullApplicationName);\n        const jsonApplicationVersion = jsonApplication.versions[0];\n        if (latestApplicationVersionForApplication\n            && latestApplicationVersionForApplication.integerVersion !== jsonApplicationVersion.integerVersion) {\n            throw new Error(`Multiple versions of applications are not yet supported`);\n        }\n        return latestApplicationVersionForApplication;\n    }\n    async locateLatestApplicationVersionByApplicationName(fullApplicationName, terminalStore) {\n        return terminalStore.getLatestApplicationVersionMapByFullApplicationName()\n            .get(fullApplicationName);\n    }\n};\nApplicationLocator = __decorate([\n    Injected()\n], ApplicationLocator);\nexport { ApplicationLocator };\n//# sourceMappingURL=ApplicationLocator.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ApplicationStatus, ensureChildArray, ensureChildJsSet, getFullApplicationName, } from '@airport/ground-control';\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet ApplicationComposer = class ApplicationComposer {\n    async compose(jsonApplications, context) {\n        // NOTE: application name contains domain name as a prefix\n        const jsonApplicationMapByFullName = new Map();\n        const terminalStore = context.terminalStore;\n        const allDomains = terminalStore.getDomains().slice();\n        const domainMapByName = new Map();\n        for (const domain of allDomains) {\n            domainMapByName.set(domain.name, domain);\n        }\n        const allApplications = terminalStore.getApplications().slice();\n        // NOTE: application fullName contains domain name as a prefix\n        const applicationMapByFullName = new Map();\n        for (const application of allApplications) {\n            applicationMapByFullName.set(application.fullName, application);\n        }\n        const newLatestApplicationVersions = [];\n        const newApplicationVersionMapByApplicationName = new Map();\n        const newEntitiesMapByApplicationName = new Map();\n        const newPropertiesMap = new Map();\n        const newRelationsMap = new Map();\n        const newColumnsMap = new Map();\n        const added = {\n            columns: [],\n            domains: [],\n            entities: [],\n            latestApplicationVersions: [],\n            properties: [],\n            propertyColumns: [],\n            relationColumns: [],\n            relations: [],\n            applicationReferences: [],\n            applications: [],\n            applicationVersions: []\n        };\n        const allApplicationVersionsByIds = [...terminalStore.getAllApplicationVersionsByIds()];\n        const all = {\n            columns: [],\n            domains: [],\n            entities: [],\n            latestApplicationVersions: [],\n            properties: [],\n            propertyColumns: [],\n            relationColumns: [],\n            relations: [],\n            applicationReferences: [],\n            applications: [],\n            applicationVersions: [] //\n        };\n        const allDdlObjects = {\n            all,\n            allApplicationVersionsByIds,\n            added\n        };\n        for (const jsonApplication of jsonApplications) {\n            jsonApplicationMapByFullName.set(getFullApplicationName(jsonApplication), jsonApplication);\n            const domain = await this.composeDomain(jsonApplication.domain, allDomains, added.domains, domainMapByName);\n            const application = this.composeApplication(domain, jsonApplication, allApplications, added.applications, applicationMapByFullName);\n            this.composeApplicationVersion(jsonApplication, application, newLatestApplicationVersions, added.applicationVersions, newApplicationVersionMapByApplicationName);\n        }\n        const { newApplicationReferenceMap, newApplicationReferences } = await this.composeApplicationReferences(jsonApplicationMapByFullName, newApplicationVersionMapByApplicationName, terminalStore, allDdlObjects, context.deepTraverseReferences);\n        added.applicationReferences = newApplicationReferences;\n        for (const applicationVersion of allApplicationVersionsByIds) {\n            if (applicationVersion) {\n                this.addApplicationVersionObjects(applicationVersion, all);\n            }\n        }\n        for (const jsonApplication of jsonApplications) {\n            const fullApplicationName = getFullApplicationName(jsonApplication);\n            jsonApplicationMapByFullName.set(fullApplicationName, jsonApplication);\n            const domain = domainMapByName.get(jsonApplication.domain);\n            const application = applicationMapByFullName.get(getFullApplicationName(jsonApplication));\n            if (!application.index) {\n                jsonApplication.lastIds = {\n                    ...this.terminalStore.getLastIds()\n                };\n                application.index = ++this.terminalStore.getLastIds().applications;\n            }\n            if (!domain.id) {\n                domain.id = ++this.terminalStore.getLastIds().domains;\n            }\n            const applicationVersion = newApplicationVersionMapByApplicationName.get(application.fullName);\n            if (!applicationVersion.id) {\n                applicationVersion.id = ++this.terminalStore.getLastIds().applicationVersions;\n                applicationVersion.jsonApplication = jsonApplication;\n            }\n            this.composeApplicationEntities(jsonApplication, applicationVersion, newEntitiesMapByApplicationName, added.entities);\n            this.composeApplicationProperties(jsonApplication, added.properties, newPropertiesMap, newEntitiesMapByApplicationName);\n            await this.composeApplicationRelations(jsonApplication, added.relations, newRelationsMap, newEntitiesMapByApplicationName, newPropertiesMap, newApplicationReferenceMap, terminalStore, allDdlObjects);\n            this.composeApplicationColumns(jsonApplication, added.columns, newColumnsMap, added.propertyColumns, newEntitiesMapByApplicationName, newPropertiesMap);\n            await this.composeApplicationRelationColumns(jsonApplication, added.relationColumns, newApplicationVersionMapByApplicationName, newApplicationReferenceMap, newRelationsMap, newColumnsMap, terminalStore, allDdlObjects);\n        }\n        this.addObjects(allDdlObjects.added, allDdlObjects.all);\n        for (const applicationVersion of allDdlObjects.all.applicationVersions) {\n            allDdlObjects.allApplicationVersionsByIds[applicationVersion.id] = applicationVersion;\n        }\n        return allDdlObjects;\n    }\n    async getExistingLatestApplicationVersion(referencedApplicationName, allDdlObjects) {\n        for (const latestApplicationVersion of allDdlObjects.all.latestApplicationVersions) {\n            if (latestApplicationVersion.application.fullName == referencedApplicationName) {\n                return latestApplicationVersion;\n            }\n        }\n        throw new Error(`Cannot find application \"${referencedApplicationName}\".`);\n    }\n    addApplicationVersionObjects(applicationVersion, ddlObjects) {\n        let foundDomain = false;\n        for (const domain of ddlObjects.domains) {\n            if (domain.name === applicationVersion.application.domain.name) {\n                foundDomain = true;\n                break;\n            }\n        }\n        if (!foundDomain) {\n            ddlObjects.domains.push(applicationVersion.application.domain);\n        }\n        let foundApplication = false;\n        for (const application of ddlObjects.applications) {\n            if (application.domain === applicationVersion.application.domain\n                && application.name === applicationVersion.application.name) {\n                foundApplication = true;\n                break;\n            }\n        }\n        if (!foundApplication) {\n            ddlObjects.applications.push(applicationVersion.application);\n        }\n        ddlObjects.applicationVersions.push(applicationVersion);\n        ddlObjects.latestApplicationVersions.push(applicationVersion);\n        ddlObjects.applicationReferences = ddlObjects.applicationReferences\n            .concat(applicationVersion.references);\n        ddlObjects.entities = ddlObjects.entities.concat(applicationVersion.entities);\n        for (const entity of applicationVersion.entities) {\n            ddlObjects.columns = ddlObjects.columns.concat(entity.columns);\n            ddlObjects.properties = ddlObjects.properties.concat(entity.properties);\n            let entityPropertyColumns = [];\n            for (const property of entity.properties) {\n                entityPropertyColumns = entityPropertyColumns\n                    .concat(property.propertyColumns);\n            }\n            ddlObjects.propertyColumns = ddlObjects.propertyColumns\n                .concat(entityPropertyColumns);\n            ddlObjects.relations = ddlObjects.relations.concat(entity.relations);\n            let entityRelationColumns = [];\n            for (const relation of entity.relations) {\n                entityRelationColumns = entityRelationColumns\n                    .concat(relation.manyRelationColumns);\n            }\n            ddlObjects.relationColumns = ddlObjects.relationColumns\n                .concat(entityRelationColumns);\n        }\n    }\n    addObjects(fromObjects, toObjects) {\n        toObjects.columns = toObjects.columns.concat(fromObjects.columns);\n        for (const fromDomain of fromObjects.domains) {\n            let foundDomain = false;\n            for (const toDomain of toObjects.domains) {\n                if (toDomain.name === fromDomain.name) {\n                    foundDomain = true;\n                    break;\n                }\n            }\n            if (!foundDomain) {\n                toObjects.domains.push(fromDomain);\n            }\n        }\n        toObjects.entities = toObjects.entities.concat(fromObjects.entities);\n        toObjects.latestApplicationVersions = toObjects.latestApplicationVersions\n            .concat(fromObjects.latestApplicationVersions);\n        toObjects.properties = toObjects.properties.concat(fromObjects.properties);\n        toObjects.propertyColumns = toObjects.propertyColumns\n            .concat(fromObjects.propertyColumns);\n        toObjects.relationColumns = toObjects.relationColumns\n            .concat(fromObjects.relationColumns);\n        toObjects.relations = toObjects.relations.concat(fromObjects.relations);\n        for (const fromApplication of fromObjects.applications) {\n            let foundApplication = false;\n            for (const toApplication of toObjects.applications) {\n                if (toApplication.domain === fromApplication.domain\n                    && toApplication.name === fromApplication.name) {\n                    foundApplication = true;\n                    break;\n                }\n            }\n            if (!foundApplication) {\n                toObjects.applications.push(fromApplication);\n            }\n        }\n        toObjects.applicationReferences = toObjects.applicationReferences\n            .concat(fromObjects.applicationReferences);\n        toObjects.applicationVersions = toObjects.applicationVersions\n            .concat(fromObjects.applicationVersions);\n    }\n    async composeDomain(domainName, allDomains, newDomains, domainMapByName) {\n        let domain = await this.domainRetriever.retrieveDomain(domainName, domainMapByName, allDomains, newDomains);\n        if (!domain) {\n            domain = {\n                id: null,\n                name: domainName,\n                applications: []\n            };\n            allDomains.push(domain);\n            newDomains.push(domain);\n            domainMapByName.set(domainName, domain);\n        }\n        return domain;\n    }\n    composeApplication(domain, jsonApplication, allApplications, newApplications, applicationMapByFullName) {\n        const fullApplicationName = getFullApplicationName(jsonApplication);\n        let application = applicationMapByFullName.get(fullApplicationName);\n        if (!application) {\n            application = {\n                domain,\n                index: null,\n                fullName: fullApplicationName,\n                name: jsonApplication.name,\n                scope: 'public',\n                signature: 'localhost',\n                status: ApplicationStatus.CURRENT,\n            };\n            allApplications.push(application);\n            newApplications.push(application);\n            applicationMapByFullName.set(fullApplicationName, application);\n        }\n        return application;\n    }\n    composeApplicationVersion(jsonApplication, application, newLatestApplicationVersions, newApplicationVersions, newApplicationVersionMapByApplicationName) {\n        // Application versions are guaranteed to be new\n        let newApplicationVersion;\n        for (const applicationVersion of jsonApplication.versions) {\n            const versionParts = applicationVersion.versionString.split('.');\n            newApplicationVersion = {\n                id: null,\n                integerVersion: applicationVersion.integerVersion,\n                versionString: applicationVersion.versionString,\n                majorVersion: parseInt(versionParts[0]),\n                minorVersion: parseInt(versionParts[1]),\n                patchVersion: parseInt(versionParts[2]),\n                application,\n                jsonApplication,\n                entities: [],\n                references: [],\n                referencedBy: [],\n                entityMapByName: {},\n                referencesMapByName: {},\n                referencedByMapByName: {},\n            };\n            if (application.versions) {\n                application.versions.push(newApplicationVersion);\n            }\n            else {\n                application.versions = [newApplicationVersion];\n            }\n            newApplicationVersions.push(newApplicationVersion);\n        }\n        let newApplicationCurrentVersion = {\n            application,\n            applicationVersion: newApplicationVersion\n        };\n        // needed for normalOperation only\n        application.currentVersion = [newApplicationCurrentVersion];\n        newLatestApplicationVersions.push(newApplicationVersion);\n        newApplicationVersionMapByApplicationName.set(application.fullName, newApplicationVersion);\n        return newApplicationVersion;\n    }\n    async composeApplicationReferences(jsonApplicationMapByName, newApplicationVersionMapByApplicationName, terminalStore, allDdlObjects, deepTraverseReferences) {\n        const newApplicationReferenceMap = new Map();\n        const newApplicationReferenceLookup = new Map();\n        const newApplicationReferences = [];\n        for (const [applicationName, ownApplicationVersion] of newApplicationVersionMapByApplicationName) {\n            const application = ownApplicationVersion.application;\n            const jsonApplication = jsonApplicationMapByName.get(application.fullName);\n            const lastJsonApplicationVersion = jsonApplication.versions[jsonApplication.versions.length - 1];\n            const applicationReferences = ensureChildArray(newApplicationReferenceMap, applicationName);\n            const applicationReferenceLookup = ensureChildJsSet(newApplicationReferenceLookup, applicationName);\n            for (const jsonReferencedApplication of lastJsonApplicationVersion.referencedApplications) {\n                const referencedFullApplicationName = getFullApplicationName(jsonReferencedApplication);\n                let referencedApplicationVersion = newApplicationVersionMapByApplicationName.get(referencedFullApplicationName);\n                if (!referencedApplicationVersion) {\n                    referencedApplicationVersion = await this.applicationLocator.locateLatestApplicationVersionByApplicationName(referencedFullApplicationName, terminalStore);\n                    if (!referencedApplicationVersion) {\n                        throw new Error(`Could not locate application:\r\n\t\t\t\t\t\t${referencedFullApplicationName}\r\n\t\t\t\t\t\tin either existing applications or applications being currently processed`);\n                    }\n                    this.addApplicationVersionObjects(referencedApplicationVersion, allDdlObjects.all);\n                    if (deepTraverseReferences) {\n                        // This should cause another iteration over the outer loop to process newly added ApplicationVersion\n                        jsonApplicationMapByName.set(referencedFullApplicationName, referencedApplicationVersion.jsonApplication);\n                        newApplicationVersionMapByApplicationName.set(referencedFullApplicationName, referencedApplicationVersion);\n                    }\n                }\n                const applicationReference = {\n                    index: jsonReferencedApplication.index,\n                    ownApplicationVersion,\n                    referencedApplicationVersion\n                };\n                if (!applicationReferenceLookup.has(jsonReferencedApplication.index)) {\n                    applicationReferenceLookup.add(jsonReferencedApplication.index);\n                    newApplicationReferences.push(applicationReference);\n                    applicationReferences.push(applicationReference);\n                }\n            }\n        }\n        return {\n            newApplicationReferenceMap,\n            newApplicationReferences\n        };\n    }\n    composeApplicationEntities(jsonApplication, applicationVersion, newEntitiesMapByApplicationName, newEntities) {\n        const applicationName = getFullApplicationName(jsonApplication);\n        let index = 0;\n        // TODO: verify that jsonApplication.versions is always ordered ascending\n        const currentApplicationVersion = jsonApplication.versions[jsonApplication.versions.length - 1];\n        const jsonEntities = currentApplicationVersion.entities;\n        const newApplicationEntities = [];\n        for (const jsonEntity of jsonEntities) {\n            const entity = {\n                id: ++this.terminalStore.getLastIds().entities,\n                index: index++,\n                applicationVersion,\n                isLocal: jsonEntity.isLocal,\n                isRepositoryEntity: jsonEntity.isRepositoryEntity,\n                name: jsonEntity.name,\n                tableConfig: jsonEntity.tableConfig,\n                // columns: [],\n                // columnMap: {},\n                // idColumns: [],\n                // idColumnMap: {},\n                // relations: [],\n                // properties: [],\n                // propertyMap: {}\n            };\n            // applicationVersion.entities.push(entity)\n            newApplicationEntities.push(entity);\n            newEntities.push(entity);\n        }\n        newEntitiesMapByApplicationName.set(applicationName, newApplicationEntities);\n        applicationVersion.entities = newApplicationEntities;\n    }\n    composeApplicationProperties(jsonApplication, newProperties, newPropertiesMap, newEntitiesMapByApplicationName) {\n        const applicationName = getFullApplicationName(jsonApplication);\n        const currentApplicationVersion = jsonApplication.versions[jsonApplication.versions.length - 1];\n        const jsonEntities = currentApplicationVersion.entities;\n        const entities = newEntitiesMapByApplicationName.get(applicationName);\n        const propertiesByEntityIndex = ensureChildArray(newPropertiesMap, applicationName);\n        jsonEntities.forEach((jsonEntity, tableIndex) => {\n            const entity = entities[tableIndex];\n            const propertiesForEntity = [];\n            propertiesByEntityIndex[tableIndex]\n                = propertiesForEntity;\n            let index = 0;\n            for (const jsonProperty of jsonEntity.properties) {\n                const property = {\n                    id: ++this.terminalStore.getLastIds().properties,\n                    index,\n                    entity,\n                    name: jsonProperty.name,\n                    isId: jsonProperty.isId,\n                };\n                propertiesForEntity[index] = property;\n                index++;\n                newProperties.push(property);\n            }\n        });\n    }\n    async composeApplicationRelations(jsonApplication, newRelations, newRelationsMap, newEntitiesMapByApplicationName, newPropertiesMap, newApplicationReferenceMap, terminalStore, allDdlObjects) {\n        const applicationName = getFullApplicationName(jsonApplication);\n        const currentApplicationVersion = jsonApplication.versions[jsonApplication.versions.length - 1];\n        const jsonEntities = currentApplicationVersion.entities;\n        const entitiesForApplication = newEntitiesMapByApplicationName.get(applicationName);\n        const propertiesByEntityIndex = newPropertiesMap.get(applicationName);\n        const relationsByEntityIndex = ensureChildArray(newRelationsMap, applicationName);\n        const referencesForApplication = newApplicationReferenceMap.get(applicationName);\n        for (let tableIndex = 0; tableIndex < jsonEntities.length; tableIndex++) {\n            const jsonEntity = jsonEntities[tableIndex];\n            const propertiesForEntity = propertiesByEntityIndex[tableIndex];\n            const relationsForEntity = [];\n            relationsByEntityIndex[tableIndex]\n                = relationsForEntity;\n            const entity = entitiesForApplication[tableIndex];\n            let index = 0;\n            const relations = [];\n            for (const jsonRelation of jsonEntity.relations) {\n                const property = propertiesForEntity[jsonRelation.propertyRef.index];\n                let referencedApplicationName = applicationName;\n                if (jsonRelation.relationTableApplicationIndex\n                    || jsonRelation.relationTableApplicationIndex === 0) {\n                    const applicationReference = referencesForApplication[jsonRelation.relationTableApplicationIndex];\n                    referencedApplicationName = applicationReference.referencedApplicationVersion.application.fullName;\n                }\n                let entitiesArray = newEntitiesMapByApplicationName.get(referencedApplicationName);\n                if (!entitiesArray) {\n                    const applicationVersion = await this.getExistingLatestApplicationVersion(referencedApplicationName, allDdlObjects);\n                    entitiesArray = applicationVersion.entities;\n                }\n                const relationEntity = entitiesArray[jsonRelation.relationTableIndex];\n                const relation = {\n                    entity,\n                    id: ++terminalStore.getLastIds().relations,\n                    index,\n                    foreignKey: jsonRelation.foreignKey,\n                    isId: property.isId,\n                    manyToOneElems: jsonRelation.manyToOneElems,\n                    property,\n                    oneToManyElems: jsonRelation.oneToManyElems,\n                    relationEntity,\n                    relationType: jsonRelation.relationType,\n                    // oneRelationColumns: [],\n                    // manyRelationColumns: []\n                };\n                // property.relation               = [relation]\n                // relationEntity.relations.push(relation)\n                relationsForEntity[index] = relation;\n                index++;\n                relations.push(relation);\n                newRelations.push(relation);\n            }\n        }\n    }\n    composeApplicationColumns(jsonApplication, newColumns, newColumnsMap, newPropertyColumns, newEntitiesMapByApplicationName, newPropertiesMap) {\n        const applicationName = getFullApplicationName(jsonApplication);\n        const columnsByTable = [];\n        newColumnsMap.set(applicationName, columnsByTable);\n        const entitiesForApplication = newEntitiesMapByApplicationName.get(applicationName);\n        const currentApplicationVersion = jsonApplication.versions[jsonApplication.versions.length - 1];\n        const jsonEntities = currentApplicationVersion.entities;\n        const propertiesForApplication = newPropertiesMap.get(applicationName);\n        jsonEntities.forEach((jsonEntity, tableIndex) => {\n            const entity = entitiesForApplication[tableIndex];\n            const columnsForTable = [];\n            columnsByTable[tableIndex] = columnsForTable;\n            const idColumnIndexes = [];\n            jsonEntity.idColumnRefs.forEach((idColumnRef, idColumnIndex) => {\n                idColumnIndexes[idColumnRef.index] = idColumnIndex;\n            });\n            const propertiesForEntity = propertiesForApplication[tableIndex];\n            jsonEntity.columns.forEach((jsonColumn, index) => {\n                const idColumndIndex = idColumnIndexes[index];\n                const column = {\n                    allocationSize: jsonColumn.allocationSize,\n                    entity,\n                    id: ++this.terminalStore.getLastIds().columns,\n                    idIndex: idColumndIndex,\n                    index,\n                    isGenerated: jsonColumn.isGenerated,\n                    manyRelationColumns: [],\n                    name: jsonColumn.name,\n                    notNull: jsonColumn.notNull,\n                    oneRelationColumns: [],\n                    precision: jsonColumn.precision,\n                    propertyColumns: [],\n                    scale: jsonColumn.scale,\n                    type: jsonColumn.type,\n                };\n                columnsForTable[index] = column;\n                newColumns.push(column);\n                jsonColumn.propertyRefs.forEach((propertyReference) => {\n                    const property = propertiesForEntity[propertyReference.index];\n                    const propertyColumn = {\n                        column,\n                        property\n                    };\n                    newPropertyColumns.push(propertyColumn);\n                });\n            });\n        });\n    }\n    async composeApplicationRelationColumns(jsonApplication, newRelationColumns, newApplicationVersionMapByApplicationName, newApplicationReferenceMap, newRelationsMap, newColumnsMap, terminalStore, allDdlObjects) {\n        const applicationName = getFullApplicationName(jsonApplication);\n        const currentApplicationVersion = jsonApplication.versions[jsonApplication.versions.length - 1];\n        const jsonEntities = currentApplicationVersion.entities;\n        const columnsForApplication = newColumnsMap.get(applicationName);\n        const relationsForApplication = newRelationsMap.get(applicationName);\n        const applicationReferencesForApplication = newApplicationReferenceMap.get(applicationName);\n        for (let tableIndex = 0; tableIndex < jsonEntities.length; tableIndex++) {\n            const jsonEntity = jsonEntities[tableIndex];\n            const columnsForEntity = columnsForApplication[tableIndex];\n            const relationsForEntity = relationsForApplication[tableIndex];\n            for (let index = 0; index < jsonEntity.columns.length; index++) {\n                const jsonColumn = jsonEntity.columns[index];\n                const manyColumn = columnsForEntity[index];\n                const relationColumns = [];\n                for (const jsonRelationColumn of jsonColumn.manyRelationColumnRefs) {\n                    const manyRelation = relationsForEntity[jsonRelationColumn.manyRelationIndex];\n                    // if (!manyRelation.manyRelationColumns) {\n                    // \tmanyRelation.manyRelationColumns = []\n                    // }\n                    let oneRelationApplicationVersion;\n                    if (jsonRelationColumn.oneApplicationIndex\n                        || jsonRelationColumn.oneApplicationIndex === 0) {\n                        const applicationReference = applicationReferencesForApplication[jsonRelationColumn.oneApplicationIndex];\n                        oneRelationApplicationVersion = applicationReference.referencedApplicationVersion;\n                    }\n                    else {\n                        oneRelationApplicationVersion = newApplicationVersionMapByApplicationName.get(applicationName);\n                    }\n                    const referencedApplicationName = oneRelationApplicationVersion.application.fullName;\n                    const oneTableColumnsMapForApplication = newColumnsMap.get(referencedApplicationName);\n                    let oneTableColumns;\n                    let oneTableRelations;\n                    if (oneTableColumnsMapForApplication) {\n                        oneTableColumns = oneTableColumnsMapForApplication[jsonRelationColumn.oneTableIndex];\n                        oneTableRelations = newRelationsMap.get(oneRelationApplicationVersion.application.fullName)[jsonRelationColumn.oneTableIndex];\n                    }\n                    else {\n                        const applicationVersion = await this.getExistingLatestApplicationVersion(referencedApplicationName, allDdlObjects);\n                        const entitiesArray = applicationVersion.entities;\n                        const entity = entitiesArray[jsonRelationColumn.oneTableIndex];\n                        oneTableColumns = entity.columns;\n                        oneTableRelations = entity.relations;\n                    }\n                    const oneColumn = oneTableColumns[jsonRelationColumn.oneColumnIndex];\n                    // if (!jsonRelationColumn.oneApplicationIndex\n                    // \t&& !oneColumn.oneRelationColumns) {\n                    // \toneColumn.oneRelationColumns = []\n                    // }\n                    const oneRelation = oneTableRelations[jsonRelationColumn.oneRelationIndex];\n                    // if (!jsonRelationColumn.oneApplicationIndex\n                    // \t&& !oneRelation.oneRelationColumns) {\n                    // \toneRelation.oneRelationColumns = []\n                    // }\n                    const relationColumn = {\n                        id: ++terminalStore.getLastIds().relationColumns,\n                        manyColumn,\n                        manyRelation,\n                        oneColumn,\n                        oneRelation,\n                        // FIXME: figure out how to many OneToMany-only relations\n                        parentRelation: manyRelation\n                    };\n                    // manyRelation.manyRelationColumns.push(relationColumn)\n                    // if (!jsonRelationColumn.oneApplicationIndex) {\n                    // \toneColumn.oneRelationColumns.push(relationColumn)\n                    // \toneRelation.oneRelationColumns.push(relationColumn)\n                    // }\n                    relationColumns.push(relationColumn);\n                    newRelationColumns.push(relationColumn);\n                }\n                manyColumn.manyRelationColumns = []; // relationColumns\n            }\n        }\n    }\n};\n__decorate([\n    Inject()\n], ApplicationComposer.prototype, \"applicationLocator\", void 0);\n__decorate([\n    Inject()\n], ApplicationComposer.prototype, \"domainRetriever\", void 0);\n__decorate([\n    Inject()\n], ApplicationComposer.prototype, \"terminalStore\", void 0);\nApplicationComposer = __decorate([\n    Injected()\n], ApplicationComposer);\nexport { ApplicationComposer };\n//# sourceMappingURL=ApplicationComposer.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet ApplicationRecorder = class ApplicationRecorder {\n    async record(ddlObjects, \n    // normalOperation: boolean,\n    context) {\n        await this.transactionManager.transactInternal(async () => {\n            // FIXME: add support for real application versioning\n            this.setDefaultVersioning(ddlObjects);\n            await this.domainDao.checkAndInsertIfNeeded(ddlObjects.domains);\n            await this.applicationDao.insert(ddlObjects.applications);\n            await this.applicationVersionDao.insert(ddlObjects.applicationVersions);\n            await this.applicationReferenceDao.insert(ddlObjects.applicationReferences);\n            await this.applicationEntityDao.insert(ddlObjects.entities);\n            await this.applicationPropertyDao.insert(ddlObjects.properties);\n            await this.applicationRelationDao.insert(ddlObjects.relations);\n            await this.applicationColumnDao.insert(ddlObjects.columns);\n            await this.applicationPropertyColumnDao.insert(ddlObjects.propertyColumns);\n            await this.applicationRelationColumnDao.insert(ddlObjects.relationColumns);\n        }, context);\n    }\n    setDefaultVersioning(ddlObjects) {\n        for (const applicationReference of ddlObjects.applicationReferences) {\n            applicationReference.deprecatedSinceVersion = null;\n            applicationReference.removedInVersion = null;\n            applicationReference.sinceVersion = applicationReference.ownApplicationVersion;\n        }\n        for (const entity of ddlObjects.entities) {\n            entity.deprecatedSinceVersion = null;\n            entity.removedInVersion = null;\n            entity.sinceVersion = entity.applicationVersion;\n        }\n        for (const property of ddlObjects.properties) {\n            property.deprecatedSinceVersion = null;\n            property.removedInVersion = null;\n            property.sinceVersion = property.entity.applicationVersion;\n        }\n        for (const relation of ddlObjects.relations) {\n            relation.deprecatedSinceVersion = null;\n            relation.removedInVersion = null;\n            relation.sinceVersion = relation.entity.applicationVersion;\n        }\n        for (const column of ddlObjects.columns) {\n            column.deprecatedSinceVersion = null;\n            column.removedInVersion = null;\n            column.sinceVersion = column.entity.applicationVersion;\n        }\n        for (const propertyColumn of ddlObjects.propertyColumns) {\n            propertyColumn.deprecatedSinceVersion = null;\n            propertyColumn.removedInVersion = null;\n            propertyColumn.sinceVersion = propertyColumn.property.entity.applicationVersion;\n        }\n        for (const relationColumn of ddlObjects.relationColumns) {\n            relationColumn.deprecatedSinceVersion = null;\n            relationColumn.removedInVersion = null;\n            relationColumn.sinceVersion = relationColumn.parentRelation.entity.applicationVersion;\n        }\n    }\n    async bulkCreate(dao, entities, context) {\n        await dao.save(entities, context);\n    }\n};\n__decorate([\n    Inject()\n], ApplicationRecorder.prototype, \"applicationColumnDao\", void 0);\n__decorate([\n    Inject()\n], ApplicationRecorder.prototype, \"applicationDao\", void 0);\n__decorate([\n    Inject()\n], ApplicationRecorder.prototype, \"applicationEntityDao\", void 0);\n__decorate([\n    Inject()\n], ApplicationRecorder.prototype, \"applicationPropertyColumnDao\", void 0);\n__decorate([\n    Inject()\n], ApplicationRecorder.prototype, \"applicationPropertyDao\", void 0);\n__decorate([\n    Inject()\n], ApplicationRecorder.prototype, \"applicationReferenceDao\", void 0);\n__decorate([\n    Inject()\n], ApplicationRecorder.prototype, \"applicationRelationColumnDao\", void 0);\n__decorate([\n    Inject()\n], ApplicationRecorder.prototype, \"applicationRelationDao\", void 0);\n__decorate([\n    Inject()\n], ApplicationRecorder.prototype, \"applicationVersionDao\", void 0);\n__decorate([\n    Inject()\n], ApplicationRecorder.prototype, \"domainDao\", void 0);\n__decorate([\n    Inject()\n], ApplicationRecorder.prototype, \"transactionManager\", void 0);\nApplicationRecorder = __decorate([\n    Injected()\n], ApplicationRecorder);\nexport { ApplicationRecorder };\n//# sourceMappingURL=ApplicationRecorder.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbNumber, Entity, Id, Table } from '@airport/air-traffic-control';\nlet Sequence = class Sequence {\n};\n__decorate([\n    Id(),\n    Column({ name: 'APPLICATION_INDEX', nullable: false }),\n    DbNumber()\n], Sequence.prototype, \"applicationIndex\", void 0);\n__decorate([\n    Id(),\n    Column({ name: 'TABLE_INDEX', nullable: false }),\n    DbNumber()\n], Sequence.prototype, \"tableIndex\", void 0);\n__decorate([\n    Id(),\n    Column({ name: 'COLUMN_INDEX', nullable: false }),\n    DbNumber()\n], Sequence.prototype, \"columnIndex\", void 0);\n__decorate([\n    Column({ name: 'SEQUENCE_INCREMENT_BY', nullable: false })\n], Sequence.prototype, \"incrementBy\", void 0);\n__decorate([\n    Column({ name: 'CURRENT_VALUE', nullable: false })\n], Sequence.prototype, \"currentValue\", void 0);\nSequence = __decorate([\n    Entity(),\n    Table({ name: 'SEQUENCES' })\n], Sequence);\nexport { Sequence };\n//# sourceMappingURL=Sequence.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, DbNumber, Entity, GeneratedValue, Id, Table } from '@airport/air-traffic-control';\n/**\n * No actual records are inserted into this table, only used for the sequence\n */\nlet SystemWideOperationId = class SystemWideOperationId {\n};\n__decorate([\n    Id(),\n    Column({ name: 'ID', nullable: false }),\n    DbNumber(),\n    GeneratedValue()\n], SystemWideOperationId.prototype, \"id\", void 0);\nSystemWideOperationId = __decorate([\n    Entity(),\n    Table({ name: 'SYSTEM_WIDE_OPERATION_IDS' })\n], SystemWideOperationId);\nexport { SystemWideOperationId };\n//# sourceMappingURL=SystemWideOperationId.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column, Entity, GeneratedValue, Id, Table } from '@airport/air-traffic-control';\n/**\n * A record of the Terminal running (being up at a given point in time)\n */\nlet TerminalRun = class TerminalRun {\n};\n__decorate([\n    Id(),\n    GeneratedValue()\n], TerminalRun.prototype, \"id\", void 0);\n__decorate([\n    Column({ name: 'CREATE_TIMESTAMP', nullable: false })\n], TerminalRun.prototype, \"createTimestamp\", void 0);\n__decorate([\n    Column({ name: 'RANDOM_NUMBER', nullable: false })\n], TerminalRun.prototype, \"randomNumber\", void 0);\nTerminalRun = __decorate([\n    Entity(),\n    Table({ name: 'TERMINAL_RUNS' })\n], TerminalRun);\nexport { TerminalRun };\n//# sourceMappingURL=TerminalRun.js.map","import { AIRPORT_DATABASE } from '@airport/air-traffic-control';\nimport { diSet as dS, duoDiSet as ddS } from '@airport/check-in';\nimport { DEPENDENCY_INJECTION } from '@airport/direction-indicator';\nimport { getFullApplicationName } from '@airport/ground-control';\nimport { Sequence, SystemWideOperationId, TerminalRun } from '../ddl/ddl';\nconst __constructors__ = {\n    Sequence: Sequence,\n    SystemWideOperationId: SystemWideOperationId,\n    TerminalRun: TerminalRun\n};\nexport const Q_APPLICATION = {\n    __constructors__,\n    domain: 'air',\n    name: '@airport/airport-code'\n};\nexport const Q = Q_APPLICATION;\nexport function diSet(dbEntityId) {\n    return dS(Q.__dbApplication__, dbEntityId);\n}\nexport function duoDiSet(dbEntityId) {\n    return ddS(Q.__dbApplication__, dbEntityId);\n}\nDEPENDENCY_INJECTION.db().eventuallyGet(AIRPORT_DATABASE).then((airDb) => {\n    airDb.QM[getFullApplicationName(Q_APPLICATION)] = Q;\n});\n//# sourceMappingURL=qApplication.js.map","import { Dao, DaoQueryDecorators, } from '@airport/check-in';\nimport { Q, duoDiSet, } from './qApplication';\n// Application Q object Dependency Injection readiness detection Dao\nexport class SQDIDao extends Dao {\n    constructor(dbEntityId) {\n        super(dbEntityId, Q);\n    }\n}\nexport class BaseSequenceDao extends SQDIDao {\n    constructor() {\n        super(0);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(0);\n    }\n}\nBaseSequenceDao.Find = new DaoQueryDecorators();\nBaseSequenceDao.FindOne = new DaoQueryDecorators();\nBaseSequenceDao.Search = new DaoQueryDecorators();\nBaseSequenceDao.SearchOne = new DaoQueryDecorators();\nexport class BaseSystemWideOperationIdDao extends SQDIDao {\n    constructor() {\n        super(1);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(1);\n    }\n}\nBaseSystemWideOperationIdDao.Find = new DaoQueryDecorators();\nBaseSystemWideOperationIdDao.FindOne = new DaoQueryDecorators();\nBaseSystemWideOperationIdDao.Search = new DaoQueryDecorators();\nBaseSystemWideOperationIdDao.SearchOne = new DaoQueryDecorators();\nexport class BaseTerminalRunDao extends SQDIDao {\n    constructor() {\n        super(2);\n    }\n    static Save(config) {\n        return Dao.BaseSave(config);\n    }\n    static diSet() {\n        return duoDiSet(2);\n    }\n}\nBaseTerminalRunDao.Find = new DaoQueryDecorators();\nBaseTerminalRunDao.FindOne = new DaoQueryDecorators();\nBaseTerminalRunDao.Search = new DaoQueryDecorators();\nBaseTerminalRunDao.SearchOne = new DaoQueryDecorators();\n//# sourceMappingURL=baseDaos.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { BaseTerminalRunDao } from '../generated/generated';\nlet TerminalRunDao = class TerminalRunDao extends BaseTerminalRunDao {\n};\nTerminalRunDao = __decorate([\n    Injected()\n], TerminalRunDao);\nexport { TerminalRunDao };\n//# sourceMappingURL=TerminalRunDao.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { plus } from '@airport/air-traffic-control';\nimport { Injected } from '@airport/direction-indicator';\nimport { BaseSequenceDao, Q } from '../generated/generated';\nlet SequenceDao = class SequenceDao extends BaseSequenceDao {\n    static diSet() {\n        return Q.__dbApplication__ && Q.__dbApplication__.currentVersion[0]\n            .applicationVersion.entities[0];\n    }\n    async incrementCurrentValues() {\n        const s = Q.Sequence;\n        await this.db.updateWhere({\n            update: s,\n            set: {\n                currentValue: plus(s.currentValue, s.incrementBy)\n            }\n        });\n    }\n    async incrementSequence() {\n        const s = Q.Sequence;\n        await this.db.updateWhere({\n            update: s,\n            set: {\n                currentValue: plus(s.currentValue, s.incrementBy)\n            }\n        });\n    }\n};\nSequenceDao = __decorate([\n    Injected()\n], SequenceDao);\nexport { SequenceDao };\n//# sourceMappingURL=SequenceDao.js.map","import { lib } from '@airport/direction-indicator';\nimport { SequenceDao } from './dao/SequenceDao';\nimport { TerminalRunDao } from './dao/TerminalRunDao';\nconst airportCode = lib('airport-code');\nexport const SEQUENCE_DAO = airportCode.token({\n    class: SequenceDao,\n    interface: 'ISequenceDao',\n    token: 'SEQUENCE_DAO'\n});\nexport const TERMINAL_RUN_DAO = airportCode.token({\n    class: TerminalRunDao,\n    interface: 'ITerminalRunDao',\n    token: 'TERMINAL_RUN_DAO'\n});\n//# sourceMappingURL=tokens.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\n// TODO: probably not needed, included application source populates itself\n// May be needed to populate applications from the database\nlet AirportDatabasePopulator = class AirportDatabasePopulator {\n    populate() {\n        // FIXME: implement\n        // this.airDb.applications\n        // this.airDb.qApplications\n    }\n};\nAirportDatabasePopulator = __decorate([\n    Injected()\n], AirportDatabasePopulator);\nexport { AirportDatabasePopulator };\n//# sourceMappingURL=AirportDatabasePopulator.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet DdlObjectLinker = class DdlObjectLinker {\n    link(allDdlObjects) {\n        const { all, allApplicationVersionsByIds, added } = allDdlObjects;\n        const { latestApplicationVersions, properties, relations, applicationReferences, applications } = added;\n        this.linkDomainsAndApplicationsAndVersions(allApplicationVersionsByIds, all.domains, applications, latestApplicationVersions, applicationReferences);\n        const entityArrayById = this.linkEntities(allApplicationVersionsByIds, all.entities, added.entities);\n        const { propertyMapById, relationMapById } = this.linkPropertiesAndRelations(properties, relations, entityArrayById);\n        this.linkColumns(propertyMapById, relationMapById, allDdlObjects, entityArrayById);\n    }\n    linkDomainsAndApplicationsAndVersions(allApplicationVersionsByIds, domains, applications, latestApplicationVersions, applicationReferences) {\n        const domainMapById = new Map();\n        domains.forEach((domain) => {\n            domainMapById.set(domain.id, domain);\n        });\n        const applicationMapByIndex = new Map();\n        applications.forEach((application) => {\n            applicationMapByIndex.set(application.index, application);\n            const domain = domainMapById.get(application.domain.id);\n            application.domain = domain;\n            domain.applications.push(application);\n        });\n        latestApplicationVersions.forEach((applicationVersion) => {\n            const application = applicationMapByIndex.get(applicationVersion.application.index);\n            let applicationCurrentVersion = {\n                application,\n                applicationVersion\n            };\n            application.currentVersion = [applicationCurrentVersion];\n            application.versions = [applicationVersion];\n            applicationVersion.application = application;\n            applicationVersion.entities = [];\n            applicationVersion.references = [];\n            applicationVersion.referencedBy = [];\n            applicationVersion.entityMapByName = {};\n            applicationVersion.referencesMapByName = {};\n            applicationVersion.referencedByMapByName = {};\n        });\n        applicationReferences.forEach((applicationReference) => {\n            const ownApplicationVersion = allApplicationVersionsByIds[applicationReference.ownApplicationVersion.id];\n            const referencedApplicationVersion = allApplicationVersionsByIds[applicationReference.referencedApplicationVersion.id];\n            ownApplicationVersion.references[applicationReference.index] = applicationReference;\n            ownApplicationVersion.referencesMapByName[referencedApplicationVersion.application.fullName] = applicationReference;\n            referencedApplicationVersion.referencedBy.push(applicationReference);\n            referencedApplicationVersion.referencedByMapByName[ownApplicationVersion.application.fullName] = applicationReference;\n            applicationReference.ownApplicationVersion = ownApplicationVersion;\n            applicationReference.referencedApplicationVersion = referencedApplicationVersion;\n        });\n    }\n    linkEntities(allApplicationVersionsByIds, allEntities, // All of the entities of newly created applications\n    addedEntities // All of the entities of newly created applications\n    // from the latest available versions\n    ) {\n        const entityArrayById = [];\n        allEntities.forEach((entity) => {\n            entityArrayById[entity.id] = entity;\n        });\n        addedEntities.forEach((entity) => {\n            const applicationVersion = allApplicationVersionsByIds[entity.applicationVersion.id];\n            entity.applicationVersion = applicationVersion;\n            applicationVersion.entities[entity.index] = entity;\n            applicationVersion.entityMapByName[entity.name] = entity;\n            entityArrayById[entity.id] = entity;\n            entity.columns = [];\n            entity.properties = [];\n            entity.relations = [];\n            entity.relationReferences = [];\n            entity.columnMap = {};\n            entity.idColumns = [];\n            entity.idColumnMap = {};\n            entity.propertyMap = {};\n        });\n        return entityArrayById;\n    }\n    linkPropertiesAndRelations(properties, relations, entityArrayById) {\n        const propertyMapById = new Map();\n        properties.forEach((property) => {\n            // Entity is already property wired in\n            const entity = entityArrayById[property.entity.id];\n            entity.properties[property.index] = property;\n            entity.propertyMap[property.name] = property;\n            property.entity = entity;\n            property.propertyColumns = [];\n            propertyMapById.set(property.id, property);\n        });\n        const relationMapById = new Map();\n        relations.forEach((relation) => {\n            const entity = entityArrayById[relation.entity.id];\n            entity.relations[relation.index] = relation;\n            let relationEntity = entityArrayById[relation.relationEntity.id];\n            if (!relationEntity) {\n                relationEntity = this.terminalStore.getAllEntities()[relation.relationEntity.id];\n            }\n            relationEntity.relationReferences.push(relation);\n            const property = propertyMapById.get(relation.property.id);\n            relation.property = property;\n            property.relation = [relation];\n            relation.entity = entity;\n            relation.relationEntity = relationEntity;\n            relation.manyRelationColumns = [];\n            relation.oneRelationColumns = [];\n            relationMapById.set(relation.id, relation);\n        });\n        return {\n            propertyMapById, relationMapById\n        };\n    }\n    linkColumns(propertyMapById, relationMapById, allDdlObjects, entityArrayById) {\n        const columnMapById = new Map();\n        allDdlObjects.all.columns.forEach((column) => {\n            columnMapById.set(column.id, column);\n        });\n        allDdlObjects.added.columns.forEach((column) => {\n            columnMapById.set(column.id, column);\n            const entity = entityArrayById[column.entity.id];\n            entity.columns[column.index] = column;\n            entity.columnMap[column.name] = column;\n            if (column.idIndex || column.idIndex === 0) {\n                entity.idColumns[column.idIndex] = column;\n                entity.idColumnMap[column.name] = column;\n            }\n            column.entity = entity;\n        });\n        allDdlObjects.added.propertyColumns.forEach((propertyColumn) => {\n            const column = columnMapById.get(propertyColumn.column.id);\n            column.propertyColumns.push(propertyColumn);\n            const property = propertyMapById.get(propertyColumn.property.id);\n            property.propertyColumns.push(propertyColumn);\n            propertyColumn.column = column;\n            propertyColumn.property = property;\n        });\n        allDdlObjects.added.relationColumns.forEach((relationColumn) => {\n            let manyColumn = columnMapById.get(relationColumn.manyColumn.id);\n            if (!manyColumn) {\n                manyColumn = this.terminalStore.getAllColumns()[relationColumn.manyColumn.id];\n            }\n            manyColumn.manyRelationColumns.push(relationColumn);\n            let oneColumn = columnMapById.get(relationColumn.oneColumn.id);\n            if (!oneColumn) {\n                oneColumn = this.terminalStore.getAllColumns()[relationColumn.oneColumn.id];\n            }\n            oneColumn.oneRelationColumns.push(relationColumn);\n            let manyRelation;\n            if (relationColumn.manyRelation && relationColumn.manyRelation.id) {\n                manyRelation = relationMapById.get(relationColumn.manyRelation.id);\n                if (!manyRelation) {\n                    manyRelation = this.terminalStore.getAllRelations()[relationColumn.manyRelation.id];\n                }\n                manyRelation.manyRelationColumns.push(relationColumn);\n            }\n            let oneRelation;\n            if (relationColumn.oneRelation && relationColumn.oneRelation.id) {\n                oneRelation = relationMapById.get(relationColumn.oneRelation.id);\n                if (!oneRelation) {\n                    oneRelation = this.terminalStore.getAllRelations()[relationColumn.oneRelation.id];\n                }\n                oneRelation.oneRelationColumns.push(relationColumn);\n            }\n            relationColumn.manyColumn = manyColumn;\n            relationColumn.manyRelation = manyRelation;\n            relationColumn.oneColumn = oneColumn;\n            relationColumn.oneRelation = oneRelation;\n        });\n    }\n};\n__decorate([\n    Inject()\n], DdlObjectLinker.prototype, \"terminalStore\", void 0);\nDdlObjectLinker = __decorate([\n    Injected()\n], DdlObjectLinker);\nexport { DdlObjectLinker };\n//# sourceMappingURL=DdlObjectLinker.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet DdlObjectRetriever = class DdlObjectRetriever {\n    async retrieveDdlObjects() {\n        const applications = await this.applicationDao.findAllActive();\n        const applicationIndexes = [];\n        const domainIdSet = new Set();\n        applications.forEach(application => {\n            applicationIndexes.push(application.index);\n            domainIdSet.add(application.domain.id);\n        });\n        applications.sort((application1, application2) => {\n            return application1.index - application2.index;\n        });\n        const domains = await this.domainDao.findByIdIn(Array.from(domainIdSet));\n        const allApplicationVersions = await this.applicationVersionDao\n            .findAllActiveOrderByApplicationIndexAndId();\n        let lastApplicationIndex;\n        // const allApplicationVersionsByIds: IApplicationVersion[] = []\n        const latestApplicationVersions = [];\n        const applicationVersions = [];\n        for (const applicationVersion of allApplicationVersions) {\n            if (applicationVersion.application.index !== lastApplicationIndex) {\n                latestApplicationVersions.push(applicationVersion);\n            }\n            // allApplicationVersionsByIds[applicationVersion.id] = applicationVersion\n            lastApplicationIndex = applicationVersion.application.index;\n            applicationVersions.push(applicationVersion);\n        }\n        const latestApplicationVersionIds = latestApplicationVersions.map(applicationVersion => applicationVersion.id);\n        const applicationReferences = await this.applicationReferenceDao\n            .findAllForApplicationVersions(latestApplicationVersionIds);\n        const entities = await this.applicationEntityDao\n            .findAllForApplicationVersions(latestApplicationVersionIds);\n        const entityIds = entities.map(entity => entity.id);\n        /*\n        const entityIds = entities.map(\n    entity => {\n        if (entity.tableConfig) {\n            entity.tableConfig = JSON.parse(entity.tableConfig as any)\n        }\n        return entity.id\n    })\n         */\n        const properties = await this.applicationPropertyDao\n            .findAllForEntities(entityIds);\n        const propertyIds = properties.map(property => property.id);\n        const relations = await this.applicationRelationDao\n            .findAllForProperties(propertyIds);\n        const columns = await this.applicationColumnDao\n            .findAllForEntities(entityIds);\n        const columnIds = columns.map(column => column.id);\n        const propertyColumns = await this.applicationPropertyColumnDao\n            .findAllForColumns(columnIds);\n        const relationColumns = await this.applicationRelationColumnDao\n            .findAllForColumns(columnIds);\n        const lastTerminalState = this.terminalStore.getTerminalState();\n        const lastIds = {\n            columns: columns.length,\n            domains: domains.length,\n            entities: entities.length,\n            properties: properties.length,\n            propertyColumns: propertyColumns.length,\n            relationColumns: relationColumns.length,\n            relations: relations.length,\n            applications: applications.length,\n            applicationVersions: applicationVersions.length,\n        };\n        this.terminalStore.state.next({\n            ...lastTerminalState,\n            lastIds\n        });\n        return {\n            // allDomains: domains,\n            // allApplications: applications,\n            // allApplicationVersionsByIds,\n            columns,\n            domains,\n            entities,\n            latestApplicationVersions,\n            properties,\n            propertyColumns,\n            relationColumns,\n            relations,\n            applicationReferences,\n            applications,\n            applicationVersions\n        };\n    }\n};\n__decorate([\n    Inject()\n], DdlObjectRetriever.prototype, \"applicationColumnDao\", void 0);\n__decorate([\n    Inject()\n], DdlObjectRetriever.prototype, \"applicationDao\", void 0);\n__decorate([\n    Inject()\n], DdlObjectRetriever.prototype, \"applicationEntityDao\", void 0);\n__decorate([\n    Inject()\n], DdlObjectRetriever.prototype, \"applicationPropertyColumnDao\", void 0);\n__decorate([\n    Inject()\n], DdlObjectRetriever.prototype, \"applicationPropertyDao\", void 0);\n__decorate([\n    Inject()\n], DdlObjectRetriever.prototype, \"applicationReferenceDao\", void 0);\n__decorate([\n    Inject()\n], DdlObjectRetriever.prototype, \"applicationRelationColumnDao\", void 0);\n__decorate([\n    Inject()\n], DdlObjectRetriever.prototype, \"applicationRelationDao\", void 0);\n__decorate([\n    Inject()\n], DdlObjectRetriever.prototype, \"applicationVersionDao\", void 0);\n__decorate([\n    Inject()\n], DdlObjectRetriever.prototype, \"domainDao\", void 0);\n__decorate([\n    Inject()\n], DdlObjectRetriever.prototype, \"terminalStore\", void 0);\nDdlObjectRetriever = __decorate([\n    Injected()\n], DdlObjectRetriever);\nexport { DdlObjectRetriever };\n//# sourceMappingURL=DdlObjectRetriever.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { orderApplicationsInOrderOfPrecedence, setQApplicationEntities } from '@airport/air-traffic-control';\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet QueryEntityClassCreator = class QueryEntityClassCreator {\n    createAll(applications) {\n        const applicationsToCreate = orderApplicationsInOrderOfPrecedence(applications);\n        applicationsToCreate.map(dbApplication => this.create(dbApplication));\n    }\n    create(dbApplication) {\n        let qApplication = this.airportDatabase.QM[dbApplication.fullName];\n        // If the Application API source has already been loaded\n        if (qApplication) {\n            qApplication.__dbApplication__ = dbApplication;\n        }\n        else {\n            qApplication = {\n                __constructors__: {},\n                __qConstructors__: {},\n                __dbApplication__: dbApplication,\n                name: dbApplication.name,\n                domain: dbApplication.domain.name\n            };\n            this.airportDatabase.QM[dbApplication.fullName] = qApplication;\n        }\n        this.airportDatabase.Q[dbApplication.index] = qApplication;\n        setQApplicationEntities(dbApplication, qApplication, this.airportDatabase.qApplications);\n        return qApplication;\n    }\n};\n__decorate([\n    Inject()\n], QueryEntityClassCreator.prototype, \"airportDatabase\", void 0);\nQueryEntityClassCreator = __decorate([\n    Injected()\n], QueryEntityClassCreator);\nexport { QueryEntityClassCreator };\n//# sourceMappingURL=QueryEntityClassCreator.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nlet QueryObjectInitializer = class QueryObjectInitializer {\n    generateQObjectsAndPopulateStore(allDdlObjects) {\n        this.ddlObjectLinker.link(allDdlObjects);\n        this.queryEntityClassCreator.createAll(allDdlObjects.all.applications);\n        const lastTerminalState = this.terminalStore.getTerminalState();\n        const existingDomainMap = {};\n        for (const domain of lastTerminalState.domains) {\n            existingDomainMap[domain.name] = domain;\n        }\n        for (const domain of allDdlObjects.added.domains) {\n            delete existingDomainMap[domain.name];\n        }\n        const unmodifiedDomains = [];\n        for (const domainName in existingDomainMap) {\n            unmodifiedDomains.push(existingDomainMap[domainName]);\n        }\n        const existingApplicationMap = {};\n        for (const application of lastTerminalState.applications) {\n            existingApplicationMap[application.fullName] = application;\n        }\n        for (const application of allDdlObjects.added.applications) {\n            delete existingApplicationMap[application.fullName];\n        }\n        const unmodifiedApplications = [];\n        for (const applicationName in existingApplicationMap) {\n            unmodifiedApplications.push(existingApplicationMap[applicationName]);\n        }\n        this.terminalStore.state.next({\n            ...lastTerminalState,\n            domains: [\n                ...unmodifiedDomains,\n                ...allDdlObjects.added.domains\n            ],\n            applications: [\n                ...unmodifiedApplications,\n                ...allDdlObjects.added.applications\n            ]\n        });\n    }\n    async initialize() {\n        const ddlObjects = await this.ddlObjectRetriever.retrieveDdlObjects();\n        const allApplicationVersionsByIds = [];\n        for (const applicationVersion of ddlObjects.applicationVersions) {\n            allApplicationVersionsByIds[applicationVersion.id] = applicationVersion;\n        }\n        let allDdlObjects = {\n            all: ddlObjects,\n            allApplicationVersionsByIds,\n            added: ddlObjects\n        };\n        this.generateQObjectsAndPopulateStore(allDdlObjects);\n        return allDdlObjects;\n    }\n};\n__decorate([\n    Inject()\n], QueryObjectInitializer.prototype, \"ddlObjectLinker\", void 0);\n__decorate([\n    Inject()\n], QueryObjectInitializer.prototype, \"ddlObjectRetriever\", void 0);\n__decorate([\n    Inject()\n], QueryObjectInitializer.prototype, \"queryEntityClassCreator\", void 0);\n__decorate([\n    Inject()\n], QueryObjectInitializer.prototype, \"terminalStore\", void 0);\nQueryObjectInitializer = __decorate([\n    Injected()\n], QueryObjectInitializer);\nexport { QueryObjectInitializer };\n//# sourceMappingURL=QueryObjectInitializer.js.map","import { AIRPORT_DATABASE } from '@airport/air-traffic-control';\nimport { APPLICATION_COLUMN_DAO, APPLICATION_DAO, APPLICATION_ENTITY_DAO, APPLICATION_PROPERTY_COLUMN_DAO, APPLICATION_PROPERTY_DAO, APPLICATION_REFERENCE_DAO, APPLICATION_RELATION_COLUMN_DAO, APPLICATION_RELATION_DAO, APPLICATION_VERSION_DAO, DOMAIN_DAO } from '@airport/airspace';\nimport { lib } from '@airport/direction-indicator';\nimport { TERMINAL_STORE } from '@airport/terminal-map';\nimport { AirportDatabasePopulator } from './AirportDatabasePopulator';\nimport { DdlObjectLinker } from './DdlObjectLinker';\nimport { DdlObjectRetriever } from './DdlObjectRetriever';\nimport { QueryEntityClassCreator } from './QueryEntityClassCreator';\nimport { QueryObjectInitializer } from './QueryObjectInitializer';\nconst takeoff = lib('takeoff');\nexport const AIRPORT_DATABASE_POPULATOR = takeoff.token({\n    class: AirportDatabasePopulator,\n    interface: 'IAirportDatabasePopulator',\n    token: 'AIRPORT_DATABASE_POPULATOR'\n});\nexport const DDL_OBJECT_LINKER = takeoff.token({\n    class: DdlObjectLinker,\n    interface: 'IDdlObjectLinker',\n    token: 'DDL_OBJECT_LINKER'\n});\nexport const DDL_OBJECT_RETRIEVER = takeoff.token({\n    class: DdlObjectRetriever,\n    interface: 'IDdlObjectRetriever',\n    token: 'DDL_OBJECT_RETRIEVER'\n});\nexport const QUERY_ENTITY_CLASS_CREATOR = takeoff.token({\n    class: QueryEntityClassCreator,\n    interface: 'IQueryEntityClassCreator',\n    token: 'QUERY_ENTITY_CLASS_CREATOR'\n});\nexport const QUERY_OBJECT_INITIALIZER = takeoff.token({\n    class: QueryObjectInitializer,\n    interface: 'IQueryObjectInitializer',\n    token: 'QUERY_OBJECT_INITIALIZER'\n});\nDDL_OBJECT_LINKER.setDependencies({\n    terminalStore: TERMINAL_STORE\n});\nDDL_OBJECT_RETRIEVER.setDependencies({\n    applicationColumnDao: APPLICATION_COLUMN_DAO,\n    applicationDao: APPLICATION_DAO,\n    applicationEntityDao: APPLICATION_ENTITY_DAO,\n    applicationPropertyColumnDao: APPLICATION_PROPERTY_COLUMN_DAO,\n    applicationPropertyDao: APPLICATION_PROPERTY_DAO,\n    applicationReferenceDao: APPLICATION_REFERENCE_DAO,\n    applicationRelationColumnDao: APPLICATION_RELATION_COLUMN_DAO,\n    applicationRelationDao: APPLICATION_RELATION_DAO,\n    applicationVersionDao: APPLICATION_VERSION_DAO,\n    domainDao: DOMAIN_DAO\n});\nQUERY_ENTITY_CLASS_CREATOR.setDependencies({\n    airportDatabase: AIRPORT_DATABASE\n});\nQUERY_OBJECT_INITIALIZER.setDependencies({\n    ddlObjectLinker: DDL_OBJECT_LINKER,\n    ddlObjectRetriever: DDL_OBJECT_RETRIEVER,\n    queryEntityClassCreator: QUERY_ENTITY_CLASS_CREATOR,\n    terminalStore: TERMINAL_STORE\n});\n//# sourceMappingURL=tokens.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { getFullApplicationName } from '@airport/ground-control';\nlet ApplicationInitializer = class ApplicationInitializer {\n    addNewApplicationVersionsToAll(ddlObjects) {\n        for (const applicationVersion of ddlObjects.added.applicationVersions) {\n            ddlObjects.allApplicationVersionsByIds[applicationVersion.id] = applicationVersion;\n        }\n    }\n    async hydrate(jsonApplications, context) {\n        await this.stage(jsonApplications, context);\n        // Hydrate all DDL objects and Sequences\n        const ddlObjects = await this.queryObjectInitializer.initialize();\n        this.addNewApplicationVersionsToAll(ddlObjects);\n        this.setAirDbApplications(ddlObjects);\n        await this.sequenceGenerator.initialize();\n    }\n    /*\n     * Initialization scenarios:\n     *\n     * Brand new install - initialize BLUEPRINT applications\n     * Install new App - initialize New application (and any new dependency applications)\n     * Reload existing install - hydrate all applications\n     * Reload exiting App - nothing to do\n     */\n    async initialize(jsonApplications, context, checkDependencies, loadExistingApplications) {\n        const applicationsWithValidDependencies = await this.\n            getApplicationsWithValidDependencies(jsonApplications, checkDependencies);\n        const existingApplicationMap = new Map();\n        if (loadExistingApplications) {\n            const applications = await this.applicationDao.findAllWithJson();\n            for (const application of applications) {\n                existingApplicationMap.set(application.fullName, application);\n            }\n        }\n        const newJsonApplicationMap = new Map();\n        for (const jsonApplication of jsonApplications) {\n            const existingApplication = existingApplicationMap.get(getFullApplicationName(jsonApplication));\n            if (existingApplication) {\n                jsonApplication.lastIds = existingApplication.versions[0].jsonApplication.lastIds;\n            }\n            else {\n                newJsonApplicationMap.set(getFullApplicationName(jsonApplication), jsonApplication);\n            }\n        }\n        let checkedApplicationsWithValidDependencies = [];\n        for (const jsonApplication of applicationsWithValidDependencies) {\n            const existingApplication = existingApplicationMap.get(getFullApplicationName(jsonApplication));\n            if (!existingApplication) {\n                checkedApplicationsWithValidDependencies.push(jsonApplication);\n                await this.applicationBuilder.build(jsonApplication, existingApplicationMap, newJsonApplicationMap, context);\n            }\n        }\n        const allDdlObjects = await this.applicationComposer.compose(checkedApplicationsWithValidDependencies, {\n            terminalStore: this.terminalStore\n        });\n        this.addNewApplicationVersionsToAll(allDdlObjects);\n        this.queryObjectInitializer.generateQObjectsAndPopulateStore(allDdlObjects);\n        this.setAirDbApplications(allDdlObjects);\n        const newSequences = await this.applicationBuilder.buildAllSequences(applicationsWithValidDependencies, context);\n        await this.sequenceGenerator.initialize(newSequences);\n        await this.applicationRecorder.record(allDdlObjects.added, context);\n    }\n    async initializeForAIRportApp(jsonApplication) {\n        const applicationsWithValidDependencies = await this.\n            getApplicationsWithValidDependencies([jsonApplication], false);\n        const ddlObjects = await this.applicationComposer.compose(applicationsWithValidDependencies, {\n            deepTraverseReferences: true,\n            terminalStore: this.terminalStore\n        });\n        this.addNewApplicationVersionsToAll(ddlObjects);\n        this.queryObjectInitializer.generateQObjectsAndPopulateStore(ddlObjects);\n        this.setAirDbApplications(ddlObjects);\n    }\n    async stage(jsonApplications, context) {\n        // Temporarily Initialize application DDL objects and Sequences to allow for normal hydration\n        const tempDdlObjects = await this.applicationComposer.compose(jsonApplications, {\n            terminalStore: this.terminalStore\n        });\n        this.addNewApplicationVersionsToAll(tempDdlObjects);\n        this.queryObjectInitializer.generateQObjectsAndPopulateStore(tempDdlObjects);\n        this.setAirDbApplications(tempDdlObjects);\n        const newSequences = await this.applicationBuilder.stageSequences(jsonApplications, context);\n        await this.sequenceGenerator.tempInitialize(newSequences);\n    }\n    async wait(milliseconds) {\n        return new Promise((resolve, _reject) => {\n            setTimeout(() => {\n                resolve();\n            }, milliseconds);\n        });\n    }\n    async getApplicationsWithValidDependencies(jsonApplications, checkDependencies) {\n        const jsonApplicationsToInstall = [];\n        for (const jsonApplication of jsonApplications) {\n            await this.applicationChecker.check(jsonApplication);\n            const existingApplication = this.applicationLocator.locateExistingApplicationVersionRecord(jsonApplication, this.terminalStore);\n            if (existingApplication) {\n                // Nothing needs to be done, we already have this application version\n                continue;\n            }\n            jsonApplicationsToInstall.push(jsonApplication);\n        }\n        let applicationsWithValidDependencies;\n        if (checkDependencies) {\n            const applicationReferenceCheckResults = await this.applicationChecker\n                .checkDependencies(jsonApplicationsToInstall);\n            if (applicationReferenceCheckResults.applicationsInNeedOfAdditionalDependencies.length) {\n                // const\n                for (let i = 0; i < applicationReferenceCheckResults.neededDependencies.length; i++) {\n                    const neededDependency = applicationReferenceCheckResults.neededDependencies[i];\n                    const fullApplicationName = getFullApplicationName(neededDependency);\n                    await this.nativeInitializeApplication(neededDependency.domain, neededDependency.name, fullApplicationName);\n                }\n            }\n            applicationsWithValidDependencies = [\n                ...applicationReferenceCheckResults.applicationsWithValidDependencies,\n                ...applicationReferenceCheckResults.applicationsInNeedOfAdditionalDependencies\n            ];\n        }\n        else {\n            applicationsWithValidDependencies = jsonApplicationsToInstall;\n        }\n        return applicationsWithValidDependencies;\n    }\n    setAirDbApplications(ddlObjects) {\n        for (let application of ddlObjects.all.applications) {\n            this.airportDatabase.applications[application.index] = application;\n        }\n    }\n};\n__decorate([\n    Inject()\n], ApplicationInitializer.prototype, \"airportDatabase\", void 0);\n__decorate([\n    Inject()\n], ApplicationInitializer.prototype, \"applicationBuilder\", void 0);\n__decorate([\n    Inject()\n], ApplicationInitializer.prototype, \"applicationChecker\", void 0);\n__decorate([\n    Inject()\n], ApplicationInitializer.prototype, \"applicationComposer\", void 0);\n__decorate([\n    Inject()\n], ApplicationInitializer.prototype, \"applicationDao\", void 0);\n__decorate([\n    Inject()\n], ApplicationInitializer.prototype, \"applicationLocator\", void 0);\n__decorate([\n    Inject()\n], ApplicationInitializer.prototype, \"applicationRecorder\", void 0);\n__decorate([\n    Inject()\n], ApplicationInitializer.prototype, \"queryObjectInitializer\", void 0);\n__decorate([\n    Inject()\n], ApplicationInitializer.prototype, \"sequenceGenerator\", void 0);\n__decorate([\n    Inject()\n], ApplicationInitializer.prototype, \"terminalStore\", void 0);\nApplicationInitializer = __decorate([\n    Injected()\n], ApplicationInitializer);\nexport { ApplicationInitializer };\n//# sourceMappingURL=ApplicationInitializer.js.map","import { AIRPORT_DATABASE } from '@airport/air-traffic-control';\nimport { SEQUENCE_DAO } from '@airport/airport-code';\nimport { APPLICATION_COLUMN_DAO, APPLICATION_DAO, APPLICATION_ENTITY_DAO, APPLICATION_PROPERTY_COLUMN_DAO, APPLICATION_PROPERTY_DAO, APPLICATION_REFERENCE_DAO, APPLICATION_RELATION_COLUMN_DAO, APPLICATION_RELATION_DAO, APPLICATION_VERSION_DAO, DOMAIN_DAO } from '@airport/airspace';\nimport { SEQUENCE_GENERATOR } from '@airport/check-in';\nimport { lib } from '@airport/direction-indicator';\nimport { QUERY_OBJECT_INITIALIZER } from '@airport/takeoff';\nimport { DOMAIN_RETRIEVER, STORE_DRIVER, TERMINAL_STORE, TRANSACTION_MANAGER } from '@airport/terminal-map';\nimport { ApplicationInitializer } from './ApplicationInitializer';\nimport { SqlApplicationBuilder } from './builder/SqlApplicationBuilder';\nimport { ApplicationChecker } from './checker/ApplicationChecker';\nimport { ApplicationLocator } from './locator/ApplicationLocator';\nimport { ApplicationComposer } from './recorder/ApplicationComposer';\nimport { ApplicationRecorder } from './recorder/ApplicationRecorder';\nconst landing = lib('landing');\nexport const ABSTRACT_APPLICATION_INITIALIZER = landing.token({\n    class: ApplicationInitializer,\n    interface: 'class ApplicationInitializer',\n    token: 'ABSTRACT_APPLICATION_INITIALIZER'\n});\nexport const APPLICATION_BUILDER = landing.token({\n    class: null,\n    interface: 'IApplicationBuilder',\n    token: 'APPLICATION_BUILDER'\n});\nexport const APPLICATION_CHECKER = landing.token({\n    class: ApplicationChecker,\n    interface: 'IApplicationChecker',\n    token: 'APPLICATION_CHECKER'\n});\nexport const APPLICATION_COMPOSER = landing.token({\n    class: ApplicationComposer,\n    interface: 'IApplicationComposer',\n    token: 'APPLICATION_COMPOSER'\n});\nexport const APPLICATION_LOCATOR = landing.token({\n    class: ApplicationLocator,\n    interface: 'IApplicationLocator',\n    token: 'APPLICATION_LOCATOR'\n});\nexport const APPLICATION_RECORDER = landing.token({\n    class: ApplicationRecorder,\n    interface: 'IApplicationRecorder',\n    token: 'APPLICATION_RECORDER'\n});\nexport const SQL_APPLICATION_BUILDER = landing.token({\n    class: SqlApplicationBuilder,\n    interface: 'class SqlApplicationBuilder',\n    token: 'SQL_APPLICATION_BUILDER'\n});\nABSTRACT_APPLICATION_INITIALIZER.setDependencies({\n    airportDatabase: AIRPORT_DATABASE,\n    applicationBuilder: APPLICATION_BUILDER,\n    applicationChecker: APPLICATION_CHECKER,\n    applicationDao: APPLICATION_DAO,\n    applicationLocator: APPLICATION_LOCATOR,\n    queryObjectInitializer: QUERY_OBJECT_INITIALIZER,\n    sequenceGenerator: SEQUENCE_GENERATOR,\n    terminalStore: TERMINAL_STORE\n});\nAPPLICATION_BUILDER.setDependencies({\n    airportDatabase: AIRPORT_DATABASE\n});\nAPPLICATION_CHECKER.setDependencies({\n    applicationDao: APPLICATION_DAO\n});\nAPPLICATION_COMPOSER.setDependencies({\n    applicationLocator: APPLICATION_LOCATOR,\n    domainRetriever: DOMAIN_RETRIEVER,\n    terminalStore: TERMINAL_STORE\n});\nAPPLICATION_RECORDER.setDependencies({\n    applicationColumnDao: APPLICATION_COLUMN_DAO,\n    applicationDao: APPLICATION_DAO,\n    applicationEntityDao: APPLICATION_ENTITY_DAO,\n    applicationPropertyColumnDao: APPLICATION_PROPERTY_COLUMN_DAO,\n    applicationPropertyDao: APPLICATION_PROPERTY_DAO,\n    applicationRecorder: APPLICATION_RECORDER,\n    applicationReferenceDao: APPLICATION_REFERENCE_DAO,\n    applicationRelationColumnDao: APPLICATION_RELATION_COLUMN_DAO,\n    applicationRelationDao: APPLICATION_RELATION_DAO,\n    applicationVersionDao: APPLICATION_VERSION_DAO,\n    domainDao: DOMAIN_DAO,\n    transactionManager: TRANSACTION_MANAGER\n});\nSQL_APPLICATION_BUILDER.setDependencies({\n    airportDatabase: AIRPORT_DATABASE,\n    sequenceDao: SEQUENCE_DAO,\n    storeDriver: STORE_DRIVER\n});\n//# sourceMappingURL=tokens.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Injected } from '@airport/direction-indicator';\nimport { ApplicationInitializer } from \"@airport/landing\";\nlet WebApplicationInitializer = class WebApplicationInitializer extends ApplicationInitializer {\n    constructor() {\n        super(...arguments);\n        this.applicationWindowMap = new Map();\n        this.initializingApplicationMap = new Map();\n    }\n    async nativeInitializeApplication(domain, application, fullApplicationName) {\n        if (this.terminalStore.getReceiver().initializedApps\n            .has(fullApplicationName)) {\n            return;\n        }\n        let appIframes = document.getElementsByName(fullApplicationName);\n        let appIframe;\n        if (!appIframes.length) {\n            appIframe = document.createElement('iframe');\n            appIframe.src = 'http://' + domain + '/AIRport/apps/'\n                + application + '/index.html';\n            appIframe.name = fullApplicationName;\n            appIframe.style.display = 'none';\n            document.body.appendChild(appIframe);\n        }\n        while (!this.terminalStore.getReceiver().initializedApps\n            .has(fullApplicationName)) {\n            await this.wait(100);\n        }\n        this.applicationWindowMap.set(fullApplicationName, appIframe.contentWindow);\n        this.initializingApplicationMap.set(fullApplicationName, false);\n    }\n};\nWebApplicationInitializer = __decorate([\n    Injected()\n], WebApplicationInitializer);\nexport { WebApplicationInitializer };\n//# sourceMappingURL=WebApplicationInitializer.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { getFullApplicationNameFromDomainAndName } from '@airport/ground-control';\nimport { IsolateMessageType, } from '@airport/apron';\nimport { TransactionalReceiver } from '@airport/terminal';\nimport { map } from 'rxjs/operators';\nlet WebTransactionalReceiver = class WebTransactionalReceiver extends TransactionalReceiver {\n    constructor() {\n        super();\n        const ownDomain = window.location.hostname;\n        const mainDomainFragments = ownDomain.split('.');\n        if (mainDomainFragments[0] === 'www'\n            || mainDomainFragments[0].startsWith('random_')) {\n            mainDomainFragments.splice(0, 1);\n        }\n        const domainPrefix = '.' + mainDomainFragments.join('.');\n        // set domain to a random value so that an iframe cannot directly invoke logic in this domain\n        if (document.domain !== 'localhost') {\n            document.domain = 'random_' + Math.random() + '_' + Math.random() + domainPrefix;\n        }\n        const webReciever = this.terminalStore.getWebReceiver();\n        webReciever.domainPrefix = domainPrefix;\n        webReciever.mainDomainFragments = mainDomainFragments;\n    }\n    handleClientRequest(message) {\n        if (message.__received__) {\n            return;\n        }\n        message.__received__ = true;\n        // All requests need to have a application signature\n        // to know what application is being communicated to/from\n        if (!this.hasValidApplicationInfo(message)) {\n            return;\n        }\n        if (this.webMessageReciever.needMessageSerialization()) {\n            // FIXME: deserialize message\n        }\n        const webReciever = this.terminalStore.getWebReceiver();\n        if (webReciever.onClientMessageCallback) {\n            const receivedDate = new Date();\n            message.__receivedTime__ = receivedDate.getTime();\n            webReciever.onClientMessageCallback(message);\n        }\n        switch (message.category) {\n            case 'FromClient':\n                const fromClientRedirectedMessage = {\n                    ...message,\n                    __received__: false,\n                    __receivedTime__: null,\n                    category: 'FromClientRedirected'\n                };\n                this.handleFromClientRequest(fromClientRedirectedMessage).then();\n                break;\n            case 'IsConnectionReady':\n                this.ensureConnectionIsReady(message).then();\n                break;\n        }\n    }\n    handleAppRequest(message, messageOrigin, source) {\n        if (message.__received__) {\n            return;\n        }\n        message.__received__ = true;\n        // All requests need to have a application signature\n        // to know what application is being communicated to/from\n        if (!this.hasValidApplicationInfo(message)) {\n            return;\n        }\n        const webReciever = this.terminalStore.getWebReceiver();\n        if (webReciever.onClientMessageCallback) {\n            const receivedDate = new Date();\n            message.__receivedTime__ = receivedDate.getTime();\n            webReciever.onClientMessageCallback(message);\n        }\n        switch (message.category) {\n            case 'ToDb':\n                this.handleIsolateMessage(message, messageOrigin, source).then();\n                break;\n            case 'ToClient':\n                const interAppApiCallRequest = webReciever.pendingInterAppApiCallMessageMap.get(message.id);\n                const context = {};\n                this.endApiCall({\n                    application: message.application,\n                    domain: message.domain,\n                    methodName: message.methodName,\n                    objectName: message.objectName,\n                }, message.errorMessage, context).then((success) => {\n                    if (interAppApiCallRequest) {\n                        if (!success) {\n                            interAppApiCallRequest.reject(message.errorMessage);\n                        }\n                        else if (message.errorMessage) {\n                            interAppApiCallRequest.reject(message.errorMessage);\n                        }\n                        else {\n                            interAppApiCallRequest.resolve(message.payload);\n                        }\n                    }\n                    else {\n                        const toClientRedirectedMessage = {\n                            ...message,\n                            __received__: false,\n                            __receivedTime__: null,\n                            application: message.application,\n                            category: 'ToClientRedirected',\n                            domain: message.domain,\n                            errorMessage: null,\n                            methodName: message.methodName,\n                            objectName: message.objectName,\n                            payload: null,\n                            protocol: null,\n                        };\n                        if (!success) {\n                            toClientRedirectedMessage.errorMessage = context.errorMessage;\n                            toClientRedirectedMessage.payload = null;\n                        }\n                        this.handleToClientRequest(toClientRedirectedMessage, messageOrigin)\n                            .then();\n                    }\n                });\n                break;\n            default:\n                break;\n        }\n    }\n    onMessage(callback) {\n        const webReciever = this.terminalStore.getWebReceiver();\n        webReciever.onClientMessageCallback = callback;\n    }\n    async nativeStartApiCall(message, context) {\n        return await this.startApiCall(message, context, async () => {\n            const fullApplicationName = getFullApplicationNameFromDomainAndName(message.domain, message.application);\n            const frameWindow = this.getFrameWindow(fullApplicationName);\n            if (frameWindow) {\n                // Forward the request to the correct application iframe\n                frameWindow.postMessage(message, '*');\n            }\n            else {\n                throw new Error(`No Application IFrame found for: ${fullApplicationName}`);\n            }\n        });\n    }\n    async nativeHandleApiCall(message, context) {\n        if (!await this.nativeStartApiCall(message, context)) {\n            throw new Error(context.errorMessage);\n        }\n        const webReciever = this.terminalStore.getWebReceiver();\n        return new Promise((resolve, reject) => {\n            webReciever.pendingInterAppApiCallMessageMap.set(message.id, {\n                message,\n                reject,\n                resolve\n            });\n        });\n    }\n    async ensureConnectionIsReady(message) {\n        const fullApplicationName = getFullApplicationNameFromDomainAndName(message.domain, message.application);\n        const applicationInitializing = this.applicationInitializer.initializingApplicationMap.get(fullApplicationName);\n        if (applicationInitializing) {\n            return;\n        }\n        const applicationWindow = this.applicationInitializer.applicationWindowMap.get(fullApplicationName);\n        if (!applicationWindow) {\n            this.applicationInitializer.initializingApplicationMap.set(fullApplicationName, true);\n            await this.applicationInitializer.nativeInitializeApplication(message.domain, message.application, fullApplicationName);\n        }\n        const connectionIsReadyMessage = {\n            application: message.application,\n            category: 'ConnectionIsReady',\n            domain: message.domain,\n            errorMessage: null,\n            id: message.id,\n            methodName: message.methodName,\n            objectName: message.objectName,\n            protocol: window.location.protocol,\n            payload: null,\n        };\n        if (this.webMessageReciever.needMessageSerialization()) {\n            // FIXME: serialize message\n        }\n        this.webMessageReciever.sendMessageToClient(connectionIsReadyMessage);\n    }\n    hasValidApplicationInfo(message) {\n        return typeof message.domain === 'string' && message.domain.length >= 3\n            && typeof message.application === 'string' && message.application.length >= 3;\n    }\n    async handleFromClientRequest(message) {\n        const webReciever = this.terminalStore.getWebReceiver();\n        let numPendingMessagesFromHost = webReciever.pendingHostCounts.get(message.domain);\n        if (!numPendingMessagesFromHost) {\n            numPendingMessagesFromHost = 0;\n        }\n        if (numPendingMessagesFromHost > 4) {\n            // Prevent hosts from making local 'Denial of Service' attacks\n            return;\n        }\n        const fullApplicationName = getFullApplicationNameFromDomainAndName(message.domain, message.application);\n        let numPendingMessagesForApplication = webReciever.pendingApplicationCounts.get(fullApplicationName);\n        if (!numPendingMessagesForApplication) {\n            numPendingMessagesForApplication = 0;\n        }\n        if (numPendingMessagesForApplication === -1) {\n            // Already could not install the application, may be a DOS attack, return right away\n            return;\n        }\n        webReciever.pendingHostCounts.set(message.domain, numPendingMessagesFromHost + 1);\n        webReciever.pendingApplicationCounts.set(fullApplicationName, numPendingMessagesForApplication + 1);\n        if (!await this.ensureApplicationIsInstalled(fullApplicationName)) {\n            this.relyToClientWithError(message, `Application is not installed`);\n            return;\n        }\n        const context = {};\n        if (!await this.nativeStartApiCall(message, context)) {\n            this.relyToClientWithError(message, context.errorMessage);\n        }\n    }\n    relyToClientWithError(message, errorMessage) {\n        const toClientRedirectedMessage = {\n            __received__: false,\n            __receivedTime__: null,\n            application: message.application,\n            category: 'ToClientRedirected',\n            domain: message.domain,\n            errorMessage,\n            id: message.id,\n            methodName: message.methodName,\n            objectName: message.objectName,\n            payload: null,\n            protocol: message.protocol,\n        };\n        this.replyToClientRequest(toClientRedirectedMessage);\n    }\n    getFrameWindow(fullApplicationName) {\n        const iframe = document\n            .getElementsByName(fullApplicationName);\n        if (!iframe || !iframe[0]) {\n            return null;\n        }\n        return iframe[0].contentWindow;\n    }\n    async handleToClientRequest(message, messageOrigin) {\n        if (!await this.messageIsFromValidApp(message, messageOrigin)) {\n            return;\n        }\n        this.replyToClientRequest(message);\n    }\n    replyToClientRequest(message) {\n        const fullApplicationName = getFullApplicationNameFromDomainAndName(message.domain, message.application);\n        const webReciever = this.terminalStore.getWebReceiver();\n        let numMessagesFromHost = webReciever.pendingHostCounts.get(message.domain);\n        if (numMessagesFromHost > 0) {\n            webReciever.pendingHostCounts.set(message.domain, numMessagesFromHost - 1);\n        }\n        let numMessagesForApplication = webReciever.pendingApplicationCounts.get(fullApplicationName);\n        if (numMessagesForApplication > 0) {\n            webReciever.pendingApplicationCounts.set(message.domain, numMessagesForApplication - 1);\n        }\n        // Forward the request to the source client\n        if (this.webMessageReciever.needMessageSerialization()) {\n            // FIXME: serialize message\n        }\n        this.webMessageReciever.sendMessageToClient(message);\n    }\n    async ensureApplicationIsInstalled(fullApplicationName) {\n        if (!fullApplicationName) {\n            return false;\n        }\n        return !!this.applicationInitializer.applicationWindowMap.get(fullApplicationName);\n    }\n    async messageIsFromValidApp(message, messageOrigin) {\n        const applicationDomain = messageOrigin.split('//')[1];\n        const applicationDomainFragments = applicationDomain.split('.');\n        // Allow local debugging\n        if (applicationDomain.split(':')[0] === 'localhost') {\n            return true;\n        }\n        const webReciever = this.terminalStore.getWebReceiver();\n        const fullApplicationName = getFullApplicationNameFromDomainAndName(message.domain, message.application);\n        // Only accept requests from https protocol\n        if (!messageOrigin.startsWith(\"https\")\n            // and from application domains that match the fullApplicationName\n            || applicationDomain !== fullApplicationName + webReciever.domainPrefix) {\n            return false;\n        }\n        // Only accept requests from '${applicationName}.${mainDomainName}'\n        if (applicationDomainFragments.length !== webReciever.mainDomainFragments.length + 1) {\n            return false;\n        }\n        // Only accept requests from non-'www' domain (don't accept requests from self)\n        if (applicationDomainFragments[0] === 'www') {\n            return false;\n        }\n        const applicationDomainFirstFragment = applicationDomainFragments[0];\n        // check application domain-embedded signature and fullApplicationName in message\n        // and make sure they result in a match\n        if (applicationDomainFirstFragment !== fullApplicationName) {\n            return false;\n        }\n        // Make sure the application is installed\n        return !!this.applicationInitializer.applicationWindowMap.get(fullApplicationName);\n    }\n    async handleIsolateMessage(message, messageOrigin, source) {\n        if (!await this.messageIsFromValidApp(message, messageOrigin)) {\n            return;\n        }\n        const webReciever = this.terminalStore.getWebReceiver();\n        const fullApplicationName = getFullApplicationNameFromDomainAndName(message.domain, message.application);\n        switch (message.type) {\n            case IsolateMessageType.SEARCH_UNSUBSCRIBE:\n                let isolateSubscriptionMap = webReciever.subsriptionMap.get(fullApplicationName);\n                if (!isolateSubscriptionMap) {\n                    return;\n                }\n                let subscription = isolateSubscriptionMap.get(message.id);\n                if (!subscription) {\n                    return;\n                }\n                subscription.unsubscribe();\n                isolateSubscriptionMap.delete(message.id);\n                return;\n        }\n        this.processMessage(message).then(response => {\n            if (!response) {\n                return;\n            }\n            const webReciever = this.terminalStore.getWebReceiver();\n            let shemaDomainName = fullApplicationName + '.' + webReciever.localDomain;\n            switch (message.type) {\n                case IsolateMessageType.SEARCH:\n                case IsolateMessageType.SEARCH_ONE:\n                    const observableDataResult = response;\n                    observableDataResult.result.pipe(map(value => {\n                        window.postMessage(value, shemaDomainName);\n                    }));\n                    const subscription = observableDataResult.result.subscribe();\n                    let isolateSubscriptionMap = webReciever.subsriptionMap.get(fullApplicationName);\n                    if (!isolateSubscriptionMap) {\n                        isolateSubscriptionMap = new Map();\n                        webReciever.subsriptionMap.set(fullApplicationName, isolateSubscriptionMap);\n                    }\n                    isolateSubscriptionMap.set(message.id, subscription);\n                    return;\n            }\n            source.postMessage(response, '*');\n        });\n    }\n};\n__decorate([\n    Inject()\n], WebTransactionalReceiver.prototype, \"applicationInitializer\", void 0);\n__decorate([\n    Inject()\n], WebTransactionalReceiver.prototype, \"terminalStore\", void 0);\n__decorate([\n    Inject()\n], WebTransactionalReceiver.prototype, \"webMessageReciever\", void 0);\nWebTransactionalReceiver = __decorate([\n    Injected()\n], WebTransactionalReceiver);\nexport { WebTransactionalReceiver };\n//# sourceMappingURL=WebTransactionalReceiver.js.map","import { DEPENDENCY_INJECTION, lib } from \"@airport/direction-indicator\";\nimport { APPLICATION_INITIALIZER, DOMAIN_RETRIEVER, TERMINAL_STORE, TRANSACTIONAL_RECEIVER } from \"@airport/terminal-map\";\nimport { DomainRetriever } from \"./DomainRetriever\";\nimport { WebApplicationInitializer } from \"./WebApplicationInitializer\";\nimport { WebMesageReceiver } from \"./WebMessageReceiver\";\nimport { WebTransactionalReceiver } from \"./WebTransactionalReceiver\";\nconst webTerminal = lib('web-terminal');\nDEPENDENCY_INJECTION.set(DOMAIN_RETRIEVER, DomainRetriever);\nDEPENDENCY_INJECTION.set(APPLICATION_INITIALIZER, WebApplicationInitializer);\nexport const WEB_MESSAGE_RECEIVER = webTerminal.token({\n    class: WebMesageReceiver,\n    interface: 'IWebMessageReceiver',\n    token: 'WEB_MESSAGE_RECEIVER'\n});\nWEB_MESSAGE_RECEIVER.setDependencies({\n    transactionalReceiver: TRANSACTIONAL_RECEIVER\n});\nDEPENDENCY_INJECTION.set(TRANSACTIONAL_RECEIVER, WebTransactionalReceiver);\nTRANSACTIONAL_RECEIVER.setDependencies({\n    terminalStore: TERMINAL_STORE,\n    webMessageReciever: WEB_MESSAGE_RECEIVER\n});\n//# sourceMappingURL=tokens.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { setSeqGen } from '@airport/check-in';\nimport { ensureChildArray } from '@airport/ground-control';\nimport { Inject, Injected } from '@airport/direction-indicator';\n/**\n * Assumptions: 7/4/2019\n *\n * 1. Only a single process will be inserting records at any given point in time\n * a)  This means that the service worker running the the background will only\n * receive and temporarily store data (in IndexedDb, but won't be inserting\n * proper relational records)\n * b)  This also means that web-workers won't be doing parallel inserts\n *\n * In general, this is consistent with SqLites policy of only one modifying\n * operation at a time (while possibly multiple read ops)\n *\n *\n * With these assumptions in place, it is safe to synchronize sequence retrieval\n * in-memory.   Hence, SequenceBlocks are retired in favor of a simpler\n * Sequence-only solution\n *\n */\nlet SequenceGenerator = class SequenceGenerator {\n    constructor() {\n        this.sequences = [];\n        this.sequenceBlocks = [];\n        this.generatingSequenceNumbers = false;\n    }\n    exists(dbEntity) {\n        const generatedColumns = dbEntity.columns.filter(dbColumn => dbColumn.isGenerated);\n        if (!generatedColumns.length) {\n            return true;\n        }\n        const applicationSequences = this.sequences[dbEntity.applicationVersion.application.index];\n        if (!applicationSequences) {\n            return false;\n        }\n        const tableSequences = applicationSequences[dbEntity.index];\n        if (!tableSequences) {\n            return false;\n        }\n        return generatedColumns.every(dbColumn => !!tableSequences[dbColumn.index]);\n    }\n    async initialize(sequences) {\n        if (!sequences) {\n            sequences = await this.sequenceDao.findAll();\n        }\n        this.addSequences(sequences);\n        await this.sequenceDao.incrementCurrentValues();\n        setSeqGen(this);\n    }\n    async tempInitialize(sequences) {\n        this.addSequences(sequences);\n        setSeqGen(this);\n    }\n    async generateSequenceNumbers(dbColumns, numSequencesNeeded) {\n        if (!dbColumns.length) {\n            return [];\n        }\n        await this.waitForPreviousGeneration();\n        this.generatingSequenceNumbers = true;\n        try {\n            return await this.doGenerateSequenceNumbers(dbColumns, numSequencesNeeded);\n        }\n        finally {\n            this.generatingSequenceNumbers = false;\n        }\n    }\n    /**\n     * Keeping return value as number[][] in case we ever revert back\n     * to SequenceBlock-like solution\n     * @param dbColumns\n     * @param numSequencesNeeded\n     */\n    async doGenerateSequenceNumbers(dbColumns, numSequencesNeeded) {\n        const sequentialNumbers = [];\n        for (let i = 0; i < dbColumns.length; i++) {\n            const dbColumn = dbColumns[i];\n            let numColumnSequencesNeeded = numSequencesNeeded[i];\n            const columnNumbers = ensureChildArray(sequentialNumbers, i);\n            const dbEntity = dbColumn.propertyColumns[0].property.entity;\n            const application = dbEntity.applicationVersion.application;\n            let sequenceBlock = this.sequenceBlocks[application.index][dbEntity.index][dbColumn.index];\n            const sequence = this.sequences[application.index][dbEntity.index][dbColumn.index];\n            while (numColumnSequencesNeeded && sequenceBlock) {\n                columnNumbers.push(sequence.currentValue - sequenceBlock + 1);\n                numColumnSequencesNeeded--;\n                sequenceBlock--;\n            }\n            this.sequenceBlocks[application.index][dbEntity.index][dbColumn.index] = sequenceBlock;\n            if (numColumnSequencesNeeded) {\n                const numNewSequencesNeeded = sequence.incrementBy + numColumnSequencesNeeded;\n                const newSequence = { ...sequence };\n                newSequence.currentValue += numNewSequencesNeeded;\n                await this.sequenceDao.save(newSequence);\n                this.sequences[application.index][dbEntity.index][dbColumn.index] = newSequence;\n                sequenceBlock = numNewSequencesNeeded;\n                while (numColumnSequencesNeeded) {\n                    columnNumbers.push(sequence.currentValue - sequenceBlock + 1);\n                    numColumnSequencesNeeded--;\n                    sequenceBlock--;\n                }\n                this.sequenceBlocks[application.index][dbEntity.index][dbColumn.index] = sequenceBlock;\n            }\n        }\n        return sequentialNumbers;\n    }\n    waitForPreviousGeneration() {\n        return new Promise(resolve => {\n            this.isDoneGeneratingSeqNums(resolve);\n        });\n    }\n    isDoneGeneratingSeqNums(resolve) {\n        if (this.generatingSequenceNumbers) {\n            setTimeout(() => {\n                this.isDoneGeneratingSeqNums(resolve);\n            }, 20);\n        }\n        else {\n            resolve();\n        }\n    }\n    addSequences(sequences) {\n        for (const sequence of sequences) {\n            ensureChildArray(ensureChildArray(this.sequences, sequence.applicationIndex), sequence.tableIndex)[sequence.columnIndex] = sequence;\n            sequence.currentValue += sequence.incrementBy;\n            ensureChildArray(ensureChildArray(this.sequenceBlocks, sequence.applicationIndex), sequence.tableIndex)[sequence.columnIndex] = sequence.incrementBy;\n        }\n    }\n};\n__decorate([\n    Inject()\n], SequenceGenerator.prototype, \"sequenceDao\", void 0);\nSequenceGenerator = __decorate([\n    Injected()\n], SequenceGenerator);\nexport { SequenceGenerator };\nexport function injectSequenceGenerator() {\n    console.log('injecting SequenceGenerator');\n}\n//# sourceMappingURL=SequenceGenerator.js.map","import { SEQUENCE_DAO } from \"@airport/airport-code\";\nimport { SEQUENCE_GENERATOR } from \"@airport/check-in\";\nimport { SequenceGenerator } from \"./SequenceGenerator\";\nSEQUENCE_GENERATOR.setClass(SequenceGenerator);\nSEQUENCE_GENERATOR.setDependencies({\n    sequenceDao: SEQUENCE_DAO\n});\n//# sourceMappingURL=tokens.js.map","import { QueryType } from '@airport/ground-control';\nimport { SQLDialect, SqlDriver } from '@airport/fuel-hydrant-system';\n/**\n * Created by Papa on 11/27/2016.\n */\nexport class SqLiteDriver extends SqlDriver {\n    constructor() {\n        super();\n        this.maxValues = 999;\n    }\n    composeTableName(applicationName, tableName) {\n        return `${applicationName}__${tableName}`;\n    }\n    async doesTableExist(applicationName, tableName, context) {\n        const matchingTableNames = await this.findNative(\n        // ` SELECT tbl_name, sql from sqlite_master WHERE type = '${tableName}'`,\n        `SELECT\r\n\ttbl_name\r\nfrom\r\n\tsqlite_master\r\nWHERE\r\n\ttype = 'table'\r\n\tAND tbl_name = '${applicationName}__${tableName}'`, [], context);\n        return this.getNumberOfRows(matchingTableNames) === 1;\n    }\n    getNumberOfRows(result) {\n        return this.getRows(result).length;\n    }\n    async dropTable(applicationName, tableName, context) {\n        const matchingTableNames = await this.findNative(`DROP TABLE '${applicationName}__${tableName}'`, [], context);\n        return matchingTableNames.length === 1;\n    }\n    async findNative(sqlQuery, parameters, context) {\n        let nativeParameters = parameters.map((value) => this.convertValueIn(value));\n        return await this.query(QueryType.SELECT, sqlQuery, nativeParameters, context);\n    }\n    async executeNative(sql, parameters, context) {\n        return await this.query(QueryType.MUTATE, sql, parameters, context);\n    }\n    convertValueIn(value) {\n        switch (typeof value) {\n            case 'boolean':\n                return value ? 1 : 0;\n            case 'number':\n            case 'string':\n                return value;\n            case 'undefined':\n                return null;\n            case 'object':\n                if (!value) {\n                    return null;\n                }\n                else if (value instanceof Date) {\n                    return value.getTime();\n                }\n                else {\n                    throw new Error(`Unexpected non-date object ${value}`);\n                }\n            default:\n                throw new Error(`Unexpected typeof value: ${typeof value}`);\n        }\n    }\n    isValueValid(value, sqlDataType, context) {\n        throw new Error('Method not implemented.');\n        // switch (sqlDataType) {\n        // \tcase SQLDataType.DATE:\n        // \tcase SQLDataType.NUMBER:\n        // }\n        // return false\n    }\n    async initTables(createQueries) {\n        for (let i = 0; i < createQueries.length; i++) {\n            let currentQuery = createQueries[i];\n            await currentQuery;\n        }\n    }\n    getDialect() {\n        return SQLDialect.SQLITE;\n    }\n    isServer() {\n        return false;\n    }\n}\n//# sourceMappingURL=SqLiteDriver.js.map","import { AbstractFunctionAdaptor } from '@airport/fuel-hydrant-system';\nimport { SQLDataType, SqlFunction } from '@airport/ground-control';\n/**\n * Created by Papa on 8/27/2016.\n */\nexport class SqLiteQueryAdaptor {\n    constructor() {\n        this.functionAdaptor = new SqlLiteFunctionAdaptor();\n    }\n    getParameterReference(parameterReferences, newReference) {\n        return '?';\n    }\n    dateToDbQuery(date) {\n        let milliseconds = date.getTime();\n        return '' + milliseconds;\n    }\n    getResultArray(rawResponse) {\n        return rawResponse.res.rows;\n    }\n    getResultCellValue(resultRow, columnName, index, dataType, defaultValue) {\n        let value = this.getResultCellRawValue(resultRow, columnName, index, dataType, defaultValue);\n        switch (dataType) {\n            case SQLDataType.BOOLEAN:\n                if (value !== null) {\n                    return !!value;\n                }\n                break;\n            case SQLDataType.DATE:\n                if (value !== null) {\n                    return new Date(value);\n                }\n                break;\n            case SQLDataType.JSON:\n                if (value !== null) {\n                    return JSON.parse(value);\n                }\n                break;\n            case SQLDataType.ANY:\n            case SQLDataType.NUMBER:\n            case SQLDataType.STRING:\n                return value;\n            default:\n                throw new Error(`Unexpected data type for column ${columnName}`);\n        }\n    }\n    getFunctionAdaptor() {\n        return this.functionAdaptor;\n    }\n    getOffsetFragment(offset) {\n        return `\r\nOFFSET\r\n\t${offset}`;\n    }\n    getLimitFragment(limit) {\n        return `\r\nLIMIT\r\n\t${limit}`;\n    }\n    getParameterValue(parameter) {\n        return this.getValue(parameter.value);\n    }\n    getValue(value, allowArrays = true) {\n        switch (typeof value) {\n            case 'boolean':\n                return value ? '1' : '0';\n            case 'number':\n            case 'string':\n                return value;\n            case 'object':\n                if (value instanceof Date) {\n                    return value.getTime();\n                }\n                else if (value instanceof Array) {\n                    return value.map(aValue => this.getValue(aValue, false));\n                }\n                throw new Error(`Unexpected object as a parameter.`);\n            default:\n                throw new Error(`Unexpected type of parameter '${typeof value}.'`);\n        }\n    }\n}\nexport class SqlLiteFunctionAdaptor extends AbstractFunctionAdaptor {\n    getFunctionCall(jsonFunctionCall, value, qEntityMapByAlias, sqlValueProvider, context) {\n        let param2;\n        switch (jsonFunctionCall.ft) {\n            case SqlFunction.ABS:\n                return `ABS(${value})`;\n            case SqlFunction.AVG:\n                return `AVG(${value})`;\n            case SqlFunction.COUNT:\n                return `COUNT(${value})`;\n            case SqlFunction.MAX:\n                return `MAX(${value})`;\n            case SqlFunction.MIN:\n                return `MIN(${value})`;\n            case SqlFunction.SUM:\n                return `SUM(${value})`;\n            case SqlFunction.UCASE:\n                return `UPPER(${value})`;\n            case SqlFunction.LCASE:\n                return `LOWER(${value})`;\n            case SqlFunction.MID:\n                let start = sqlValueProvider.getFunctionCallValue(jsonFunctionCall.p[0], context);\n                let length = sqlValueProvider.getFunctionCallValue(jsonFunctionCall.p[1], context);\n                return `SUBSTR(${value}, ${start}, ${length})`;\n            case SqlFunction.LEN:\n                return `LENGTH(${value})`;\n            case SqlFunction.ROUND:\n                let digits = sqlValueProvider.getFunctionCallValue(jsonFunctionCall.p[0], context);\n                return `ROUND(${value}, ${digits})`;\n            case SqlFunction.NOW:\n                return `DATE('now')`;\n            case SqlFunction.FORMAT:\n                let formatCall = `FORMAT('${value}', `;\n                for (let i = 0; i < jsonFunctionCall.p.length; i++) {\n                    let formatParam = jsonFunctionCall.p[i];\n                    formatParam = sqlValueProvider.getFunctionCallValue(formatParam, context);\n                    formatCall = `${formatCall}, ${formatParam}`;\n                }\n                formatCall += ')';\n                return formatCall;\n            case SqlFunction.REPLACE:\n                let param1 = sqlValueProvider.getFunctionCallValue(jsonFunctionCall.p[0], context);\n                param2 = sqlValueProvider.getFunctionCallValue(jsonFunctionCall.p[1], context);\n                return `REPLACE('${value}', ${param1}, ${param2})`;\n            case SqlFunction.TRIM:\n                return `TRIM(${value})`;\n            case SqlFunction.DISTINCT:\n                throw new Error(`Invalid placement of a distinct function`);\n            case SqlFunction.EXISTS:\n                throw new Error(`Invalid placement of an exists function`);\n            case SqlFunction.DIVIDE:\n                param2 = sqlValueProvider.getFunctionCallValue(jsonFunctionCall.p[0], context);\n                return `${value} / ${param2}`;\n            case SqlFunction.MINUS:\n                param2 = sqlValueProvider.getFunctionCallValue(jsonFunctionCall.p[0], context);\n                return `${value} - ${param2}`;\n            case SqlFunction.MULTIPLY:\n                param2 = sqlValueProvider.getFunctionCallValue(jsonFunctionCall.p[0], context);\n                return `${value} * ${param2}`;\n            case SqlFunction.PLUS:\n                param2 = sqlValueProvider.getFunctionCallValue(jsonFunctionCall.p[0], context);\n                return `${value} + ${param2}`;\n            case SqlFunction.CONCATENATE:\n                return jsonFunctionCall.p.reduce((acc, val) => {\n                    let primitiveValue = this.toString(sqlValueProvider.getFunctionCallValue(val, context));\n                    return acc + val;\n                }, this.toString(value));\n            case SqlFunction.COALESCE:\n                throw new Error('Not Implemented');\n            default:\n                throw new Error(`Unknown function type: ${jsonFunctionCall.ft}`);\n        }\n    }\n    toString(val) {\n        switch (typeof val) {\n            case 'string':\n                return val;\n            case 'boolean':\n            case 'number':\n                return val.toString();\n            case 'undefined':\n                return 'null';\n            case 'object':\n                if (val === null) {\n                    return 'null';\n                }\n                if (val instanceof Date) {\n                    return val.toJSON();\n                }\n                throw new Error(`Unsupported value for conversion to string.`);\n            default:\n                throw new Error(`Unsupported value for conversion to string.`);\n        }\n    }\n}\n//# sourceMappingURL=SqLiteQueryAdaptor.js.map","export class AbstractFunctionAdaptor {\n    getFunctionCalls(clause, innerValue, qEntityMapByAlias, sqlValueProvider, context) {\n        clause.appliedFunctions.forEach((appliedFunction) => {\n            innerValue = this.getFunctionCall(appliedFunction, innerValue, qEntityMapByAlias, sqlValueProvider, context);\n        });\n        return innerValue;\n    }\n}\n//# sourceMappingURL=SQLQueryAdaptor.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Inject, Injected } from '@airport/direction-indicator';\nimport { getFullApplicationName, SQLDataType, } from '@airport/ground-control';\nimport { SqlApplicationBuilder } from '@airport/landing';\nlet SqLiteApplicationBuilder = class SqLiteApplicationBuilder extends SqlApplicationBuilder {\n    async createApplication(jsonApplication, context) {\n        // Nothing to do\n    }\n    getColumnSuffix(jsonApplication, jsonEntity, jsonColumn) {\n        let primaryKeySuffix = '';\n        if (jsonColumn.notNull\n            || this.isPrimaryKeyColumn(jsonEntity, jsonColumn)) {\n            primaryKeySuffix = ' NOT NULL';\n        }\n        const suffix = primaryKeySuffix; // + autoincrementSuffix\n        switch (jsonColumn.type) {\n            case SQLDataType.ANY:\n                return suffix;\n            case SQLDataType.BOOLEAN:\n                return `INTEGER ${suffix}`;\n            case SQLDataType.DATE:\n                return `REAL ${suffix}`;\n            case SQLDataType.JSON:\n                return `TEXT ${suffix}`;\n            case SQLDataType.NUMBER:\n                if (suffix) {\n                    return `INTEGER ${suffix}`;\n                }\n                return 'REAL';\n            case SQLDataType.STRING:\n                return `TEXT ${suffix}`;\n            default:\n                throw new Error(`Unexpected data type for ${jsonApplication.name}.${jsonEntity.name}.${jsonColumn.name}`);\n        }\n    }\n    getCreateTableSuffix(jsonApplication, jsonEntity) {\n        return ` WITHOUT ROWID`;\n    }\n    async buildAllSequences(jsonApplications) {\n        console.log('buildAllSequences');\n        let allSequences = [];\n        for (const jsonApplication of jsonApplications) {\n            const qApplication = this.airportDatabase.QM[getFullApplicationName(jsonApplication)];\n            for (const jsonEntity of jsonApplication.versions[jsonApplication.versions.length - 1].entities) {\n                allSequences = allSequences.concat(this.buildSequences(qApplication.__dbApplication__, jsonEntity));\n            }\n        }\n        await this.sequenceDao.save(allSequences);\n        return allSequences;\n    }\n    stageSequences(jsonApplications, context) {\n        console.log('stageSequences');\n        let stagedSequences = [];\n        for (const jsonApplication of jsonApplications) {\n            const qApplication = this.airportDatabase.QM[getFullApplicationName(jsonApplication)];\n            for (const jsonEntity of jsonApplication.versions[jsonApplication.versions.length - 1].entities) {\n                stagedSequences = stagedSequences.concat(this.buildSequences(qApplication.__dbApplication__, jsonEntity));\n            }\n        }\n        return stagedSequences;\n    }\n    buildSequences(dbApplication, jsonEntity) {\n        const sequences = [];\n        for (const jsonColumn of jsonEntity.columns) {\n            if (!jsonColumn.isGenerated) {\n                continue;\n            }\n            let incrementBy = jsonColumn.allocationSize;\n            if (!incrementBy) {\n                incrementBy = 100;\n            }\n            sequences.push({\n                applicationIndex: dbApplication.index,\n                tableIndex: jsonEntity.index,\n                columnIndex: jsonColumn.index,\n                incrementBy,\n                currentValue: 0,\n            });\n        }\n        return sequences;\n    }\n    getIndexSql(indexName, tableName, columnNameList, unique) {\n        let uniquePrefix;\n        if (unique) {\n            uniquePrefix = ' UNIQUE';\n        }\n        else {\n            uniquePrefix = '';\n        }\n        return `CREATE${uniquePrefix} INDEX ${indexName}\r\n    ON ${tableName} (\r\n    ${columnNameList.join(', ')}\r\n    )`;\n    }\n    getForeignKeySql(tableName, foreignKeyName, foreignKeyColumnNames, referencedTableName, referencedColumnNames) {\n        // TODO: investigate adding foreign key support for SqLite.\n        // Right now there is no alter table command and it has to be baked\n        // into the CREATE TALBE command, though techniques for getting\n        // around this do exist:\n        // https://stackoverflow.com/questions/1884818/how-do-i-add-a-foreign-key-to-an-existing-sqlite-table\n        return null;\n    }\n};\n__decorate([\n    Inject()\n], SqLiteApplicationBuilder.prototype, \"airportDatabase\", void 0);\nSqLiteApplicationBuilder = __decorate([\n    Injected()\n], SqLiteApplicationBuilder);\nexport { SqLiteApplicationBuilder };\n//# sourceMappingURL=SqLiteApplicationBuilder.js.map","import { APPLICATION_BUILDER } from \"@airport/landing\";\nimport { SqLiteApplicationBuilder } from \"./SqLiteApplicationBuilder\";\nAPPLICATION_BUILDER.setClass(SqLiteApplicationBuilder);\n//# sourceMappingURL=tokens.js.map","import { SqlTransaction } from '@airport/fuel-hydrant-system';\nexport class SqlJsTransaction extends SqlTransaction {\n    isServer(context) {\n        return false;\n    }\n}\n//# sourceMappingURL=SqlJsTransaction.js.map","import { v4 as uuidv4 } from \"uuid\";\nexport class SqlTransaction {\n    constructor(driver, parentTransaction) {\n        this.driver = driver;\n        this.parentTransaction = parentTransaction;\n        this.isSync = false;\n        this.initiator = {\n            application: '',\n            domain: '',\n            methodName: '',\n            objectName: ''\n        };\n        this.__container__ = driver.__container__;\n        this.id = uuidv4();\n        this.type = driver.type;\n        if (parentTransaction) {\n            parentTransaction.childTransaction = this;\n        }\n    }\n    async saveTransaction(transaction) {\n    }\n    async query(queryType, query, params = [], context, saveTransaction = false) {\n        return this.driver.query(queryType, query, params, context, saveTransaction);\n    }\n    async doesTableExist(applicationName, tableName, context) {\n        return await this.driver.doesTableExist(applicationName, tableName, context);\n    }\n    async dropTable(applicationName, tableName, context) {\n        return await this.driver.dropTable(applicationName, tableName, context);\n    }\n    getEntityTableName(dbEntity, context) {\n        return this.driver.getEntityTableName(dbEntity, context);\n    }\n    getTableName(application, table, context) {\n        return this.driver.getTableName(application, table, context);\n    }\n    async initialize(dbName, context) {\n        // Nothing to do\n    }\n    search(portableQuery, internalFragments, context, cachedSqlQueryId) {\n        return this.driver.search(portableQuery, internalFragments, context, cachedSqlQueryId);\n    }\n    searchOne(portableQuery, internalFragments, context, cachedSqlQueryId) {\n        return this.driver.searchOne(portableQuery, internalFragments, context, cachedSqlQueryId);\n    }\n    async startTransaction(transaction, context) {\n        throw new Error(`Nested transactions are not supported`);\n    }\n    async setupTransaction(context, parentTransaction) {\n        throw new Error(`Nested transactions are not supported`);\n    }\n    async tearDownTransaction(transaction, context) {\n        throw new Error(`Nested transactions are not supported`);\n    }\n    async commit(transaction, context) {\n        await this.driver.commit(this, context);\n    }\n    async rollback(transaction, context) {\n        await this.driver.rollback(this, context);\n    }\n    async deleteWhere(portableQuery, context) {\n        return await this.driver.deleteWhere(portableQuery, context);\n    }\n    async find(portableQuery, internalFragments, context, cachedSqlQueryId) {\n        return await this.driver.find(portableQuery, internalFragments, context, cachedSqlQueryId);\n    }\n    async findOne(portableQuery, internalFragments, context, cachedSqlQueryId) {\n        return await this.driver.findOne(portableQuery, internalFragments, context, cachedSqlQueryId);\n    }\n    async findNative(sqlQuery, parameters, context) {\n        return await this.driver.findNative(sqlQuery, parameters, context);\n    }\n    async insertValues(portableQuery, context, cachedSqlQueryId) {\n        return await this.driver.insertValues(portableQuery, context, cachedSqlQueryId);\n    }\n    async updateWhere(portableQuery, internalFragments, context) {\n        return await this.driver.updateWhere(portableQuery, internalFragments, context);\n    }\n    isValueValid(value, sqlDataType, context) {\n        return this.driver.isValueValid(value, sqlDataType, context);\n    }\n}\n//# sourceMappingURL=SqlTransaction.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { SQLDialect } from '@airport/fuel-hydrant-system';\nimport { QueryType, StoreType } from '@airport/ground-control';\nimport { SqLiteDriver } from '@airport/sqlite';\nimport { SqlJsTransaction } from './SqlJsTransaction';\nimport { Injected } from '@airport/direction-indicator';\n/**\n * Created by Papa on 11/27/2016.\n */\nlet SqlJsDriver = class SqlJsDriver extends SqLiteDriver {\n    constructor() {\n        super();\n        this.type = StoreType.SQLJS;\n    }\n    async initialize() {\n        const SQL = await initSqlJs({\n            // Required to load the wasm binary asynchronously. Of course, you can host it wherever you want\n            // You can omit locateFile completely when running in node\n            locateFile: file => `./${file}`\n        });\n        this._db = new SQL.Database();\n    }\n    async setupTransaction(context, parentTransaction) {\n        const transaction = new SqlJsTransaction(this, parentTransaction);\n        await this.internalSetupTransaction(transaction, context);\n        return transaction;\n    }\n    async internalStartTransaction(transaction, context) {\n        this._db.exec(`SAVEPOINT ${transaction.id}`);\n    }\n    async internalCommit(transaction, context) {\n        this._db.exec(`RELEASE SAVEPOINT ${transaction.id}`);\n    }\n    async internalRollback(transaction, context) {\n        this._db.exec(`ROLLBACK TO SAVEPOINT ${transaction.id}`);\n    }\n    async query(queryType, query, params = [], context, saveTransaction = false) {\n        return new Promise((resolve, reject) => {\n            let stmt;\n            try {\n                if (!['TQ_BOOLEAN_FIELD_CHANGE', 'TQ_DATE_FIELD_CHANGE', 'TQ_NUMBER_FIELD_CHANGE', 'TQ_STRING_FIELD_CHANGE',\n                    'TQ_ENTITY_CHANGE', 'TQ_ENTITY_WHERE_CHANGE', 'TQ_TRANSACTION'].some((deltaTableName) => {\n                    return query.indexOf(deltaTableName) > -1;\n                })) {\n                    console.log(query);\n                    console.log(params);\n                }\n                stmt = this._db.prepare(query);\n                stmt.bind(params);\n                let results = [];\n                while (stmt.step()) {\n                    results.push(stmt.get());\n                }\n                console.log(results);\n                resolve(results);\n            }\n            catch (error) {\n                reject(error);\n            }\n            finally {\n                if (stmt) {\n                    stmt.free();\n                }\n            }\n        });\n    }\n    handleError(error) {\n        throw error;\n    }\n    getRows(result) {\n        return result;\n    }\n    getReturnValue(queryType, response) {\n        switch (queryType) {\n            case QueryType.MUTATE:\n                return response.rowsAffected;\n            case QueryType.SELECT:\n                return response.rows;\n            default:\n                return null;\n        }\n    }\n    getDialect() {\n        return SQLDialect.SQLITE;\n    }\n};\nSqlJsDriver = __decorate([\n    Injected()\n], SqlJsDriver);\nexport { SqlJsDriver };\n//# sourceMappingURL=SqlJsDriver.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { SqLiteQueryAdaptor } from \"@airport/sqlite\";\nimport { Injected } from '@airport/direction-indicator';\n/**\n * Created by Papa on 2/8/2017.\n */\nlet SqlJsQueryAdaptor = class SqlJsQueryAdaptor extends SqLiteQueryAdaptor {\n    getResultCellRawValue(resultRow, columnName, index, dataType, defaultValue) {\n        return resultRow[index];\n    }\n};\nSqlJsQueryAdaptor = __decorate([\n    Injected()\n], SqlJsQueryAdaptor);\nexport { SqlJsQueryAdaptor };\n//# sourceMappingURL=SqlJsQueryAdaptor.js.map","import { SQL_QUERY_ADAPTOR } from \"@airport/fuel-hydrant-system\";\nimport { STORE_DRIVER } from \"@airport/terminal-map\";\nimport { SqlJsDriver } from \"./SqlJsDriver\";\nimport { SqlJsQueryAdaptor } from \"./SqlJsQueryAdaptor\";\nSTORE_DRIVER.setClass(SqlJsDriver);\nSQL_QUERY_ADAPTOR.setClass(SqlJsQueryAdaptor);\n//# sourceMappingURL=tokens.js.map","import { injectTransactionalConnector, injectTransactionalServer } from '@airport/terminal';\nimport { injectAirportDatabase, injectEntityStateManager } from '@airport/tower';\nimport { injectWebReceiver } from './WebMessageReceiver';\nexport * from './DomainRetriever';\nexport * from './WebApplicationInitializer';\nexport * from './WebTransactionalReceiver';\nexport * from './WebMessageReceiver';\nexport * from './tokens';\nexport function injectTransactionalReceiver() {\n    console.log('Injecting TransactionalReceiver');\n    // injectMovingWalkway()\n    injectTransactionalConnector();\n    injectAirportDatabase();\n    injectTransactionalServer();\n    injectEntityStateManager();\n    injectWebReceiver();\n}\n//# sourceMappingURL=index.js.map","import App from './App.svelte';\r\nimport { initFramework } from './framework';\r\nconst app = new App({\r\n    target: document.body,\r\n    props: {}\r\n});\r\ninitFramework().then();\r\nexport default app;\r\n","import { IOC } from '@airport/direction-indicator';\r\nimport { TRANSACTIONAL_RECEIVER } from '@airport/terminal-map';\r\nimport { injectTransactionalReceiver } from '@airport/web-terminal';\r\nimport { startDb } from '@airport/sqljs';\r\ninjectTransactionalReceiver();\r\nexport async function initFramework() {\r\n    await startDb('AIRportA-demo-demo-demo-functionalty');\r\n    await IOC.get(TRANSACTIONAL_RECEIVER);\r\n}\r\n","import { AIRPORT_DATABASE } from '@airport/air-traffic-control';\nimport { IOC } from '@airport/direction-indicator';\nimport { injectSequenceGenerator } from '@airport/sequence';\nimport { DATABASE_MANAGER } from '@airport/terminal';\nexport * from './SqlJsDriver';\nexport * from './SqlJsQueryAdaptor';\nexport * from './SqlJsTransaction';\nexport * from './tokens';\ninjectSequenceGenerator();\nexport async function startDb(domainName) {\n    await IOC.get(AIRPORT_DATABASE);\n    const dbManager = await IOC.get(DATABASE_MANAGER);\n    await dbManager.initWithDb(domainName, {});\n}\nexport async function closeDb() {\n}\n//# sourceMappingURL=index.js.map"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","detach","node","parentNode","removeChild","current_component","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","i","length","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","make_dirty","then","fill","init","options","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_destroy","on_disconnect","context","Map","callbacks","skip_bound","root","target","ready","ret","rest","value","hydrate","nodes","element","Array","from","childNodes","l","c","intro","block","delete","local","anchor","customElement","m","new_on_destroy","map","filter","mount_component","module","isarray","isArray","arr","prototype","toString","call","pathToRegexp_1","pathToRegexp","parse_1","parse","compile_1","compile","tokensToFunction_1","tokensToFunction","tokensToRegExp_1","tokensToRegExp","PATH_REGEXP","RegExp","join","str","res","tokens","key","index","path","exec","escaped","offset","slice","prefix","name","capture","group","suffix","asterisk","repeat","optional","delimiter","pattern","escapeGroup","substr","matches","obj","data","token","segment","TypeError","j","encodeURIComponent","test","escapeString","replace","attachKeys","re","keys","flags","sensitive","regexpToRegexp","groups","source","match","arrayToRegexp","parts","stringToRegexp","strict","end","route","lastToken","endsWithSlash","loaded","hasDocument","document","hasWindow","window","hasHistory","history","hasProcess","process","clickEvent","ontouchstart","isLocation","location","Page","this","exits","current","len","_decodeURLComponents","_base","_strict","_running","_hashbang","clickHandler","bind","_onpopstate","createPage","pageInstance","pageFn","page","apply","arguments","base","start","stop","show","back","redirect","dispatch","exit","configure","sameOrigin","defineProperty","get","set","val","Context","Route","middleware","unhandled","handled","_window","_getBase","hash","pathname","search","canonicalPath","href","escapeRegExp","s","state","_page","hashbang","pageBase","indexOf","title","querystring","_decodeURLEncodedURIComponent","params","split","globalPage","opts","method","regexp","decodeURLComponents","_popstate","popstate","_click","click","addEventListener","removeEventListener","loc","protocol","enable","url","prev","prevContext","pushState","setTimeout","to","inst","e","save","nextExit","nextEnter","_which","metaKey","ctrlKey","shiftKey","defaultPrevented","el","eventPath","composedPath","nodeName","toUpperCase","svg","constructor","hasAttribute","getAttribute","link","_samePath","baseVal","orig","preventDefault","readyState","undefined","event","which","button","_toURL","URL","anc","createElement","hostname","port","decodeURIComponent","replaceState","self","next","routePath","qsIndex","hasOwnProperty","page_js","default_1","default","factory","__awaiter","thisArg","_arguments","P","generator","console","log","InjectionDomain","applicationMap","app","applicationName","application","InjectionApplication","getApp","DOMAIN_MAP","domain","domainName","AIRPORT_DOMAIN","DependencyInjectionToken","descriptor","dependencyConfiguration","getInheritedDependencyConfiguration","class","getPath","setDependencies","_dependencyConfiguration","setClass","aClass","parentClass","getPrototypeOf","returnedDependencyConfiguration","tokenMap","autopilot","diToken","lib","libraryName","ContextType","id","type","AUTOPILOT_API_LOADER","interface","Container","ChildContainer","rootContainer","super","objectMap","doEventuallyGet","successCallback","errorCallback","firstDiNotSetClass","firstMissingClassToken","objects","doGetCore","doGet","object","__initialized__","notInitializedObjectIndexes","objectPaths","message","isFramework","getSync","loadApiAutopilot","diSet","setDependencyGetters","__container__","result","_","propertyName","dependencyToken","async","getByNames","tokenName","reject","eventuallyGet","DEPENDENCY_INJECTION","dbContainerMap","uiContainers","db","dbContainer","DB","remove","container","ui","componentName","UI","childContainer","injectable","iocContainer","IOC","UpdateState","RepositoryEntityType","TableMap","applicationVersionId","tableMap","ensure","tableIndex","allColumns","ColumnMapConstructor","ColumnMap","tableColumnMap","existsByStructure","columnIndex","columnMap","getFullApplicationName","getFullApplicationNameFromDomainAndName","endsWith","domainPrefix","lastIndexOf","applicationPrefix","ApplicationMap","ensureEntity","entity","TableMapConstructor","applicationVersion","applicationIndex","SyncColumnMap","SyncTableMap","intersects","otherTableColumnMap","SyncApplicationMap","parseInt","BlockSyncStatus","RepositorySyncStatus","TerminalSyncStatus","column","file","foreignkey","joincolumn","property","onetomany","table","repositoryEntity","JoinType","EntityRelationType","JSONRelationType","SortOrder","SqlFunction","JSONClauseObjectType","SQLDataType","EntityState","OperationCategory","SqlOperator","CRUDOperation","TransactionType","ChangeType","DistributionStrategy","QueryType","PlatformType","StoreType","IdGeneration","JsonStatementType","QueryResultType","OperationType","QueryInputKind","QueryParameterType","ApplicationStatus","ensureChildArray","parentContainer","childArray","ensureChildMap","childObject","ensureChildJsMap","childMap","ensureChildJsSet","childSet","undefinedToNull","NAME","ANY","BOOLEAN","DATE","NUMBER","STRING","ENTITY","TABLE","DATABASES","DEFINITION","VALUE","COLUMN_LIST","UNIQUE","FOREIGN_KEY","REFERENCED_COLUMN_NAME","COLUMN","ENUM_TYPE","ID","JOIN_COLUMN","JOIN_COLUMNS","JSON_TYPE","MANY_TO_ONE","ONE_TO_MANY","SUB_QUERY","MAPPED_BY","INDEXES","PRIMARY_KEY","APPLICATION","ACTOR_ID","ACTOR_RECORD_ID","ENTITY_NAME","LOCAL_ENTITY_NAME","REPOSITORY_ID","ORIGINAL_ACTOR_ID","ORIGINAL_ACTOR_RECORD_ID","ORIGINAL_REPOSITORY_ID","SYS_WIDE_OP_ID_APPLICATION","SYS_WIDE_OP_ID_ENTITY","systemWideOperationId","SYSTEM_WIDE_OPERATION_ID","groundControl","ENTITY_STATE_MANAGER","OPERATION_CONTEXT_LOADER","TRANSACTIONAL_CONNECTOR","extendStatics","d","setPrototypeOf","__proto__","__extends","String","__","fulfilled","step","rejected","done","__generator","body","f","y","t","g","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","__values","o","__read","r","ar","error","__spreadArray","il","__await","__asyncGenerator","asyncIterator","q","resume","fulfill","settle","shift","__asyncValues","isFunction","createErrorClass","createImpl","ctorFunc","stack","UnsubscriptionError","_super","errors","err","arrRemove","item","splice","Subscription","initialTeardown","closed","_parentage","_teardowns","empty","unsubscribe","e_1","_a","e_2","_b","_parentage_1","_parentage_1_1","e_1_1","_teardowns_1","_teardowns_1_1","teardown_1","execTeardown","e_2_1","teardown","_hasParent","_addParent","parent","includes","_removeParent","EMPTY","EMPTY_SUBSCRIPTION","isSubscription","config","onUnhandledError","onStoppedNotification","useDeprecatedSynchronousErrorHandling","useDeprecatedNextContext","timeoutProvider","args","_i","delegate","clearTimeout","handle","reportUnhandledError","COMPLETE_NOTIFICATION","createNotification","kind","errorContext","cb","isRoot","errorThrown","captureError","Subscriber","destination","_this","isStopped","EMPTY_OBSERVER","complete","SafeSubscriber","handleStoppedNotification","nextNotification","_next","_error","_complete","observerOrNext","context_1","wrapForErrorHandling","defaultErrorHandler","handler","notification","subscriber","observable","identity","x","pipeFromArray","input","reduce","Observable","subscribe","_subscribe","lift","operator","isObserver","_trySubscribe","sink","promiseCtor","getPromiseCtor","subscription","Symbol_observable","pipe","operations","toPromise","operate","hasLift","liftedSource","OperatorSubscriber","onNext","onComplete","onError","onFinalize","ObjectUnsubscribedError","Subject","observers","hasError","thrownError","subject","AnonymousSubject","_throwIfClosed","copy","copy_1","copy_1_1","enumerable","configurable","_checkFinalizedStatuses","_innerSubscribe","asObservable","BehaviorSubject","_value","getValue","isArrayLike","isPromise","isInteropObservable","isAsyncIterable","createInvalidObservableTypeError","isIterable","Symbol_iterator","readableStreamLikeToAsyncGenerator","readableStream","reader","getReader","read","releaseLock","isReadableStreamLike","innerFrom","obs","array","promise","fromAsyncIterable","iterable","iterable_1","iterable_1_1","asyncIterable","asyncIterable_1","asyncIterable_1_1","catch","executeSchedule","parentSubscription","scheduler","work","delay","scheduleSubscription","schedule","observeOn","subscribeOn","scheduleAsyncIterable","scheduled","scheduleObservable","scheduleArray","schedulePromise","scheduleIterable","scheduleReadableStreamLike","project","defaultCompare","internalTerminalState","applicationActors","applications","domains","frameworkActor","internalConnector","dbName","internalCredentials","methodName","objectName","serverUrl","lastIds","columns","entities","properties","propertyColumns","relations","relationColumns","applicationVersions","receiver","initializedApps","initializingApps","terminal","transactionManager","pendingTransactionQueue","rootTransactionInProgressMap","transactionInProgressMap","webReceiver","localDomain","mainDomainFragments","onClientMessageCallback","pendingApplicationCounts","pendingHostCounts","pendingInterAppApiCallMessageMap","subsriptionMap","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","TerminalStore","getTerminalState","selectorManager","createRootSelector","getApplicationActors","createSelector","getApplicationActorMapByDomainAndApplicationNames","applicationActorsByDomainAndApplicationNames","applicationActor","applicationActorMapForDomain","actorsForApplication","getDomains","getDomainMapByName","domainsByName","getFrameworkActor","getInternalConnector","terminalState","getLastIds","getLatestApplicationVersionMapByNames","latestApplicationVersionMapByNames","mapForDomain","currentVersion","getLatestApplicationVersionMapByFullApplicationName","latestApplicationVersionMapByFullApplicationName","applicationVersionsForDomainName","values","fullName","getAllApplicationVersionsByIds","allApplicationVersionsByIds","versions","getLatestApplicationVersionsByApplicationIndexes","latestApplicationVersionsByApplicationIndexes","getApplications","getAllEntities","allEntities","latestApplicationVersion","getAllColumns","getAllRelations","allRelations","relation","getReceiver","getTransactionManager","getWebReceiver","tearDown","targetObject","propertyKey","ALIASES","AliasCache","aliasPrefix","reset","getFollowingAlias","currentAlias","lastAlias","currentIndex","aliasString","AliasMap","aliasCache","aliasMap","getNextAlias","hasAliasFor","getExistingAlias","EntityAliases","entityAliasCache","columnAliasCache","parameterAliasCache","parameterAliases","ParameterAliases","getParams","getNewFieldColumnAliases","FieldColumnAliases","__driver__","dbEntity","getOnlyAlias","size","alias","parameter","field","getParameters","parameters","_entityAliases","entityAliases","qField","dbProperty","Operation","category","ValueOperation","equals","lValue","rValue","EQUALS","greaterThan","GREATER_THAN","greaterThanOrEquals","GREATER_THAN_OR_EQUALS","isNotNull","IS_NOT_NULL","isNull","IS_NULL","in","IN","lessThan","LESS_THAN","lessThanOrEquals","LESS_THAN_OR_EQUALS","notEquals","NOT_EQUALS","notIn","NOT_IN","and","LogicalOperation","or","verifyChildOps","LOGICAL","AND","OR","not","NOT","QRelation","dbRelation","parentQ","appliationUtils","relationManager","QRepositoryEntityRelation","innerJoin","getNewQEntity","INNER_JOIN","leftJoin","LEFT_JOIN","joinType","relationEntity","newQEntity","applicationUtils","getQEntityConstructor","getNextChildJoinPosition","parentJoinEntity","thisRelation","other","actor","actorRecordId","repository","extend","BooleanOperation","FieldInOrderBy","sortOrder","toJSON","columnAliases","fa","so","toEntityJSON","ci","dbColumn","pi","ti","si","QField","objectType","__appliedFunctions__","applySqlFunction","sqlFunctionCall","appliedField","getInstance","forSelectClause","queryUtils","fieldUtils","rootEntityPrefix","__fieldSubQuery__","getRootJoinEntity","jsonField","appliedFunctions","appliedFunctionsToJson","ta","getPositionAlias","fromClausePosition","ot","dt","fieldSubQuery","getFieldQueryJson","FIELD_QUERY","asc","ASCENDING","DESCENDING","addSubQuery","subQuery","operableFunctionToJson","functionObject","valueToJSON","copyFunctions","appliedFunction","functionCallToJson","functionCall","ft","fromFunctionObject","Date","QOperableField","operation","Function","QBooleanField","FIELD","qEntity","QBooleanFunction","isQueryParameter","FIELD_FUNCTION","json","parameterAlias","DateOperation","QDateField","QDateFunction","NumberOperation","QNumberField","QNumberFunction","StringOperation","like","LIKE","QStringField","QStringFunction","UntypedOperation","UNTYPED","QUntypedField","sub","methods","getColumnQField","JSON","allQApplications","ChildQEntity","nextChildJoinPosition","qFieldOrRelation","relationType","qIdRelationConstructor","__qIdRelationConstructors__","isRepositoryEntity","QRepositoryEntityOneToManyRelation","QOneToManyRelation","getQRelation","propertyColumn","addColumnQField","QEntity","idIndex","idColumns","getQEntityIdRelationConstructor","QEntityIdRelation","getQEntityIdFields","addToObject","parentProperty","relationColumnMap","manyRelationColumns","relationColumn","oneColumn","manyColumn","isId","originalColumn","applicationDependsOn","dependantApplication","dependsOnApplicationIndex","applicationWithDepsMap","dependencies","repationManager","QNullFunction","bool","primitive","date","num","wrapPrimitive","assertDataType","typesOfData","rowIndex","expectedDataTypes","getColumnName","getSqlFunctionCall","sqlFunction","getFunctionObject","selectClause","select","QDistinctFunction","getSelectClause","max","MAX","plus","numeric1","numeric2","PLUS","StandAloneFunction","getSelect","distinct","parsedSelectClause","DISTINCT","DISTINCT_FUNCTION","QExistsFunction","EXISTS","FUNCTION","getQuery","parsedQuery","ob","EXISTS_FUNCTION","minus","rawQueries","AbstractQuery","isEntityQuery","getNonEntityQuery","rawQuery","jsonQuery","createSelectCallback","fromClauseToJSON","F","W","whereClauseToJSON","where","GB","groupByClauseToJSON","groupBy","H","having","OB","orderByClauseToJSON","orderBy","L","limit","O","fromClause","fromEntity","QTree","getRelationJson","NON_ENTITY_SELECT_ERROR_MESSAGE","DistinguishableQuery","isHierarchicalEntityQuery","selectClauseToJSON","rawSelect","rawInnerSelect","innerSelect","nonDistinctSelectClauseToJSON","MappableQuery","isChildObject","TreeQuery","S","tree","query","queryDefinition","view","convertMappedEntitySelect","customEntity","selectProxy","fieldPrefix","fieldIndex","customField","JoinFields","joinTo","on","joinOperation","joinWhereClause","QDriver","QEntityDriver","fullJoin","right","FULL_JOIN","rightJoin","RIGHT_JOIN","entityFieldMap","entityRelations","currentChildIndex","jsonRelation","jt","rt","rep","getJoinRelationJson","getEntityRelationJson","getRootRelationJson","ENTITY_JOIN_ON","ENTITY_APPLICATION_RELATION","ri","QTreeDriver","SUB_QUERY_ROOT","ENTITY_ROOT","getQ","joinChild","nextChildPosition","isRootEntity","rootEntity","SUB_QUERY_JOIN_ON","JoinTreeNode","addChildNode","joinTreeNode","childFromClausePositionArray","childPosition","getEntityRelationChildNode","getEntityRelationChildNodeByIndexes","relationIndex","matchingNodes","childNode","jsonEntityRelation","childTreeNode","RelationManager","getAlias","getParentAlias","createRelatedQEntity","joinRelation","getDbEntity","joinParentDriver","Lookup","ensureContext","doEnsureContext","lookup","queryResultType","one","QueryClass","mapResults","queryMethod","entityUtils","getEntityQuery","getQueryResultType","queryFacade","searchOne","findOne","find","baseQueryResultType","ENTITY_GRAPH","MAPPED_ENTITY_GRAPH","ENTITY_TREE","MAPPED_ENTITY_TREE","RAW","TREE","SHEET","startedAt","EntityLookup","dao","setMap","MappedChildClass","isMapped","setNoCache","ChildClass","entityLookup","rawEntityQuery","updateCacheManager","saveOriginalValues","EntityFind","graph","rawGraphQuery","rawTreeQuery","noCache","EntityFindOne","FieldQuery","jsonFieldQuery","getClauseDataType","selectField","SheetQuery","NonEntityFind","rawFieldQuery","sheet","rawSheetQuery","cursorSize","rawNonEntityQuery","NonEntityFindOne","NonEntitySearch","NonEntitySearchOne","AbstractInsertValues","rawInsertValues","columnIndexes","validateColumn","columnName","tableConfig","columnApplication","entityApplication","valuesToJSON","valueSets","dbColumns","valueSet","datesToNumbers","getTime","stringify","getPrimitiveValue","AbstractUpdate","rawUpdate","U","setToJSON","Delete","rawDelete","DF","deleteFrom","EntityQuery","InsertColumnValues","entityDriver","insertInto","II","C","V","InsertValues","driver","UpdateColumns","setClause","dbColumnMap","idDbColumnMap","idColumnMap","UpdateProperties","rawSet","jsonSetClause","dbPropertyMap","propertyMap","setEntityFragmentsToJSON","rawSetFragment","dbPropertyChain","childDbRelationChain","isTopLevelFragment","getPropertyChainDesription","childDbPropertyChain","setFragmentToJSON","dbRelationChain","matchingManyRelationColumn","manyRelationColumn","firstProperty","lastPrefix","ending","maxChainDepth","objectExists","valuesEqual","value1","value2","checkChildObjects","checkedKeys","compareNumbers","number1","number2","EntityUtils","getObjectClassName","getClassName","clazz","exists","isAppliable","getRawQuery","FieldUtils","QMetadataUtils","getAllNonGeneratedColumns","isGenerated","getAllInsertableColumns","getNewEntity","airDb","entityConstructor","qApplications","__constructors__","QueryUtils","whereClause","jsonOperation","logicalOperation","jsonLogicalOperation","functionOperation","valueOperation","jsonValueOperation","convertLRValue","anRValue","Y","airportSelectField","insert","ALL_FIELDS","__allFields__","isY","isN","ApplicationUtils_1","ApplicationUtils","airportDatabase","isActorId","isActorRecordId","isRepositoryId","doCascade","crudOperation","oneToManyElems","CREATE","UPDATE","DELETE","__qConstructors__","getEntityConstructor","isIdEmpty","idValue","isEmpty","isRelationColumn","isManyRelationColumn","isOneRelationColumn","oneRelationColumns","getIdKey","entityObject","failOnNoId","idValueCallback","getIdKeyInfo","arrayByIdColumnIndex","idKeys","mapByIdColumnName","propertyNameChains","getColumnPropertyNameChainsAndValue","forIdKey","generateNegativeIdsForMissing","columnValuesAndPaths","getColumnValuesAndPaths","firstColumnValueAndPath","last","addRelationToEntitySelectClause","allowDefaults","forEachColumnTypeOfRelation","convertTo","propertySelectClause","firstPropertyNameChain","propertyNameLink","propertyObject","reason","entityStateManager","markAsStub","forEachColumnOfRelation","failOnNoValue","dbRelationColumn","getColumnPaths","getSheetSelectFromSetClause","errorPrefix","actorIdColumnIndex","actorRecordIdColumnIndex","repositoryIdColumnIndex","systemWideOperationIdColumn","nonIdColumnSet","some","addColumnToSheetSelect","inQueryColumnIndex","relationObject","breadCrumb","manyRelation","relationBreadCrumb","otherEntityColumn","relationValuesAndPaths","concat","propertyBreadCrumb","TEMP_ID","entitySelectClause","firstColumnPath","handleNoId","noIdValueCallback","deltaConst","dbConst","ConstraintMode","DB_ID_FIELD","CURRENT_DB","DEFAULT_DB","ALL_DBS","OWN_DB_FACADE","databaseState","entityMap","functions","abs","numeric","AVG","ABS","avg","count","COUNT","min","MIN","sum","SUM","ucase","stringValue","UCASE","lcase","LCASE","mid","MID","LEN","round","digits","ROUND","NOW","format","formatParameters","FORMAT","toReplace","replaceWith","REPLACE","trim","stringField","TRIM","distinctFunction","divide","DIVIDE","subtract","MINUS","modulus","MODULUS","multiply","MULTIPLY","fragments","firstFragment","restOfFragments","CONCATENATE","union","unionAll","intersect","QM","DatabaseStore","airTrafficControl","AIRPORT_DATABASE","APPLICATION_UTILS","DATABASE_FACADE","DATABASE_STORE","ENTITY_UTILS","FIELD_UTILS","LOOKUP","NON_ENTITY_FIND","NON_ENTITY_FIND_ONE","NON_ENTITY_SEARCH","NON_ENTITY_SEARCH_ONE","Q_METADATA_UTILS","QUERY_FACADE","QUERY_UTILS","RELATION_MANAGER","REPOSITORY_LOADER","UPDATE_CACHE_MANAGER","databaseFacade","databaseStore","transactionalConnector","EntityDatabaseFacade","Q","insertColumnValues","rawInsertColumnValues","withDbEntity","insertValues","insertColumnValuesGenerateIds","insertValuesGenerateIds","updateColumnsWhere","rawUpdateColumns","updateWhere","deleteWhere","saveToDestination","repositoryDestination","previousEntity","DaoFindOneStub","Graph","Tree","DaoFindStub","DaoSearchOneStub","DaoSearchStub","DaoStub","Find","FindOne","Search","SearchOne","Dao","dbEntityId","internal","stub","__dbApplication__","BaseSave","entityId","repositoryId","uuId","ageSuitability","findAll","entityIds","cacheForUpdate","findAllAsTrees","findById","markForDeletion","entityIdInfo","anEntity","DaoQueryDecorators","ApiObjectKind","FieldsSelect","ids","propertyNames","fields","manyToOnes","getRelationSelect","oneToManys","forRelations","selectFragment","Duo","qApplication","getIdStub","getIdStubs","SelectorManager","inputSelectors","sourceObservable","selector","keySelector","comparator","previousKey","first","currentKey","getSelector","stateObservable","currentValue","duoDiSet","dbApplication","getSysWideOpId","sequenceGenerator","getSysWideOpIds","numSequencesNeeded","sysWideOpIdGeneratedColumn","entityMapByName","generateSequenceNumbers","checkIn","API_REGISTRY","API_VALIDATOR","CLIENT_QUERY_MANAGER","DAO","OPERATION_DESERIALIZER","QUERY_PARAMETER_DESERIALIZER","QUERY_RESULTS_SERIALIZER","SELECTOR_MANAGER","SEQUENCE_GENERATOR","terminalMap","APPLICATION_INITIALIZER","DOMAIN_RETRIEVER","STORE_DRIVER","TERMINAL_STORE","TRANSACTION_MANAGER","TRANSACTIONAL_RECEIVER","TRANSACTIONAL_SERVER","terminalStore","storeDriver","applicationInitializer","operationContextLoader","RepositoryLoader","loadRepository","repositorySource","repositoryUuId","repositoryExistenceChecked","repositoryLoadInfo","repositoryDao","getRepositoryLoadInfo","lastSyncTimestamp","immutable","remoteRepositoryTransactionHistory","repositoryTransactionHistory","saveTimestamp","now","synchronizationAdapter","synchronizationAdapterLoader","load","messages","getTransactionsForRepository","messageMapByUuId","synchronizationInManager","receiveMessages","getRandomValues","rnds8","Uint8Array","rng","crypto","msCrypto","validate","uuid","REGEX","byteToHex","v4","buf","rnds","random","toLowerCase","RepositoryManager","initialize","createRepository","newRepository","createRepositoryRecord","goOffline","getUpdateState","setUpdateStateForAll","updateState","setUpdateState","getRepositoryRecord","createdAt","owner","user","uuidv4","ensureRepositoryScopeOnInsertValues","row","ensureRepositoryLinkOnUpdateWhere","ensureRepositoryScopeOnDeleteWhere","OperationHistory","recordHistory","RecordHistory","newValues","oldValues","RecordHistoryNewValue","RecordHistoryOldValue","RepositoryTransactionType","RepositoryTransactionHistory","repositoryTransactionType","LOCAL","operationHistory","transactionHistory","TransactionHistory","repositoryTransactionHistories","repositoryTransactionHistoryMap","allOperationHistory","allRecordHistory","allRecordHistoryNewValues","allRecordHistoryOldValues","Actor","Repository","RepositoryEntity","RepositoryApplication","ChildRepoRow","ChildRow","ImmutableRepoRow","ImmutableRow","MutableRepoRow","MutableRow","ReferenceRow","Q_APPLICATION","ddS","SQDIDao","BaseActorDao","Save","BaseOperationHistoryDao","BaseRecordHistoryDao","BaseRecordHistoryNewValueDao","BaseRecordHistoryOldValueDao","BaseRepositoryDao","BaseRepositoryApplicationDao","BaseRepositoryTransactionHistoryDao","BaseTransactionHistoryDao","SQDIDuo","BaseOperationHistoryDuo","BaseRecordHistoryDuo","BaseRecordHistoryNewValueDuo","BaseRecordHistoryOldValueDuo","BaseRepositoryTransactionHistoryDuo","BaseTransactionHistoryDuo","RecordHistoryNewValueDao","findByRecordHistoryIdIn","recordHistoryIds","rhnv","OperationHistoryDuo","getNewRecord","entityChangeType","rootTransaction","changeType","orderNumber","numberOfOperations","sort","ew1","ew2","startId1","startId2","startRecordHistory","actorId","recordHistoryDuo","RecordHistoryDuo","addNewValue","newValue","recordHistoryNewValue","recordHistoryNewValueDuo","addOldValue","oldValue","recordHistoryOldValue","recordHistoryOldValueDuo","RecordHistoryNewValueDuo","RecordHistoryOldValueDuo","RepositoryTransactionHistoryDuo","isRepositoryCreation","newRecord","sortRepoTransHistories","repoTransHistories","actorMapById","repoTransHistory1","repoTransHistory2","syncTimeComparison","syncTimestamp","saveTimeComparison","startOperation","operationHistoryDuo","compareDates","date1","date2","time1","time2","TransactionHistoryDuo","transactionType","transaction","getRepositoryTransaction","repositoryTransactionHistoryDuo","RepositoryTransactionHistoryDao","findWhereUuIdsIn","uuIds","rth","findAllLocalChangesForRecordIds","changedRecordIds","repositoryTransactionHistoryMapByRepositoryId","th","oh","ae","av","rh","nv","repositoryEquals","idsForRepository","recordMapForRepository","entityEquals","recordMapForEntity","actorEquals","recordsForActor","firstChangeTime","repoTransHistory","rth1","rth2","updateSyncTimestamp","ActorDao","findWithDetailsAndGlobalIdsByIds","actorIds","findWithDetailsAndGlobalIdsByWhereClause","findMapsWithDetailsByGlobalIds","userIds","terminalIds","actorMap","actors","findWithDetailsByGlobalIds","findByDomainAndApplicationNames","act","findByUuIds","getWhereClause","ap","username","RepositoryDao","REMOTE_SYNC","findReposWithDetailsAndSyncNodeIds","repositoryIds","findByIds","repositories","holdingPattern","OPERATION_HISTORY_DUO","RECORD_HISTORY_DUO","RECORD_HISTORY_NEW_VALUE_DUO","RecordHistoryOldValueDao","RECORD_HISTORY_OLD_VALUE_DUO","REPOSITORY_TRANSACTION_HISTORY_DUO","TRANSACTION_HISTORY_DUO","rhov","ACTOR_DAO","REPOSITORY_DAO","REPOSITORY_TRANSACTION_HISTORY_DAO","Agt","Continent","Country","Terminal","isLocal","TerminalAgt","User","UserTerminal","UserTerminalAgt","BaseAgtDao","BaseContinentDao","BaseCountryDao","BaseTerminalDao","BaseTerminalAgtDao","BaseUserDao","BaseUserTerminalDao","BaseUserTerminalAgtDao","TerminalDao","findByOwnerIdsAndUuIds","ownerIds","terminals","UserDao","findByUserNames","usernames","u","users","AddUserErrorCodes","UserApi","addUser","email","existingUsers","userDao","existingUser","errorCode","USERNAME_TAKEN","findUser","privateId","travelDocumentCheckpoint","USER_API","TERMINAL_DAO","USER_DAO","InternalRecordManager","ensureApplicationRecords","transactInternal","_transaction","updateDomain","actorMapForDomain","actorDao","anApplication","applicationDao","findByIndex","lastTerminalState","initTerminal","getOriginalValues","updatedDomain","dbDomain","domainDao","findByName","setOriginalValues","replaced","InternalTransactionalConnector","callApi","addRepository","transactionalServer","portableQuery","cachedSqlQueryId","ensureGeneratedValues","insertValuesGetIds","updateValues","onMessage","OnlineManager","online","repositoryManager","goOnline","offlineDeltaStore","OFFLINE_DELTA_STORE","GO_ONLINE","repoRecords","findReposWithDetailsByIds","goOnlineCalls","repositoryGoOnline","all","deltaStore","remoteChangesSinceInitialGoOnline","transactions","repoTransaction","REMOTE","addRemoteChanges","remoteChangesIter","loadTransactionsSinceLastKnown","lastSyncedTransaction","remoteChanges","hasNext","unsyncedChanges","repositoryTransactionHistoryDao","findUnsyncedTransactions","syncStatus","SYNCHRONIZED","addChanges","changeListConfig","markChangesAsSynced","isOnline","IsolateMessageType","AppState","applicationState","appState","NOT_INITIALIED","hostServer","mainDomain","observableMessageMap","pendingMessageMap","messageCallback","ApplicationStore","apron","LOCAL_API_SERVER","apiRegistry","TransactionalReceiver","processMessage","errorMessage","credentials","CALL_API","nativeHandleApiCall","APP_INITIALIZING","jsonApplication","fullApplicationName","databaseManager","initFeatureApplications","internalRecordManager","APP_INITIALIZED","GET_LATEST_APPLICATION_VERSION_BY_APPLICATION_NAME","RETRIEVE_DOMAIN","ADD_REPOSITORY","DELETE_WHERE","deleteWhereMessage","FIND","findMessage","FIND_ONE","findOneMessage","INSERT_VALUES","insertValuesMessage","INSERT_VALUES_GET_IDS","insertValuesGetIdsMessage","SAVE","SAVE_TO_DESTINATION","saveMessage","saveToDestinationMessage","SEARCH","searchMessage","SEARCH_ONE","searchOneMessage","UPDATE_VALUES","updateValuesMessage","startApiCall","nativeHandleCallback","transactionCredentials","transactionId","startTransaction","initiator","rollback","endApiCall","commit","TransactionalServer","getTransactionFromContextOrCredentials","getActor","queryManager","ensureContextSync","saveResult","operationManager","performSave","numInsertedRecords","insertManager","numUpdatedRecords","updateManager","numDeletedRecords","deleteManager","tempActor","localTerminal","anActor","ensureSync","AbstractMutationManager","getPortableQuery","parameterMap","doInsertValues","columnValueLookups","columnValueLookup","nested","nextColumnValueLookup","BLUEPRINT","sinceVersion","api","apiObjectMap","IApplicationApi","operationMap","testApiDefinitionGeneration","isAsync","manyRelationColumnRefs","notNull","propertyRefs","idColumnRefs","columnRef","integerVersion","referencedApplications","versionString","IUserApi","relationRef","mappedBy","propertyRef","relationTableIndex","manyRelationIndex","oneApplicationIndex","oneTableIndex","oneRelationIndex","oneColumnIndex","propertyIndexes","propertyIndex","unique","allocationSize","columnList","relationTableApplicationIndex","DatabaseManager","initialized","initNoDb","installStarterApplication","stage","initWithDb","doesTableExist","isInitialized","jsonApplications","findAllWithJson","existingApplicationMap","applicationsToCreate","existingApplication","blueprintFile","DeleteManager","deleteCommand","isSync","selectCascadeTree","getCascadeSubTree","jsonDelete","jsonSelect","portableSelect","treesToDelete","recordsToDelete","repositoryIdSet","treeToDelete","recordRepositoryIds","recordTreeToDelete","recordsToDeleteForApplication","recordsToDeleteForRepository","recordToDelete","columnProcessed","childTrees","childDbEntity","childTree","foundValues","applicationRecordsToDelete","entityIndex","entityRecordsToDelete","entityRecordsToDeleteForRepo","historyManager","getNewRepositoryTransactionHistory","DELETE_ROWS","subTree","HistoryManager","getNewTransactionHistory","transactionHistoryDuo","InsertManager","internalInsertValues","verifyNoGeneratedColumns","jsonInsertValues","getIds","validateValueRowLength","columnIndexSet","columnsToPopulate","inStatementIndex","rowNumber","generatedColumns","ensureRepositoryEntityIdValues","generateOnSync","addInsertHistory","numberOfInsertedRecords","firstValuesRow","numValuesInRow","valuesRow","allIds","_entityValues","actorIdColumn","sysWideOperationIdColumn","idColumn","inStatementColumnIndex","isActorIdColumn","entityValues","idValues","generatedColumnIndexes","generatedColumn","generatedSequenceValues","generatedColumnIndex","generatedColumnSequenceValues","insertColumnIndex","generatedValue","actorRecordIdColumn","repositoryIdColumn","repositoryIdColumnQueryIndex","foundActorIdColumn","foundActorRecordIdColumn","foundSystemWideOperationIdColumn","isSaveOperation","missingRepositoryIdErrorMsg","Number","isInteger","operationsByRepo","repositoryIdIndex","actorIdIndex","actorRecordIdIndex","repositoryIdColumnNumber","actorIdColumnNumber","actorRecordIdColumnNumber","columnNumber","QueryManager","ensureRepositoryPresenceAndCurrentState","repositoryLoader","TransactionManager","getInProgressTransactionById","isServer","transactionalCallback","transact","transactionManagerStore","parentTransaction","checkForCircularDependencies","unshift","internalStartTransaction","setupTransaction","clearTransaction","resumeParentOrPendingTransaction","ancestorTransaction","pendingTransaction","childTransactionHistory","parentTransactionHistory","parentRepositoryTransactionRecord","saveRepositoryHistory","saveTransaction","activeQueries","rerunQueries","synchronizationOutManager","synchronizeOut","isSameSource","callHerarchy","getApiName","hierarchyTransaction","nameContainer","transactionHistoryIds","idGenerator","generateTransactionHistoryIds","transactionHistoryId","repositoryHistoryIds","operationHistoryIds","UpdateManager","internalFragments","SET","recordHistoryMap","repositorySheetSelectInfo","addUpdateHistory","numUpdatedRows","previousDbEntity","addNewValueHistory","jsonUpdate","getSheetSelectFromSetClauseResult","recordsToUpdate","recordsByRepositoryId","groupRecordsByRepository","recordHistoryMapByRecordId","recordHistoryMapForRepository","UPDATE_ROWS","recordsForRepositoryId","recordToUpdate","recordHistoryMapForActor","sheetQuery","resultSetIndexByColumnIndex","selectDbColumns","SELECT","updatedRecords","updatedRecord","records","CascadeGraphVerifier","verify","DependencyGraphResolver","getOperationsInOrder","unorderedDependencies","getEntitiesToPersist","resolveCircularDependencies","orderedDependencies","orderEntitiesToPersist","operationNodes","optimizePersistOperations","ensureUpdatesAreGroupedCorrectly","operatedOnEntities","operatedOnPassThroughs","dependsOn","dependency","deleteByCascade","allProcessedNodes","isCreate","isDelete","isParentId","isPassThrough","isStub","isUpdate","getEntityStateTypeAsFlags","operationUniqueId","getOperationUniqueId","getUniqueIdFieldName","dependencyGraphNode","isExistingNode","circleTraversedFor","dependsOnByOUID","dependsOnOUID","relatedEntities","propertyValue","fromDependencyForChild","isDependency","childDeleteByCascade","getStateFieldName","parentState","childDependencyLinkedNodes","nodeOUID","resolveCircularDependenciesForNode","currentlyTraversedNode","nodePath","entityPath","pathNode","entityLongName","orderedNodes","processedNodes","entityUid","nodeProcessed","operationsByApplicationIndex","applicationOperationNodes","entityOperations","canBeCombined","dependencyUid","EntityGraphReconstructor","restoreEntityGraph","entitiesByOperationIndex","processedEntitySet","rootCopy","linkEntityGraph","lastOUID","currentEntities","results","previouslyFoundEntity","entityCopy","copyEntityState","getEntityState","isManyToOne","assertRelationValueIsAnObject","assertManyToOneNotArray","assertOneToManyIsArray","previousDbApplication","propertyDbApplication","propertyCopyValue","relationValue","OperationContextLoader","OperationManager","entityGraph","verifiedTree","cascadeGraphVerifier","entityGraphReconstructor","structuralEntityValidator","dependencyGraphResolver","rootDbEntity","saveActor","ownerActor","created","deleted","updated","internalCreate","internalDelete","internalUpdate","rawInsert","qMetadataUtils","columnIndexesInValues","valuesFragment","columnValue","_propertyNameChains","idsAndGeneratedValues","entitySaveResult","generatedPropertyName","generatedPropertyValue","setFragment","idWhereFragments","runUpdate","originalEntity","updatedValue","propertyOriginalValue","_dbColumn","originalColumnValue","valuePropertyNameChain","childPropertyName","idQProperty","currentSetFragment","originalValue","whereFragment","valuesMapByColumn","entityIdWhereClauses","deletedValue","StructuralEntityValidator","operatedOnEntityIndicator","fromOneToMany","parentRelationProperty","rootRelationRecord","parentRelationRecord","haveRootRelationRecord","record","newRepositoryNeeded","relationIsOneToMany","isRelationNullable","isMissingRepositoryProperty","isRepositoryColumnAndNewRepositoryNeed","parentOneToManyElems","parentMappedBy","manyToOneElems","warn","isIdColumnEmpty","ensureIdValue","ensureNonRelationalValue","ensureRepositoryValidity","originalValues","originalRepository","originalActor","originalActorRecordId","throwUnexpectedProperty","QueryParameterDeserializer","deserialize","queryName","deserializedParameters","deserializedParameter","deserializeParameter","jsonQueryParameter","parameterIndex","checkTypeOfParameter","RESULT_DATE","expectedParameterType","typeOfParameter","QueryResultsSerializer","serialize","lookupTable","sequence","stubLookupTable","serializedEntity","doSerialize","entityStub","STUB","propertyCopy","manyObject","toISOString","ClientQueryManager","getClientQuery","daoName","Domain","Application","VersionedApplicationObject","ApplicationColumn","ApplicationCurrentVersion","ApplicationEntity","relationReferences","ApplicationOperation","ApplicationProperty","ApplicationPropertyColumn","ApplicationReference","ApplicationRelation","ApplicationRelationColumn","ApplicationVersion","references","referencedBy","referencesMapByName","referencedByMapByName","BaseApplicationDao","BaseApplicationColumnDao","BaseApplicationCurrentVersionDao","BaseApplicationEntityDao","BaseApplicationOperationDao","BaseApplicationPropertyDao","BaseApplicationPropertyColumnDao","BaseApplicationReferenceDao","BaseApplicationRelationDao","BaseApplicationRelationColumnDao","BaseApplicationVersionDao","BaseDomainDao","BaseApplicationVersionDuo","DomainDao","findByIdIn","domainIds","findMapByNameWithNames","domainNames","domainMapByNameWithNames","findOneByName","findByNames","names","checkAndInsertIfNeeded","existingDomains","existingDomainMap","existingDomain","newDomains","ApplicationColumnDao","findAllForEntities","applicationColumns","sc","applicationColumn","precision","scale","deprecatedSinceVersion","removedInVersion","ApplicationDao","findAllActive","findMapByVersionIds","applicationVersionIds","applicationMapByIndex","sv","majorVersion","minorVersion","patchVersion","findMaxIndex","findMaxVersionedMapByApplicationAndDomainNames","applicationDomainNames","applicationNames","maxVersionedMapByApplicationAndDomainNames","sMaV","sMiV","applicationLookupRecords","domainId","applicationLookupRecord","setStatusByIndexes","indexes","status","findMapByFullNames","fullApplicationNames","mapByFullName","findByDomainNamesAndApplicationNames","scope","signature","ApplicationEntityDao","findAllForApplicationVersions","se","applicationEntities","applicationEntity","ApplicationPropertyColumnDao","findAllForColumns","columnIds","rc","applicationPropertyColumns","spc","applicationPropertyColumn","ApplicationPropertyDao","applicationProperties","sp","applicationProperty","ApplicationReferenceDao","sr","ownApplicationVersion","applicationReferences","applicationReference","referencedApplicationVersion","ApplicationRelationColumnDao","applicationRelationColumns","src","applicationRelationColumn","oneRelation","parentRelation","ApplicationRelationDao","findAllForProperties","propertyIds","applicationRelations","applicationRelation","foreignKey","ApplicationVersionDao","findAllActiveOrderByApplicationIndexAndId","ApplicationVersionDuo","trafficPattern","DOMAIN_DAO","APPLICATION_COLUMN_DAO","APPLICATION_DAO","APPLICATION_ENTITY_DAO","APPLICATION_PROPERTY_COLUMN_DAO","APPLICATION_PROPERTY_DAO","APPLICATION_REFERENCE_DAO","APPLICATION_RELATION_COLUMN_DAO","APPLICATION_RELATION_DAO","APPLICATION_VERSION_DAO","EntityOrderByParser","rootSelectClauseFragment","qValidator","getCommonOrderByFragment","orderByFields","orderByField","getOrderByFragment","joinTree","qEntityMapByAlias","orderByFragments","selectFragmentQueue","currentSelectFragment","joinNodeQueue","currentJoinNode","tableAlias","currentEntityOrderBy","orderByDbEntity","isForParentNode","validateReadProperty","allColumnsToSortBy","idColumnsToSortBy","dbPropertyColumn","childJoinNode","entityOrderByFragments","buildOrderByFragmentForEntity","finalOrderByColumnsFragments","inputOrderByPropertyNameSet","idColumnName","ExactOrderByParser","validator","validateAliasedFieldAccess","MappedOrderByParser","originalOrderBy","currentSelectFragmentFieldSet","GraphMtoMapper","mtoStubReferenceMap","addMtoReference","mtoStubReference","mtoEntityIdValue","mtoDbEntity","mtoEntitiesForTypeMap","mtoRelationField","populateMtos","mtoEntitiesForApplicationMap","mtoEntityId","mtosForEntity","mtoPropertyName","otmDbEntity","otmEntitiesForTypeMap","otmEntity","otmEntityId","mtoParentObject","GraphOtmMapper","mtoEntityReferenceMap","otmEntityReferenceMap","otmEntityField","mtoEntityReferenceMapForEntity","mapForOtmEntity","mtoCollection","addOtmReference","otmStubReference","otmEntityIdValue","otmRecordByPropertyName","otmPropertyName","otmObject","populateOtms","keepMappedEntityArrays","mtoEntityReferenceMapForApplication","entityWithOtmMap","referencedEntitiesByPropertyMap","otmProperty","referencedEntityMap","otmCollection","putAll","AbstractObjectResultParser","addManyToOneStub","resultObject","relationInfos","manyToOneStub","haveAllIds","relationInfo","lastObject","currentObject","propertyNameChain","EntityGraphResultParser","entityMapByApplicationAndTableIndexes","otmStubBuffer","mtoStubBuffer","currentResultRow","otmMapper","mtoMapper","addEntity","entityAlias","addProperty","dataType","bufferManyToOneStub","relationDbEntity","relatedEntityId","bufferManyToOne","bufferBlankManyToOneStub","bufferManyToOneObject","childResultObject","bufferBlankManyToOneObject","bufferOneToManyStub","bufferOneToMany","bufferOneToManyCollection","bufferBlankOneToMany","otmEntityName","flushEntity","selectClauseFragment","entityIdValue","currentEntity","getEntityToFlush","flushRelationStubBuffers","flushRow","bridge","parsedResults","mapped","entityMapForName","existingEntity","mergeEntities","sourceArray","targetArray","sourceSet","sourceChild","sourceChildIdValue","targetChild","targetChildIdValue","put","otmStub","mtoStub","TreeResultParser","currentRowObjectMap","objectEqualityMap","lastRowObjectMap","currentObjectOneToManys","isDifferentOrDoesntExist","addOneToManyCollection","currentOtmCollection","lastOtmCollection","mergeEntity","isSameObjectAsLastRow","oneToManyProperty","currentOneToMany","currentMto","existingOneToMany","EntityTreeResultParser","addManyToOneReference","lastMtoStub","currentMtoStub","ObjectResultParserFactory","getObjectResultParser","TreeQueryResultParser","ClauseType","SQLWhereBase","dialect","sqlQueryAdapter","parameterReferences","fieldMap","jsonRelationMapByAlias","parameterReference","getParameterValue","getFunctionCallValue","rawValue","getFieldValue","FUNCTION_CALL","getFieldFunctionValue","aField","defaultCallback","aValue","isParameterReference","getParameterReference","getFunctionAdaptor","getFunctionCalls","addFunctionAlias","clauseField","clauseType","clauseFieldMember","MAPPED_SELECT_CLAUSE","WHERE_CLAUSE","subQuerySql","subStatementSqlGenerator","getTreeQuerySql","validateReadQEntityProperty","getEntityPropertyColumnName","addField","getComplexColumnFragment","jsonFieldSqlSubQuery","getFieldQuerySql","addSubQueryAlias","MANY_TO_ONE_RELATION","validateReadQEntityManyToOneRelation","getEntityManyToOneColumnName","applyOperator","getWHEREFragment","nestingPrefix","getLogicalWhereFragment","lValueSql","rValueSql","addFieldFromColumn","warning","getSimpleColumnFragment","selectSqlFragment","childOperations","childOperation","NaN","SQLNoJoinQuery","getTableFragment","fromRelation","addAs","firstDbEntity","tableName","getEntityTableName","firstQEntity","fromFragment","SQLDelete","toSQL","SQLInsertValues","validateInsertQEntity","getColumnsFragment","getValuesFragment","valuesClauseFragment","valuesArray","SQLDialect","EntityDefaults","getForAlias","defaultsForAlias","SQLQuery","entityDefaults","getFieldMap","getEntityApplicationRelationFromJoin","leftQEntity","rightQEntity","entityRelation","parentAlias","joinTypeString","allJoinOnColumns","leftDbEntity","rightDbEntity","matchingRelations","manySideRelation","ownColumnName","referencedColumnName","leftColumn","rightColumn","onClause","joinOnColumn","joinWhereClauseOperator","SQLUpdate","updateFragment","getSetFragment","internalSetFragment","setClauseFragment","setFragments","validateUpdateColumn","addSetFragment","fieldValue","isManyToOneRelation","addManyToOneMappings","parentMapping","mappings","mapping","propertyChain","childMappings","SqlFunctionField","jsonClauseField","sqlValueProvider","NonEntitySQLQuery","subStatementQueryGenerator","addQEntityMapByAlias","sourceMap","joinTrees","buildFromJoinTree","getSELECTFragment","getFROMFragments","groupByFragment","getGroupByFragment","havingFragment","orderByFragment","orderByParser","offsetFragment","getOffsetFragment","getLimitFragment","joinRelations","joinNodeMap","jsonTree","jsonTrees","firstRelation","validateReadFromEntity","firstEntity","rightEntity","addFieldsToView","nonJoinedEntity","anotherTree","leftNode","rightNode","viewJoinRelation","viewAlias","addFieldsToViewForSelect","forFieldQueryAlias","hasDistinctClause","fieldName","fieldJson","aliasToSet","addFieldToViewForSelect","fieldQuery","getFieldSelectFragment","nestedObjectCallBack","columnSelectSqlFragment","getFROMFragment","parentTree","currentTree","currentRelation","leftEntity","joinOnClause","viewRelation","groupByField","FieldSQLQuery","parseQueryResults","bridgedQueryConfiguration","parsedResult","parseQueryResult","distinctClause","NON_MAPPED_SELECT_CLAUSE","resultRow","nextFieldIndex","getResultCellValue","TreeSQLQuery","queryParser","numProperties","SubStatementSqlGenerator","jsonTreeQuery","mappedSqlQuery","fieldSqlQuery","EntitySQLQuery","objectResultParserFactory","graphQueryConfiguration","finalSelectTree","setupSelectFields","lastResult","onlyJsonRelation","nextColumnIndex","numNonNullColumns","childSelectClauseFragment","__state__","haveRelationValues","columnAlias","sqlDataType","childEntityAlias","defaultValue","parentDbProperty","retrieveAllOwnFields","ofProperty","allFieldsSpecified","entityDefinitionHasIds","manyToOneRelation","selectSqlFragments","defaults","columnSelect","subSelectFragments","SheetSQLQuery","resultsFromSelect","ActiveQueries","queries","cachedSqlQuery","markQueriesToRerun","sqlQuery","rerun","runQuery","IdGenerator","transactionHistoryIdColumns","populateTransactionHistoryIdColumns","_reject","doPopulateTransactionHistoryIdColumns","transactionHistoryDbEntity","getHoldingPatternDbEntity","repoTransHistoryDbEntity","operationHistoryDbEntity","recordHistoryDbEntity","numRepositoryTransHistories","numOperationTransHistories","numRecordHistories","generatedSequenceNumbers","generateEntityIds","holdingPatternEntityName","CurrentState","SqlDriver","supportsLocalTransactions","getTableName","theTableName","composeTableName","internalSetupTransaction","tearDownTransaction","childTransaction","internalCommit","internalRollback","rollbackError","splitValues","numVals","sqlInsertValues","getDialect","sql","executeNative","sqlDelete","numberOfAffectedRecords","sqlUpdate","getSQLQuery","findNative","resultType","QueryResType","resultsSubject","valuesInRow","maxValues","numRowsPerBatch","Math","floor","aSplitValues","QValidator","validateUpdateProperty","functionAlias","subQueryAlias","fieldAlias","fuelHydrantSystem","ACTIVE_QUERIES","SUB_STATEMENT_SQL_GENERATOR","ID_GENERATOR","OBJECT_RESULT_PARSER_FACTORY","Q_VALIDATOR","SQL_QUERY_ADAPTOR","ABSTRACT_SQL_DRIVER","SQL_WHERE_BASE","DebugSynchronizationAdapter","sinceSyncTimestamp","response","nonhubClient","getRepositoryTransactions","sendTransactions","messagesByRepository","allSent","repositoryUuid","sendTransactionsForRepository","sendRepositoryTransactions","SynchronizationAdapterLoader","synchronizationSource","debugSynchronizationAdapter","SyncInActorChecker","ensureActors","actorUuids","messageActorIndexMap","checkActorApplication","checkActorTerminal","checkActorUser","messageUserIndex","missingActors","messageActor","SyncInApplicationChecker","ensureApplications","applicationCheckMap","checkApplicationsAndDomains","allApplicationNames","domainCheckMap","getNames","applicationCheck","domainCheck","found","domainsToCreate","applicationChecksByName","applicationChecksForDomain","applicationChecksForDomainMap","SyncInApplicationVersionChecker","ensureApplicationVersions","checkVersionsApplicationsDomains","applicationVersionCheckMap","applicationVersionDao","lastDomainName","lastApplicationName","applicationVersionNumber","applicationChecks","SyncInChecker","checkMessage","syncInUserChecker","ensureUsers","syncInTerminalChecker","ensureTerminals","syncInApplicationChecker","syncInActorChecker","syncInRepositoryChecker","ensureRepositories","syncInApplicationVersionChecker","syncInDataChecker","checkData","SyncInDataChecker","applicationEntityMap","populateApplicationEntityMap","checkOperationHistories","applicationVersionsByIds","messageApplicationVersion","entitiesForDomain","entitiesForApplication","systemWideOperationIds","actorIdColumnMapByIndex","repositoryIdColumnMapByIndex","checkRecordHistories","recordHistories","checkNewValues","checkOldValues","referencedRepositories","SyncInRepositoryChecker","repositoryUuids","messageRepositoryIndexMap","checkRepository","missingRepositories","messageRepository","repositoryIndex","SyncInTerminalChecker","terminalUuids","messageTerminalIndexMap","terminalDao","missingTerminals","messageTerminal","addMissingTerminals","SyncInUserChecker","userUuids","messageUserIndexMap","missingUsers","messageUser","addMissingUsers","SynchronizationConflict","SynchronizationConflict_Type","SynchronizationConflictValues","DataOrigin","ApplicationChangeStatus","RecordUpdateStage","BaseRecordUpdateStageDao","BaseSynchronizationConflictDao","BaseSynchronizationConflictValuesDao","SynchronizationConflictDao","synchronizationConflicts","synchronizationConflict","acknowledged","overwrittenRecordHistory","overwritingRecordHistory","SynchronizationConflictValuesDao","synchronizationConflictValues","scv","synchronizationConflictValue","RecordUpdateStageDao","rus","updateEntityWhereIds","idMap","updatedColumnIndexes","idsForActor","columnRus","columnSetClause","movingWalkway","RECORD_UPDATE_STAGE_DAO","SYNCHRONIZATION_CONFLICT_DAO","SYNCHRONIZATION_CONFLICT_VALUES_DAO","Stage1SyncedInDataProcessor","performStage1DataProcessing","actorMayById","populateSystemWideOperationIds","repoTransHistoriesForRepo","changedRecordsForRepo","idsForEntity","newValueMap","allRepoTransHistoryMapByRepoId","allRemoteRecordDeletions","getDeletedRecordIdsAndPopulateAllHistoryMap","localRepoTransHistoryMapByRepositoryId","allLocalRecordDeletions","newlyFoundActorSet","repositoryTransactionHistoriesForRepository","newActors","newActor","repoTransHistoriesForRepository","recordCreations","recordUpdates","recordDeletions","syncConflictMapByRepoId","processCreation","processUpdate","processDeletion","numSystemWideOperationIds","ensureRecordHistoryId","actorRecordIdSetByActor","repositoryTransactionHistoryMapByRepoId","mergeArraysInMap","syncInUtils","ensureRecordMapForRepoInTable","recordUpdatesForRepoInTable","getRecordsForRepoInTable","recordDeletesForRepoInTable","allRemoteRecordDeletesForRepoInTable","allLocalRecordDeletesForRepoInTable","insertsForEntityInRepo","getRecord","getRecordInfo","hasRecordId","getRecordHistoryId","remoteDeleteRecordHistoryId","addSyncConflict","REMOTE_CREATE_REMOTELY_DELETED","createdRecord","ensureColumnValueMap","recordCreationsForRepoInTable","updatesForEntityInRepo","localDeleteRecordHistoryId","REMOTE_UPDATE_LOCALLY_DELETED","LOCAL_UPDATE_REMOTELY_DELETED","ensureRecord","recordUpdate","REMOTE_UPDATE_LOCALLY_UPDATED","recordHistoryId","deletesForEntityInRepo","recordCreationsForActorInRepoInTable","getRecordsForActor","recordUpdatesForActorInRepoInTable","recordMapByApplicationTableAndRepository","recordMapForApplication","recordMapForTable","recordMapForRepoInTable","recordMapByActor","actorRecordIdsForActor","synchronizationConflictType","syncConflict","createSynchronizationConflict","dataMap","Stage2SyncedInDataProcessor","applyChangesToDb","stage1Result","applicationsByApplicationVersionIdMap","performCreates","performUpdates","performDeletes","creationInApplicationMap","creationInTableMap","nonIdColumns","getNonIdColumnsInIndexOrder","creatingColumns","numInserts","creationForRepositoryMap","creationForActorMap","creationOfRowMap","rowValues","columnIndexedValues","col1IndexAndValue","col2IndexAndValue","currentNonIdColumnArrayIndex","nonIdColumn","column1","column2","finalUpdateMap","recordUpdateStage","applicationUpdateMap","finalApplicationUpdateMap","tableUpdateMap","finalTableUpdateMap","repositoryUpdateMap","actorUpdates","recordUpdateMap","getRecordKeyMap","columnUpdate","recordUpdateStageDao","updateMapForApplication","updateMapForTable","runUpdatesForTable","deletionInApplicationMap","deletionInTableMap","numClauses","repositoryWhereFragments","deletionForRepositoryMap","actorWhereFragments","actorRecordIdSet","updatedColumns","columnValueUpdate","updateKeyMap","childColumnUpdateKeyMap","recordKeyMap","SynchronizationInManager","existingRepositoryTransactionHistories","existingRepositoryTransactionHistory","messagesToProcess","orderedMessages","timeOrderMessages","isValidLastChangeTime","syncInChecker","twoStageSyncedInDataProcessor","syncMessages","message1","message2","history1","history2","remoteTimestamp","remoteFieldName","syncFieldName","ApplicationComparisonResult","SyncInUtils","TwoStageSyncedInDataProcessor","aggregateHistoryRecords","getDataStructures","updateLocalData","stage1SyncedInDataProcessor","allSyncConflicts","allSyncConflictValues","stage2SyncedInDataProcessor","synchronizationConflictDao","synchronizationConflictValuesDao","WITH_ID","WITH_RECORD_HISTORY","WITH_INDEX","SyncOutDataSerializer","historiesToSend","serializeMessage","lookups","actorInMessageIndexesById","applicationVersionInMessageIndexesById","lastInMessageActorIndex","lastInMessageApplicationVersionIndex","lastInMessageRepositoryIndex","repositoryInMessageIndexesById","inMessageUserLookup","inMessageIndexesById","lastInMessageIndex","serializeRepositoryTransactionHistory","serializeRepositories","inMessageApplicationLookup","serializeActorsUsersAndTerminals","serializeApplicationsAndVersions","actorIdsToFindBy","serializeUsers","terminalInMessageIndexesById","serializeTerminals","applicationInMessageIndex","serializeApplication","actorInMessageIndex","lastInMessageTerminalIndex","terminalInMessageIndex","addUserToMessage","userInMessageIndex","getUserInMessageIndex","repositoryIdsToFindBy","repositoryInMessageIndex","serializeRepository","operationHistory1","operationHistory2","serializedOperationHistory","serializeOperationHistory","serializeHistoryRepository","serializedRecordHistory","serializeRecordHistory","applicationVersionInMessageIndex","getActorInMessageIndex","dbColumMapByIndex","serializeNewValue","serializeOldValue","baseObject","getActorInMessageIndexById","serializeValue","valueRecord","valueFieldName","serailizedValue","getSerializedRepositoryId","SynchronizationOutManager","loadHistoryRepositories","syncOutDataSerializer","groupMessageMap","groupMessagesBySourceAndRepository","messageMapForSource","updateRepositoryTransactionHistories","repositoryIdsToLookup","repositoryMapById","ensureGlobalRepositoryIdentifiers","foundRepository","NonhubClient","serverLocationProtocol","sendMessage","request","packagedMessage","fetch","mode","headers","NONHUB_CLIENT","groundTransport","STAGE1_SYNCED_IN_DATA_PROCESSOR","STAGE2_SYNCED_IN_DATA_PROCESSOR","SYNC_IN_ACTOR_CHECKER","SYNC_IN_CHECKER","SYNC_IN_DATA_CHECKER","SYNC_IN_TERMINAL_CHECKER","SYNC_IN_REPOSITORY_CHECKER","SYNC_IN_APPLICATION_CHECKER","SYNC_IN_APPLICATION_VERSION_CHECKER","SYNC_IN_USER_CHECKER","SYNC_IN_UTILS","SYNCHRONIZATION_IN_MANAGER","SYNCHRONIZATION_OUT_MANAGER","SYNC_OUT_DATA_SERIALIZER","TWO_STAGE_SYNCED_IN_DATA_PROCESSOR","DEBUG_SYNCHRONIZATION_ADAPTER","SYNCHRONIZATION_ADAPTER_LOADER","ABSTRACT_MUTATION_MANAGER","ABSTRACT_TRANSACTIONAL_RECIEVER","CASCADE_GRAPH_VERIFIER","DATABASE_MANAGER","DELETE_MANAGER","DEPENDENCY_GRAPH_RESOLVER","ENTITY_GRAPH_RECONSTRUCTOR","HISTORY_MANAGER","INSERT_MANAGER","INTERNAL_RECORD_MANAGER","ONLINE_MANAGER","OPERATION_MANAGER","QUERY_MANAGER","REPOSITORY_MANAGER","STRUCTURAL_ENTITY_VALIDATOR","UPDATE_MANAGER","ApiRegistry","applicationApi","findApiObjectAndOperation","apiObjectName","apiObjectDefinition","apiOperation","apiObject","ApiValidator","LocalAPIServer","handleRequest","payload","OperationDeserializer","deserializedEntity","doDeserialize","alreadyDeserializedEntity","aProperty","cleanJsonObject","valueCopy","EntityCopier","copyEntityForProcessing","processedEntityMap","doCopyEntityForProcessing","UpdateCacheManager","originalValuesObject","nestedProperty","currentPropertyOriginalValue","setOperationState","processedEntities","entityState","hasId","hasGeneratedIds","propertyOriginalValuesObject","noOriginalValue","PASS_THROUGH","afterSaveModifications","updateOriginalValuesAfterSave","removeDeletedEntities","doUpdateOriginalValuesAfterSave","setIsDeleted","isDeleted","dbRelationProperty","EntityStateManager_1","EntityStateManager","PARENT_ID","STATE_FIELD","markToCreate","markToUpdate","ORIGINAL_VALUES_PROPERTY","toEntity","isResultDate","throwIfNotFound","OPERATION_UNIQUE_ID_FIELD","entityDescription","copyOperationUniqueId","DELETED_PROPERTY","DatabaseFacade","queryContext","ensureQueryContext","preSaveOperations","entityCopier","updateColumns","prepare","queryFunction","FunctionWrapper","QueryFacade","EntityAccumulator","applicationDomain","AirportDatabase","A","getAccumulator","operationName","ENTITY_COPIER","exports","ms","lastMs","additional","substring","time","resolveWith","PROMISE_RESOLVED_FALSE","PROMISE_RESOLVED_TRUE","PROMISE_RESOLVED_VOID","isNode","__esModule","_typeof","averageResponseTime","canBeUsed","close","postMessage","microSeconds","_util","channelName","messagesCallback","bc","BroadcastChannel","subFns","onmessage","msg","channelState","messageJson","_pubkey","_default","ObliviousSet","ttl","timeMap","removeTooOldValues","obliviousSet","olderThen","originalOptions","webWorkerSupport","idb","fallbackInterval","onclose","localstorage","removeTimeout","maxParallelWrites","useFastPath","cleanOldMessages","createDatabase","objectStore","OBJECT_STORE_ID","openCursor","onsuccess","ev","cursor","getIdb","getMessagesHigherThan","getOldMessages","removeMessageById","writeMessage","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","openRequest","open","onupgradeneeded","createObjectStore","keyPath","autoIncrement","rej","onerror","readerUuid","writeObject","oncomplete","lastCursorId","keyRangeValue","IDBKeyRange","Infinity","msgObk","tooOld","msgObj","_options","fillOptionsWithDefaults","randomToken","eMIs","_obliviousSet","writeBlockPromise","readQueuePromises","_readLoop","readNewMessages","sleep","newerMessages","messagesCallbackTime","_filterMessage","msgObjA","msgObjB","randomInt","addStorageEventListener","getLocalStorage","removeStorageEventListener","storageKey","localStorage","writeObj","setItem","createEvent","initEvent","dispatchEvent","listener","ls","removeItem","userAgent","navigator","defaultTime","SIMULATE_CHANNELS","channel","chooseMethods","METHODS","Boolean","_simulate","useMethod","_native","_interopRequireDefault","_indexedDb","require$$1","_localstorage","require$$2","require$$3","_methodChooser","chooseMethod","clearNodeFolder","ENFORCED_OPTIONS","OPEN_BROADCAST_CHANNELS","lastId","maybePromise","_iL","_onML","_addEL","_uMP","_befC","_prepP","_state","_post","broadcastChannel","sendPromise","_hasMessageListeners","_addListenerObject","listenerFn","listenerObject","hundredMsInMicro","minMessageTime","_startListening","_removeListenerObject","_stopListening","postInternal","listenObj","awaitPrepare","isClosed","USE_METHOD","WorkerGlobalScope","LISTENERS","startedListening","runAll","promises","beLeader","_leaderElector","responseTime","elector","LeaderElection","die","isLeader","hasLeader","isDead","_aplQ","_aplQC","_unl","_lstns","_dpL","_dpLC","hasLeaderListener","action","_sendMessage","leaderElector","msgJson","unloadFn","_unload","isLeaderListener","applyOnce","isFromFallbackInterval","_this2","stopCriteriaPromiseResolve","stopCriteria","stopCriteriaPromise","handleMessage","waitForAnswerTime","race","applyRun","awaitLeadership","_aLP","resolved","finish","whenDeathListener","tryOnFallBack","_awaitLeadershipOnce","onduplicate","_this3","uFn","_broadcastChannel","_leaderElection","createLeaderElection","enforceOptions","_index","WebMesageReceiver","isNativeBroadcastChannel","createChannel","communicationChannel","SoftBroadcastChannel","transactionalReceiver","handleClientRequest","handleAppRequest","origin","needMessageSerialization","sendMessageToClient","sendMessageToApp","DomainRetriever","retrieveDomain","domainNameMapByName","allDomains","SqlApplicationBuilder","build","newJsonApplicationMap","createApplication","jsonEntity","buildTable","relatedJsonApplicationMap","buildForeignKeys","primaryKeyColumnNames","tableColumnsDdl","jsonColumn","columnDdl","getColumnSuffix","isPrimaryKeyColumn","createTableSuffix","getCreateTableSuffix","primaryKeySubStatement","getPrimaryKeyStatement","createTableDdl","DDL","indexNumber","indexConfig","createIndexDdl","getIndexSql","columnNameList","relatedJsonApplication","relatedJsonEntity","referencedApplication","relatedFullApplicationName","relatedApplication","foreignKeyColumnNames","referencedTableName","referencedColumnNames","relatedIdColumnRef","foreignKeySql","getForeignKeySql","buildForeignKeysForTable","columnNames","ApplicationChecker","check","checkDomain","checkDependencies","allReferencedApplicationMap","referencedApplicationMapByApplication","lastJsonApplicationVersion","referencedApplicationMapForApplication","jsonReferencedApplication","pruneInGroupReferences","pruneReferencesToExistingApplications","applicationsWithValidDependencies","applicationsInNeedOfAdditionalDependencies","neededDependencies","dependenciesForDomain","hasReferences","_domainName","referenceMapForApplicationsOfDomain","_applicationName","applicationsReferencedByAGivenApplication","applicationReferencesForDomain","allApplicationReferencesForDomain","existingApplicationInfo","findExistingApplications","existingApplicationMapByName","coreDomainAndApplicationNames","coreDomainAndApplicationNamesByApplicationName","allReferencedApplicationsForDomain","coreApplicationName","referencedApplicationMap","referencesForDomain","ApplicationLocator","locateExistingApplicationVersionRecord","latestApplicationVersionForApplication","jsonApplicationVersion","locateLatestApplicationVersionByApplicationName","ApplicationComposer","compose","jsonApplicationMapByFullName","domainMapByName","allApplications","applicationMapByFullName","newLatestApplicationVersions","newApplicationVersionMapByApplicationName","newEntitiesMapByApplicationName","newPropertiesMap","newRelationsMap","newColumnsMap","added","latestApplicationVersions","allDdlObjects","composeDomain","composeApplication","composeApplicationVersion","newApplicationReferenceMap","newApplicationReferences","composeApplicationReferences","deepTraverseReferences","addApplicationVersionObjects","composeApplicationEntities","composeApplicationProperties","composeApplicationRelations","composeApplicationColumns","composeApplicationRelationColumns","addObjects","getExistingLatestApplicationVersion","referencedApplicationName","ddlObjects","foundDomain","foundApplication","entityPropertyColumns","entityRelationColumns","fromObjects","toObjects","fromDomain","toDomain","fromApplication","toApplication","domainRetriever","newApplications","CURRENT","newApplicationVersions","newApplicationVersion","versionParts","newApplicationCurrentVersion","jsonApplicationMapByName","newApplicationReferenceLookup","applicationReferenceLookup","referencedFullApplicationName","applicationLocator","newEntities","jsonEntities","newApplicationEntities","newProperties","propertiesByEntityIndex","propertiesForEntity","jsonProperty","newRelations","relationsByEntityIndex","referencesForApplication","relationsForEntity","entitiesArray","newColumns","newPropertyColumns","columnsByTable","propertiesForApplication","columnsForTable","idColumnIndexes","idColumnRef","idColumnIndex","idColumndIndex","propertyReference","newRelationColumns","columnsForApplication","relationsForApplication","applicationReferencesForApplication","columnsForEntity","jsonRelationColumn","oneRelationApplicationVersion","oneTableColumnsMapForApplication","oneTableColumns","oneTableRelations","ApplicationRecorder","setDefaultVersioning","applicationReferenceDao","applicationEntityDao","applicationPropertyDao","applicationRelationDao","applicationColumnDao","applicationPropertyColumnDao","applicationRelationColumnDao","bulkCreate","Sequence","SystemWideOperationId","TerminalRun","BaseSequenceDao","BaseSystemWideOperationIdDao","BaseTerminalRunDao","TerminalRunDao","SequenceDao","incrementCurrentValues","incrementBy","incrementSequence","airportCode","SEQUENCE_DAO","AirportDatabasePopulator","populate","DdlObjectLinker","linkDomainsAndApplicationsAndVersions","entityArrayById","linkEntities","propertyMapById","relationMapById","linkPropertiesAndRelations","linkColumns","domainMapById","applicationCurrentVersion","addedEntities","columnMapById","DdlObjectRetriever","retrieveDdlObjects","applicationIndexes","domainIdSet","application1","application2","allApplicationVersions","lastApplicationIndex","latestApplicationVersionIds","QueryEntityClassCreator","createAll","applicationsWithDeps","applicationWithDependencies","orderedApplication1","orderedApplication2","applicationWithDeps","orderApplicationsInOrderOfPrecedence","relatedEntity","qConstructor","getOwnPropertyNames","setQApplicationEntities","QueryObjectInitializer","generateQObjectsAndPopulateStore","ddlObjectLinker","queryEntityClassCreator","unmodifiedDomains","unmodifiedApplications","ddlObjectRetriever","takeoff","DDL_OBJECT_LINKER","DDL_OBJECT_RETRIEVER","QUERY_ENTITY_CLASS_CREATOR","QUERY_OBJECT_INITIALIZER","ApplicationInitializer","addNewApplicationVersionsToAll","queryObjectInitializer","setAirDbApplications","loadExistingApplications","getApplicationsWithValidDependencies","checkedApplicationsWithValidDependencies","applicationBuilder","applicationComposer","newSequences","buildAllSequences","applicationRecorder","initializeForAIRportApp","tempDdlObjects","stageSequences","tempInitialize","wait","milliseconds","jsonApplicationsToInstall","applicationChecker","applicationReferenceCheckResults","neededDependency","nativeInitializeApplication","landing","ABSTRACT_APPLICATION_INITIALIZER","APPLICATION_BUILDER","APPLICATION_CHECKER","APPLICATION_COMPOSER","APPLICATION_LOCATOR","APPLICATION_RECORDER","SQL_APPLICATION_BUILDER","sequenceDao","WebApplicationInitializer","applicationWindowMap","initializingApplicationMap","appIframe","getElementsByName","style","display","appendChild","contentWindow","WebTransactionalReceiver","startsWith","webReciever","__received__","hasValidApplicationInfo","webMessageReciever","receivedDate","__receivedTime__","fromClientRedirectedMessage","handleFromClientRequest","ensureConnectionIsReady","messageOrigin","handleIsolateMessage","interAppApiCallRequest","success","toClientRedirectedMessage","handleToClientRequest","nativeStartApiCall","frameWindow","getFrameWindow","connectionIsReadyMessage","numPendingMessagesFromHost","numPendingMessagesForApplication","ensureApplicationIsInstalled","relyToClientWithError","replyToClientRequest","iframe","messageIsFromValidApp","numMessagesFromHost","numMessagesForApplication","applicationDomainFragments","SEARCH_UNSUBSCRIBE","isolateSubscriptionMap","shemaDomainName","observableDataResult","webTerminal","WEB_MESSAGE_RECEIVER","SequenceGenerator","sequences","sequenceBlocks","generatingSequenceNumbers","applicationSequences","tableSequences","every","addSequences","waitForPreviousGeneration","doGenerateSequenceNumbers","sequentialNumbers","numColumnSequencesNeeded","columnNumbers","sequenceBlock","numNewSequencesNeeded","newSequence","isDoneGeneratingSeqNums","SqLiteDriver","matchingTableNames","getNumberOfRows","getRows","dropTable","nativeParameters","convertValueIn","MUTATE","isValueValid","initTables","createQueries","currentQuery","SQLITE","SqlLiteFunctionAdaptor","clause","innerValue","getFunctionCall","jsonFunctionCall","param2","formatCall","formatParam","param1","acc","COALESCE","SqLiteApplicationBuilder","primaryKeySuffix","allSequences","buildSequences","stagedSequences","indexName","uniquePrefix","foreignKeyName","SqlJsTransaction","queryType","SqlJsDriver","SQLJS","SQL","initSqlJs","locateFile","_db","Database","stmt","deltaTableName","free","handleError","getReturnValue","rowsAffected","rows","SqlJsQueryAdaptor","functionAdaptor","newReference","dateToDbQuery","getResultArray","rawResponse","getResultCellRawValue","allowArrays","$destroy","detaching","destroy_component","$on","$set","$$props","$$set","dbManager","startDb","initFramework"],"mappings":"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"}